[
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 1 = 6 (left: 6 9 11)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n",
                    "11 - 9 = 2 (left: 1 5 2)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "11 - 1 = 10 (left: 5 9 10)\n",
                    "5 + 1 = 6 (left: 6 9 11)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n",
                    "11 - 9 = 2 (left: 1 5 2)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 9 11",
                "ys": [
                    "11 - 1 = 10 (left: 5 9 10)\n",
                    "5 + 1 = 6 (left: 6 9 11)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n",
                    "11 - 9 = 2 (left: 1 5 2)\n"
                ],
                "new_ys": [
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 * 5 = 45 (left: 10 45)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 - 9 = -4 (left: -4 10)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 / 5 = 1 (left: 1 10)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 / 9 = 0.56 (left: 0.56 10)\n",
                    "5 + 1 = 6 (left: 6 9 11)\n6 + 9 = 15 (left: 9 11 15)\n",
                    "5 + 1 = 6 (left: 6 9 11)\n9 / 6 = 1 (left: 1 9 11)\n",
                    "5 + 1 = 6 (left: 6 9 11)\n11 - 6 = 5 (left: 5 9 11)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n4 + 1 = 5 (left: 5 11)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n1 * 4 = 4 (left: 4 11)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n11 - 1 = 10 (left: 4 10)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n11 - 4 = 7 (left: 1 7)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n11 / 1 = 11 (left: 4 11)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n11 / 4 = 2 (left: 1 2 11)\n",
                    "11 - 9 = 2 (left: 1 5 2)\n5 - 1 = 4 (left: 4 2)\n",
                    "11 - 9 = 2 (left: 1 5 2)\n5 / 1 = 5 (left: 5 2)\n",
                    "11 - 9 = 2 (left: 1 5 2)\n5 * 1 = 5 (left: 5 2)\n",
                    "11 - 9 = 2 (left: 1 5 2)\n5 + 1 = 6 (left: 6 2)\n",
                    "11 - 9 = 2 (left: 1 5 2)\nInput: 3 3 3 3\n",
                    "11 - 9 = 2 (left: 1 5 2)\nPossible next steps:\n",
                    "11 - 9 = 2 (left: 1 5 2)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "11 - 9 = 2 (left: 1 5 2)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "11 - 9 = 2 (left: 1 5 2)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "11 - 9 = 2 (left: 1 5 2)\n3 * 3 = 9 (left: 3 3 9)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    100
                ],
                "select_new_ys": [
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n",
                    "11 - 9 = 2 (left: 1 5 2)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 * 5 = 45 (left: 10 45)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 9 11",
                "ys": [
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n",
                    "11 - 9 = 2 (left: 1 5 2)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 * 5 = 45 (left: 10 45)\n"
                ],
                "new_ys": [
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 - 14 = -4 (left: -4)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 * 10 = 140 (left: 140)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "11 - 9 = 2 (left: 1 5 2)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "11 - 9 = 2 (left: 1 5 2)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "11 - 9 = 2 (left: 1 5 2)\n3 * 3 = 9 (left: 3 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "11 - 9 = 2 (left: 1 5 2)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n10 + 45 = 55 (left: 55)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n45 - 10 = 35 (left: 35)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n10 * 45 = 450 (left: 450)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n45 / 10 = 4.5 (left: 4.5)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\nInput: 3 3 3 3\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\nPossible next steps:\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 - 3 = 0 (left: 3 0 3)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 * 5 = 45 (left: 10 45)\n10 * 2 = 20 (left: 20 45)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 * 5 = 45 (left: 10 45)\n10 + 45 = 55 (left: 55)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 * 5 = 45 (left: 10 45)\n10 - 45 = -35 (left: -35)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 * 5 = 45 (left: 10 45)\n10 / 45 = 0.2222 (left: 0.2222)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 9 11",
                "ys": [
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n"
                ],
                "new_ys": [
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (11 - 1) + (5 + 9) = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (11 - 1) + (9 + 5) = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (11 - 1) + (9 + 5) = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 9 3 3)\n9 + 3 = 12 (left: 3 12)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 9 3 3)\n3 * 3 = 9 (left: 9 3)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 9 3 3)\n9 - 3 = 6 (left: 6 3)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 9)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\nInput: 1 5 5 5\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\nPossible next steps:\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n1 + 5 = 6 (left: 5 5 6 5)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n5 / 1 = 5 (left: 5 5 5 5)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n5 + 1 = 6 (left: 5 5 6 5)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n1 * 5 = 5 (left: 5 5 5 5)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n5 - 1 = 4 (left: 4 5 5 5)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n5 - 1 = 4 (left: 4 5 5 5)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n5 - 1 = 4 (left: 4 5 5 5)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n5 - 1 = 4 (left: 4 5 5 5)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    100,
                    100,
                    100,
                    100,
                    100,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (11 - 1) + (5 + 9) = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (11 - 1) + (9 + 5) = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (11 - 1) + (9 + 5) = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n1 + 5 = 6 (left: 5 5 6 5)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n5 / 1 = 5 (left: 5 5 5 5)\n"
                ]
            },
            {
                "step": 4,
                "x": "1 5 9 11",
                "ys": [
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (11 - 1) + (5 + 9) = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (11 - 1) + (9 + 5) = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (11 - 1) + (9 + 5) = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n1 + 5 = 6 (left: 5 5 6 5)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n5 / 1 = 5 (left: 5 5 5 5)\n"
                ],
                "new_ys": null,
                "values": null,
                "select_new_ys": null
            }
        ],
        "idx": 800,
        "ys": [
            "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (11 - 1) + (5 + 9) = 24\n",
            "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (11 - 1) + (9 + 5) = 24\n",
            "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (11 - 1) + (9 + 5) = 24\n",
            "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n1 + 5 = 6 (left: 5 5 6 5)\n",
            "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n3 * 3 = 9 (left: 3 3 9)\n5 / 1 = 5 (left: 5 5 5 5)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 1220,
            "prompt_tokens": 4425,
            "cost": 0.0090775
        },
        "time_spent": 27.826476097106934
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 10 11 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 10 = 12 (left: 11 11 12)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n",
                    "2 * 10 = 20 (left: 11 11 20)\n",
                    "10 * 2 = 20 (left: 11 11 20)\n",
                    "10 / 2 = 5 (left: 5 11 11)\n",
                    "11 + 2 = 13 (left: 11 11 13)\n",
                    "11 * 2 = 22 (left: 11 11 22)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 10 = 12 (left: 11 11 12)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n",
                    "2 * 10 = 20 (left: 11 11 20)\n",
                    "10 * 2 = 20 (left: 11 11 20)\n",
                    "10 / 2 = 5 (left: 5 11 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 10 11 11",
                "ys": [
                    "2 + 10 = 12 (left: 11 11 12)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n",
                    "2 * 10 = 20 (left: 11 11 20)\n",
                    "10 * 2 = 20 (left: 11 11 20)\n",
                    "10 / 2 = 5 (left: 5 11 11)\n"
                ],
                "new_ys": [
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 12)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11 1)\n",
                    "2 * 10 = 20 (left: 11 11 20)\n11 + 11 = 22 (left: 20 22)\n",
                    "2 * 10 = 20 (left: 11 11 20)\n11 - 11 = 0 (left: 0 20)\n",
                    "2 * 10 = 20 (left: 11 11 20)\n11 * 11 = 121 (left: 20 121)\n",
                    "2 * 10 = 20 (left: 11 11 20)\n11 / 11 = 1 (left: 1 20)\n",
                    "10 * 2 = 20 (left: 11 11 20)\n11 + 11 = 22 (left: 20 22)\n",
                    "10 * 2 = 20 (left: 11 11 20)\n11 / 11 = 1 (left: 1 20)\n",
                    "10 * 2 = 20 (left: 11 11 20)\n11 - 11 = 0 (left: 0 20)\n",
                    "10 / 2 = 5 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n",
                    "10 / 2 = 5 (left: 5 11 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "10 / 2 = 5 (left: 5 11 11)\n11 / 5 = 2.2 (left: 2.2 11)\n",
                    "10 / 2 = 5 (left: 5 11 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "10 / 2 = 5 (left: 5 11 11)\n11 / 5 = 2.2 (left: 2.2 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 10 11 11",
                "ys": [
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n"
                ],
                "new_ys": [
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n11 + 12 = 23 (left: 22 23)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n11 * 12 = 132 (left: 22 132)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 - 11 = 1 (left: 1 12 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 - 22 = -10 (left: -10)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 * 22 = 264 (left: 264)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 / 22 = 0.545 (left: 0.545)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n12 + 121 = 133 (left: 133)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n12 * 121 = 1452 (left: 1452)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n121 - 12 = 109 (left: 109)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n121 / 12 = 10.083333333333334 (left: 10.083333333333334)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n0 + 12 = 12 (left: 12)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n12 - 0 = 12 (left: 12)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n12 / 0 = undefined (left: 0 12)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 - 11 = 1 (left: 1 12 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 10 11 11",
                "ys": [
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 - 11 = 1 (left: 1 12 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)\n"
                ],
                "new_ys": [
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 + 1 = 2 (left: 2 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 * 1 = 1 (left: 1 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n22 - 1 = 21 (left: 1 21)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1 12)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0 12)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 - 11 = 1 (left: 1 12 22)\n1 + 12 = 13 (left: 13 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 - 11 = 1 (left: 1 12 22)\n1 * 12 = 12 (left: 12 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 - 11 = 1 (left: 1 12 22)\n12 + 1 = 13 (left: 13 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 - 11 = 1 (left: 1 12 22)\n12 - 1 = 11 (left: 11 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n10 * 12 = 120 (left: 120)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n10 - 12 = -2 (left: -2)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n10 / 12 = 0.8333 (left: 0.8333)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)\n12 - 11 = 1 (left: 1 12)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)\n12 / 11 = 1 (left: 1 12)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)\n12 * 11 = 132 (left: 132)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)\nInput: 3 7 7 9\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)\nPossible next steps:\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)\n3 + 7 = 10 (left: 10 7 9)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)\n7 - 3 = 4 (left: 4 7 9)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)\n9 - 7 = 2 (left: 2 7 9)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)\n7 + 3 = 10 (left: 10 7 9)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)\n7 / 3 = 2 (left: 2 7 9)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)\n7 * 3 = 21 (left: 21 7 9)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 + 1 = 2 (left: 2 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 * 1 = 1 (left: 1 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n22 - 1 = 21 (left: 1 21)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1 12)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 10 11 11",
                "ys": [
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 + 1 = 2 (left: 2 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 * 1 = 1 (left: 1 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n22 - 1 = 21 (left: 1 21)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1 12)\n"
                ],
                "new_ys": [
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 + 1 = 2 (left: 2 22)\n2 * 22 = 44 (left: 44)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 + 1 = 2 (left: 2 22)\n22 / 2 = 11 (left: 11)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 + 1 = 2 (left: 2 22)\n22 - 2 = 20 (left: 20)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((10 + 2) + 11) + 11 = 24\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 * 1 = 1 (left: 1 22)\n1 * 22 = 22 (left: 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 * 1 = 1 (left: 1 22)\n22 / 1 = 22 (left: 1 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n22 - 1 = 21 (left: 1 21)\n1 * 21 = 21 (left: 21)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n22 - 1 = 21 (left: 1 21)\n21 / 1 = 21 (left: 1 21)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1 12)\n12 - 1 = 11 (left: 1 11)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 / 11 = 1 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1 12)\n12 + 1 = 13 (left: 1 13)\n"
                ],
                "values": [
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 + 1 = 2 (left: 2 22)\n22 / 2 = 11 (left: 11)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 + 1 = 2 (left: 2 22)\n22 - 2 = 20 (left: 20)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 * 1 = 1 (left: 1 22)\n1 * 22 = 22 (left: 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 * 1 = 1 (left: 1 22)\n22 / 1 = 22 (left: 1 22)\n",
                    "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n22 - 1 = 21 (left: 1 21)\n1 * 21 = 21 (left: 21)\n"
                ]
            }
        ],
        "idx": 801,
        "ys": [
            "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 + 1 = 2 (left: 2 22)\n22 / 2 = 11 (left: 11)\n",
            "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 + 1 = 2 (left: 2 22)\n22 - 2 = 20 (left: 20)\n",
            "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 * 1 = 1 (left: 1 22)\n1 * 22 = 22 (left: 22)\n",
            "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n1 * 1 = 1 (left: 1 22)\n22 / 1 = 22 (left: 1 22)\n",
            "10 + 2 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 11 12 22)\n12 / 11 = 1 (left: 1 1 22)\n22 - 1 = 21 (left: 1 21)\n1 * 21 = 21 (left: 21)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 2487,
            "prompt_tokens": 9629,
            "cost": 0.0194175
        },
        "time_spent": 31.325824975967407
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 12 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 + 12 = 19 (left: 12 13 19)\n",
                    "7 / 12 = 0.58 (left: 0.58 12 13)\n",
                    "7 * 12 = 84 (left: 12 13 84)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n",
                    "13 - 7 = 6 (left: 6 12 13)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "7 + 12 = 19 (left: 12 13 19)\n",
                    "7 * 12 = 84 (left: 12 13 84)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n",
                    "13 - 7 = 6 (left: 6 12 13)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 12 12 13",
                "ys": [
                    "7 + 12 = 19 (left: 12 13 19)\n",
                    "7 * 12 = 84 (left: 12 13 84)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n",
                    "13 - 7 = 6 (left: 6 12 13)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n"
                ],
                "new_ys": [
                    "7 + 12 = 19 (left: 12 13 19)\n12 + 13 = 25 (left: 19 25)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 * 13 = 156 (left: 19 156)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n13 - 12 = 1 (left: 1 19)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n13 + 12 = 25 (left: 19 25)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n13 * 12 = 156 (left: 19 156)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 19)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 + 12 = 31 (left: 19 31)\n",
                    "7 * 12 = 84 (left: 12 13 84)\n12 + 13 = 25 (left: 25 84)\n",
                    "7 * 12 = 84 (left: 12 13 84)\n12 * 13 = 156 (left: 156 84)\n",
                    "7 * 12 = 84 (left: 12 13 84)\n13 - 12 = 1 (left: 1 12 84)\n",
                    "7 * 12 = 84 (left: 12 13 84)\n84 / 12 = 7 (left: 7 13)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n5 + 12 = 17 (left: 13 17)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n5 * 12 = 60 (left: 13 60)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n12 + 5 = 17 (left: 17 13)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n12 - 5 = 7 (left: 7 13)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n12 / 5 = 2 (left: 2 13)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n12 - 2 = 10 (left: 10 13)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n12 * 5 = 60 (left: 13 60)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n5 - 12 = -7 (left: -7 13)\n",
                    "13 - 7 = 6 (left: 6 12 13)\n6 + 12 = 18 (left: 13 18)\n",
                    "13 - 7 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n",
                    "13 - 7 = 6 (left: 6 12 13)\n12 / 6 = 2 (left: 2 13)\n",
                    "13 - 7 = 6 (left: 6 12 13)\n12 + 6 = 18 (left: 13 18)\n",
                    "13 - 7 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n",
                    "13 - 7 = 6 (left: 6 12 13)\n13 - 12 = 1 (left: 1 13)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n12 + 13 = 25 (left: 19 25)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n12 * 13 = 156 (left: 19 156)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n13 - 12 = 1 (left: 1 13 19)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n13 / 12 = 1.08 (left: 1.08 13 19)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 + 12 = 31 (left: 13 19 31)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n"
                ],
                "values": [
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    100
                ],
                "select_new_ys": [
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n13 - 12 = 1 (left: 1 19)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 19)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 + 12 = 31 (left: 19 31)\n"
                ]
            },
            {
                "step": 2,
                "x": "7 12 12 13",
                "ys": [
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n13 - 12 = 1 (left: 1 19)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 19)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 + 12 = 31 (left: 19 31)\n"
                ],
                "new_ys": [
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 * 12 = 84 (left: 19 84)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 / 7 = 1.71 (left: 1.71 12)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n19 - 7 = 12 (left: 12 12)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n19 - (-1) = 20 (left: -1 20)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n19 + (-1) = 18 (left: 18)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n19 / (-1) = -19 (left: -19)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n19 * (-1) = -19 (left: -19)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\nInput: 5 5 5 5\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\nPossible next steps:\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 / 5 = 1 (left: 1 5 5 5)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 * 5 = 25 (left: 5 5 25 5)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 - 5 = 0 (left: 0 5 5 5)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n13 - 12 = 1 (left: 1 19)\n1 + 19 = 20 (left: 20)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n13 - 12 = 1 (left: 1 19)\n19 - 1 = 18 (left: 18)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n13 - 12 = 1 (left: 1 19)\n19 / 1 = 19 (left: 19)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n13 - 12 = 1 (left: 1 19)\n19 * 1 = 19 (left: 19)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 19)\n7 + 19 = 26 (left: 26)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 19)\n19 - 7 = 12 (left: 12)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 19)\n7 * 19 = 133 (left: 133)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 19)\n19 / 7 = 2 (left: 2)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 19)\n7 - 19 = -12 (left: -12)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 19)\n19 + 7 = 26 (left: 26)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 + 12 = 31 (left: 19 31)\n19 + 31 = 50 (left: 50)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 + 12 = 31 (left: 19 31)\n31 - 19 = 12 (left: 12)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 + 12 = 31 (left: 19 31)\n31 / 19 = 1 (left: 1)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 + 12 = 31 (left: 19 31)\n19 * 31 = 589 (left: 589)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n19 - 7 = 12 (left: 12 12)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 / 5 = 1 (left: 1 5 5 5)\n"
                ]
            },
            {
                "step": 3,
                "x": "7 12 12 13",
                "ys": [
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n19 - 7 = 12 (left: 12 12)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 / 5 = 1 (left: 1 5 5 5)\n"
                ],
                "new_ys": [
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n19 - 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n19 - 7 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n19 - 7 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n19 - 7 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n12 + 19 = 31 (left: 31)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n19 - 12 = 7 (left: 7 19)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n19 / 12 = 1.58 (left: 1.58 19)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n19 * 12 = 228 (left: 228)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n19 + 12 = 31 (left: 31)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n12 / 19 = 0.63 (left: 0.63 12)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n5 + 12 = 17 (left: 17)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n12 - 5 = 7 (left: 7 12)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n12 / 5 = 2 (left: 2 12)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n5 * 12 = 60 (left: 60)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\nInput: 3 6 6 15\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\nPossible next steps:\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n3 + 6 = 9 (left: 6 9 15)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 / 3 = 2 (left: 2 6 15)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n15 - 3 = 12 (left: 6 12 15)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n3 * 6 = 18 (left: 6 15 18)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 - 3 = 3 (left: 3 6 15)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n15 / 3 = 5 (left: 5 6 15)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n15 - 6 = 9 (left: 6 9 15)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 * 3 = 18 (left: 6 15 18)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 + 5 = 10 (left: 5 10 5 5)\n5 + 10 = 15 (left: 5 5 15)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 + 5 = 10 (left: 5 10 5 5)\n5 * 10 = 50 (left: 5 5 50)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 + 5 = 10 (left: 5 10 5 5)\n10 - 5 = 5 (left: 5 5 5)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 / 5 = 1 (left: 1 5 5 5)\n1 + 5 = 6 (left: 5 5 5)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 / 5 = 1 (left: 1 5 5 5)\n5 / 1 = 5 (left: 5 5 5)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 / 5 = 1 (left: 1 5 5 5)\n5 + 1 = 6 (left: 5 5 5)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 / 5 = 1 (left: 1 5 5 5)\n1 * 5 = 5 (left: 5 5 5)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 / 5 = 1 (left: 1 5 5 5)\n5 - 1 = 4 (left: 4 5 5)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 / 5 = 1 (left: 1 5 5 5)\n5 - 1 = 4 (left: 4 5 5)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 / 5 = 1 (left: 1 5 5 5)\n5 - 1 = 4 (left: 4 5 5)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 - 13 = -1 (left: -1 19)\n5 / 5 = 1 (left: 1 5 5 5)\n5 - 1 = 4 (left: 4 5 5)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n19 - 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n12 / 5 = 2 (left: 2 12)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 / 3 = 2 (left: 2 6 15)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 - 3 = 3 (left: 3 6 15)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n12 + 19 = 31 (left: 31)\n"
                ]
            },
            {
                "step": 4,
                "x": "7 12 12 13",
                "ys": [
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n19 - 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n12 / 5 = 2 (left: 2 12)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 / 3 = 2 (left: 2 6 15)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 - 3 = 3 (left: 3 6 15)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n12 + 19 = 31 (left: 31)\n"
                ],
                "new_ys": [
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n19 - 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((12 + 7) - 19) + 12 = 24\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n12 / 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n12 / 5 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n12 / 5 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 / 3 = 2 (left: 2 6 15)\n2 + 6 = 8 (left: 8 15)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 / 3 = 2 (left: 2 6 15)\n6 * 2 = 12 (left: 12 15)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 / 3 = 2 (left: 2 6 15)\n15 - 2 = 13 (left: 2 13)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 / 3 = 2 (left: 2 6 15)\n15 - 6 = 9 (left: 2 9)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 - 3 = 3 (left: 3 6 15)\n3 * 6 = 18 (left: 18 15)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 - 3 = 3 (left: 3 6 15)\n6 * 3 = 18 (left: 18 15)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 - 3 = 3 (left: 3 6 15)\n15 - 3 = 12 (left: 12 6)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 - 3 = 3 (left: 3 6 15)\n15 / 3 = 5 (left: 5 6)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 - 3 = 3 (left: 3 6 15)\n6 + 3 = 9 (left: 9 15)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n12 + 19 = 31 (left: 31)\nInput: 3 3 3 3\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n12 + 19 = 31 (left: 31)\nPossible next steps:\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n12 + 19 = 31 (left: 31)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n12 + 19 = 31 (left: 31)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n12 + 19 = 31 (left: 31)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n12 + 19 = 31 (left: 31)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n12 + 19 = 31 (left: 31)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n12 + 19 = 31 (left: 31)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n12 + 19 = 31 (left: 31)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n12 + 19 = 31 (left: 31)\n3 - 3 = 0 (left: 0 3 3)\n"
                ],
                "values": [
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 - 3 = 3 (left: 3 6 15)\n6 + 3 = 9 (left: 9 15)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n12 + 19 = 31 (left: 31)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n12 / 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n12 / 5 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 / 3 = 2 (left: 2 6 15)\n2 + 6 = 8 (left: 8 15)\n"
                ]
            }
        ],
        "idx": 802,
        "ys": [
            "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 - 3 = 3 (left: 3 6 15)\n6 + 3 = 9 (left: 9 15)\n",
            "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n7 + 12 = 19 (left: 12 19)\n12 + 19 = 31 (left: 31)\n3 * 3 = 9 (left: 3 3 9)\n",
            "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n12 / 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
            "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n12 / 5 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
            "12 + 7 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 12 19)\n12 - 7 = 5 (left: 5 12)\n6 / 3 = 2 (left: 2 6 15)\n2 + 6 = 8 (left: 8 15)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 4378,
            "prompt_tokens": 14837,
            "cost": 0.0310115
        },
        "time_spent": 39.80695915222168
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 10 10 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 10 = 15 (left: 10 12 15)\n",
                    "5 / 10 = 0.5 (left: 0.5 10 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    100
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 2 10 12)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n",
                    "5 / 10 = 0.5 (left: 0.5 10 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 10 10 12",
                "ys": [
                    "12 - 10 = 2 (left: 2 10 12)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n",
                    "5 / 10 = 0.5 (left: 0.5 10 12)\n"
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n5 + 10 = 15 (left: 12 15)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n12 - 5 = 7 (left: 7 12)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n10 + 12 = 22 (left: 15 22)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n10 * 12 = 120 (left: 15 120)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n12 - 10 = 2 (left: 2 15)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n12 / 10 = 1.2 (left: 1.2 15)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n15 + 10 = 25 (left: 12 25)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n15 - 10 = 5 (left: 5 15)\n",
                    "5 / 10 = 0.5 (left: 0.5 10 12)\n0.5 * 10 = 5 (left: 5 12)\n",
                    "5 / 10 = 0.5 (left: 0.5 10 12)\n10 + 0.5 = 10.5 (left: 10.5 12)\n",
                    "5 / 10 = 0.5 (left: 0.5 10 12)\n10 / 0.5 = 20 (left: 20 12)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 10 10 12",
                "ys": [
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n"
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n14 / 10 = 1 (left: 1 14)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4 14)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 12 32)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 - 12 = 8 (left: 8 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 * 12 = 240 (left: 12 240)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 / 12 = 1.67 (left: 1.67 12)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 10 10 12",
                "ys": [
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n"
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((12 - 10) + 10) * 12 = 24\n",
                    "12 - 10 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (12 + 2) + (10 + 14) = 24\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (10 - 5) * (10 / 5) * 12 = 24\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (10 - 5) * (10 / 5) * 12 = 24\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n12 * 12 = 144 (left: 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n12 / 12 = 1 (left: 1)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\nInput: 3 3 8 8\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\nPossible next steps:\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n3 * 3 = 9 (left: 8 8 9)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n8 / 3 = 2 (left: 2 8 8)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n12 * 12 = 144 (left: 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n3 * 3 = 9 (left: 8 8 9)\n"
                ]
            },
            {
                "step": 4,
                "x": "5 10 10 12",
                "ys": [
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n12 * 12 = 144 (left: 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n3 * 3 = 9 (left: 8 8 9)\n"
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n12 + 12 = 24 (left: 24)\nAnswer: ((12 - 10) + 10) * 12 = 24\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n8 / 3 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n8 / 3 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n8 / 3 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n12 * 12 = 144 (left: 12)\nPossible next steps:\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n12 * 12 = 144 (left: 12)\n12 + 12 = 24 (left: 12 24)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n3 + 3 = 6 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8 14)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n3 + 3 = 6 (left: 6 8 8)\n8 / 6 = 1 (left: 1 8 8)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n3 + 3 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n3 * 3 = 9 (left: 8 8 9)\n8 + 8 = 16 (left: 16 9)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n3 * 3 = 9 (left: 8 8 9)\n8 / 8 = 1 (left: 1 9)\n"
                ],
                "values": [
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n3 + 3 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n8 / 3 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n8 / 3 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n8 / 3 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n12 * 12 = 144 (left: 12)\n12 + 12 = 24 (left: 12 24)\n"
                ]
            }
        ],
        "idx": 803,
        "ys": [
            "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n3 + 3 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n",
            "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n8 / 3 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
            "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n8 / 3 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
            "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n8 / 3 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
            "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n12 * 12 = 144 (left: 12)\n12 + 12 = 24 (left: 12 24)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 5376,
            "prompt_tokens": 21060,
            "cost": 0.042342000000000005
        },
        "time_spent": 26.108356952667236
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 6 8)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n",
                    "8 - 6 = 2 (left: 1 2 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 6 6 8)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n",
                    "8 - 6 = 2 (left: 1 2 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 6 8",
                "ys": [
                    "1 + 5 = 6 (left: 6 6 8)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n",
                    "8 - 6 = 2 (left: 1 2 6)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 / 6 = 1 (left: 1 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 8)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n8 + 4 = 12 (left: 6 12)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "8 - 6 = 2 (left: 1 2 6)\n1 + 2 = 3 (left: 3 6)\n",
                    "8 - 6 = 2 (left: 1 2 6)\n2 * 6 = 12 (left: 1 12)\n",
                    "8 - 6 = 2 (left: 1 2 6)\n6 - 2 = 4 (left: 1 4)\n",
                    "8 - 6 = 2 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 8)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 6 8",
                "ys": [
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 8)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n"
                ],
                "new_ys": [
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 * 2 = 16 (left: 16 36)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 + 2 = 10 (left: 10 36)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 / 2 = 4 (left: 4 36)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 - 2 = 6 (left: 6 36)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n10 - 8 = 2 (left: 2 10)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n8 * 10 = 80 (left: 80)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n10 / 8 = 1.25 (left: 1.25 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 * 2 = 16 (left: 16 36)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 + 2 = 10 (left: 10 36)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 6 8",
                "ys": [
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 * 2 = 16 (left: 16 36)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 + 2 = 10 (left: 10 36)\n"
                ],
                "new_ys": [
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n11 - 8 = 3 (left: 3)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 * 11 = 88 (left: 88)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n11 / 8 = 1.375 (left: 1.375)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 8 13)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n8 / 5 = 1.6 (left: 1.6 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 4 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 * 2 = 16 (left: 16 36)\n16 + 36 = 52 (left: 52)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 * 2 = 16 (left: 16 36)\n16 * 36 = 576 (left: 576)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 * 2 = 16 (left: 16 36)\n36 / 16 = 2.25 (left: 2.25)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 * 2 = 16 (left: 16 36)\n36 - 16 = 20 (left: 20)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 + 2 = 10 (left: 10 36)\n10 + 36 = 46 (left: 46)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 + 2 = 10 (left: 10 36)\n10 - 36 = -26 (left: -26)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 + 2 = 10 (left: 10 36)\n10 * 36 = 360 (left: 360)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 + 2 = 10 (left: 10 36)\n10 / 36 = 0.2777777777777778 (left: 0.2777777777777778)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 4 12)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 8 13)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n"
                ]
            },
            {
                "step": 4,
                "x": "1 5 6 8",
                "ys": [
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 4 12)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 8 13)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n"
                ],
                "new_ys": [
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n8 - 5 = 3 (left: 3 8)\n8 / 3 = 2 (left: 2 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 4 12)\n4 + 3 = 7 (left: 7 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 4 12)\n4 / 3 = 1 (left: 1 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 4 12)\n3 / 4 = 0.75 (left: 0.75 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 4 12)\n3 - 4 = -1 (left: -1 12)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\nInput: 4 6 6 7\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\nPossible next steps:\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n6 / 4 = 1 (left: 1 6 7)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n7 - 4 = 3 (left: 3 6 6)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n7 - 6 = 1 (left: 1 6 6)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n6 + 4 = 10 (left: 6 7 10)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n6 / 4 = 1 (left: 1 6 7)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n7 - 4 = 3 (left: 3 6 6)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n7 - 6 = 1 (left: 1 6 6)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 8 13)\n8 + 13 = 21 (left: 21)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 8 13)\n13 - 8 = 5 (left: 5)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 8 13)\n8 * 13 = 104 (left: 104)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 8 13)\n13 / 8 = 1.625 (left: 1.625)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nInput: 3 3 3 3\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nPossible next steps:\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n3 - 3 = 0 (left: 0 3 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n7 - 4 = 3 (left: 3 6 6)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n"
                ]
            }
        ],
        "idx": 804,
        "ys": [
            "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
            "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n",
            "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n7 - 4 = 3 (left: 3 6 6)\n",
            "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n3 * 3 = 9 (left: 3 3 9)\n",
            "5 - 1 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 6614,
            "prompt_tokens": 25457,
            "cost": 0.0514135
        },
        "time_spent": 30.919622898101807
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 3 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n",
                    "2 * 2 = 4 (left: 4 3 11)\n",
                    "2 / 2 = 1 (left: 1 2 11)\n",
                    "2 + 3 = 5 (left: 2 5 11)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n",
                    "3 * 2 = 6 (left: 2 6 11)\n",
                    "2 - 3 = -1 (left: -1 2 11)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n",
                    "2 * 2 = 4 (left: 4 3 11)\n",
                    "2 / 2 = 1 (left: 1 2 11)\n",
                    "2 + 3 = 5 (left: 2 5 11)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 3 11",
                "ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n",
                    "2 * 2 = 4 (left: 4 3 11)\n",
                    "2 / 2 = 1 (left: 1 2 11)\n",
                    "2 + 3 = 5 (left: 2 5 11)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 7 11)\n",
                    "2 * 2 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n",
                    "2 * 2 = 4 (left: 4 3 11)\n4 / 3 = 1 (left: 1 11)\n",
                    "2 * 2 = 4 (left: 4 3 11)\n11 - 4 = 7 (left: 4 7)\n",
                    "2 * 2 = 4 (left: 4 3 11)\n11 - 3 = 8 (left: 4 8)\n",
                    "2 * 2 = 4 (left: 4 3 11)\n3 * 4 = 12 (left: 12 11)\n",
                    "2 / 2 = 1 (left: 1 2 11)\n1 + 2 = 3 (left: 3 11)\n",
                    "2 / 2 = 1 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)\n",
                    "2 / 2 = 1 (left: 1 2 11)\n11 - 1 = 10 (left: 2 10)\n",
                    "2 + 3 = 5 (left: 2 5 11)\n5 + 11 = 16 (left: 2 16)\n",
                    "2 + 3 = 5 (left: 2 5 11)\n5 * 11 = 55 (left: 2 55)\n",
                    "2 + 3 = 5 (left: 2 5 11)\n11 - 5 = 6 (left: 2 6)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n5 + 11 = 16 (left: 2 16)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n5 * 11 = 55 (left: 2 55)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n11 - 5 = 6 (left: 2 6)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n11 / 5 = 2.2 (left: 2 2.2)\n",
                    "3 + 2 = 5 (left: 2 5 11)\nInput: 4 7 7 9\n",
                    "3 + 2 = 5 (left: 2 5 11)\nPossible next steps:\n",
                    "3 + 2 = 5 (left: 2 5 11)\n4 + 7 = 11 (left: 7 9 11)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n7 / 4 = 1.75 (left: 1.75 7 9)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n9 - 7 = 2 (left: 2 7 9)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n9 - 4 = 5 (left: 5 7 7)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n7 - 4 = 3 (left: 3 7 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 3 11",
                "ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 11)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n11 - 7 = 4 (left: 4 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n11 / 7 = 1.57 (left: 1.57 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n12 + 11 = 23 (left: 11 23)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n12 * 11 = 132 (left: 11 132)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n12 / 11 = 1 (left: 1 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 + 11 = 23 (left: 23)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1 12)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 * 11 = 132 (left: 132)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 / 11 = 1.09 (left: 1.09 12)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n11 - 7 = 4 (left: 4 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n11 / 7 = 1 (left: 1 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n7 * 11 = 77 (left: 77)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\nInput: 3 3 3 3\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 / 3 = 1 (left: 3 1 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 / 3 = 1 (left: 3 3 1 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 / 3 = 1 (left: 3 3 3 1)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 11)\n8 + 11 = 19 (left: 19)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 11)\n11 - 8 = 3 (left: 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 11)\n8 * 11 = 88 (left: 88)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 11)\n11 / 8 = 1.375 (left: 1.375)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    100,
                    100,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 3 11",
                "ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 6 3 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 6 6 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 + 3 = 9 (left: 3 3 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 * 3 = 18 (left: 3 3 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 3 6 3)\n3 / 3 = 1 (left: 1 3 6)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 3 6 3)\n3 * 3 = 9 (left: 3 6 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 3 6 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 3 3 6)\n3 + 3 = 6 (left: 3 6 6)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 3 3 6)\n3 * 3 = 9 (left: 3 6 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 3 3 6)\n3 + 3 = 6 (left: 6 3 6)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 3 3 6)\n3 * 3 = 9 (left: 6 3 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n18 is the final number, no further steps.\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    100,
                    100,
                    100,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100,
                    50,
                    0
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 6 6 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 + 3 = 9 (left: 3 3 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 * 3 = 18 (left: 3 3 18)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 2 3 11",
                "ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 6 6 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 + 3 = 9 (left: 3 3 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 * 3 = 18 (left: 3 3 18)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 6 6 3)\n6 + 6 = 12 (left: 3 12)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 6 6 3)\n6 * 3 = 18 (left: 6 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 6 6 3)\n6 / 3 = 2 (left: 2 6)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 6 6 3)\n6 - 3 = 3 (left: 3 6)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 + 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 + 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 + 3 = 9 (left: 3 3 9)\n3 / 3 = 1 (left: 1 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 + 3 = 9 (left: 3 3 9)\n3 - 3 = 0 (left: 0 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 + 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n3 + 6 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n3 + 6 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n3 + 6 = 9 (left: 3 3 9)\n3 / 3 = 1 (left: 1 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n3 * 6 = 18 (left: 3 3 18)\n3 + 3 = 6 (left: 6 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n3 * 6 = 18 (left: 3 3 18)\n3 * 3 = 9 (left: 9 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n3 * 6 = 18 (left: 3 3 18)\n18 - 3 = 15 (left: 3 15)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 * 3 = 18 (left: 3 3 18)\n3 * 3 = 9 (left: 9 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 * 3 = 18 (left: 3 3 18)\n3 + 3 = 6 (left: 6 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 * 3 = 18 (left: 3 3 18)\n18 / 3 = 6 (left: 6 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 * 3 = 18 (left: 3 3 18)\n18 - 3 = 15 (left: 3 15)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 6 6 3)\n6 * 3 = 18 (left: 6 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n3 * 6 = 18 (left: 3 3 18)\n3 + 3 = 6 (left: 6 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 * 3 = 18 (left: 3 3 18)\n3 + 3 = 6 (left: 6 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 * 3 = 18 (left: 3 3 18)\n18 / 3 = 6 (left: 6 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 6 6 3)\n6 + 6 = 12 (left: 3 12)\n"
                ]
            }
        ],
        "idx": 805,
        "ys": [
            "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 6 6 3)\n6 * 3 = 18 (left: 6 18)\n",
            "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n3 * 6 = 18 (left: 3 3 18)\n3 + 3 = 6 (left: 6 18)\n",
            "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 * 3 = 18 (left: 3 3 18)\n3 + 3 = 6 (left: 6 18)\n",
            "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 6 3 3 3)\n6 * 3 = 18 (left: 3 3 18)\n18 / 3 = 6 (left: 6 18)\n",
            "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 6 6 3)\n6 + 6 = 12 (left: 3 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 8237,
            "prompt_tokens": 30346,
            "cost": 0.061993000000000006
        },
        "time_spent": 39.38250112533569
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 5 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 5 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n",
                    "2 / 2 = 1 (left: 1 5 11)\n",
                    "2 + 5 = 7 (left: 2 7 11)\n",
                    "2 - 2 = 0 (left: 0 5 11)\n",
                    "2 * 5 = 10 (left: 2 10 11)\n",
                    "2 / 5 = 0.4 (left: 0.4 5 11)\n",
                    "2 + 11 = 13 (left: 2 5 13)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 4 5 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n",
                    "2 / 2 = 1 (left: 1 5 11)\n",
                    "2 + 5 = 7 (left: 2 7 11)\n",
                    "2 - 2 = 0 (left: 0 5 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 5 11",
                "ys": [
                    "2 + 2 = 4 (left: 4 5 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n",
                    "2 / 2 = 1 (left: 1 5 11)\n",
                    "2 + 5 = 7 (left: 2 7 11)\n",
                    "2 - 2 = 0 (left: 0 5 11)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n",
                    "2 / 2 = 1 (left: 1 5 11)\n5 + 1 = 6 (left: 6 11)\n",
                    "2 / 2 = 1 (left: 1 5 11)\n5 * 1 = 5 (left: 5 11)\n",
                    "2 / 2 = 1 (left: 1 5 11)\n11 - 1 = 10 (left: 5 10)\n",
                    "2 + 5 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n",
                    "2 + 5 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n",
                    "2 + 5 = 7 (left: 2 7 11)\n2 * 7 = 14 (left: 14 11)\n",
                    "2 - 2 = 0 (left: 0 5 11)\n0 + 5 = 5 (left: 5 11)\n",
                    "2 - 2 = 0 (left: 0 5 11)\n5 * 0 = 0 (left: 0 5 11)\n",
                    "2 - 2 = 0 (left: 0 5 11)\n11 - 5 = 6 (left: 0 6 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 5 11",
                "ys": [
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)  \n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 9 11)  \n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 / 4 = 2.25 (left: 2.25 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n11 - 4 = 7 (left: 7 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n11 / 9 = 1 (left: 1 9)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 - 11 = -2 (left: -2 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n20 + 11 = 31 (left: 11 31)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n20 - 11 = 9 (left: 9 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n20 / 11 = 1.82 (left: 1.82 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n20 * 11 = 220 (left: 11 220)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)  \n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 9 11)  \n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 5 11",
                "ys": [
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)  \n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 9 11)  \n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n"
                ],
                "new_ys": [
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n9 + 11 = 20 (left: 13 20)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n11 + 13 = 24 (left: 9 24)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n9 * 11 = 99 (left: 13 99)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n11 - 9 = 2 (left: 2 13)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n13 - 9 = 4 (left: 4 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n13 - 11 = 2 (left: 2 13)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)  \n11 + 36 = 47 (left: 47)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)  \n36 - 11 = 25 (left: 25)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)  \n11 * 36 = 396 (left: 396)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)  \n36 / 11 = 3 (left: 3 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)  \nInput: 5 5 5 1\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)  \nPossible next steps:\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)  \n5 + 5 = 10 (left: 5 10 1)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)  \n5 / 5 = 1 (left: 1 5 1)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)  \n5 + 1 = 6 (left: 5 5 6)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)  \n5 - 1 = 4 (left: 4 5 5)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)  \n5 - 1 = 4 (left: 5 5 4)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)  \n5 / 1 = 5 (left: 5 5 5)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 9 11)  \n5 + 9 = 14 (left: 11 14)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 9 11)  \n5 * 9 = 45 (left: 11 45)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 9 11)  \n9 - 5 = 4 (left: 4 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 9 11)  \n11 - 5 = 6 (left: 6 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n11 / 5 = 2 (left: 2 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 * 11 = 55 (left: 55)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\nInput: 3 3 8 8\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\nPossible next steps:\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 / 3 = 1 (left: 1 8 8)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n8 + 3 = 11 (left: 3 8 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 3 = 9 (left: 8 8 9)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n8 / 3 = 2 (left: 2 5 8)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n9 + 11 = 20 (left: 13 20)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n11 + 13 = 24 (left: 9 24)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n11 - 9 = 2 (left: 2 13)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 2 5 11",
                "ys": [
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n9 + 11 = 20 (left: 13 20)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n11 + 13 = 24 (left: 9 24)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n11 - 9 = 2 (left: 2 13)\n"
                ],
                "new_ys": [
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 * 13 = 143 (left: 11 143)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 / 11 = 1 (left: 1 13)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 - 13 = -2 (left: -2 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n8 / 3 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n8 / 3 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n8 / 3 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n9 + 11 = 20 (left: 13 20)\n13 + 20 = 33 (left: 33)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n9 + 11 = 20 (left: 13 20)\n20 - 13 = 7 (left: 7 20)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n9 + 11 = 20 (left: 13 20)\n20 / 13 = 1 (left: 1 20)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n9 + 11 = 20 (left: 13 20)\n20 * 13 = 260 (left: 260)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n9 + 11 = 20 (left: 13 20)\n13 - 20 = -7 (left: -7 13)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n9 + 11 = 20 (left: 13 20)\n13 / 20 = 0 (left: 0 13)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n11 + 13 = 24 (left: 9 24)\n9 * 24 = 216 (left: 216)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n11 + 13 = 24 (left: 9 24)\n24 / 9 = 2 (left: 2 24)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n11 + 13 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n11 - 9 = 2 (left: 2 13)\n2 + 13 = 15 (left: 15)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n11 - 9 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n11 - 9 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 9 11 13)  \n11 - 9 = 2 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5)\n"
                ],
                "values": [
                    100,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 * 13 = 143 (left: 11 143)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n"
                ]
            }
        ],
        "idx": 806,
        "ys": [
            "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
            "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
            "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n",
            "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 * 13 = 143 (left: 11 143)\n",
            "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 9832,
            "prompt_tokens": 35221,
            "cost": 0.07249549999999999
        },
        "time_spent": 34.250699043273926
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 2 = 7 (left: 7 8 9)\n",
                    "8 - 2 = 6 (left: 5 6 9)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n"
                ],
                "values": [
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 2 = 7 (left: 7 8 9)\n",
                    "8 - 2 = 6 (left: 5 6 9)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 8 9",
                "ys": [
                    "5 + 2 = 7 (left: 7 8 9)\n",
                    "8 - 2 = 6 (left: 5 6 9)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n"
                ],
                "new_ys": [
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 * 8 = 56 (left: 56 9)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 - 7 = 1 (left: 1 8 9)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 - 8 = -1 (left: -1 8 9)\n",
                    "8 - 2 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n",
                    "8 - 2 = 6 (left: 5 6 9)\n6 - 5 = 1 (left: 1 9)\n",
                    "8 - 2 = 6 (left: 5 6 9)\n5 * 6 = 30 (left: 30 9)\n",
                    "8 - 2 = 6 (left: 5 6 9)\n6 / 5 = 1.2 (left: 1.2 9)\n",
                    "8 - 2 = 6 (left: 5 6 9)\n9 + 5 = 14 (left: 6 14)\n",
                    "8 - 2 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 9)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n7 / 5 = 1.4 (left: 1.4 8)\n",
                    "9 - 2 = 7 (left: 5 7 8)\nInput: 3 3 8 8\n",
                    "9 - 2 = 7 (left: 5 7 8)\nPossible next steps:\n",
                    "9 - 2 = 7 (left: 5 7 8)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n3 * 3 = 9 (left: 8 8 9)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 / 3 = 2.67 (left: 2.67 8 8)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n3 - 3 = 0 (left: 0 8 8)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 - 7 = 1 (left: 1 8 9)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 - 8 = -1 (left: -1 8 9)\n",
                    "8 - 2 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 8 9",
                "ys": [
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 - 7 = 1 (left: 1 8 9)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 - 8 = -1 (left: -1 8 9)\n",
                    "8 - 2 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n"
                ],
                "new_ys": [
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: )\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: )\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 * 9 = 135 (left: )\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: )\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 17 = 0 (left: 0 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 * 17 = 119 (left: 119)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 / 7 = 2 (left: 2 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 - 17 = -10 (left: -10 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 - 7 = 1 (left: 1 8 9)\n1 + 8 = 9 (left: 9 9)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 - 7 = 1 (left: 1 8 9)\n8 - 1 = 7 (left: 7 9)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 - 7 = 1 (left: 1 8 9)\n9 - 1 = 8 (left: 8 9)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 - 8 = -1 (left: -1 8 9)\n8 - (-1) = 9 (left: -1 9)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 - 8 = -1 (left: -1 8 9)\n8 / (-1) = -8 (left: -8 9)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 - 8 = -1 (left: -1 8 9)\n9 - 8 = 1 (left: -1 8)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 - 8 = -1 (left: -1 8 9)\n9 / 8 = 1 (left: -1 9)\n",
                    "8 - 2 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "8 - 2 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "8 - 2 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n11 / 9 = 1 (left: 1 11)\n",
                    "8 - 2 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n9 - 11 = -2 (left: -2 11)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 17 = 0 (left: 0 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 / 7 = 2 (left: 2 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 - 17 = -10 (left: -10 17)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 5 8 9",
                "ys": [
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 17 = 0 (left: 0 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 / 7 = 2 (left: 2 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 - 17 = -10 (left: -10 17)\n"
                ],
                "new_ys": [
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((5 + 2) + 8) + 9 = 24\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\nInput: 5 5 5 5\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\nPossible next steps:\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n5 - 5 = 0 (left: 0 5 5 5)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n5 / 5 = 1 (left: 1 5 5 5)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\nInput: 1 2 3 4\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\nPossible next steps:\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n1 / 2 = 0.5 (left: 0.5 3 4)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n4 - 3 = 1 (left: 1 2 4)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n3 + 4 = 7 (left: 1 2 7)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n4 / 2 = 2 (left: 1 2 2)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n4 - 2 = 2 (left: 1 2 2)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n2 * 2 = 4 (left: 1 4 2)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 17 = 0 (left: 0 17)\n0 + 17 = 17 (left: 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 17 = 0 (left: 0 17)\n17 - 0 = 17 (left: 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 17 = 0 (left: 0 17)\n17 / 17 = 1 (left: 1)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 17 = 0 (left: 0 17)\n17 * 0 = 0 (left: 0)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 / 7 = 2 (left: 2 17)\n17 - 2 = 15 (left: 2 15)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 / 7 = 2 (left: 2 17)\n2 * 17 = 34 (left: 34)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 / 7 = 2 (left: 2 17)\n17 / 2 = 8.5 (left: 2 8.5)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 - 17 = -10 (left: -10 17)\n17 - (-10) = 27 (left: -10 27)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 - 17 = -10 (left: -10 17)\n17 + (-10) = 7 (left: 7)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 - 17 = -10 (left: -10 17)\n17 - 10 = 7 (left: 7)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 - 17 = -10 (left: -10 17)\n17 * (-10) = -170 (left: -10 -170)\n"
                ],
                "values": [
                    1000,
                    50,
                    100,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    50,
                    0,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((5 + 2) + 8) + 9 = 24\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n10 + 17 = 27 (left: 27)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 5 8 9",
                "ys": [
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((5 + 2) + 8) + 9 = 24\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n10 + 17 = 27 (left: 27)\n"
                ],
                "new_ys": null,
                "values": null,
                "select_new_ys": null
            }
        ],
        "idx": 807,
        "ys": [
            "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((5 + 2) + 8) + 9 = 24\n",
            "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n",
            "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n5 * 5 = 25 (left: 5 5 25)\n",
            "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n1 * 2 = 2 (left: 2 3 4)\n",
            "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n10 + 17 = 27 (left: 27)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 10967,
            "prompt_tokens": 38783,
            "cost": 0.0801085
        },
        "time_spent": 26.52217388153076
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 4 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 * 4 = 12 (left: 2 12 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n",
                    "11 - 4 = 7 (left: 2 3 7)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "11 + 3 = 14 (left: 2 4 14)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n",
                    "11 - 4 = 7 (left: 2 3 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 4 11",
                "ys": [
                    "11 + 3 = 14 (left: 2 4 14)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n",
                    "11 - 4 = 7 (left: 2 3 7)\n"
                ],
                "new_ys": [
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n4 * 2 = 8 (left: 8 14)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n14 - 2 = 12 (left: 4 12)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n2 * 12 = 24 (left: 11 24)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n12 + 2 = 14 (left: 11 14)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n12 / 2 = 6 (left: 6 11)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n12 - 2 = 10 (left: 10 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n2 + 4 = 6 (left: 6 8)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n4 * 2 = 8 (left: 8 8)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "11 - 4 = 7 (left: 2 3 7)\n4 + 3 = 7 (left: 2 7)\n",
                    "11 - 4 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 6 7)\n",
                    "11 - 4 = 7 (left: 2 3 7)\n7 - 2 = 5 (left: 5 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n4 * 2 = 8 (left: 8 14)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n14 - 2 = 12 (left: 4 12)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n2 * 12 = 24 (left: 11 24)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n12 + 2 = 14 (left: 11 14)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 4 11",
                "ys": [
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n4 * 2 = 8 (left: 8 14)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n14 - 2 = 12 (left: 4 12)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n2 * 12 = 24 (left: 11 24)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n12 + 2 = 14 (left: 11 14)\n"
                ],
                "new_ys": [
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n14 - 6 = 8 (left: 8 14)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 * 14 = 84 (left: 14 84)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n14 / 6 = 2 (left: 2 14)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n4 * 2 = 8 (left: 8 14)\n8 + 14 = 22 (left: 22)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n4 * 2 = 8 (left: 8 14)\n14 - 8 = 6 (left: 6)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n4 * 2 = 8 (left: 8 14)\n8 * 14 = 112 (left: 112)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n4 * 2 = 8 (left: 8 14)\n14 / 8 = 1 (left: 1)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n14 - 2 = 12 (left: 4 12)\n4 + 12 = 16 (left: 16)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n14 - 2 = 12 (left: 4 12)\n12 - 4 = 8 (left: 8)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n14 - 2 = 12 (left: 4 12)\n4 * 12 = 48 (left: 48)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n14 - 2 = 12 (left: 4 12)\n12 / 4 = 3 (left: 3)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n2 * 12 = 24 (left: 11 24)\n11 + 24 = 35 (left: 35)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n2 * 12 = 24 (left: 11 24)\n11 * 24 = 264 (left: 264)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n2 * 12 = 24 (left: 11 24)\n11 - 24 = -13 (left: -13)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n2 * 12 = 24 (left: 11 24)\n11 / 24 = 0.4583333333333333 (left: 0.4583333333333333)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n12 + 2 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n12 + 2 = 14 (left: 11 14)\n14 - 11 = 3 (left: 3 14)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n12 + 2 = 14 (left: 11 14)\n11 * 14 = 154 (left: 154)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n12 + 2 = 14 (left: 11 14)\n14 / 11 = 1 (left: 1 14)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n14 - 6 = 8 (left: 8 14)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n14 / 6 = 2 (left: 2 14)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n4 * 2 = 8 (left: 8 14)\n8 + 14 = 22 (left: 22)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n14 - 2 = 12 (left: 4 12)\n4 + 12 = 16 (left: 16)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 4 11",
                "ys": [
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n14 - 6 = 8 (left: 8 14)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n14 / 6 = 2 (left: 2 14)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n4 * 2 = 8 (left: 8 14)\n8 + 14 = 22 (left: 22)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n14 - 2 = 12 (left: 4 12)\n4 + 12 = 16 (left: 16)\n"
                ],
                "new_ys": [
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 * 20 = 280 (left: 280)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n20 - 14 = 6 (left: 6 20)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n20 / 14 = 1.43 (left: 1.43 20)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\nInput: 3 5 5 7\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\nPossible next steps:\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n3 + 5 = 8 (left: 5 7 8)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n5 / 3 = 1.67 (left: 1.67 5 7)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 / 3 = 2.33 (left: 2.33 5 7)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n5 * 3 = 15 (left: 7 15)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n5 - 3 = 2 (left: 2 5 7)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n14 - 6 = 8 (left: 8 14)\n8 + 14 = 22 (left: 22)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n14 - 6 = 8 (left: 8 14)\n8 - 14 = -6 (left: -6)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n14 - 6 = 8 (left: 8 14)\n8 / 14 = 0.57 (left: 0.57)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n14 - 6 = 8 (left: 8 14)\n8 * 14 = 112 (left: 112)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n14 / 6 = 2 (left: 2 14)\n2 + 14 = 16 (left: 16)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n14 / 6 = 2 (left: 2 14)\n14 / 2 = 7 (left: 7 14)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n4 * 2 = 8 (left: 8 14)\n8 + 14 = 22 (left: 22)\n22 is the final result.\n",
                    "11 + 3 = 14 (left: 2 4 14)\n14 - 2 = 12 (left: 4 12)\n4 + 12 = 16 (left: 16)\nInput: 16\n",
                    "11 + 3 = 14 (left: 2 4 14)\n14 - 2 = 12 (left: 4 12)\n4 + 12 = 16 (left: 16)\nPossible next steps:\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n20 - 14 = 6 (left: 6 20)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n3 + 5 = 8 (left: 5 7 8)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n5 * 3 = 15 (left: 7 15)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 3 4 11",
                "ys": [
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n20 - 14 = 6 (left: 6 20)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n3 + 5 = 8 (left: 5 7 8)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n5 * 3 = 15 (left: 7 15)\n"
                ],
                "new_ys": [
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nInput: 3 5 6 7\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nPossible next steps:\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n3 + 5 = 8 (left: 6 7 8)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n5 - 3 = 2 (left: 2 6 7)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n6 + 7 = 13 (left: 3 5 13)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n7 - 5 = 2 (left: 2 6 13)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n3 * 5 = 15 (left: 6 7 15)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n5 / 3 = 1 (left: 1 6 7)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n6 / 3 = 2 (left: 2 5 7)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n7 - 6 = 1 (left: 3 5 1)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n20 - 14 = 6 (left: 6 20)\n6 * 20 = 120 (left: 20 120)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n20 - 14 = 6 (left: 6 20)\n20 / 6 = 3 (left: 3 20)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n20 - 14 = 6 (left: 6 20)\n20 - 6 = 14 (left: 6 14)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n20 - 14 = 6 (left: 6 20)\n20 + 6 = 26 (left: 6 26)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n3 + 5 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n3 + 5 = 8 (left: 5 7 8)\n5 + 8 = 13 (left: 7 13)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n3 + 5 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n3 + 5 = 8 (left: 5 7 8)\n5 - 7 = -2 (left: -2 8)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n3 + 5 = 8 (left: 5 7 8)\n5 / 7 = 0.71 (left: 0.71 8)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n3 + 5 = 8 (left: 5 7 8)\n7 + 8 = 15 (left: 5 15)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n3 + 5 = 8 (left: 5 7 8)\n7 * 8 = 56 (left: 5 56)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n3 + 5 = 8 (left: 5 7 8)\n7 - 8 = -1 (left: 5 -1)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n3 + 5 = 8 (left: 5 7 8)\n7 / 8 = 0.88 (left: 0.88 7)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n3 + 5 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 7)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n3 + 5 = 8 (left: 5 7 8)\n8 / 5 = 1.6 (left: 1.6 7)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\n5 * 4 = 20 (left: 7 20)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\n5 + 4 = 9 (left: 7 9)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 7)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\n7 - 5 = 2 (left: 2 7)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\n7 / 4 = 1 (left: 1 7)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\nInput: 1 6 7 8\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\nPossible next steps:\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\n1 + 6 = 7 (left: 7 7 8)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\n6 + 7 = 13 (left: 1 8 13)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\n7 - 6 = 1 (left: 1 1 8)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\n8 - 7 = 1 (left: 1 6 1)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\n1 * 6 = 6 (left: 6 7 8)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\n7 + 8 = 15 (left: 1 6 15)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\n8 - 6 = 2 (left: 1 2 7)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n7 - 3 = 4 (left: 4 5 7)\n1 + 7 = 8 (left: 6 8 8)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n5 * 3 = 15 (left: 7 15)\n7 + 15 = 22 (left: 22)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n5 * 3 = 15 (left: 7 15)\n15 - 7 = 8 (left: 8)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n5 * 3 = 15 (left: 7 15)\n7 * 15 = 105 (left: 105)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n5 * 3 = 15 (left: 7 15)\n15 / 7 = 2 (left: 2)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n5 * 3 = 15 (left: 7 15)\nInput: 3 3 3 3\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n5 * 3 = 15 (left: 7 15)\nPossible next steps:\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n5 * 3 = 15 (left: 7 15)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n5 * 3 = 15 (left: 7 15)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n5 * 3 = 15 (left: 7 15)\n3 / 3 = 1 (left: 1 3 3)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n5 * 3 = 15 (left: 7 15)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n3 + 5 = 8 (left: 6 7 8)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n5 - 3 = 2 (left: 2 6 7)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n6 + 7 = 13 (left: 3 5 13)\n",
                    "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n7 - 5 = 2 (left: 2 6 13)\n"
                ]
            }
        ],
        "idx": 808,
        "ys": [
            "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n5 * 3 = 15 (left: 7 15)\n3 * 3 = 9 (left: 9 3 3)\n",
            "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n3 + 5 = 8 (left: 6 7 8)\n",
            "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n5 - 3 = 2 (left: 2 6 7)\n",
            "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n6 + 7 = 13 (left: 3 5 13)\n",
            "11 + 3 = 14 (left: 2 4 14)\n2 + 4 = 6 (left: 6 14)\n6 + 14 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n7 - 5 = 2 (left: 2 6 13)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 12609,
            "prompt_tokens": 43646,
            "cost": 0.090687
        },
        "time_spent": 38.930110931396484
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 6 10)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n"
                ],
                "values": [
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "10 - 2 = 8 (left: 6 8 10)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 10",
                "ys": [
                    "10 - 2 = 8 (left: 6 8 10)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n"
                ],
                "new_ys": [
                    "10 - 2 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n6 * 8 = 48 (left: 10 48)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n5 + 6 = 11 (left: 10 11)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n6 - 5 = 1 (left: 1 10)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n6 / 5 = 1 (left: 1 10)\n",
                    "2 + 3 = 5 (left: 5 6 10)\nInput: 3 3 3 3\n",
                    "2 + 3 = 5 (left: 5 6 10)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 * 6 = 60 (left: 6 60)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    100,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 - 2 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n6 * 8 = 48 (left: 10 48)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 6 10",
                "ys": [
                    "10 - 2 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n6 * 8 = 48 (left: 10 48)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n"
                ],
                "new_ys": [
                    "10 - 2 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n14 / 10 = 1.4 (left: 1.4)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\nInput: 4 6 3 9\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n4 + 6 = 10 (left: 3 9 10)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n6 / 3 = 2 (left: 2 4 9)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 4 6 6)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 * 9 = 27 (left: 4 6 27)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n4 + 6 = 10 (left: 6 9 10)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n6 / 3 = 2 (left: 4 2 9)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 4 6 6)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 4 = 5 (left: 5 6 9)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n6 * 8 = 48 (left: 10 48)\n10 * 2 = 20 (left: 20 48)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n6 * 8 = 48 (left: 10 48)\n10 + 48 = 58 (left: 10 58)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 10 12)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n10 / 2 = 5 (left: 5 10)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n10 - 1 = 9 (left: 1 9)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n10 + 1 = 11 (left: 1 11)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 - 2 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 6 10",
                "ys": [
                    "10 - 2 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n"
                ],
                "new_ys": [
                    "10 - 2 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (10 - 2) + (6 + 8) = 24\n",
                    "10 - 2 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (10 - 2) + (6 + 8) = 24\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 * 9 = 54 (left: 54)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 - 6 = 3 (left: 3)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 / 9 = 1 (left: 1)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 + 6 = 9 (left: 6 9)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n6 / 3 = 2 (left: 2 6)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 + 6 = 9 (left: 6 9)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n6 / 3 = 2 (left: 2 6)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (10 - 2) + (6 + 8) = 24\n"
                ]
            },
            {
                "step": 4,
                "x": "2 3 6 10",
                "ys": [
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 + 6 = 9 (left: 6 9)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n6 / 3 = 2 (left: 2 6)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (10 - 2) + (6 + 8) = 24\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\nInput: 2 3 3 6\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n3 + 3 = 6 (left: 2 6 6)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n3 * 2 = 6 (left: 6 3 6)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n3 * 3 = 9 (left: 2 6 9)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n6 * 2 = 12 (left: 3 6 12)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n3 + 2 = 5 (left: 5 3 6)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n6 - 3 = 3 (left: 2 3 6)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n6 / 3 = 2 (left: 2 2 6)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n18 is the only number provided, unable to perform any operation.\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 + 6 = 9 (left: 6 9)\n6 * 9 = 54 (left: 9 54)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 + 6 = 9 (left: 6 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 + 6 = 9 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n6 / 3 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n6 / 3 = 2 (left: 2 6)\n6 / 2 = 3 (left: 3 6)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (10 - 2) + (6 + 8) = 24\n2 * 8 = 16 (left: 8 10 16)\n",
                    "10 - 2 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (10 - 2) + (6 + 8) = 24\n8 / 2 = 4 (left: 4 10 16)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    100,
                    100,
                    100,
                    50,
                    50,
                    100,
                    0,
                    100,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n3 * 2 = 6 (left: 6 3 6)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n3 * 3 = 9 (left: 2 6 9)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n6 * 2 = 12 (left: 3 6 12)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n6 / 3 = 2 (left: 2 2 6)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n"
                ]
            }
        ],
        "idx": 809,
        "ys": [
            "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n3 * 2 = 6 (left: 6 3 6)\n",
            "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n3 * 3 = 9 (left: 2 6 9)\n",
            "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n6 * 2 = 12 (left: 3 6 12)\n",
            "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n6 / 3 = 2 (left: 2 2 6)\n",
            "2 + 3 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 13836,
            "prompt_tokens": 48674,
            "cost": 0.10068300000000001
        },
        "time_spent": 29.136871099472046
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 5 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n",
                    "5 - 1 = 4 (left: 4 3 7)\n",
                    "7 - 5 = 2 (left: 1 3 2)\n",
                    "7 - 3 = 4 (left: 1 4 5)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n",
                    "7 / 1 = 7 (left: 3 5 7)\n",
                    "7 / 3 = 2 (left: 1 2 5)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n",
                    "5 - 1 = 4 (left: 4 3 7)\n",
                    "7 - 3 = 4 (left: 1 4 5)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 5 7",
                "ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n",
                    "5 - 1 = 4 (left: 4 3 7)\n",
                    "7 - 3 = 4 (left: 1 4 5)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n"
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 4 5)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n1 + 8 = 9 (left: 7 9)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n8 - 1 = 7 (left: 7 7)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n1 * 8 = 8 (left: 8 7)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n8 / 1 = 8 (left: 8 7)\n",
                    "5 - 1 = 4 (left: 4 3 7)\n4 + 3 = 7 (left: 7 7)\n",
                    "5 - 1 = 4 (left: 4 3 7)\n4 * 3 = 12 (left: 12 7)\n",
                    "5 - 1 = 4 (left: 4 3 7)\n4 - 3 = 1 (left: 1 7)\n",
                    "5 - 1 = 4 (left: 4 3 7)\n3 + 7 = 10 (left: 4 10)\n",
                    "7 - 3 = 4 (left: 1 4 5)\n1 + 4 = 5 (left: 5 5)\n",
                    "7 - 3 = 4 (left: 1 4 5)\n4 * 5 = 20 (left: 1 20)\n",
                    "7 - 3 = 4 (left: 1 4 5)\n5 - 1 = 4 (left: 4 5)\n",
                    "7 - 3 = 4 (left: 1 4 5)\n5 - 4 = 1 (left: 1 5)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n6 + 3 = 9 (left: 5 9)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n6 / 3 = 2 (left: 2 5)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n6 * 3 = 18 (left: 5 18)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n6 - 3 = 3 (left: 3 5)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n3 + 5 = 8 (left: 8)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n3 * 5 = 15 (left: 15)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n3 - 5 = -2 (left: -2)\n",
                    "7 - 1 = 6 (left: 6 3 5)\nInput: 4 4 4 4\n",
                    "7 - 1 = 6 (left: 6 3 5)\nPossible next steps:\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 / 4 = 1 (left: 1 4 4)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 * 4 = 16 (left: 4 16 4)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 - 4 = 0 (left: 0 4 4)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    100,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 * 4 = 16 (left: 4 16 4)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 4 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 5 7",
                "ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 * 4 = 16 (left: 4 16 4)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 4 5)\n"
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n4 * 7 = 28 (left: 28 35)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 / 4 = 8.75 (left: 8.75 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n7 - 4 = 3 (left: 3 35)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n7 * 4 = 28 (left: 28 35)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 7 = 28 (left: 4 28)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 / 7 = 5 (left: 5 35)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n8 / 4 = 2 (left: 2 8 4)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 4 12)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 * 8 = 32 (left: 32 4)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n8 - 4 = 4 (left: 4 4 4)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n8 / 4 = 2 (left: 2 8 4)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 * 4 = 16 (left: 4 16 4)\n4 + 16 = 20 (left: 4 20 4)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 * 4 = 16 (left: 4 16 4)\n16 / 4 = 4 (left: 4 4 4)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 * 4 = 16 (left: 4 16 4)\n16 - 4 = 12 (left: 4 12 4)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 * 4 = 16 (left: 4 16 4)\n16 / 4 = 4 (left: 4 4 4)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n7 + 5 = 12 (left: 9 12)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n7 / 5 = 1 (left: 1 9)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n9 + 5 = 14 (left: 14)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n9 * 5 = 45 (left: 45)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 9)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 4 5)\n3 + 4 = 7 (left: 5 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 4 5)\n3 * 4 = 12 (left: 5 12)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 4 5)\n4 + 5 = 9 (left: 3 9)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 4 5)\n4 * 3 = 12 (left: 5 12)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 4 5)\n5 - 3 = 2 (left: 2 4)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 4 5)\n5 * 3 = 15 (left: 4 15)\n"
                ],
                "values": [
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 7 = 28 (left: 4 28)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n7 - 4 = 3 (left: 3 35)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 / 7 = 5 (left: 5 35)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 3 5 7",
                "ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 7 = 28 (left: 4 28)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n7 - 4 = 3 (left: 3 35)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 / 7 = 5 (left: 5 35)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n"
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 - 7 = 24 (left: 24)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 / 7 = 4 (left: 4 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 + 7 = 38 (left: 7 38)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 * 7 = 217 (left: 217)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\nInput: 5 5 5 5\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\nPossible next steps:\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n5 / 5 = 1 (left: 1 5 5 5)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n5 * 5 = 25 (left: 5 5 25 5)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n5 - 5 = 0 (left: 0 5 5 5)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n5 + 5 = 10 (left: 5 5 5 10)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 7 = 28 (left: 4 28)\n4 * 7 = 28 (left: 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 7 = 28 (left: 4 28)\n28 / 4 = 7 (left: 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 7 = 28 (left: 4 28)\n28 - 4 = 24 (left: 24)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 7 = 28 (left: 4 28)\n28 - 7 = 21 (left: 21)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n7 - 4 = 3 (left: 3 35)\n3 * 35 = 105 (left: 105)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n7 - 4 = 3 (left: 3 35)\n35 / 3 = 11 (left: 11)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 / 7 = 5 (left: 5 35)\n5 * 7 = 35 (left: 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 / 7 = 5 (left: 5 35)\n35 / 5 = 7 (left: 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 / 7 = 5 (left: 5 35)\n5 + 35 = 40 (left: 40)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 / 7 = 5 (left: 5 35)\n5 - 35 = -30 (left: -30)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n4 * 12 = 48 (left: 4 48 4)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n12 / 4 = 3 (left: 3 12 4)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    100,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 - 7 = 24 (left: 24)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 7 = 28 (left: 4 28)\n28 - 4 = 24 (left: 24)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n12 / 4 = 3 (left: 3 12 4)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 / 7 = 4 (left: 4 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 + 7 = 38 (left: 7 38)\n"
                ]
            },
            {
                "step": 4,
                "x": "1 3 5 7",
                "ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 - 7 = 24 (left: 24)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 7 = 28 (left: 4 28)\n28 - 4 = 24 (left: 24)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n12 / 4 = 3 (left: 3 12 4)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 / 7 = 4 (left: 4 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 + 7 = 38 (left: 7 38)\n"
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 - 7 = 24 (left: 24)\nAnswer: ((1 + 3) * 5) - 7 = 24\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 7 = 28 (left: 4 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((1 + 3) * (5 * 7)) - 7 = 24\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n12 / 4 = 3 (left: 3 12 4)\n3 * 4 = 12 (left: 12 12)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n12 / 4 = 3 (left: 3 12 4)\n12 / 3 = 4 (left: 4 12)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n12 / 4 = 3 (left: 3 12 4)\n12 - 4 = 8 (left: 8 4)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n12 / 4 = 3 (left: 3 12 4)\n3 + 12 = 15 (left: 15 4)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 / 7 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 / 7 = 4 (left: 4 7)\n7 - 4 = 3 (left: 3 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 / 7 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 / 7 = 4 (left: 4 7)\n7 / 4 = 1 (left: 1 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 + 7 = 38 (left: 7 38)\n7 * 4 = 28 (left: 28)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 + 7 = 38 (left: 7 38)\n38 / 2 = 19 (left: 19)\n"
                ],
                "values": [
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n12 / 4 = 3 (left: 3 12 4)\n3 * 4 = 12 (left: 12 12)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n12 / 4 = 3 (left: 3 12 4)\n12 / 3 = 4 (left: 4 12)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n12 / 4 = 3 (left: 3 12 4)\n12 - 4 = 8 (left: 8 4)\n",
                    "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n12 / 4 = 3 (left: 3 12 4)\n3 + 12 = 15 (left: 15 4)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 / 7 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n"
                ]
            }
        ],
        "idx": 810,
        "ys": [
            "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n12 / 4 = 3 (left: 3 12 4)\n3 * 4 = 12 (left: 12 12)\n",
            "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n12 / 4 = 3 (left: 3 12 4)\n12 / 3 = 4 (left: 4 12)\n",
            "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n12 / 4 = 3 (left: 3 12 4)\n12 - 4 = 8 (left: 8 4)\n",
            "7 - 1 = 6 (left: 6 3 5)\n4 + 4 = 8 (left: 4 8 4)\n4 + 8 = 12 (left: 4 12 4)\n12 / 4 = 3 (left: 3 12 4)\n3 + 12 = 15 (left: 15 4)\n",
            "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35 7)\n35 - 4 = 31 (left: 31 7)\n31 / 7 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 15379,
            "prompt_tokens": 54215,
            "cost": 0.1120805
        },
        "time_spent": 33.31183218955994
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 10 = 15 (left: 1 13 15)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n",
                    "13 - 10 = 3 (left: 1 3 13)\n",
                    "10 - 5 = 5 (left: 1 5 13)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 10 = 15 (left: 1 13 15)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n",
                    "13 - 10 = 3 (left: 1 3 13)\n",
                    "10 - 5 = 5 (left: 1 5 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 10 13",
                "ys": [
                    "5 + 10 = 15 (left: 1 13 15)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n",
                    "13 - 10 = 3 (left: 1 3 13)\n",
                    "10 - 5 = 5 (left: 1 5 13)\n"
                ],
                "new_ys": [
                    "5 + 10 = 15 (left: 1 13 15)\n1 + 13 = 14 (left: 14 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 - 1 = 12 (left: 12 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n15 - 1 = 14 (left: 13 14)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n6 + 10 = 16 (left: 16 13)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 - 6 = 4 (left: 4 13)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 6 = 19 (left: 10 19)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n6 * 10 = 60 (left: 60 13)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 13)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n",
                    "13 - 10 = 3 (left: 1 3 13)\n1 + 3 = 4 (left: 4 13)\n",
                    "13 - 10 = 3 (left: 1 3 13)\n3 * 1 = 3 (left: 3 13)\n",
                    "13 - 10 = 3 (left: 1 3 13)\n13 - 1 = 12 (left: 3 12)\n",
                    "13 - 10 = 3 (left: 1 3 13)\n13 - 3 = 10 (left: 1 10)\n",
                    "10 - 5 = 5 (left: 1 5 13)\n1 + 5 = 6 (left: 6 13)\n",
                    "10 - 5 = 5 (left: 1 5 13)\n5 * 1 = 5 (left: 5 13)\n",
                    "10 - 5 = 5 (left: 1 5 13)\n13 - 1 = 12 (left: 5 12)\n",
                    "10 - 5 = 5 (left: 1 5 13)\n5 + 1 = 6 (left: 6 13)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 10 = 15 (left: 1 13 15)\n1 + 13 = 14 (left: 14 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 - 1 = 12 (left: 12 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n15 - 1 = 14 (left: 13 14)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 10 13",
                "ys": [
                    "5 + 10 = 15 (left: 1 13 15)\n1 + 13 = 14 (left: 14 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 - 1 = 12 (left: 12 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n15 - 1 = 14 (left: 13 14)\n"
                ],
                "new_ys": [
                    "5 + 10 = 15 (left: 1 13 15)\n1 + 13 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n1 + 13 = 14 (left: 14 15)\n14 - 15 = -1 (left: -1)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n1 + 13 = 14 (left: 14 15)\n14 * 15 = 210 (left: 210)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n1 + 13 = 14 (left: 14 15)\n14 / 15 = 0.93 (left: 0.93)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n15 - 14 = 1 (left: 1 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n15 / 14 = 1.07 (left: 1.07 14)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 - 15 = -1 (left: -1 14)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 - 1 = 12 (left: 12 15)\n12 + 15 = 27 (left: 27)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 - 1 = 12 (left: 12 15)\n12 * 15 = 180 (left: 180)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 - 1 = 12 (left: 12 15)\n15 - 12 = 3 (left: 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 - 1 = 12 (left: 12 15)\n15 / 12 = 1 (left: 1)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n13 + 15 = 28 (left: 28)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n15 - 13 = 2 (left: 2 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n15 / 13 = 1 (left: 1 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n13 * 15 = 195 (left: 195)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\nInput: 3 3 3 3\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\nPossible next steps:\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 * 3 = 9 (left: 3 3 3 9)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n15 - 1 = 14 (left: 13 14)\n13 + 14 = 27 (left: 27)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n15 - 1 = 14 (left: 13 14)\n13 - 14 = -1 (left: -1)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n15 - 1 = 14 (left: 13 14)\n13 * 14 = 182 (left: 182)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n15 - 1 = 14 (left: 13 14)\n13 / 14 = 0.93 (left: 0.93)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n1 + 13 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n15 - 14 = 1 (left: 1 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 - 15 = -1 (left: -1 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 10 13",
                "ys": [
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n1 + 13 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n15 - 14 = 1 (left: 1 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 - 15 = -1 (left: -1 14)\n"
                ],
                "new_ys": [
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 3 2 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 18 3 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 3 3 2)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 18 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 3 2 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 18 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n1 + 13 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n29 is the final result.\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\nInput: 5 5 5 5\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\nPossible next steps:\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n15 - 14 = 1 (left: 1 15)\n15 - 1 = 14 (left: 1 14)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n15 - 14 = 1 (left: 1 15)\n15 / 1 = 15 (left: 1 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 - 15 = -1 (left: -1 14)\n-1 + 14 = 13 (left: 13)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 - 15 = -1 (left: -1 14)\n-1 - 14 = -15 (left: -15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 - 15 = -1 (left: -1 14)\n-1 * 14 = -14 (left: -14)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 - 15 = -1 (left: -1 14)\n-1 / 14 = 0.07142857142857142 (left: 0.07142857142857142)\n"
                ],
                "values": [
                    100,
                    50,
                    100,
                    100,
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 18 3 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 18 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n5 * 5 = 25 (left: 5 5 25)\n"
                ]
            },
            {
                "step": 4,
                "x": "1 5 10 13",
                "ys": [
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 18 3 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 18 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n5 * 5 = 25 (left: 5 5 25)\n"
                ],
                "new_ys": [
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n9 / 3 = 3 (left: 3 3 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 3 6 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 18 3 3)\n18 - 3 = 15 (left: 3 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 18 3 3)\n18 / 3 = 6 (left: 6 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 18 3 3)\n18 - 3 = 15 (left: 3 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 18 3 3)\n18 / 3 = 6 (left: 6 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n3 / 3 = 1 (left: 1 9)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 18 3)\n3 * 3 = 9 (left: 9 18)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 18 3)\n18 / 3 = 6 (left: 6 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 15 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n5 * 5 = 25 (left: 5 5 25)\n5 + 5 = 10 (left: 10 25)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n5 * 5 = 25 (left: 5 5 25)\n5 * 5 = 25 (left: 25 25)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n5 * 5 = 25 (left: 5 5 25)\n5 / 5 = 1 (left: 1 25)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n5 * 5 = 25 (left: 5 5 25)\nInput: 4 6 6 24\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n5 * 5 = 25 (left: 5 5 25)\nPossible next steps:\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n5 * 5 = 25 (left: 5 5 25)\n4 + 6 = 10 (left: 10 6 24)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n5 * 5 = 25 (left: 5 5 25)\n6 * 4 = 24 (left: 24 6 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    100,
                    0,
                    0,
                    50,
                    100
                ],
                "select_new_ys": [
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n5 * 5 = 25 (left: 5 5 25)\n5 / 5 = 1 (left: 1 25)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n5 * 5 = 25 (left: 5 5 25)\n6 * 4 = 24 (left: 24 6 6)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n9 / 3 = 3 (left: 3 3 3)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27 3)\n"
                ]
            }
        ],
        "idx": 811,
        "ys": [
            "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n5 * 5 = 25 (left: 5 5 25)\n5 / 5 = 1 (left: 1 25)\n",
            "5 + 10 = 15 (left: 1 13 15)\n13 + 1 = 14 (left: 14 15)\n14 + 15 = 29 (left: 29)\n5 * 5 = 25 (left: 5 5 25)\n6 * 4 = 24 (left: 24 6 6)\n",
            "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12 3)\n",
            "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n9 / 3 = 3 (left: 3 3 3)\n",
            "5 + 10 = 15 (left: 1 13 15)\n13 / 1 = 13 (left: 13 15)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 16830,
            "prompt_tokens": 58857,
            "cost": 0.1219455
        },
        "time_spent": 34.021013021469116
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 7 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n",
                    "7 + 8 = 15 (left: 5 9 15)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n",
                    "9 / 3 = 3 (left: 3 7 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n",
                    "7 + 8 = 15 (left: 5 9 15)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 7 8 9",
                "ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n",
                    "7 + 8 = 15 (left: 5 9 15)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n"
                ],
                "new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 17 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 - 9 = -1 (left: -1 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 * 9 = 72 (left: 72 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 / 8 = 1 (left: 1 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\nInput: 3 5 6 7\n",
                    "5 + 7 = 12 (left: 8 9 12)\nPossible next steps:\n",
                    "5 + 7 = 12 (left: 8 9 12)\n3 + 5 = 8 (left: 6 7 8)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n3 * 5 = 15 (left: 6 7 15)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n5 - 3 = 2 (left: 2 6 7)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n5 / 3 = 1.67 (left: 1.67 6 7)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n7 - 3 = 4 (left: 4 6 7)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n7 / 3 = 2.33 (left: 2.33 6 7)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n7 * 3 = 21 (left: 6 7 21)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n6 - 3 = 3 (left: 3 7 6)\n",
                    "7 + 8 = 15 (left: 5 9 15)\n5 + 9 = 14 (left: 14 15)\n",
                    "7 + 8 = 15 (left: 5 9 15)\n5 * 9 = 45 (left: 15 45)\n",
                    "7 + 8 = 15 (left: 5 9 15)\n9 + 5 = 14 (left: 14 15)\n",
                    "7 + 8 = 15 (left: 5 9 15)\n9 - 5 = 4 (left: 4 15)\n",
                    "7 + 8 = 15 (left: 5 9 15)\n9 / 5 = 1 (left: 1 15)\n",
                    "7 + 8 = 15 (left: 5 9 15)\nInput: 3 3 7 13\n",
                    "7 + 8 = 15 (left: 5 9 15)\nPossible next steps:\n",
                    "7 + 8 = 15 (left: 5 9 15)\n3 + 3 = 6 (left: 6 7 13)\n",
                    "7 + 8 = 15 (left: 5 9 15)\n3 * 3 = 9 (left: 7 9 13)\n",
                    "7 + 8 = 15 (left: 5 9 15)\n3 - 3 = 0 (left: 0 7 13)\n",
                    "7 + 8 = 15 (left: 5 9 15)\n3 / 3 = 1 (left: 1 7 13)\n",
                    "7 + 8 = 15 (left: 5 9 15)\n7 + 3 = 10 (left: 10 13)\n",
                    "7 + 8 = 15 (left: 5 9 15)\n7 * 3 = 21 (left: 13 21)\n",
                    "7 + 8 = 15 (left: 5 9 15)\n7 - 3 = 4 (left: 4 13)\n",
                    "7 + 8 = 15 (left: 5 9 15)\n7 / 3 = 2 (left: 2 13)\n",
                    "7 + 8 = 15 (left: 5 9 15)\n13 - 3 = 10 (left: 10 13)\n",
                    "7 + 8 = 15 (left: 5 9 15)\n13 / 3 = 4 (left: 4 13)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n5 * 7 = 35 (left: 35 72)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n7 * 5 = 12 (left: 12 72)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n7 + 5 = 12 (left: 12 72)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n7 / 5 = 1.4 (left: 1.4 72)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n7 - 5 = 2 (left: 2 72)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n5 + 7 = 12 (left: 12 72)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n5 / 7 = 0.71 (left: 0.71 72)\n",
                    "8 * 9 = 72 (left: 5 7 72)\nInput: 3 3 3 3\n",
                    "8 * 9 = 72 (left: 5 7 72)\nPossible next steps:\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 + 3 = 6 (left: 6 3 3)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n4 + 7 = 11 (left: 8 11)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n4 * 7 = 28 (left: 8 28)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 / 4 = 1.75 (left: 1.75 8)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n2 + 8 = 10 (left: 9 10)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n8 - 2 = 6 (left: 6 9)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n9 - 2 = 7 (left: 7 8)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n2 * 8 = 16 (left: 9 16)\n",
                    "9 - 7 = 2 (left: 2 8 9)\nInput: 3 5 20 1\n",
                    "9 - 7 = 2 (left: 2 8 9)\nPossible next steps:\n",
                    "9 - 7 = 2 (left: 2 8 9)\n3 * 5 = 15 (left: 15 20 1)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n5 * 20 = 100 (left: 3 100 1)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n20 / 5 = 4 (left: 3 4 1)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n5 + 1 = 6 (left: 3 6 20)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n3 + 5 = 8 (left: 8 20 1)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n20 - 1 = 19 (left: 3 5 19)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n5 - 1 = 4 (left: 3 4 20)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n3 * 20 = 60 (left: 60 1)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n3 / 5 = 0.6 (left: 0.6 20 1)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n3 + 1 = 4 (left: 4 20 5)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n5 + 20 = 25 (left: 3 25 1)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    0,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 17 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 - 9 = -1 (left: -1 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 7 8 9",
                "ys": [
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 17 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 - 9 = -1 (left: -1 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n"
                ],
                "new_ys": [
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n9 / 3 = 3 (left: 3 3)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 / 9 = 0.33 (left: 0.33 3)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n8 / 3 = 2 (left: 2)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 17 12)\n17 + 12 = 29 (left: 29)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 17 12)\n17 - 12 = 5 (left: 5)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 17 12)\n17 * 12 = 204 (left: 204)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 17 12)\n17 / 12 = 1.42 (left: 1.42)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 - 9 = -1 (left: -1 12)\n-1 + 12 = 11 (left: 11)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 - 9 = -1 (left: -1 12)\n-1 * 12 = -13 (left: -13)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 - 9 = -1 (left: -1 12)\n-1 / 12 = 0.08333333333333333 (left: 0.08333333333333333)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 1 11)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n12 + 1 = 13 (left: 1 13)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 7 8 9",
                "ys": [
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n"
                ],
                "new_ys": [
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 9 = 27 (left: 3 27)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 - 5) * (7 - 4) = 24\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n12 / 9 = 1.33 (left: 1.33 12)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n9 * 12 = 108 (left: 108)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n6 + 3 = 9 (left: 3 9)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n6 - 3 = 3 (left: 3 3)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n6 * 3 = 18 (left: 3 18)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n6 / 3 = 2 (left: 2 3)\n"
                ],
                "values": [
                    100,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 9 = 27 (left: 3 27)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n"
                ]
            },
            {
                "step": 4,
                "x": "5 7 8 9",
                "ys": [
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 9 = 27 (left: 3 27)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n"
                ],
                "new_ys": [
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 9 = 27 (left: 3 27)\n3 * 3 = 9 (left: 9 27)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 9 = 27 (left: 3 27)\n27 / 3 = 9 (left: 3 9)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n12 + 36 = 48 (left: 48)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n36 - 12 = 24 (left: 24)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n12 * 36 = 432 (left: 432)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n36 / 12 = 3 (left: 3)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\nInput: 5 6 7 8\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\nPossible next steps:\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n5 + 6 = 11 (left: 7 8 11)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n6 + 7 = 13 (left: 5 8 13)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n7 + 8 = 15 (left: 5 6 15)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n5 - 6 = -1 (left: -1 6 7 8)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n6 - 7 = -1 (left: 5 -1 8)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n7 - 8 = -1 (left: 5 6 -1)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n5 * 6 = 30 (left: 7 8 30)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n6 * 7 = 42 (left: 5 8 42)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n7 * 8 = 56 (left: 5 6 56)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n5 / 6 = 0.8333 (left: 0.8333 6 7 8)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n6 / 7 = 0.8571 (left: 5 0.8571 8)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n7 / 8 = 0.875 (left: 5 6 0.875)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n5 + 6 + 7 = 18 (left: 8 18)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n6 + 7 + 8 = 21 (left: 5 21)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n5 * 6 * 7 = 210 (left: 8 210)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n6 * 7 * 8 = 336 (left: 5 336)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n9 * 3 = 27 (left: 9 27)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n27 / 9 = 3 (left: 3 27)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n2 + 1 = 3 (left: 1 3)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n2 * 1 = 2 (left: 2)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n2 / 1 = 2 (left: 2)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 5 5 5 5\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n5 + 5 = 10 (left: 5 10 5)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n5 - 5 = 0 (left: 0 5 5)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    100,
                    100,
                    50
                ],
                "select_new_ys": [
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n36 - 12 = 24 (left: 24)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n27 / 9 = 3 (left: 3 27)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 9 = 27 (left: 3 27)\n3 * 3 = 9 (left: 9 27)\n"
                ]
            }
        ],
        "idx": 812,
        "ys": [
            "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n36 - 12 = 24 (left: 24)\n",
            "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n27 / 9 = 3 (left: 3 27)\n",
            "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n5 / 5 = 1 (left: 1 5 5)\n",
            "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n5 * 5 = 25 (left: 5 5 25)\n",
            "8 * 9 = 72 (left: 5 7 72)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 9 = 27 (left: 3 27)\n3 * 3 = 9 (left: 9 27)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 19051,
            "prompt_tokens": 64036,
            "cost": 0.134156
        },
        "time_spent": 45.944955825805664
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 11 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 11 = 16 (left: 16 12 12)\n",
                    "5 + 12 = 17 (left: 11 17 12)\n",
                    "5 * 11 = 55 (left: 55 12 12)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n",
                    "12 - 11 = 1 (left: 5 1 12)\n",
                    "12 / 5 = 2 (left: 11 2 12)\n",
                    "12 / 11 = 1 (left: 5 1 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 11 = 16 (left: 16 12 12)\n",
                    "5 + 12 = 17 (left: 11 17 12)\n",
                    "5 * 11 = 55 (left: 55 12 12)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n",
                    "12 - 11 = 1 (left: 5 1 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 11 12 12",
                "ys": [
                    "5 + 11 = 16 (left: 16 12 12)\n",
                    "5 + 12 = 17 (left: 11 17 12)\n",
                    "5 * 11 = 55 (left: 55 12 12)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n",
                    "12 - 11 = 1 (left: 5 1 12)\n"
                ],
                "new_ys": [
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 / 12 = 1 (left: 1 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 * 12 = 192 (left: 12 192)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 - 12 = 4 (left: 4 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n12 + 12 = 24 (left: 16 24)\n",
                    "5 + 12 = 17 (left: 11 17 12)\n11 + 17 = 28 (left: 12 28)\n",
                    "5 + 12 = 17 (left: 11 17 12)\n17 - 11 = 6 (left: 6 12)\n",
                    "5 + 12 = 17 (left: 11 17 12)\n11 * 17 = 187 (left: 12 187)\n",
                    "5 + 12 = 17 (left: 11 17 12)\n17 / 11 = 1 (left: 1 12)\n",
                    "5 + 12 = 17 (left: 11 17 12)\nInput: 3 5 1 7\n",
                    "5 + 12 = 17 (left: 11 17 12)\nPossible next steps:\n",
                    "5 + 12 = 17 (left: 11 17 12)\n3 + 5 = 8 (left: 1 7 8)\n",
                    "5 + 12 = 17 (left: 11 17 12)\n5 - 3 = 2 (left: 2 1 7)\n",
                    "5 + 12 = 17 (left: 11 17 12)\n3 * 5 = 15 (left: 1 7 15)\n",
                    "5 + 12 = 17 (left: 11 17 12)\n5 / 3 = 1.67 (left: 1.67 1 7)\n",
                    "5 + 12 = 17 (left: 11 17 12)\n7 - 3 = 4 (left: 1 4 7)\n",
                    "5 + 12 = 17 (left: 11 17 12)\n7 / 3 = 2.33 (left: 1 2.33 7)\n",
                    "5 + 12 = 17 (left: 11 17 12)\n7 - 5 = 2 (left: 1 2 7)\n",
                    "5 + 12 = 17 (left: 11 17 12)\n7 / 5 = 1.4 (left: 1 1.4 7)\n",
                    "5 * 11 = 55 (left: 55 12 12)\n55 - 12 = 43 (left: 12 43 12)\n",
                    "5 * 11 = 55 (left: 55 12 12)\n55 / 12 = 4.58 (left: 4.58 12 12)\n",
                    "5 * 11 = 55 (left: 55 12 12)\n55 + 12 = 67 (left: 12 12 67)\n",
                    "5 * 11 = 55 (left: 55 12 12)\n55 * 12 = 660 (left: 12 660 12)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n-6 + 11 = 5 (left: 5 12)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n11 - (-6) = 17 (left: 17 12)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n-6 * 11 = -66 (left: -66 12)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n11 / -6 = -1.83 (left: -1.83 12)\n",
                    "5 - 11 = -6 (left: -6 11 12)\nInput: 3 3 3 3\n",
                    "5 - 11 = -6 (left: -6 11 12)\nPossible next steps:\n",
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "12 - 11 = 1 (left: 5 1 12)\n5 + 1 = 6 (left: 6 12)\n",
                    "12 - 11 = 1 (left: 5 1 12)\n5 * 1 = 5 (left: 5 12)\n",
                    "12 - 11 = 1 (left: 5 1 12)\n5 - 1 = 4 (left: 4 12)\n",
                    "12 - 11 = 1 (left: 5 1 12)\n5 / 1 = 5 (left: 5 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 / 12 = 1 (left: 1 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 * 12 = 192 (left: 12 192)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 - 12 = 4 (left: 4 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 11 12 12",
                "ys": [
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 / 12 = 1 (left: 1 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 * 12 = 192 (left: 12 192)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 - 12 = 4 (left: 4 12)\n"
                ],
                "new_ys": [
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 + 28 = 40 (left: 28 40)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n28 - 12 = 16 (left: 16 28)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 * 28 = 336 (left: 28 336)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n28 / 12 = 2.33 (left: 2.33 28)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\nInput: 3 6 9 12\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\nPossible next steps:\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n3 + 6 = 9 (left: 9 9 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 * 3 = 27 (left: 6 12 27)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 / 3 = 3 (left: 3 6 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 9 = 3 (left: 3 6 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 / 3 = 4 (left: 4 6 9)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 3 = 9 (left: 6 9 9)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n6 * 3 = 18 (left: 9 12 18)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 / 12 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 / 12 = 1 (left: 1 12)\n12 / 1 = 12 (left: 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 / 12 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 * 12 = 192 (left: 12 192)\n12 * 2 = 24 (left: 24)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 * 12 = 192 (left: 12 192)\n12 + 192 = 204 (left: 12 204)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 - 12 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 - 12 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    100,
                    100,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 / 3 = 3 (left: 3 6 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 9 = 3 (left: 3 6 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 3 = 9 (left: 6 9 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 11 12 12",
                "ys": [
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 / 3 = 3 (left: 3 6 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 9 = 3 (left: 3 6 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 3 = 9 (left: 6 9 9)\n"
                ],
                "new_ys": [
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n9 / 3 = 3 (left: 3 3)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 / 3 = 3 (left: 3 6 12)\n3 * 6 = 18 (left: 12 18)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 / 3 = 3 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 / 3 = 3 (left: 3 6 12)\n6 + 3 = 9 (left: 9 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 / 3 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 9 = 3 (left: 3 6 12)\n3 + 6 = 9 (left: 9 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 9 = 3 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 9 = 3 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 9 = 3 (left: 3 6 12)\n12 - 3 = 9 (left: 6 9)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 9 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 3 = 9 (left: 6 9 9)\n9 / 6 = 1 (left: 1 9 9)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 3 = 9 (left: 6 9 9)\n9 * 6 = 54 (left: 9 9 54)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    100,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 9 = 3 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n"
                ]
            },
            {
                "step": 4,
                "x": "5 11 12 12",
                "ys": [
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 9 = 3 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n"
                ],
                "new_ys": [
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 27 = 81 (left: 27 81)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 9 = 3 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n12 - 3 = 9 (left: 9 12)\n",
                    "5 - 11 = -6 (left: -6 11 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 + 12 = 15 (left: 15)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 / 12 = 1 (left: 1 18)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 - 18 = -6 (left: -6 18)\n"
                ],
                "values": [
                    0,
                    50,
                    100,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100
                ],
                "select_new_ys": [
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 9 = 3 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 - 18 = -6 (left: -6 18)\n"
                ]
            }
        ],
        "idx": 813,
        "ys": [
            "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
            "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
            "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n12 - 9 = 3 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
            "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
            "5 + 11 = 16 (left: 16 12 12)\n16 + 12 = 28 (left: 12 28)\n9 + 3 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 - 18 = -6 (left: -6 18)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 20608,
            "prompt_tokens": 68915,
            "cost": 0.1445885
        },
        "time_spent": 37.016031980514526
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "8 8 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 8 16 13)\n",
                    "8 / 8 = 1 (left: 1 8 13)\n",
                    "13 - 8 = 5 (left: 8 8 5)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 + 8 = 16 (left: 8 16 13)\n",
                    "8 / 8 = 1 (left: 1 8 13)\n",
                    "13 - 8 = 5 (left: 8 8 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "8 8 8 13",
                "ys": [
                    "8 + 8 = 16 (left: 8 16 13)\n",
                    "8 / 8 = 1 (left: 1 8 13)\n",
                    "13 - 8 = 5 (left: 8 8 5)\n"
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 8 16 13)\n8 + 16 = 24 (left: 13)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n8 * 16 = 128 (left: 13)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 - 8 = 8 (left: 8 13)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n",
                    "8 + 8 = 16 (left: 8 16 13)\nInput: 1 3 4 6\n",
                    "8 + 8 = 16 (left: 8 16 13)\nPossible next steps:\n",
                    "8 + 8 = 16 (left: 8 16 13)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n1 * 3 = 3 (left: 3 4 6)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n3 + 4 = 7 (left: 1 7 6)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n3 * 4 = 12 (left: 1 6 12)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n4 + 6 = 10 (left: 1 3 10)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n4 * 6 = 24 (left: 1 3)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n6 - 4 = 2 (left: 1 2 6)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n6 / 3 = 2 (left: 1 2 4)\n",
                    "8 / 8 = 1 (left: 1 8 13)\n1 + 8 = 9 (left: 9 13)\n",
                    "8 / 8 = 1 (left: 1 8 13)\n8 - 1 = 7 (left: 7 13)\n",
                    "8 / 8 = 1 (left: 1 8 13)\n1 * 8 = 8 (left: 8 13)\n",
                    "13 - 8 = 5 (left: 8 8 5)\n8 + 8 = 16 (left: 16 5)\n",
                    "13 - 8 = 5 (left: 8 8 5)\n8 - 8 = 0 (left: 0 5)\n",
                    "13 - 8 = 5 (left: 8 8 5)\n8 * 8 = 64 (left: 64 5)\n",
                    "13 - 8 = 5 (left: 8 8 5)\n8 / 8 = 1 (left: 1 5)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "8 + 8 = 16 (left: 8 16 13)\n8 + 16 = 24 (left: 13)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n8 * 16 = 128 (left: 13)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 - 8 = 8 (left: 8 13)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "8 8 8 13",
                "ys": [
                    "8 + 8 = 16 (left: 8 16 13)\n8 + 16 = 24 (left: 13)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n8 * 16 = 128 (left: 13)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 - 8 = 8 (left: 8 13)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n"
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 8 16 13)\n8 + 16 = 24 (left: 13)\n13 is the final number, no more steps.\n",
                    "8 + 8 = 16 (left: 8 16 13)\n8 * 16 = 128 (left: 13)\nThere are no possible next steps.\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 - 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 - 8 = 8 (left: 8 13)\n13 - 8 = 5 (left: 5)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 - 8 = 8 (left: 8 13)\n13 / 8 = 1.625 (left: 1.625)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 - 8 = 8 (left: 8 13)\n13 * 8 = 104 (left: 104)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5 2)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11 2)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 - 13 = 0 (left: 0)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 * 13 = 169 (left: 169)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 / 13 = 1 (left: 1)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 + 8 = 16 (left: 8 16 13)\n16 - 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11 2)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n"
                ]
            },
            {
                "step": 3,
                "x": "8 8 8 13",
                "ys": [
                    "8 + 8 = 16 (left: 8 16 13)\n16 - 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11 2)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n"
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 8 16 13)\n16 - 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\nThere are no possible next steps.\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n11 - 2 = 9 (left: 2 9)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n11 / 2 = 5.5 (left: 5.5)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n11 - 2 = 9 (left: 9)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n2 + 6 = 8 (left: 8)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n2 * 6 = 12 (left: 12)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n6 / 2 = 3 (left: 3)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n6 - 2 = 4 (left: 4)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11 2)\n11 + 2 = 13 (left: 2 13)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11 2)\n11 - 2 = 9 (left: 9 2)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11 2)\n11 * 2 = 22 (left: 22)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11 2)\n11 / 2 = 5.5 (left: 5.5)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11 2)\n\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\nInput: 2 3 3 4\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\nPossible next steps:\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 + 3 = 6 (left: 2 4 6)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 / 3 = 1 (left: 1 2 4)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n4 + 2 = 6 (left: 3 3 6)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n2 * 3 = 6 (left: 3 4 6)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 - 2 = 1 (left: 1 3 4)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n4 - 2 = 2 (left: 2 3 4)\n"
                ],
                "values": [
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n4 - 2 = 2 (left: 2 3 4)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n11 - 2 = 9 (left: 2 9)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n2 * 6 = 12 (left: 12)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11 2)\n11 + 2 = 13 (left: 2 13)\n"
                ]
            },
            {
                "step": 4,
                "x": "8 8 8 13",
                "ys": [
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n4 - 2 = 2 (left: 2 3 4)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n11 - 2 = 9 (left: 2 9)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n2 * 6 = 12 (left: 12)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11 2)\n11 + 2 = 13 (left: 2 13)\n"
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n4 - 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n4 - 2 = 2 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n4 - 2 = 2 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n4 - 2 = 2 (left: 2 3 4)\n4 / 2 = 2 (left: 2 2)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n11 - 2 = 9 (left: 2 9)\n2 + 9 = 11 (left: 9 11)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n11 - 2 = 9 (left: 2 9)\n9 / 2 = 4 (left: 4 9)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n2 * 11 = 22 (left: 22)\nInput: 3 3 3 3\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n2 * 11 = 22 (left: 22)\nPossible next steps:\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n2 * 11 = 22 (left: 22)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n2 * 11 = 22 (left: 22)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n2 * 11 = 22 (left: 22)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n2 * 11 = 22 (left: 22)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n2 * 6 = 12 (left: 12)\nInput: 12 4 7 2\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n2 * 6 = 12 (left: 12)\nPossible next steps:\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n2 * 6 = 12 (left: 12)\n12 + 4 = 16 (left: 7 16 2)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n2 * 6 = 12 (left: 12)\n12 - 7 = 5 (left: 5 7 2)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n2 * 6 = 12 (left: 12)\n12 / 2 = 6 (left: 6 7 2)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n2 * 6 = 12 (left: 12)\n7 - 2 = 5 (left: 5 7 2)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n2 * 6 = 12 (left: 12)\n7 + 2 = 9 (left: 9 7 2)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n2 * 6 = 12 (left: 12)\n7 * 2 = 14 (left: 14 7 2)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n2 * 6 = 12 (left: 12)\n12 + 7 = 19 (left: 4 19 2)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n2 * 6 = 12 (left: 12)\n12 - 4 = 8 (left: 8 4 2)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11 2)\n11 + 2 = 13 (left: 2 13)\n2 + 13 = 15 (left: 15)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11 2)\n11 + 2 = 13 (left: 2 13)\n13 - 2 = 11 (left: 11)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11 2)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6 (left: 6)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11 2)\n11 + 2 = 13 (left: 2 13)\n2 * 13 = 26 (left: 26)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n2 * 11 = 22 (left: 22)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n4 - 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n4 - 2 = 2 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n11 - 2 = 9 (left: 2 9)\n2 + 9 = 11 (left: 9 11)\n"
                ]
            }
        ],
        "idx": 814,
        "ys": [
            "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
            "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n2 * 11 = 22 (left: 22)\n3 + 3 = 6 (left: 3 3 3 6)\n",
            "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n4 - 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
            "8 + 8 = 16 (left: 8 16 13)\n16 + 8 = 24 (left: 13 13)\n13 + 13 = 26 (left: 26)\n4 - 2 = 2 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
            "8 + 8 = 16 (left: 8 16 13)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n11 - 2 = 9 (left: 2 9)\n2 + 9 = 11 (left: 9 11)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 21864,
            "prompt_tokens": 73302,
            "cost": 0.153681
        },
        "time_spent": 28.541260957717896
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 6 11",
                "ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 * 9 = 54 (left: 11 54)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 6 = 1.5 (left: 1.5 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 / 6 = 1.833 (left: 1.833 11)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n3 + 6 = 9 (left: 8 9)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n6 * 3 = 18 (left: 8 18)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n6 / 3 = 2 (left: 2 8)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n8 - 3 = 5 (left: 5 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 6 11",
                "ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 - 12 = -1 (left: -1)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 * 12 = 132 (left: 132)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 / 12 = 0.9166666666666666 (left: 0.9166666666666666)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n11 + 36 = 47 (left: 47)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n11 * 36 = 396 (left: 396)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 / 11 = 3 (left: 3)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\nInput: 5 5 5 5\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 / 5 = 1 (left: 1 5 5 5)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 * 5 = 25 (left: 5 25 5 5)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 - 5 = 0 (left: 0 5 5 5)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 * 11 = 0 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 / 0 is undefined.\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n6 - 5 = 1 (left: 1 6)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n6 / 5 = 1.2 (left: 1.2 6)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\nInput: 3 3 3 3\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 - 3 = 0 (left: 0 3 3 3)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 / 5 = 1 (left: 1 5 5 5)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 6 11",
                "ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 / 5 = 1 (left: 1 5 5 5)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 6)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nInput consists of only one number.\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\nInput: 6 6 6 6\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 - 6 = 0 (left: 0 6 6)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 / 6 = 1 (left: 1 6 6)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 + 5 = 10 (left: 5 10 5 5)\n5 + 10 = 15 (left: 5 5 15)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 + 5 = 10 (left: 5 10 5 5)\n10 - 5 = 5 (left: 5 5 5)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 + 5 = 10 (left: 5 10 5 5)\n5 * 10 = 50 (left: 5 5 50)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 + 5 = 10 (left: 5 10 5 5)\n10 / 5 = 2 (left: 2 5 5)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 / 5 = 1 (left: 1 5 5 5)\n1 + 5 = 6 (left: 5 5 5)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 / 5 = 1 (left: 1 5 5 5)\n5 / 1 = 5 (left: 5 5 5)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 / 5 = 1 (left: 1 5 5 5)\n5 + 1 = 6 (left: 5 5 5)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 / 5 = 1 (left: 1 5 5 5)\n1 * 5 = 5 (left: 5 5 5)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 / 5 = 1 (left: 1 5 5 5)\n5 - 1 = 4 (left: 4 5 5)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 / 5 = 1 (left: 1 5 5 5)\n5 - 1 = 4 (left: 4 5 5)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 / 5 = 1 (left: 1 5 5 5)\n5 / 1 = 5 (left: 5 5 5)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n5 / 5 = 1 (left: 1 5 5 5)\n5 - 1 = 4 (left: 4 5 5)\n"
                ],
                "values": [
                    100,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 6)\n"
                ]
            },
            {
                "step": 4,
                "x": "3 3 6 11",
                "ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 6)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n3 + 3 = 6 (left: 6 18)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n3 * 3 = 9 (left: 9 18)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n18 / 3 = 6 (left: 3 6)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n18 - 3 = 15 (left: 3 15)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 12)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 + 6 = 12 (left: 6 6 12)\n6 / 6 = 1 (left: 1 12)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n6 * 6 = 36 (left: 6 36)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n36 / 6 = 6 (left: 6 6)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\nInput: 3 3 8 8\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n8 / 3 = 2 (left: 2 3 8 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n8 - 3 = 5 (left: 3 5 8 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n8 - 3 = 5 (left: 3 8 5 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n8 + 3 = 11 (left: 3 8 8 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n3 * 3 = 9 (left: 8 9 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n3 / 3 = 1 (left: 1 3 8 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n8 - 3 = 5 (left: 3 5 8 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 6)\n3 * 1 = 3 (left: 3 6)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 6)\n6 - 3 = 3 (left: 1 3)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 6)\n6 / 3 = 2 (left: 1 2)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    100,
                    100,
                    100,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n3 + 3 = 6 (left: 6 18)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n8 - 3 = 5 (left: 3 5 8 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n8 - 3 = 5 (left: 3 8 5 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n8 + 3 = 11 (left: 3 8 8 11)\n"
                ]
            }
        ],
        "idx": 815,
        "ys": [
            "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n3 + 3 = 6 (left: 6 18)\n",
            "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n",
            "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n8 - 3 = 5 (left: 3 5 8 8)\n",
            "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n8 - 3 = 5 (left: 3 8 5 8)\n",
            "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n6 * 6 = 36 (left: 6 6 36)\n8 + 3 = 11 (left: 3 8 8 11)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 23422,
            "prompt_tokens": 77719,
            "cost": 0.1634225
        },
        "time_spent": 36.58537292480469
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 7 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n",
                    "7 - 3 = 4 (left: 4 8 9)\n",
                    "9 - 3 = 6 (left: 6 8 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n",
                    "7 - 3 = 4 (left: 4 8 9)\n",
                    "9 - 3 = 6 (left: 6 8 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 7 8 9",
                "ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n",
                    "7 - 3 = 4 (left: 4 8 9)\n",
                    "9 - 3 = 6 (left: 6 8 9)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 * 9 = 72 (left: 10 72)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 10)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n9 * 8 = 72 (left: 72 21)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n9 - 8 = 1 (left: 1 21)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n21 - 8 = 13 (left: 8 13)\n",
                    "7 - 3 = 4 (left: 4 8 9)\n4 + 8 = 12 (left: 9 12)\n",
                    "7 - 3 = 4 (left: 4 8 9)\n8 * 4 = 32 (left: 9 32)\n",
                    "7 - 3 = 4 (left: 4 8 9)\n8 - 4 = 4 (left: 4 9)\n",
                    "7 - 3 = 4 (left: 4 8 9)\n8 / 4 = 2 (left: 2 9)\n",
                    "7 - 3 = 4 (left: 4 8 9)\n9 + 4 = 13 (left: 8 13)\n",
                    "7 - 3 = 4 (left: 4 8 9)\n9 * 4 = 36 (left: 8 36)\n",
                    "9 - 3 = 6 (left: 6 8 9)\n6 + 8 = 14 (left: 8 9 14)\n",
                    "9 - 3 = 6 (left: 6 8 9)\n6 * 8 = 48 (left: 9 48)\n",
                    "9 - 3 = 6 (left: 6 8 9)\n8 + 6 = 14 (left: 9 14)\n",
                    "9 - 3 = 6 (left: 6 8 9)\n6 / 8 = 0.75 (left: 0.75 8 9)\n",
                    "9 - 3 = 6 (left: 6 8 9)\n8 - 6 = 2 (left: 2 8 9)\n",
                    "9 - 3 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "9 - 3 = 6 (left: 6 8 9)\n9 / 6 = 1.5 (left: 1.5 9)\n",
                    "9 - 3 = 6 (left: 6 8 9)\n9 - 8 = 1 (left: 1 9)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 7 8 9",
                "ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 10)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n-1 + 10 = 9 (left: 9)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n-1 * 10 = -10 (left: -10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n-1 / 10 = -0.1 (left: -0.1)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n-1 - 10 = -11 (left: -11)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 * 19 = 152 (left: 152)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n19 / 8 = 2.375 (left: 2.375)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 10)\n2 + 10 = 12 (left: 10 12)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n"
                ],
                "values": [
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 7 8 9",
                "ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 17 = 0 (left: 0 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 / 7 = 2 (left: 2 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n7 * 17 = 119 (left: 119)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nInput: 4 5 6 7\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n5 + 6 = 11 (left: 4 7 11)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n6 + 4 = 10 (left: 5 7 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n7 - 5 = 2 (left: 2 6 4)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n6 / 4 = 1.5 (left: 5 7 1.5)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n4 * 7 = 28 (left: 5 6 28)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n7 - 4 = 3 (left: 5 6 3)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n5 * 6 = 30 (left: 4 7 30)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n27 + 1 = 28 (left: 27 28)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n27 - 1 = 26 (left: 26 27)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n27 * 1 = 27 (left: 27)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n27 / 1 = 27 (left: 27)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\n11 + 11 = 22 (left: 22)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\n11 / 11 = 1 (left: 1)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\n11 * 11 = 121 (left: 121)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\n11 - 11 = 0 (left: 0)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)\n10 + 11 = 21 (left: 21)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)\n11 - 10 = 1 (left: 1 11)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)\n11 / 10 = 1.1 (left: 1.1 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)\n11 * 10 = 110 (left: 110)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)\nInput: 3 3 8 8\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)\n3 * 3 = 9 (left: 8 9 8)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)\n8 / 3 = 2.67 (left: 2.67 8 8)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)\n8 * 3 = 24 (left: 24 8)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)\n8 + 3 = 11 (left: 8 11 8)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10 11)\n8 / 3 = 2.67 (left: 3 8 2.67)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 17 = 0 (left: 0 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 / 7 = 2 (left: 2 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n4 + 5 = 9 (left: 6 7 9)\n"
                ]
            },
            {
                "step": 4,
                "x": "3 7 8 9",
                "ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 17 = 0 (left: 0 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 / 7 = 2 (left: 2 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n4 + 5 = 9 (left: 6 7 9)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((3 + 7) + 8) + 9 = 24\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n17 - 10 = 7 (left: 7 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n17 / 10 = 1 (left: 1 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n17 + 10 = 27 (left: 10 27)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n17 * 10 = 170 (left: 10 170)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 17 = 0 (left: 0 17)\n0 + 17 = 17 (left: 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 17 = 0 (left: 0 17)\n17 - 0 = 17 (left: 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 17 = 0 (left: 0 17)\n17 / 0 is undefined (left: 0 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 17 = 0 (left: 0 17)\n17 * 0 = 0 (left: 0)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 17 = 0 (left: 0 17)\n\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 / 7 = 2 (left: 2 17)\n17 - 2 = 15 (left: 2 15)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 / 7 = 2 (left: 2 17)\n2 * 17 = 34 (left: 34)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 / 7 = 2 (left: 2 17)\n17 / 2 = 8.5 (left: 2 8.5)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n4 + 5 = 9 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n4 + 5 = 9 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n4 + 5 = 9 (left: 6 7 9)\n7 - 6 = 1 (left: 1 9)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n4 + 5 = 9 (left: 6 7 9)\n7 / 6 = 1 (left: 1 9)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n4 + 5 = 9 (left: 6 7 9)\n9 + 6 = 15 (left: 7 15)\n"
                ],
                "values": [
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n17 - 10 = 7 (left: 7 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n17 / 10 = 1 (left: 1 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n17 + 10 = 27 (left: 10 27)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n17 * 10 = 170 (left: 10 170)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 17 = 0 (left: 0 17)\n0 + 17 = 17 (left: 17)\n"
                ]
            }
        ],
        "idx": 816,
        "ys": [
            "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n17 - 10 = 7 (left: 7 10)\n",
            "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n17 / 10 = 1 (left: 1 10)\n",
            "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n17 + 10 = 27 (left: 10 27)\n",
            "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n17 * 10 = 170 (left: 10 170)\n",
            "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 17 = 0 (left: 0 17)\n0 + 17 = 17 (left: 17)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 24891,
            "prompt_tokens": 82676,
            "cost": 0.173796
        },
        "time_spent": 33.49349403381348
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 8 8 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 + 2 = 12 (left: 8 8 12)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n"
                ],
                "values": [
                    50,
                    100
                ],
                "select_new_ys": [
                    "10 - 2 = 8 (left: 8 8 8)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 8 8 10",
                "ys": [
                    "10 - 2 = 8 (left: 8 8 8)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n"
                ],
                "new_ys": [
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 8 64)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 64 8 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 8 12)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 64 8 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 8 12)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 8 8 10",
                "ys": [
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 64 8 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 8 12)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n"
                ],
                "new_ys": [
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 128)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 * 8 = 128 (left: 128)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n8 + 16 = 24 (left: 8 12 24)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n8 * 2 = 16 (left: 16 12 16)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 64 8 12)\n64 - 8 = 56 (left: 56 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 64 8 12)\n64 / 8 = 8 (left: 8 12 64)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 64 8 12)\n64 - 12 = 52 (left: 8 52)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 64 8 12)\n64 / 12 = 5 (left: 5 12 64)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 8 12)\n1 * 8 = 8 (left: 8 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 8 12)\n8 - 1 = 7 (left: 7 12)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n8 / 1 = 8 (left: 8)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n8 + 16 = 24 (left: 8 12 24)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n8 * 2 = 16 (left: 16 12 16)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 64 8 12)\n64 / 8 = 8 (left: 8 12 64)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 8 8 10",
                "ys": [
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n8 + 16 = 24 (left: 8 12 24)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n8 * 2 = 16 (left: 16 12 16)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 64 8 12)\n64 / 8 = 8 (left: 8 12 64)\n"
                ],
                "new_ys": [
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (10 - 2) + (8 + 8) = 24\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n8 + 4 = 12 (left: 12 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n8 / 4 = 2 (left: 2 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n8 + 16 = 24 (left: 8 12 24)\n8 + 12 = 20 (left: 20 24)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n8 + 16 = 24 (left: 8 12 24)\n12 * 2 = 24 (left: 8 24)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n8 + 16 = 24 (left: 8 12 24)\n12 + 8 = 20 (left: 20 24)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n8 + 16 = 24 (left: 8 12 24)\n24 / 2 = 12 (left: 8 12 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n8 * 2 = 16 (left: 16 12 16)\nInput: 16 12 16\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n8 * 2 = 16 (left: 16 12 16)\nPossible next steps:\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n8 * 2 = 16 (left: 16 12 16)\n16 - 12 = 4 (left: 4 16 16)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n8 * 2 = 16 (left: 16 12 16)\n16 + 12 = 28 (left: 16 16 28)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n8 * 2 = 16 (left: 16 12 16)\n16 / 12 = 1 (left: 1 16 16)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 64 8 12)\n64 / 8 = 8 (left: 8 12 64)\n8 + 12 = 20 (left: 20 64)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 64 8 12)\n64 / 8 = 8 (left: 8 12 64)\n12 * 8 = 96 (left: 96 64)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 64 8 12)\n64 / 8 = 8 (left: 8 12 64)\n12 / 8 = 1.5 (left: 1.5 8 64)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 64 8 12)\n64 / 8 = 8 (left: 8 12 64)\n64 - 8 = 56 (left: 12 56)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 64 8 12)\n64 / 8 = 8 (left: 8 12 64)\n64 / 12 = 5.33 (left: 5.33 12 64)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 64 8 12)\n64 / 8 = 8 (left: 8 12 64)\n64 - 12 = 52 (left: 8 52)\n"
                ],
                "values": [
                    1000,
                    100,
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (10 - 2) + (8 + 8) = 24\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n8 + 4 = 12 (left: 12 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n8 / 4 = 2 (left: 2 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n12 / 4 = 3 (left: 3 12)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 8 8 10",
                "ys": [
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (10 - 2) + (8 + 8) = 24\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n8 + 4 = 12 (left: 12 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n8 / 4 = 2 (left: 2 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n12 / 4 = 3 (left: 3 12)\n"
                ],
                "new_ys": null,
                "values": null,
                "select_new_ys": null
            }
        ],
        "idx": 817,
        "ys": [
            "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (10 - 2) + (8 + 8) = 24\n",
            "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n8 + 4 = 12 (left: 12 12)\n",
            "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n8 / 4 = 2 (left: 2 12)\n",
            "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n12 - 8 = 4 (left: 4 12)\n",
            "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 8 16 12)\n16 - 12 = 4 (left: 8 4 12)\n12 / 4 = 3 (left: 3 12)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 25606,
            "prompt_tokens": 86015,
            "cost": 0.18023450000000002
        },
        "time_spent": 18.45157289505005
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 7 7 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n",
                    "11 - 4 = 7 (left: 7 7 7)\n",
                    "7 / 7 = 1 (left: 4 7 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n",
                    "11 - 4 = 7 (left: 7 7 7)\n",
                    "7 / 7 = 1 (left: 4 7 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 7 7 11",
                "ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n",
                    "11 - 4 = 7 (left: 7 7 7)\n",
                    "7 / 7 = 1 (left: 4 7 11)\n"
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 / 7 = 1 (left: 1 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 + 7 = 18 (left: 7 18)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 * 7 = 77 (left: 7 77)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n3 + 7 = 10 (left: 10 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n7 - 3 = 4 (left: 4 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n3 * 7 = 21 (left: 11 21)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n7 / 3 = 2 (left: 2 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n11 - 3 = 8 (left: 8 11)\n",
                    "11 - 4 = 7 (left: 7 7 7)\n7 + 7 = 14 (left: 7 14)\n",
                    "11 - 4 = 7 (left: 7 7 7)\n7 / 7 = 1 (left: 1 7)\n",
                    "11 - 4 = 7 (left: 7 7 7)\n7 - 7 = 0 (left: 0 7)\n",
                    "7 / 7 = 1 (left: 4 7 11)\n4 + 7 = 11 (left: 11)\n",
                    "7 / 7 = 1 (left: 4 7 11)\n7 - 4 = 3 (left: 3 11)\n",
                    "7 / 7 = 1 (left: 4 7 11)\n11 - 4 = 7 (left: 7 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 / 7 = 1 (left: 1 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 + 7 = 18 (left: 7 18)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 7 7 11",
                "ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 / 7 = 1 (left: 1 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 + 7 = 18 (left: 7 18)\n"
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 - 14 = -3 (left: -3)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 * 14 = 154 (left: 154)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 / 14 = 0.79 (left: 0.79)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n11 * 2 = 22 (left: 22 49)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 - 11 = 38 (left: 11 38)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n11 + 49 = 60 (left: 11 60)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n11 / 0 is undefined (left: 0 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 / 7 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 / 7 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 / 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 / 7 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 + 7 = 18 (left: 7 18)\n7 + 18 = 25 (left: 18 25)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 + 7 = 18 (left: 7 18)\n18 - 7 = 11 (left: 11 18)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 + 7 = 18 (left: 7 18)\n7 * 18 = 126 (left: 18 126)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 + 7 = 18 (left: 7 18)\n18 / 7 = 2 (left: 2 18)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n11 * 2 = 22 (left: 22 49)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 - 11 = 38 (left: 11 38)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 7 7 11",
                "ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n11 * 2 = 22 (left: 22 49)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 - 11 = 38 (left: 11 38)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\nInput: 3 3 3 3\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\nPossible next steps:\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n11 * 2 = 22 (left: 22 49)\n22 * 2 = 44 (left: 44 49)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n11 * 2 = 22 (left: 22 49)\n49 - 22 = 27 (left: 22 27)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n11 * 2 = 22 (left: 22 49)\n22 + 49 = 71 (left: 71)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 - 11 = 38 (left: 11 38)\n11 + 38 = 49 (left: 49)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 - 11 = 38 (left: 11 38)\n38 - 11 = 27 (left: 27)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 - 11 = 38 (left: 11 38)\n11 * 38 = 418 (left: 418)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 - 11 = 38 (left: 11 38)\n38 / 11 = 3 (left: 3)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n11 - 4 = 7 (left: 7)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n11 / 4 = 2 (left: 2)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n4 * 11 = 44 (left: 44)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\nThere are no possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 - 11 = 38 (left: 11 38)\n38 - 11 = 27 (left: 27)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n"
                ]
            },
            {
                "step": 4,
                "x": "4 7 7 11",
                "ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 - 11 = 38 (left: 11 38)\n38 - 11 = 27 (left: 27)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n"
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 * 3 = 9 (left: 3 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 + 3 = 6 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 + 3 = 6 (left: 3 3 6)\n3 * 3 = 9 (left: 9 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 + 3 = 6 (left: 3 3 6)\n3 / 3 = 1 (left: 1 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 + 3 = 6 (left: 3 3 6)\n3 - 3 = 0 (left: 0 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 / 3 = 1 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 / 3 = 1 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 / 3 = 1 (left: 1 3 3)\n3 / 1 = 3 (left: 3 3)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 / 3 = 1 (left: 1 3 3)\n3 * 1 = 3 (left: 3 3)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 - 11 = 38 (left: 11 38)\n38 - 11 = 27 (left: 27)\n2 + 7 = 9 (left: 9)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 - 11 = 38 (left: 11 38)\n38 - 11 = 27 (left: 27)\n27 / 3 = 9 (left: 9)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 - 11 = 38 (left: 11 38)\n38 - 11 = 27 (left: 27)\n2 * 7 = 14 (left: 14)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 - 11 = 38 (left: 11 38)\n38 - 11 = 27 (left: 27)\n27 - 7 = 20 (left: 20)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\nInput: 1 3 4 6\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\nPossible next steps:\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n3 + 1 = 4 (left: 4 4 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n4 * 1 = 4 (left: 4 6 4)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n1 * 4 = 4 (left: 4 6 4)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n6 - 4 = 2 (left: 1 4 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n6 / 3 = 2 (left: 1 4 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n6 - 1 = 5 (left: 3 4 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n6 - 3 = 3 (left: 1 3 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n6 - 4 = 2 (left: 1 4 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n6 / 3 = 2 (left: 1 4 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 6 9)\n"
                ]
            }
        ],
        "idx": 818,
        "ys": [
            "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n6 - 4 = 2 (left: 1 4 6)\n",
            "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n6 / 3 = 2 (left: 1 4 6)\n",
            "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
            "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
            "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 6 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 26798,
            "prompt_tokens": 90645,
            "cost": 0.1895635
        },
        "time_spent": 26.23030185699463
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 * 2 = 6 (left: 6 8 12)\n",
                    "3 + 2 = 5 (left: 5 8 12)\n",
                    "3 / 2 = 1 (left: 1 8 12)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n",
                    "12 / 2 = 6 (left: 6 8 12)\n",
                    "12 - 3 = 9 (left: 9 8 12)\n",
                    "8 + 2 = 10 (left: 10 8 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 * 2 = 6 (left: 6 8 12)\n",
                    "3 + 2 = 5 (left: 5 8 12)\n",
                    "3 / 2 = 1 (left: 1 8 12)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n",
                    "12 / 2 = 6 (left: 6 8 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 8 12",
                "ys": [
                    "3 * 2 = 6 (left: 6 8 12)\n",
                    "3 + 2 = 5 (left: 5 8 12)\n",
                    "3 / 2 = 1 (left: 1 8 12)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n",
                    "12 / 2 = 6 (left: 6 8 12)\n"
                ],
                "new_ys": [
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 / 6 = 1 (left: 1 8 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8 12)\n",
                    "3 + 2 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 13 12)\n",
                    "3 + 2 = 5 (left: 5 8 12)\n5 * 8 = 40 (left: 40 12)\n",
                    "3 + 2 = 5 (left: 5 8 12)\n8 - 5 = 3 (left: 3 12)\n",
                    "3 + 2 = 5 (left: 5 8 12)\n12 - 5 = 7 (left: 7 12)\n",
                    "3 / 2 = 1 (left: 1 8 12)\n8 + 1 = 9 (left: 9 12)\n",
                    "3 / 2 = 1 (left: 1 8 12)\n8 * 1 = 8 (left: 8 12)\n",
                    "3 / 2 = 1 (left: 1 8 12)\n8 - 1 = 7 (left: 7 12)\n",
                    "3 / 2 = 1 (left: 1 8 12)\n12 - 1 = 11 (left: 8 11)\n",
                    "3 / 2 = 1 (left: 1 8 12)\n12 / 1 = 12 (left: 8 12)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n8 + 10 = 18 (left: 12 18)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 + 12 = 22 (left: 8 22)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 * 12 = 120 (left: 8 120)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 / 8 = 1.25 (left: 1.25 12)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "12 / 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n",
                    "12 / 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 8 12)\n",
                    "12 / 2 = 6 (left: 6 8 12)\n6 * 8 = 48 (left: 8 12 48)\n",
                    "12 / 2 = 6 (left: 6 8 12)\n8 / 6 = 1 (left: 1 8 12)\n",
                    "12 / 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8 12)\n",
                    "12 / 2 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 8 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 / 6 = 1 (left: 1 8 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8 12)\n",
                    "3 + 2 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 13 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 8 12",
                "ys": [
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 / 6 = 1 (left: 1 8 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8 12)\n",
                    "3 + 2 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 13 12)\n"
                ],
                "new_ys": [
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n8 + 12 = 20 (left: 14 20)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n12 + 8 = 20 (left: 14 20)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n8 * 12 = 96 (left: 14 96)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n12 * 8 = 96 (left: 14 96)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n12 - 8 = 4 (left: 4 14)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n12 / 8 = 1.5 (left: 1.5 14)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\nInput: 3 9 5 7\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\nPossible next steps:\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n9 - 3 = 6 (left: 6 5 7)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n5 + 7 = 12 (left: 3 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n7 - 5 = 2 (left: 2 3 9)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 / 6 = 1 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 / 6 = 1 (left: 1 8 12)\n8 / 1 = 8 (left: 8 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 / 6 = 1 (left: 1 8 12)\n12 - 1 = 11 (left: 8 11)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 / 6 = 1 (left: 1 8 12)\n1 * 8 = 8 (left: 8 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 12 14)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8 12)\n8 / 6 = 1 (left: 1 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8 12)\n12 + 6 = 18 (left: 8 18)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8 12)\n6 * 8 = 48 (left: 12 48)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "3 + 2 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 13 12)\n13 + 12 = 25 (left: 25)\n",
                    "3 + 2 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 13 12)\n13 - 12 = 1 (left: 1)\n",
                    "3 + 2 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 13 12)\n13 * 12 = 156 (left: 156)\n",
                    "3 + 2 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 13 12)\n13 / 12 = 1.08 (left: 1.08)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 8 12",
                "ys": [
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n"
                ],
                "new_ys": [
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 - 2) * (10 - 8) = 24\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (12 - 2) * (10 - 8) = 24\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n7 * 5 = 35 (left: 35 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 12 14)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\nInput: 3 3 4 6\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\nPossible next steps:\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 + 3 = 6 (left: 4 6 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 * 3 = 9 (left: 4 6 9)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 / 3 = 1 (left: 1 4 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 - 3 = 0 (left: 0 4 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 + 4 = 7 (left: 6 7 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 * 4 = 12 (left: 6 6 12)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 / 4 = 0.75 (left: 0.75 3 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 - 4 = -1 (left: -1 3 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n4 + 3 = 7 (left: 6 7 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n4 * 3 = 12 (left: 6 6 12)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n4 / 3 = 1.33 (left: 1.33 4 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n4 - 3 = 1 (left: 1 4 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 + 6 = 9 (left: 4 6 9)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 * 6 = 18 (left: 4 6 18)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 / 6 = 0.5 (left: 0.5 3 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 - 6 = -3 (left: -3 3 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n4 + 6 = 10 (left: 3 10 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n4 * 6 = 24 (left: 3 6 24)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n4 / 6 = 0.67 (left: 0.67 4 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n4 - 6 = -2 (left: -2 4 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 3 = 9 (left: 4 6 9)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 * 3 = 18 (left: 4 6 18)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 / 3 = 2 (left: 2 6 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 - 3 = 3 (left: 3 6 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\nInput: 1 1 2 7\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\nPossible next steps:\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n1 + 1 = 2 (left: 2 2 7)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n1 * 1 = 1 (left: 1 2 7)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n1 / 1 = 1 (left: 1 1 7)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n1 - 1 = 0 (left: 0 1 7)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n1 + 2 = 3 (left: 3 1 7)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n1 * 2 = 2 (left: 2 1 7)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n1 / 2 = 0.5 (left: 0.5 1 7)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n1 - 2 = -1 (left: -1 1 7)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n2 + 1 = 3 (left: 1 3 7)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n2 * 1 = 2 (left: 1 2 7)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n2 / 1 = 2 (left: 2 2 7)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n2 - 1 = 1 (left: 1 1 7)\n"
                ],
                "values": [
                    0,
                    0,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    100,
                    50,
                    100,
                    0,
                    50,
                    50,
                    100,
                    0,
                    100,
                    50,
                    50,
                    0,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 / 3 = 1 (left: 1 4 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 - 3 = 0 (left: 0 4 6)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 3 8 12",
                "ys": [
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 / 3 = 1 (left: 1 4 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 - 3 = 0 (left: 0 4 6)\n"
                ],
                "new_ys": [
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\nInput: 2 12\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\nPossible next steps:\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 / 3 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 / 3 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 5 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 - 3 = 0 (left: 0 4 6)\n0 + 4 = 4 (left: 4 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 - 3 = 0 (left: 0 4 6)\n4 / 2 = 2 (left: 2 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 - 3 = 0 (left: 0 4 6)\n6 - 4 = 2 (left: 2 4)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 - 3 = 0 (left: 0 4 6)\n6 / 2 = 3 (left: 3 4)\n"
                ],
                "values": [
                    100,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    50,
                    0,
                    100,
                    50,
                    50,
                    100,
                    50,
                    100,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n",
                    "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 - 3 = 0 (left: 0 4 6)\n0 + 4 = 4 (left: 4 6)\n"
                ]
            }
        ],
        "idx": 819,
        "ys": [
            "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
            "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n3 + 9 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
            "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
            "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n",
            "12 - 2 = 10 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n3 - 3 = 0 (left: 0 4 6)\n0 + 4 = 4 (left: 4 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 28796,
            "prompt_tokens": 96150,
            "cost": 0.20181700000000002
        },
        "time_spent": 42.68952703475952
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 5 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 5 5 9",
                "ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n"
                ],
                "new_ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 8 9 13)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 + 5 = 13 (left: 9 13 8)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 40 9)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8 9)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 / 5 = 1.8 (left: 1.8 8 9)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n9 - 5 = 4 (left: 2 4 9)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n9 - 2 = 7 (left: 7 5 9)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n1 + 5 = 6 (left: 6 9)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n5 * 9 = 45 (left: 1 45)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n9 - 1 = 8 (left: 8 5)\n",
                    "5 / 3 = 1 (left: 1 5 9)\nInput: 3 3 4 6\n",
                    "5 / 3 = 1 (left: 1 5 9)\nPossible next steps:\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 + 3 = 6 (left: 6 4 6)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 * 3 = 9 (left: 9 4 6)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 * 4 = 12 (left: 12 6)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n6 - 4 = 2 (left: 3 2 6)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n6 - 3 = 3 (left: 3 4 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    100,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 5 5 9",
                "ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n"
                ],
                "new_ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 / 3 = 2 (left: 2 8 9)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 + 3 = 12 (left: 8 9 12)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8 9)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n5 * 9 = 45 (left: 3 45)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n9 / 3 = 3 (left: 5 3)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n5 + 9 = 14 (left: 10 14)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n10 / 5 = 2 (left: 2 9)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n9 - 5 = 4 (left: 4 10)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n10 + 5 = 15 (left: 15)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n9 - 10 = -1 (left: -1 9)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n0 + 4 = 4 (left: 4 6)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n4 * 6 = 24 (left: 0 24)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n4 / 6 = 0.67 (left: 0 4 0.67)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n3 + 10 = 13 (left: 6 13)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n10 - 3 = 7 (left: 7 6)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n3 * 10 = 30 (left: 30 6)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n10 / 3 = 3 (left: 3 6)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\nInput: 1 3 7 10\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\nPossible next steps:\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n1 + 3 = 4 (left: 4 7 10)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n3 * 7 = 21 (left: 1 21 10)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n7 - 1 = 6 (left: 3 6 10)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n10 - 7 = 3 (left: 1 3 3)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n1 * 7 = 7 (left: 7 3 10)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n7 - 3 = 4 (left: 1 4 10)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n10 - 1 = 9 (left: 3 7 9)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n3 + 7 = 10 (left: 1 10 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    0,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n5 + 9 = 14 (left: 10 14)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n0 + 4 = 4 (left: 4 6)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n4 * 6 = 24 (left: 0 24)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n3 * 10 = 30 (left: 30 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 5 5 9",
                "ys": [
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n5 + 9 = 14 (left: 10 14)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n0 + 4 = 4 (left: 4 6)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n4 * 6 = 24 (left: 0 24)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n3 * 10 = 30 (left: 30 6)\n"
                ],
                "new_ys": [
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 - 15 = -6 (left: 9 -6)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 / 15 = 0 (left: 0 15)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n5 + 9 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n5 + 9 = 14 (left: 10 14)\n14 * 10 = 140 (left: 140)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n0 + 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n0 + 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n0 + 4 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n0 + 4 = 4 (left: 4 6)\n4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n4 * 6 = 24 (left: 0 24)\n0 * 24 = 0 (left: 24)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n4 * 6 = 24 (left: 0 24)\n24 / 0 = undefined (left: 24)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n4 * 6 = 24 (left: 0 24)\n24 - 0 = 24 (left: 24)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n3 * 10 = 30 (left: 30 6)\n30 - 6 = 24 (left: 24)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n3 * 10 = 30 (left: 30 6)\n30 / 6 = 5 (left: 5 6)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n3 * 10 = 30 (left: 30 6)\n6 * 30 = 180 (left: 180)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n4 + 6 = 10 (left: 3 10 6)\n3 * 10 = 30 (left: 30 6)\n30 + 6 = 36 (left: 6 36)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    100,
                    0,
                    100,
                    50,
                    0,
                    0,
                    100,
                    0,
                    100,
                    100,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n0 + 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 4,
                "x": "3 5 5 9",
                "ys": [
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n0 + 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (3 * 5) + (9 - (5 - 3)) = 24\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((5 - 3) * 5) + (9 + 3) = 24\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((5 * 2) + 5) + 9 = 24\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: ((5 - 3) * 5) + (9 + 10) = 24\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n0 + 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((5 / 3) + 3) * (5 + 9) = 24\n"
                ],
                "values": [
                    0,
                    0,
                    1000,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((5 * 2) + 5) + 9 = 24\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (3 * 5) + (9 - (5 - 3)) = 24\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((5 - 3) * 5) + (9 + 3) = 24\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: ((5 - 3) * 5) + (9 + 10) = 24\n",
                    "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n0 + 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((5 / 3) + 3) * (5 + 9) = 24\n"
                ]
            }
        ],
        "idx": 820,
        "ys": [
            "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((5 * 2) + 5) + 9 = 24\n",
            "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (3 * 5) + (9 - (5 - 3)) = 24\n",
            "5 - 3 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((5 - 3) * 5) + (9 + 3) = 24\n",
            "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 10 5 9)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: ((5 - 3) * 5) + (9 + 10) = 24\n",
            "5 / 3 = 1 (left: 1 5 9)\n3 - 3 = 0 (left: 0 4 6)\n0 + 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((5 / 3) + 3) * (5 + 9) = 24\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 30128,
            "prompt_tokens": 102214,
            "cost": 0.21357700000000002
        },
        "time_spent": 33.19310402870178
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 7 11 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n",
                    "7 - 5 = 2 (left: 2 7 12)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n",
                    "5 * 6 = 30 (left: 7 30 12)\n",
                    "6 / 5 = 1 (left: 1 7 12)\n",
                    "7 * 5 = 35 (left: 6 12 35)\n",
                    "7 / 5 = 1 (left: 1 6 12)\n",
                    "12 - 5 = 7 (left: 7 7 12)\n",
                    "12 - 6 = 6 (left: 6 7 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 7 11 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n",
                    "7 - 5 = 2 (left: 2 7 12)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n",
                    "5 * 6 = 30 (left: 7 30 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 7 12",
                "ys": [
                    "5 + 6 = 11 (left: 7 11 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n",
                    "7 - 5 = 2 (left: 2 7 12)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n",
                    "5 * 6 = 30 (left: 7 30 12)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 * 11 = 77 (left: 12 77)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 7 12 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n1 + 7 = 8 (left: 8 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n7 * 1 = 7 (left: 7 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n7 + 1 = 8 (left: 8 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n7 - 1 = 6 (left: 6 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 1 5)\n",
                    "7 - 5 = 2 (left: 2 7 12)\n2 + 7 = 9 (left: 9 12)\n",
                    "7 - 5 = 2 (left: 2 7 12)\n7 + 2 = 9 (left: 9 12)\n",
                    "7 - 5 = 2 (left: 2 7 12)\n2 * 7 = 14 (left: 14 12)\n",
                    "7 - 5 = 2 (left: 2 7 12)\n7 * 2 = 14 (left: 14 12)\n",
                    "7 - 5 = 2 (left: 2 7 12)\n7 - 2 = 5 (left: 5 12)\n",
                    "7 - 5 = 2 (left: 2 7 12)\n2 - 7 = -5 (left: -5 12)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n7 - 1 = 6 (left: 6 7 12)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n7 - 1 = 6 (left: 6 12 7)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 1 = 11 (left: 7 11 12)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n7 + 1 = 8 (left: 8 7 12)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n",
                    "5 * 6 = 30 (left: 7 30 12)\n7 * 4 = 28 (left: 28 30 12)\n",
                    "5 * 6 = 30 (left: 7 30 12)\n7 + 30 = 37 (left: 37 12)\n",
                    "5 * 6 = 30 (left: 7 30 12)\n7 - 30 = -23 (left: -23 30 12)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 7 12 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n1 + 7 = 8 (left: 8 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 7 12",
                "ys": [
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 7 12 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n1 + 7 = 8 (left: 8 12)\n"
                ],
                "new_ys": [
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n5 + 7 = 12 (left: 12)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 / 5 = 1.4 (left: 1.4 12)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\nInput: 3 3 4 8\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\nPossible next steps:\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n3 + 3 = 6 (left: 4 6 8)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n3 * 3 = 9 (left: 4 8 9)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n3 / 3 = 1 (left: 1 4 8)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n8 - 4 = 4 (left: 3 4 4)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n4 * 3 = 12 (left: 8 12)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n8 - 3 = 5 (left: 4 5 8)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n8 / 4 = 2 (left: 2 3 8)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n4 + 3 = 7 (left: 7 8)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n11 + 12 = 23 (left: 18 23)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n12 - 11 = 1 (left: 1 12 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n11 * 12 = 132 (left: 18 132)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n12 / 11 = 1.09 (left: 1.09 12 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 11 = 7 (left: 7 11 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 7 12 18)\n7 + 12 = 19 (left: 12 18 19)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 7 12 18)\n7 * 12 = 84 (left: 18 84)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 7 12 18)\n12 + 18 = 30 (left: 7 30)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 7 12 18)\n7 * 18 = 126 (left: 12 126)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 7 12 18)\n12 - 7 = 5 (left: 5 12 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 7 12 18)\n18 - 7 = 11 (left: 11 12 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n4 + 11 = 15 (left: 12 15)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n11 + 4 = 15 (left: 12 15)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n11 - 4 = 7 (left: 7 12)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n11 / 4 = 2.75 (left: 2.75 12)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n4 * 11 = 44 (left: 12 44)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\nInput: 3 5 7 8\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n3 + 5 = 8 (left: 7 8)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n3 - 5 = -2 (left: -2 7 8)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n3 * 5 = 15 (left: 7 8 15)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n3 / 5 = 0.6 (left: 0.6 7 8)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n5 + 7 = 12 (left: 3 8 12)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n7 - 5 = 2 (left: 2 8)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n5 * 7 = 35 (left: 3 8 35)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n5 / 7 = 0.71 (left: 0.71 8)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n7 + 3 = 10 (left: 5 8 10)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n3 * 7 = 21 (left: 5 8 21)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n7 / 3 = 2.33 (left: 2.33 5 8)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n7 - 3 = 4 (left: 4 5 8)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n3 * 8 = 24 (left: 5 7 24)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 / 3 = 2.67 (left: 2.67 5 7)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 - 3 = 5 (left: 5 5 7)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 * 3 = 24 (left: 5 7 24)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 / 5 = 1.6 (left: 3 7 1.6)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 - 5 = 3 (left: 3 3 7)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n1 + 7 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n1 + 7 = 8 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n1 + 7 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n1 + 7 = 8 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5 12)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    0,
                    50,
                    100,
                    0,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n5 * 7 = 35 (left: 3 8 35)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n3 * 7 = 21 (left: 5 8 21)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 6 7 12",
                "ys": [
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n5 * 7 = 35 (left: 3 8 35)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n3 * 7 = 21 (left: 5 8 21)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n"
                ],
                "new_ys": [
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 + 12 = 18 (left: 18 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 * 2 = 12 (left: 12 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n12 + 6 = 18 (left: 12 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n12 * 1.5 = 18 (left: 12 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n5 * 7 = 35 (left: 3 8 35)\n3 * 8 = 24 (left: 8 24 35)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n5 * 7 = 35 (left: 3 8 35)\n8 + 3 = 11 (left: 11 8 35)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n5 * 7 = 35 (left: 3 8 35)\n35 - 3 = 32 (left: 8 32 35)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n3 * 7 = 21 (left: 5 8 21)\n5 * 8 = 40 (left: 40 21)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n3 * 7 = 21 (left: 5 8 21)\n8 + 5 = 13 (left: 13 21)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n3 * 7 = 21 (left: 5 8 21)\n21 - 5 = 16 (left: 16 21)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n5 + 7 = 12 (left: 11 12)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n7 / 5 = 1.4 (left: 1.4 11)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\nInput: 3 3 6 7\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n3 + 3 = 6 (left: 6 6 7)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n3 * 3 = 9 (left: 6 9 7)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n3 / 3 = 1 (left: 1 6 7)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n7 - 3 = 4 (left: 4 6 7)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n7 - 6 = 1 (left: 3 1 7)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n6 / 3 = 2 (left: 2 3 7)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n3 + 6 = 9 (left: 3 7 9)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n7 * 3 = 21 (left: 6 21)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n7 / 3 = 2.33 (left: 2.33 7)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 + 12 = 18 (left: 18 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 * 2 = 12 (left: 12 18)\n"
                ]
            },
            {
                "step": 4,
                "x": "5 6 7 12",
                "ys": [
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 + 12 = 18 (left: 18 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 * 2 = 12 (left: 12 18)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n11 + 35 = 46 (left: 46)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n35 - 11 = 24 (left: 24)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n11 * 35 = 385 (left: 385)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n35 / 11 = 3 (left: 3)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 - 1 = 13 (left: 13)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 + 1 = 15 (left: 15)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 / 1 = 14 (left: 14)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 * 1 = 14 (left: 14)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n2 + 8 = 10 (left: 8 10)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n8 + 2 = 10 (left: 2 10)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 + 12 = 18 (left: 18 18)\n18 - 18 = 0 (left: 0)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 + 12 = 18 (left: 18 18)\n18 / 18 = 1 (left: 1)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 * 2 = 12 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 * 2 = 12 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 * 2 = 12 (left: 12 18)\n12 * 18 = 216 (left: 216)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 * 2 = 12 (left: 12 18)\n18 / 12 = 1.5 (left: 1.5 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 * 2 = 12 (left: 12 18)\nInput: 3 4 5 6\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 * 2 = 12 (left: 12 18)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 * 2 = 12 (left: 12 18)\n3 + 4 = 7 (left: 5 6 7)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 * 2 = 12 (left: 12 18)\n4 * 5 = 20 (left: 3 6 20)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 * 2 = 12 (left: 12 18)\n5 + 6 = 11 (left: 3 4 11)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 * 2 = 12 (left: 12 18)\n3 * 6 = 18 (left: 4 5 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 * 2 = 12 (left: 12 18)\n5 - 4 = 1 (left: 3 1 6)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 * 2 = 12 (left: 12 18)\n6 - 3 = 3 (left: 4 5 3)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 * 2 = 12 (left: 12 18)\n6 / 3 = 2 (left: 4 5 2)\n"
                ],
                "values": [
                    0,
                    100,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n35 - 11 = 24 (left: 24)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 * 2 = 12 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 - 1 = 13 (left: 13)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 + 1 = 15 (left: 15)\n",
                    "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 / 1 = 14 (left: 14)\n"
                ]
            }
        ],
        "idx": 821,
        "ys": [
            "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n8 + 3 = 11 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n35 - 11 = 24 (left: 24)\n",
            "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n18 - 12 = 6 (left: 6 12 18)\n6 * 2 = 12 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
            "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 - 1 = 13 (left: 13)\n",
            "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 + 1 = 15 (left: 15)\n",
            "7 - 6 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 / 1 = 14 (left: 14)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 32361,
            "prompt_tokens": 107091,
            "cost": 0.2253585
        },
        "time_spent": 46.36510992050171
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 4 4",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 2 7 4)  \n",
                    "4 - 2 = 2 (left: 2 3 4)  \n",
                    "4 / 2 = 2 (left: 2 3 4)  \n"
                ],
                "values": [
                    50,
                    100,
                    100
                ],
                "select_new_ys": [
                    "4 - 2 = 2 (left: 2 3 4)  \n",
                    "4 / 2 = 2 (left: 2 3 4)  \n",
                    "3 + 4 = 7 (left: 2 7 4)  \n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 4 4",
                "ys": [
                    "4 - 2 = 2 (left: 2 3 4)  \n",
                    "4 / 2 = 2 (left: 2 3 4)  \n",
                    "3 + 4 = 7 (left: 2 7 4)  \n"
                ],
                "new_ys": [
                    "4 - 2 = 2 (left: 2 3 4)  \n3 + 4 = 7 (left: 2 7)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n4 / 3 = 1.33 (left: 2 1.33)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n4 - 3 = 1 (left: 2 1)\n",
                    "4 / 2 = 2 (left: 2 3 4)  \n3 + 4 = 7 (left: 2 7)\n",
                    "4 / 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n",
                    "4 / 2 = 2 (left: 2 3 4)  \n4 - 3 = 1 (left: 2 1)\n",
                    "3 + 4 = 7 (left: 2 7 4)  \n2 + 7 = 9 (left: 4 9)\n",
                    "3 + 4 = 7 (left: 2 7 4)  \n7 - 2 = 5 (left: 5 4)\n",
                    "3 + 4 = 7 (left: 2 7 4)  \n2 * 7 = 14 (left: 14 4)\n",
                    "3 + 4 = 7 (left: 2 7 4)  \n7 / 2 = 3.5 (left: 3.5 4)\n"
                ],
                "values": [
                    50,
                    100,
                    0,
                    0,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n",
                    "4 / 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 + 4 = 7 (left: 2 7)\n",
                    "4 / 2 = 2 (left: 2 3 4)  \n3 + 4 = 7 (left: 2 7)\n",
                    "3 + 4 = 7 (left: 2 7 4)  \n2 + 7 = 9 (left: 4 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 4 4",
                "ys": [
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n",
                    "4 / 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 + 4 = 7 (left: 2 7)\n",
                    "4 / 2 = 2 (left: 2 3 4)  \n3 + 4 = 7 (left: 2 7)\n",
                    "3 + 4 = 7 (left: 2 7 4)  \n2 + 7 = 9 (left: 4 9)\n"
                ],
                "new_ys": [
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "4 / 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 + 4 = 7 (left: 2 7)\n2 + 7 = 9 (left: 7 9)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 + 4 = 7 (left: 2 7)\n7 - 2 = 5 (left: 5 7)\n",
                    "4 / 2 = 2 (left: 2 3 4)  \n3 + 4 = 7 (left: 2 7)\n7 / 2 = 3.5 (left: 2 3.5)\n",
                    "4 / 2 = 2 (left: 2 3 4)  \n3 + 4 = 7 (left: 2 7)\n2 * 7 = 14 (left: 14)\n",
                    "4 / 2 = 2 (left: 2 3 4)  \n3 + 4 = 7 (left: 2 7)\n7 - 2 = 5 (left: 5 7)\n",
                    "3 + 4 = 7 (left: 2 7 4)  \n2 + 7 = 9 (left: 4 9)\n4 + 9 = 13 (left: 9 13)\n",
                    "3 + 4 = 7 (left: 2 7 4)  \n2 + 7 = 9 (left: 4 9)\n9 - 4 = 5 (left: 5 9)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 / 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 + 4 = 7 (left: 2 7)\n2 + 7 = 9 (left: 7 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 4 4",
                "ys": [
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 / 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 + 4 = 7 (left: 2 7)\n2 + 7 = 9 (left: 7 9)\n"
                ],
                "new_ys": [
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 - 2) * (3 * 4) = 24\n",
                    "4 / 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 / 2) * (3 * 4) = 24\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 * 12 = 72 (left: 12 72)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n10 * 12 = 120 (left: 120)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n12 - 10 = 2 (left: 2)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n12 / 10 = 1.2 (left: 1.2)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\nInput: 4 6 7\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\nPossible next steps:\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n4 + 6 = 10 (left: 10 7)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n4 * 6 = 24 (left: 24 7)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n6 + 7 = 13 (left: 4 13)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n6 * 7 = 42 (left: 4 42)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n7 - 4 = 3 (left: 3 6)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n7 / 4 = 1.75 (left: 1.75 6)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\nInput: 1 2 3 4\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\nPossible next steps:\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n2 + 3 = 5 (left: 1 5 4)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n2 * 3 = 6 (left: 1 6 4)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n3 + 4 = 7 (left: 1 2 7)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n3 * 4 = 12 (left: 1 2 12)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n4 + 1 = 5 (left: 5 3 4)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n4 * 1 = 4 (left: 4 3 4)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n1 / 2 = 0.5 (left: 0.5 3 4)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n1 - 2 = -1 (left: -1 3 4)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n2 / 3 = 0.6666666666666666 (left: 1 0.6666666666666666 4)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n2 - 3 = -1 (left: 1 -1 4)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n3 / 4 = 0.75 (left: 1 2 0.75)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n3 - 4 = -1 (left: 1 2 -1)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n4 / 1 = 4 (left: 4 3 4)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n4 - 1 = 3 (left: 3 3 4)  \n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 + 4 = 7 (left: 2 7)\n2 + 7 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 + 4 = 7 (left: 2 7)\n2 + 7 = 9 (left: 7 9)\n9 - 7 = 2 (left: 2 9)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 + 4 = 7 (left: 2 7)\n2 + 7 = 9 (left: 7 9)\n9 / 7 = 1 (left: 1 7)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 + 4 = 7 (left: 2 7)\n2 + 7 = 9 (left: 7 9)\n7 - 9 = -2 (left: -2 7)\n"
                ],
                "values": [
                    1000,
                    1000,
                    50,
                    100,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 - 2) * (3 * 4) = 24\n",
                    "4 / 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 / 2) * (3 * 4) = 24\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n2 * 3 = 6 (left: 1 6 4)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 3 4 4",
                "ys": [
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 - 2) * (3 * 4) = 24\n",
                    "4 / 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 / 2) * (3 * 4) = 24\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n2 * 3 = 6 (left: 1 6 4)\n"
                ],
                "new_ys": null,
                "values": null,
                "select_new_ys": null
            }
        ],
        "idx": 822,
        "ys": [
            "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 - 2) * (3 * 4) = 24\n",
            "4 / 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 / 2) * (3 * 4) = 24\n",
            "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n",
            "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n1 * 2 = 2 (left: 2 3 4)\n",
            "4 - 2 = 2 (left: 2 3 4)  \n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n2 * 3 = 6 (left: 1 6 4)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 33378,
            "prompt_tokens": 110965,
            "cost": 0.2332035
        },
        "time_spent": 24.95507502555847
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 3 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n"
                ],
                "values": [
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 3 9",
                "ys": [
                    "3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 / 3 = 1 (left: 1 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 - 3 = 0 (left: 0 3 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0
                ],
                "select_new_ys": [
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 / 3 = 1 (left: 1 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 3 9",
                "ys": [
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 / 3 = 1 (left: 1 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n"
                ],
                "new_ys": [
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 * 9 = 54 (left: 9 54)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 / 6 = 1 (left: 1 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 - 9 = 0 (left: 0)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 / 9 = 1 (left: 1)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 / 3 = 1 (left: 1 9)\n1 + 9 = 10 (left: 9 10)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 / 3 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 * 9 = 54 (left: 9 54)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 3 9",
                "ys": [
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 * 9 = 135 (left: 135)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 * 15 = 135 (left: 135)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 * 9 = 135 (left: 9 135)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 / 15 = 0.6 (left: 0.6 15)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 * 9 = 54 (left: 54)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 - 9 = 0 (left: 0)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 / 9 = 1 (left: 1)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n6 / 3 = 2 (left: 2 6)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    100,
                    50
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n"
                ]
            },
            {
                "step": 4,
                "x": "3 3 3 9",
                "ys": [
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((3 * 3) + 3) + 9 = 24\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 * 3) + 3) + 9 = 24\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 - 15 = -6 (left: -6 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 / 15 = 0 (left: 0 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3 18)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 * 6 = 108 (left: 6 108)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\nInput: 3 5 5 5\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\nPossible next steps:\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n3 + 5 = 8 (left: 5 5 8)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n5 / 3 = 1 (left: 1 5 5)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n5 - 3 = 2 (left: 2 5 5)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n5 * 3 = 15 (left: 5 5 15)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n6 + 15 = 21 (left: 21)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n15 - 6 = 9 (left: 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 15 = 90 (left: 90)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n15 / 6 = 2 (left: 2)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\nInput: 3 3 3 3\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n3 - 3 = 0 (left: 0 3 3 3)\n"
                ],
                "values": [
                    0,
                    0,
                    100,
                    100,
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n5 / 3 = 1 (left: 1 5 5)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n3 + 3 = 6 (left: 3 6 3 3)\n"
                ]
            }
        ],
        "idx": 823,
        "ys": [
            "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
            "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
            "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
            "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n5 / 3 = 1 (left: 1 5 5)\n",
            "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n3 + 3 = 6 (left: 3 6 3 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 34545,
            "prompt_tokens": 116024,
            "cost": 0.243126
        },
        "time_spent": 26.74579405784607
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 7 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 3 7 9)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n"
                ],
                "values": [
                    50,
                    100,
                    0
                ],
                "select_new_ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 7 9",
                "ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n"
                ],
                "new_ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 13 9)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 9 = 5 (left: 1 5)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 / 1 = 14 (left: 14 9)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n3 + 7 = 10 (left: 7 9 10)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n3 * 7 = 21 (left: 9 21)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n7 - 3 = 4 (left: 4 9)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n7 / 3 = 2 (left: 2 9)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n9 + 3 = 12 (left: 7 12)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 3)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n2 * 2 = 4 (left: 2 4)\n",
                    "9 - 7 = 2 (left: 1 2 2)\nInput: 3 3 3 3\n",
                    "9 - 7 = 2 (left: 1 2 2)\nPossible next steps:\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 - 3 = 0 (left: 0 3 3)\n"
                ],
                "values": [
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    0
                ],
                "select_new_ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 13 9)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 / 1 = 14 (left: 14 9)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n3 + 7 = 10 (left: 7 9 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 7 9",
                "ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 13 9)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 / 1 = 14 (left: 14 9)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n3 + 7 = 10 (left: 7 9 10)\n"
                ],
                "new_ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n3 / 3 = 1 (left: 1 9)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n9 / 3 = 3 (left: 3 3)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\nInput: 5 5 7 7\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\nPossible next steps:\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 * 5 = 25 (left: 7 7 25)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 - 5 = 0 (left: 0 7 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 / 5 = 1 (left: 1 7 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 - 5 = 2 (left: 2 7 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 / 5 = 1.4 (left: 1.4 7 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 - 5 = 2 (left: 2 7 7)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 13 9)\n13 + 9 = 22 (left: 9 22)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 13 9)\n13 - 9 = 4 (left: 4 9)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 13 9)\n13 * 9 = 117 (left: 9 117)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 13 9)\n13 / 9 = 1.44 (left: 1.44 9)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 / 1 = 14 (left: 14 9)\n14 + 9 = 23 (left: 9 23)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 / 1 = 14 (left: 14 9)\n14 - 9 = 5 (left: 5 9)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 / 1 = 14 (left: 14 9)\n14 * 9 = 126 (left: 9 126)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 / 1 = 14 (left: 14 9)\n14 /  9 = 1 (left: 1 9)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n3 + 7 = 10 (left: 7 9 10)\n7 + 9 = 16 (left: 9 10 16)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n3 + 7 = 10 (left: 7 9 10)\n7 * 9 = 63 (left: 10 63)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n3 + 7 = 10 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n3 + 7 = 10 (left: 7 9 10)\n7 - 9 = -2 (left: -2 10)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n3 + 7 = 10 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n3 + 7 = 10 (left: 7 9 10)\n9 / 7 = 1 (left: 1 10)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    100,
                    100,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 * 5 = 25 (left: 7 7 25)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 2 7 9",
                "ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 * 5 = 25 (left: 7 7 25)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n"
                ],
                "new_ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 - 15 = -6 (left: 9 -6)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n15 * 9 = 135 (left: 135)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n10 - 7 = 3 (left: 3 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n7 * 10 = 70 (left: 7 70)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n10 / 7 = 1.43 (left: 1.43 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\nInput: 3 3 8 8\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\nPossible next steps:\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n3 * 3 = 9 (left: 8 9 8)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n8 / 3 = 2.67 (left: 2.67 8 8)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 * 5 = 25 (left: 7 7 25)\n7 + 7 = 14 (left: 14 25)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 * 5 = 25 (left: 7 7 25)\n7 * 7 = 49 (left: 25 49)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 * 5 = 25 (left: 7 7 25)\n7 - 7 = 0 (left: 0 25)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 * 5 = 25 (left: 7 7 25)\n7 / 7 = 1 (left: 1 25)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 * 5 = 25 (left: 7 7 25)\n25 + 7 = 32 (left: 7 32)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 * 5 = 25 (left: 7 7 25)\n25 - 7 = 18 (left: 7 18)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 * 5 = 25 (left: 7 7 25)\n25 / 7 = 3 (left: 7 3)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n5 + 12 = 17 (left: 7 17)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n5 * 12 = 60 (left: 7 60)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n12 - 5 = 7 (left: 7 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n12 / 5 = 2 (left: 2 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\nInput: 3 3 8 7\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\nPossible next steps:\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n3 + 3 = 6 (left: 6 8 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n3 / 3 = 1 (left: 1 8 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n3 + 8 = 11 (left: 3 11 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n3 * 3 = 9 (left: 9 8 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n3 - 3 = 0 (left: 0 8 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n3 - 8 = -5 (left: -5 8 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n3 / 8 = 0.375 (left: 0.375 8 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n8 - 3 = 5 (left: 5 3 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n8 / 3 = 2.66666666667 (left: 2.66666666667 3 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n8 + 3 = 11 (left: 3 8 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n7 + 3 = 10 (left: 3 8 10)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n7 - 3 = 4 (left: 4 8 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n7 / 3 = 2.33333333333 (left: 2.33333333333 8 7)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n7 + 5 = 12 (left: 5 12 7)\n7 * 3 = 21 (left: 21 8 7)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    50,
                    100,
                    100,
                    0,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    100
                ],
                "select_new_ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n"
                ]
            },
            {
                "step": 4,
                "x": "1 2 7 9",
                "ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n"
                ],
                "new_ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (1 + 2 * 7) + 9 = 24\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: (1 + 2 * 7) + 9 = 24\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 * 7) + 1) + 9 = 24\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((1 + 14) + 9) + 15 = 24\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n17 + 7 = 24 (left: 24)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n17 / 7 = 2 (left: 2)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n7 - 17 = -10 (left: -10)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    0,
                    100,
                    100,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (1 + 2 * 7) + 9 = 24\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: (1 + 2 * 7) + 9 = 24\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 * 7) + 1) + 9 = 24\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n17 + 7 = 24 (left: 24)\n"
                ]
            }
        ],
        "idx": 824,
        "ys": [
            "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (1 + 2 * 7) + 9 = 24\n",
            "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: (1 + 2 * 7) + 9 = 24\n",
            "2 * 7 = 14 (left: 1 14 9)\n1 + 14 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 * 7) + 1) + 9 = 24\n",
            "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
            "9 - 7 = 2 (left: 1 2 2)\n3 * 3 = 9 (left: 3 3 9)\n5 + 5 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n17 + 7 = 24 (left: 24)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 36191,
            "prompt_tokens": 121749,
            "cost": 0.2550055
        },
        "time_spent": 36.057289838790894
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 9 11 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n",
                    "1 / 9 = 0 (left: 0 9 11)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 9 11 13",
                "ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n"
                ],
                "new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 11 13 21)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 * 11 = 110 (left: 13 110)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n8 / 11 = 0.7272727272727273 (left: 0.7272727272727273 11 13)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n8 * 11 = 88 (left: 13 88)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n11 - 8 = 3 (left: 3 11 13)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n13 - 8 = 5 (left: 5 11 13)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n12 - 9 = 3 (left: 3 13)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n9 * 12 = 108 (left: 13 108)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n12 / 9 = 1 (left: 1 13)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n12 + 9 = 21 (left: 13 21)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n12 - 13 = -1 (left: -1 13)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n9 - 12 = -3 (left: -3 13)\n",
                    "11 + 1 = 12 (left: 9 12 13)\nInput: 1 4 5 3\n",
                    "11 + 1 = 12 (left: 9 12 13)\nPossible next steps:\n",
                    "11 + 1 = 12 (left: 9 12 13)\n1 + 4 = 5 (left: 3 5)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n4 - 1 = 3 (left: 3 3)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n1 * 4 = 4 (left: 4 5)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n4 / 1 = 4 (left: 4 5)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n4 + 1 = 5 (left: 5 5)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n4 - 3 = 1 (left: 1 5)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n1 - 4 = -3 (left: -3 5)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n9 + 11 = 20 (left: 13 20)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n11 + 13 = 24 (left: 9 24)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n9 * 11 = 99 (left: 13 99)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n11 * 13 = 143 (left: 9 143)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n11 - 9 = 2 (left: 2 13)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n13 - 9 = 4 (left: 4 11)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n13 - 11 = 2 (left: 2 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 11 13 21)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n10 / 11 = 0.9091 (left: 0.9091 11 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n10 + 13 = 23 (left: 11 23)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n10 * 11 = 110 (left: 13 110)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n13 - 10 = 3 (left: 3 11 13)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50
                ],
                "select_new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 11 13 21)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 9 11 13",
                "ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 11 13 21)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n"
                ],
                "new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 - 1 = 10 (left: 10 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n13 - 1 = 12 (left: 12 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 - 1 = 10 (left: 10 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 11 13 21)\n11 + 13 = 24 (left: 21)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 11 13 21)\n13 + 11 = 24 (left: 21)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 11 13 21)\n13 * 11 = 143 (left: 21)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 11 13 21)\n11 * 13 = 143 (left: 21)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 11 13 21)\n13 - 11 = 2 (left: 2 21)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 11 13 21)\n21 - 11 = 10 (left: 10 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 11 13 21)\n21 - 13 = 8 (left: 8 11)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 + 19 = 32 (left: 32)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 - 19 = -6 (left: -6)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 * 19 = 247 (left: 247)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 / 19 = 0.6842 (left: 0.6842)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n13 + 19 = 32 (left: 32)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n19 - 13 = 6 (left: 6)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n19 / 13 = 1 (left: 1)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n19 * 13 = 247 (left: 247)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 9 11 13",
                "ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n"
                ],
                "new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n13 / 11 = 1 (left: 1 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n13 * 11 = 143 (left: 143)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\nInput: 5 5 5 5\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\nPossible next steps:\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 / 5 = 1 (left: 1 5 5 5)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 - 5 = 0 (left: 0 5 5 5)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n13 * 11 = 143 (left: 143)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n11 - 13 = -2 (left: 11 -2)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 11)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n11 / 13 = 0.8461538461538461 (left: 0.8461538461538461 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)  \n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n11 * 13 = 143 (left: 13 143)  \n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 13)  \n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 - 13 = -1 (left: -1)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 * 13 = 156 (left: 156)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 / 13 = 0.923 (left: 0.923)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n12 - 13 = -1 (left: -1)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n12 * 13 = 156 (left: 156)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n12 / 13 = 0.923 (left: 0.923)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    50,
                    100,
                    100,
                    0,
                    50,
                    50,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)  \n"
                ]
            },
            {
                "step": 4,
                "x": "1 9 11 13",
                "ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)  \n"
                ],
                "new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 9) * (11 - 10)) + 13 = 24\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n5 * 5 = 25 (left: 5 25)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n25 / 5 = 5 (left: 5 5)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\nInput: 3 6 9 27\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\nPossible next steps:\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n3 * 3 = 9 (left: 6 9 27)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n9 / 3 = 3 (left: 3 9 27)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n27 / 9 = 3 (left: 3 6 3)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n6 * 3 = 18 (left: 9 18 27)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n9 * 3 = 27 (left: 6 27 27)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n27 - 9 = 18 (left: 6 18 27)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n27 / 3 = 9 (left: 6 9 27)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n6 / 3 = 2 (left: 2 9 27)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 9) + 11) + 13 = 24\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: ((1 + 9) - 11) + 13 = 24\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)  \n11 + 13 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)  \n11 * 13 = 143 (left: 13 143)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)  \n13 - 11 = 2 (left: 2 11)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)  \n13 / 11 = 1.18 (left: 11 1.18)\n"
                ],
                "values": [
                    0,
                    50,
                    50,
                    0,
                    0,
                    100,
                    100,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    0,
                    0,
                    100,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n3 * 3 = 9 (left: 6 9 27)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n9 / 3 = 3 (left: 3 9 27)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n27 - 9 = 18 (left: 6 18 27)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n27 / 3 = 9 (left: 6 9 27)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)  \n11 + 13 = 24 (left: 24)\n"
                ]
            }
        ],
        "idx": 825,
        "ys": [
            "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n3 * 3 = 9 (left: 6 9 27)\n",
            "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n9 / 3 = 3 (left: 3 9 27)\n",
            "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n27 - 9 = 18 (left: 6 18 27)\n",
            "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n5 * 5 = 25 (left: 5 25 5)\n27 / 3 = 9 (left: 6 9 27)\n",
            "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)  \n11 + 13 = 24 (left: 24)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 38009,
            "prompt_tokens": 127615,
            "cost": 0.26744049999999997
        },
        "time_spent": 38.111725091934204
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 * 2 = 4 (left: 4 6 8)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n",
                    "2 - 2 = 0 (left: 0 6 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n",
                    "2 * 6 = 12 (left: 12 6 8)\n",
                    "2 - 6 = -4 (left: -4 6 8)\n",
                    "2 / 6 = 0.33 (left: 0.33 6 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 2 8 8)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n",
                    "2 - 2 = 0 (left: 0 6 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 6 8",
                "ys": [
                    "2 + 6 = 8 (left: 2 8 8)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n",
                    "2 - 2 = 0 (left: 0 6 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n"
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n6 + 8 = 14 (left: 4 14)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n6 * 8 = 48 (left: 4 48)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n8 / 4 = 2 (left: 2 6)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n6 / 4 = 1.5 (left: 1.5 8)\n",
                    "2 + 2 = 4 (left: 4 6 8)\nInput: 2 3 3 5\n",
                    "2 + 2 = 4 (left: 4 6 8)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 4 6 8)\n2 * 3 = 6 (left: 3 5 6)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n3 - 2 = 1 (left: 1 3 5)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n3 + 2 = 5 (left: 3 5 5)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n3 / 2 = 1.5 (left: 1.5 3 5)\n",
                    "2 - 2 = 0 (left: 0 6 8)\n0 + 6 = 6 (left: 6 8)\n",
                    "2 - 2 = 0 (left: 0 6 8)\n6 * 0 = 0 (left: 0 6 8)\n",
                    "2 - 2 = 0 (left: 0 6 8)\n6 - 0 = 6 (left: 6 6 8)\n",
                    "2 - 2 = 0 (left: 0 6 8)\n6 / 0 is undefined\n",
                    "2 - 2 = 0 (left: 0 6 8)\n0 + 8 = 8 (left: 6 8)\n",
                    "2 - 2 = 0 (left: 0 6 8)\n8 - 0 = 8 (left: 6 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n6 + 1 = 7 (left: 7 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n1 * 6 = 6 (left: 6 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n6 * 1 = 6 (left: 6 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n6 - 1 = 5 (left: 5 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n1 - 6 = -5 (left: -5 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n6 / 1 = 6 (left: 6 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n1 / 6 = 0.16666666666666666 (left: 0.16666666666666666 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n6 + 8 = 14 (left: 4 14)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 6 8",
                "ys": [
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n6 + 8 = 14 (left: 4 14)\n"
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n10 - 8 = 2 (left: 2)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 * 10 = 80 (left: 80)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n10 / 8 = 1.25 (left: 1.25)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n8 - 6 = 2 (left: 2)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n8 / 6 = 1.33 (left: 1.33)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n10 - 8 = 2 (left: 2)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n8 * 10 = 80 (left: 80)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n8 / 10 = 0.8 (left: 0.8)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n6 + 8 = 14 (left: 4 14)\n4 + 14 = 18 (left: 18)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n6 + 8 = 14 (left: 4 14)\n14 - 4 = 10 (left: 10)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n6 + 8 = 14 (left: 4 14)\n4 * 14 = 56 (left: 56)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n6 + 8 = 14 (left: 4 14)\n14 / 4 = 3 (left: 3)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 6 8",
                "ys": [
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n"
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 * 4 = 32 (left: 4)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 / 2 = 4 (left: 4)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n32 / 4 = 8 (left: 8)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n32 * 4 = 128 (left: 128)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\nInput: 3 3 3 81\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\nPossible next steps:\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 3 = 9 (left: 9 3 81)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 9 = 27 (left: 27 3 3)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n81 / 3 = 27 (left: 3 27 3)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n81 / 3 = 27 (left: 3 3 27)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 27 = 81 (left: 3 81)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 27 = 81 (left: 3 81)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 is the final result.\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n12 - 1.5 = 10.5 (left: 8 10.5)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\nNo possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 3 = 9 (left: 9 3 81)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 9 = 27 (left: 27 3 3)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n81 / 3 = 27 (left: 3 27 3)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n81 / 3 = 27 (left: 3 3 27)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 27 = 81 (left: 3 81)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 2 6 8",
                "ys": [
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 3 = 9 (left: 9 3 81)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 9 = 27 (left: 27 3 3)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n81 / 3 = 27 (left: 3 27 3)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n81 / 3 = 27 (left: 3 3 27)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 27 = 81 (left: 3 81)\n"
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 3 = 9 (left: 9 3 81)\n9 * 3 = 27 (left: 27 81)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 3 = 9 (left: 9 3 81)\n9 + 3 = 12 (left: 12 81)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 3 = 9 (left: 9 3 81)\n81 / 9 = 9 (left: 9 81)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 9 = 27 (left: 27 3 3)\n27 / 3 = 9 (left: 9 3 3)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 9 = 27 (left: 27 3 3)\n27 - 3 = 24 (left: 3 24 3)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 9 = 27 (left: 27 3 3)\n27 / 3 = 9 (left: 9 3 3)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 9 = 27 (left: 27 3 3)\n27 - 3 = 24 (left: 3 24 3)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n81 / 3 = 27 (left: 3 27 3)\n3 * 3 = 9 (left: 9 27)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n81 / 3 = 27 (left: 3 27 3)\n27 / 3 = 9 (left: 9 9)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n81 / 3 = 27 (left: 3 27 3)\n3 + 3 = 6 (left: 6 27)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n81 / 3 = 27 (left: 3 27 3)\n27 - 3 = 24 (left: 3 24)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n81 / 3 = 27 (left: 3 3 27)\n3 * 3 = 9 (left: 9 27)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n81 / 3 = 27 (left: 3 3 27)\n3 * 9 = 27 (left: 3 27)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n81 / 3 = 27 (left: 3 3 27)\n3 + 3 = 6 (left: 6 27)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n81 / 3 = 27 (left: 3 3 27)\n27 / 3 = 9 (left: 3 9 27)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 27 = 81 (left: 3 81)\n3 * 3 = 9 (left: 9 81)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 27 = 81 (left: 3 81)\n3 + 3 = 6 (left: 6 81)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 27 = 81 (left: 3 81)\n81 / 3 = 27 (left: 27 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    100,
                    100,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100,
                    0,
                    50,
                    100
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 9 = 27 (left: 27 3 3)\n27 / 3 = 9 (left: 9 3 3)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 9 = 27 (left: 27 3 3)\n27 - 3 = 24 (left: 3 24 3)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n81 / 3 = 27 (left: 3 3 27)\n3 * 9 = 27 (left: 3 27)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n81 / 3 = 27 (left: 3 3 27)\n27 / 3 = 9 (left: 3 9 27)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 27 = 81 (left: 3 81)\n81 / 3 = 27 (left: 27 3)\n"
                ]
            }
        ],
        "idx": 826,
        "ys": [
            "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 9 = 27 (left: 27 3 3)\n27 / 3 = 9 (left: 9 3 3)\n",
            "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 9 = 27 (left: 27 3 3)\n27 - 3 = 24 (left: 3 24 3)\n",
            "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n81 / 3 = 27 (left: 3 3 27)\n3 * 9 = 27 (left: 3 27)\n",
            "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n81 / 3 = 27 (left: 3 3 27)\n27 / 3 = 9 (left: 3 9 27)\n",
            "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 27 = 81 (left: 3 81)\n81 / 3 = 27 (left: 27 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 39496,
            "prompt_tokens": 132484,
            "cost": 0.277718
        },
        "time_spent": 32.13720393180847
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 8 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 8 = 13 (left: 9 12 13)  \n",
                    "8 - 5 = 3 (left: 3 9 12)  \n",
                    "9 - 5 = 4 (left: 4 8 12)  \n",
                    "5 * 8 = 40 (left: 9 12 40)  \n",
                    "5 - 8 = -3 (left: -3 9 12)  \n",
                    "8 / 5 = 1.6 (left: 1.6 9 12)  \n",
                    "9 + 5 = 14 (left: 8 12 14)  \n",
                    "5 / 8 = 0.625 (left: 0.625 8 9)  \n"
                ],
                "values": [
                    50,
                    100,
                    100,
                    50,
                    100,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "8 - 5 = 3 (left: 3 9 12)  \n",
                    "9 - 5 = 4 (left: 4 8 12)  \n",
                    "5 - 8 = -3 (left: -3 9 12)  \n",
                    "5 + 8 = 13 (left: 9 12 13)  \n",
                    "5 * 8 = 40 (left: 9 12 40)  \n"
                ]
            },
            {
                "step": 1,
                "x": "5 8 9 12",
                "ys": [
                    "8 - 5 = 3 (left: 3 9 12)  \n",
                    "9 - 5 = 4 (left: 4 8 12)  \n",
                    "5 - 8 = -3 (left: -3 9 12)  \n",
                    "5 + 8 = 13 (left: 9 12 13)  \n",
                    "5 * 8 = 40 (left: 9 12 40)  \n"
                ],
                "new_ys": [
                    "8 - 5 = 3 (left: 3 9 12)  \n3 + 9 = 12 (left: 9 12)\n",
                    "8 - 5 = 3 (left: 3 9 12)  \n9 * 3 = 27 (left: 12 27)\n",
                    "8 - 5 = 3 (left: 3 9 12)  \n9 / 3 = 3 (left: 3 12)\n",
                    "8 - 5 = 3 (left: 3 9 12)  \n12 - 3 = 9 (left: 9 12)\n",
                    "9 - 5 = 4 (left: 4 8 12)  \n4 + 8 = 12 (left: 8 12)\n",
                    "9 - 5 = 4 (left: 4 8 12)  \n8 / 4 = 2 (left: 2 8 12)\n",
                    "5 - 8 = -3 (left: -3 9 12)  \n-3 + 9 = 6 (left: 6 12)\n",
                    "5 - 8 = -3 (left: -3 9 12)  \n9 - (-3) = 12 (left: 12 12)\n",
                    "5 - 8 = -3 (left: -3 9 12)  \n-3 * 9 = -27 (left: -27 12)\n",
                    "5 - 8 = -3 (left: -3 9 12)  \n9 / -3 = -3 (left: -3 12)\n",
                    "5 - 8 = -3 (left: -3 9 12)  \n-3 - 9 = -12 (left: -12 12)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n9 + 12 = 21 (left: 13 21)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n9 * 12 = 108 (left: 13 108)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 - 9 = 3 (left: 3 12 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n13 - 9 = 4 (left: 4 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n13 - 12 = 1 (left: 1 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n13 /  9 = 1 (left: 1 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \nInput: 5 5 5 5\n",
                    "5 + 8 = 13 (left: 9 12 13)  \nPossible next steps:\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 + 5 = 10 (left: 5 10 5)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 / 5 = 1 (left: 1 5 5)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 * 5 = 25 (left: 5 5 25)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 - 5 = 0 (left: 0 5 5)\n",
                    "5 * 8 = 40 (left: 9 12 40)  \n9 + 12 = 21 (left: 21 40)\n",
                    "5 * 8 = 40 (left: 9 12 40)  \n9 * 12 = 108 (left: 108 40)\n",
                    "5 * 8 = 40 (left: 9 12 40)  \n12 * 9 = 108 (left: 108 40)\n",
                    "5 * 8 = 40 (left: 9 12 40)  \n12 + 9 = 21 (left: 21 40)\n",
                    "5 * 8 = 40 (left: 9 12 40)  \n12 / 9 = 1 (left: 1 12 40)\n",
                    "5 * 8 = 40 (left: 9 12 40)  \n12 - 9 = 3 (left: 3 12 40)\n",
                    "5 * 8 = 40 (left: 9 12 40)  \n40 - 9 = 31 (left: 12 31)\n",
                    "5 * 8 = 40 (left: 9 12 40)  \n40 - 12 = 28 (left: 9 28)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    100,
                    100,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 / 5 = 1 (left: 1 5 5)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 * 5 = 25 (left: 5 5 25)\n",
                    "8 - 5 = 3 (left: 3 9 12)  \n3 + 9 = 12 (left: 9 12)\n",
                    "8 - 5 = 3 (left: 3 9 12)  \n9 * 3 = 27 (left: 12 27)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 8 9 12",
                "ys": [
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 / 5 = 1 (left: 1 5 5)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 * 5 = 25 (left: 5 5 25)\n",
                    "8 - 5 = 3 (left: 3 9 12)  \n3 + 9 = 12 (left: 9 12)\n",
                    "8 - 5 = 3 (left: 3 9 12)  \n9 * 3 = 27 (left: 12 27)\n"
                ],
                "new_ys": [
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 + 1 = 13 (left: 13 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 / 5 = 1 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 / 5 = 1 (left: 1 5 5)\n5 / 1 = 5 (left: 5 5)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 / 5 = 1 (left: 1 5 5)\n5 + 1 = 6 (left: 5 6)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 * 5 = 25 (left: 5 5 25)\n5 * 5 = 25 (left: 5 25)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 * 5 = 25 (left: 5 5 25)\n5 + 5 = 10 (left: 10 25)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 * 5 = 25 (left: 5 5 25)\n25 / 5 = 5 (left: 5 25)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 * 5 = 25 (left: 5 5 25)\n25 - 5 = 20 (left: 5 20)\n",
                    "8 - 5 = 3 (left: 3 9 12)  \n3 + 9 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "8 - 5 = 3 (left: 3 9 12)  \n3 + 9 = 12 (left: 9 12)\n9 - 12 = -3 (left: -3)\n",
                    "8 - 5 = 3 (left: 3 9 12)  \n3 + 9 = 12 (left: 9 12)\n9 * 12 = 108 (left: 108)\n",
                    "8 - 5 = 3 (left: 3 9 12)  \n3 + 9 = 12 (left: 9 12)\n9 / 12 = 0.75 (left: 0.75)\n",
                    "8 - 5 = 3 (left: 3 9 12)  \n9 * 3 = 27 (left: 12 27)\n12 + 27 = 39 (left: 39)\n",
                    "8 - 5 = 3 (left: 3 9 12)  \n9 * 3 = 27 (left: 12 27)\n27 - 12 = 15 (left: 15)\n",
                    "8 - 5 = 3 (left: 3 9 12)  \n9 * 3 = 27 (left: 12 27)\n27 / 12 = 2.25 (left: 2.25)\n",
                    "8 - 5 = 3 (left: 3 9 12)  \n9 * 3 = 27 (left: 12 27)\n27 * 12 = 324 (left: 324)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 + 1 = 13 (left: 13 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 / 5 = 1 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 8 9 12",
                "ys": [
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 + 1 = 13 (left: 13 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 / 5 = 1 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n"
                ],
                "new_ys": [
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 - 13 = 0 (left: 0)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 * 13 = 169 (left: 169)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 / 13 = 1 (left: 1)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 + 1 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 + 1 = 13 (left: 13 13)\n13 - 13 = 0 (left: 0)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 + 1 = 13 (left: 13 13)\n13 * 13 = 169 (left: 169)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 + 1 = 13 (left: 13 13)\n13 / 13 = 1 (left: 1)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n13 - 12 = 1 (left: 1 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 * 13 = 156 (left: 156)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 / 13 = 0.9230769230769231 (left: 0.9230769230769231 12)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 / 5 = 1 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 + 6 = 11 (left: 6 11)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 / 5 = 1 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 / 5 = 1 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n6 / 5 = 1.2 (left: 1.2 6)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n5 / 5 = 1 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n6 - 5 = 1 (left: 1 6)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 + 1 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n"
                ]
            },
            {
                "step": 4,
                "x": "5 8 9 12",
                "ys": [
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 + 1 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n"
                ],
                "new_ys": [
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((5 + 8) + (12 / 9)) + 13 = 24\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (5 + 8) * (12 - 9) = 24\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\nInput: 3 3 3 3\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\nPossible next steps:\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 + 1 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n26 * 1 = 26 (left: 26)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 + 1 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n26 / 1 = 26 (left: 26)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n25 + 1 = 26 (left: 1 25 26)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n25 - 1 = 24 (left: 1 24 25)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 + 1 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n26 * 1 = 26 (left: 26)\n"
                ]
            }
        ],
        "idx": 827,
        "ys": [
            "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 + 3 = 6 (left: 3 6 3 3)\n",
            "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 * 3 = 9 (left: 3 3 9 3)\n",
            "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 / 3 = 1 (left: 1 3 3 3)\n",
            "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 - 3 = 0 (left: 0 3 3 3)\n",
            "5 + 8 = 13 (left: 9 12 13)  \n12 / 9 = 1 (left: 1 12 13)\n12 + 1 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n26 * 1 = 26 (left: 26)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 40865,
            "prompt_tokens": 138013,
            "cost": 0.28874950000000005
        },
        "time_spent": 32.24388527870178
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 1 4 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n"
                ],
                "values": [
                    100,
                    50
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 1 4 10",
                "ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 5 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n4 * 1 = 4 (left: 4 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 - 1 = 9 (left: 4 9)\n",
                    "1 * 1 = 1 (left: 1 4 10)\nInput: 3 3 6 7\n",
                    "1 * 1 = 1 (left: 1 4 10)\nPossible next steps:\n",
                    "1 * 1 = 1 (left: 1 4 10)\n3 + 3 = 6 (left: 6 6 7)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n3 * 3 = 9 (left: 6 7 9)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n7 - 3 = 4 (left: 4 6 9)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n7 - 6 = 1 (left: 1 6 7)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n3 * 7 = 21 (left: 6 21)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n3 + 6 = 9 (left: 7 9)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n6 * 7 = 42 (left: 3 42)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 5 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 1 4 10",
                "ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 5 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 / 6 = 1.67 (left: 1.67 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 - 8 = 2 (left: 2)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 * 10 = 80 (left: 80)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 / 8 = 1.25 (left: 1.25)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 5 10)\n10 - 5 = 5 (left: 5 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 5 10)\n10 / 5 = 2 (left: 2 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n10 - 5 = 5 (left: 5)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n10 / 5 = 2 (left: 2)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 + 8 = 10 (left: 8 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 1 4 10",
                "ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 + 8 = 10 (left: 8 10)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 is the final result.\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n10 - 4 = 6 (left: 6)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n10 / 4 = 2 (left: 2)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 is the goal!\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 + 8 = 10 (left: 8 10)\n10 - 8 = 2 (left: 2)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n"
                ]
            },
            {
                "step": 4,
                "x": "1 1 4 10",
                "ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: ((1 + 1) + 4) * 10 = 24\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n8 * 8 = 64 (left: 64)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n8 / 8 = 1 (left: 1)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n8 + 8 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n8 - 8 = 0 (left: 0)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n128 / 8 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n128 - 8 = 120 (left: 120)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n8 - 8 = 0 (left: 0)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n8 / 8 = 1 (left: 1)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\nInput: 2 4 5 9\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\nPossible next steps:\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n2 + 4 = 6 (left: 5 6 9)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n4 + 5 = 9 (left: 2 9 9)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n5 * 2 = 10 (left: 4 9 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n9 - 5 = 4 (left: 2 4 9)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n9 - 4 = 5 (left: 2 5 9)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n5 + 4 = 9 (left: 2 9 9)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\nInput: 5 9\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\nPossible next steps:\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n5 * 9 = 45 (left: 45)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n9 / 5 = 1 (left: 1 9)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n9 - 5 = 4 (left: 4 9)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n5 + 9 = 14 (left: 14)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\nInput: 3 3 3 3\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\nPossible next steps:\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n3 * 3 = 9 (left: 3 3 9)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    100
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n8 + 8 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n128 / 8 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n2 + 4 = 6 (left: 5 6 9)\n"
                ]
            }
        ],
        "idx": 828,
        "ys": [
            "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n3 * 3 = 9 (left: 3 3 9)\n",
            "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n8 + 8 = 16 (left: 16)\n",
            "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n128 / 8 = 16 (left: 16)\n",
            "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n",
            "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n2 + 4 = 6 (left: 5 6 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 41916,
            "prompt_tokens": 142500,
            "cost": 0.297582
        },
        "time_spent": 27.045849084854126
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 9 10 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n",
                    "13 - 4 = 9 (left: 9 5 10)\n",
                    "5 * 4 = 20 (left: 20 10 13)\n",
                    "13 - 5 = 8 (left: 8 10 13)\n",
                    "13 - 10 = 3 (left: 4 5 3)\n"
                ],
                "values": [
                    50,
                    100,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 - 4 = 6 (left: 6 5 13)\n",
                    "13 - 4 = 9 (left: 9 5 10)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n",
                    "5 * 4 = 20 (left: 20 10 13)\n",
                    "13 - 5 = 8 (left: 8 10 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 10 13",
                "ys": [
                    "10 - 4 = 6 (left: 6 5 13)\n",
                    "13 - 4 = 9 (left: 9 5 10)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n",
                    "5 * 4 = 20 (left: 20 10 13)\n",
                    "13 - 5 = 8 (left: 8 10 13)\n"
                ],
                "new_ys": [
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 - 5 = 1 (left: 1 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n5 - 6 = -1 (left: -1 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 / 5 = 1.2 (left: 1.2 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n5 / 6 = 0.8333333333333334 (left: 0.83 13)\n",
                    "13 - 4 = 9 (left: 9 5 10)\n9 + 5 = 14 (left: 10 14)\n",
                    "13 - 4 = 9 (left: 9 5 10)\n9 * 5 = 45 (left: 10 45)\n",
                    "13 - 4 = 9 (left: 9 5 10)\n5 * 10 = 50 (left: 9 50)\n",
                    "13 - 4 = 9 (left: 9 5 10)\n9 - 5 = 4 (left: 4 10)\n",
                    "13 - 4 = 9 (left: 9 5 10)\n9 / 5 = 1 (left: 1 10)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n9 + 10 = 19 (left: 13 19)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 10 13)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 / 9 = 1 (left: 1 10 13)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n13 + 9 = 22 (left: 9 22)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n9 * 10 = 90 (left: 13 90)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 + 9 = 19 (left: 9 13 19)\n",
                    "5 * 4 = 20 (left: 20 10 13)\n20 - 10 = 10 (left: 10 13)\n",
                    "5 * 4 = 20 (left: 20 10 13)\n20 / 10 = 2 (left: 2 13)\n",
                    "5 * 4 = 20 (left: 20 10 13)\n20 + 10 = 30 (left: 13 30)\n",
                    "5 * 4 = 20 (left: 20 10 13)\n20 * 10 = 200 (left: 13 200)\n",
                    "5 * 4 = 20 (left: 20 10 13)\n10 - 20 = -10 (left: -10 13)\n",
                    "5 * 4 = 20 (left: 20 10 13)\n10 / 20 = 0.5 (left: 0.5 13)\n",
                    "5 * 4 = 20 (left: 20 10 13)\n10 + 20 = 30 (left: 13 30)\n",
                    "13 - 5 = 8 (left: 8 10 13)\n10 - 8 = 2 (left: 2 8 13)\n",
                    "13 - 5 = 8 (left: 8 10 13)\n10 - 2 = 8 (left: 8 8 13)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n",
                    "13 - 4 = 9 (left: 9 5 10)\n9 + 5 = 14 (left: 10 14)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 10 13)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 / 9 = 1 (left: 1 10 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 10 13",
                "ys": [
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n",
                    "13 - 4 = 9 (left: 9 5 10)\n9 + 5 = 14 (left: 10 14)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 10 13)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 / 9 = 1 (left: 1 10 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n"
                ],
                "new_ys": [
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n13 * 11 = 143 (left: 143)\n",
                    "13 - 4 = 9 (left: 9 5 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 10 13)\n10 / 1 = 10 (left: 10 13)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 10 13)\n13 - 1 = 12 (left: 10 12)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 / 9 = 1 (left: 1 10 13)\n1 + 10 = 11 (left: 11 13)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 / 9 = 1 (left: 1 10 13)\n1 * 10 = 10 (left: 10 13)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 / 9 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 / 9 = 1 (left: 1 10 13)\n10 / 1 = 10 (left: 10 13)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 / 9 = 1 (left: 1 10 13)\n13 - 1 = 12 (left: 10 12)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n30 + 13 = 43 (left: 13 43)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n30 - 13 = 17 (left: 17 30)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n30 / 13 = 2.31 (left: 2.31 30)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n30 * 13 = 390 (left: 390)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\nInput: 5 5 5 5\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\nPossible next steps:\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n5 - 5 = 0 (left: 0 5 5 5)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n5 / 5 = 1 (left: 1 5 5 5)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n5 * 5 = 25 (left: 25 5 5)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\nInput: 10 4 6 7\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\nPossible next steps:\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n10 + 4 = 14 (left: 6 7 14)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n10 + 6 = 16 (left: 4 7 16)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n10 + 7 = 17 (left: 4 6 17)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n10 - 4 = 6 (left: 6 6 7)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n10 - 6 = 4 (left: 4 4 7)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n10 - 7 = 3 (left: 3 4 6)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n10 / 4 = 2.5 (left: 2.5 6 7)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n10 / 6 = 1.67 (left: 1.67 4 7)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n10 / 7 = 1.43 (left: 1.43 4 6)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n10 * 4 = 40 (left: 6 7 40)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n10 * 6 = 60 (left: 4 7 60)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n10 * 7 = 70 (left: 4 6 70)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    0,
                    100,
                    100,
                    50,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 9 5 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 / 9 = 1 (left: 1 10 13)\n1 + 10 = 11 (left: 11 13)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 10 13",
                "ys": [
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 9 5 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 / 9 = 1 (left: 1 10 13)\n1 + 10 = 11 (left: 11 13)\n"
                ],
                "new_ys": [
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (10 - 4) + (6 + 5) = 24\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (10 - 4) + (5 + 13) = 24\n",
                    "13 - 4 = 9 (left: 9 5 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 9 5 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "13 - 4 = 9 (left: 9 5 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n13 / 11 = 1 (left: 1 13)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 / 9 = 1 (left: 1 10 13)\n1 + 10 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n"
                ],
                "values": [
                    0,
                    1000,
                    100,
                    0,
                    0,
                    100,
                    0,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (10 - 4) + (5 + 13) = 24\n",
                    "13 - 4 = 9 (left: 9 5 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 / 9 = 1 (left: 1 10 13)\n1 + 10 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n"
                ]
            },
            {
                "step": 4,
                "x": "4 5 10 13",
                "ys": [
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (10 - 4) + (5 + 13) = 24\n",
                    "13 - 4 = 9 (left: 9 5 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 / 9 = 1 (left: 1 10 13)\n1 + 10 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n"
                ],
                "new_ys": null,
                "values": null,
                "select_new_ys": null
            }
        ],
        "idx": 829,
        "ys": [
            "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (10 - 4) + (5 + 13) = 24\n",
            "13 - 4 = 9 (left: 9 5 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
            "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
            "4 + 5 = 9 (left: 9 10 13)\n10 / 9 = 1 (left: 1 10 13)\n1 + 10 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
            "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 43148,
            "prompt_tokens": 146842,
            "cost": 0.306559
        },
        "time_spent": 26.284701824188232
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 3 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 2 6 9)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n",
                    "9 / 3 = 3 (left: 2 3 9)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 2 6 9)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n",
                    "9 / 3 = 3 (left: 2 3 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 3 9",
                "ys": [
                    "3 + 3 = 6 (left: 2 6 9)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n",
                    "9 / 3 = 3 (left: 2 3 9)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n6 - 2 = 4 (left: 4 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 7 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n9 / 2 = 4 (left: 4 9)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n9 * 2 = 18 (left: 9 18)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n2 + 3 = 5 (left: 5 6)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n",
                    "9 / 3 = 3 (left: 2 3 9)\n2 + 3 = 5 (left: 5 9)\n",
                    "9 / 3 = 3 (left: 2 3 9)\n3 * 2 = 6 (left: 6 9)\n",
                    "9 / 3 = 3 (left: 2 3 9)\n9 - 2 = 7 (left: 7 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n6 - 2 = 4 (left: 4 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 7 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n9 / 2 = 4 (left: 4 9)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 3 9",
                "ys": [
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n6 - 2 = 4 (left: 4 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 7 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n9 / 2 = 4 (left: 4 9)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 * 12 = 108 (left: 108)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n12 / 9 = 1.33 (left: 1.33 12)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\nInput: 3 3 3 3\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n6 - 2 = 4 (left: 4 9)\n4 + 9 = 13 (left: 13)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n6 - 2 = 4 (left: 4 9)\n9 - 4 = 5 (left: 5)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n6 - 2 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n6 - 2 = 4 (left: 4 9)\n9 / 4 = 2 (left: 2)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 7 9)\n9 - 7 = 2 (left: 2 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 7 9)\n9 / 7 = 1.29 (left: 1.29 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 7 9)\n7 - 9 = -2 (left: -2 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n9 / 2 = 4 (left: 4 9)\n4 + 9 = 13 (left: 9 13)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n9 / 2 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n9 / 2 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25 9)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n11 / 9 = 1 (left: 1 11)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 * 11 = 99 (left: 99)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 / 3 = 1 (left: 1 3 3)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 3 9",
                "ys": [
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 / 3 = 1 (left: 1 3 3)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n3 / 3 = 1 (left: 1 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nSorry, I made a mistake. Let me try again.\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 2 8 8 14\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n2 + 8 = 10 (left: 10 8 14)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n8 / 2 = 4 (left: 4 8 14)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n14 + 2 = 16 (left: 16 8 14)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n2 * 8 = 16 (left: 16 14 14)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n8 - 2 = 6 (left: 6 8 14)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n14 /  2 = 7 (left: 7 8 8)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n14 - 2 = 12 (left: 12 8 8)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9 12)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 + 3 = 6 (left: 3 6 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 / 3 = 1 (left: 1 3 3)\n1 + 3 = 4 (left: 3 4)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 / 3 = 1 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 / 3 = 1 (left: 1 3 3)\n3 / 1 = 3 (left: 3 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 3 3 9",
                "ys": [
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 12 8)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n14 - 8 = 6 (left: 2 6 8)\n8 / 2 = 4 (left: 6 4)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n14 - 8 = 6 (left: 2 6 8)\n6 + 2 = 8 (left: 8 8)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n9 / 3 = 3 (left: 3 3)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 3 6)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 * 9 = 54 (left: 9 54)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 / 6 = 1 (left: 1 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 / 9 = 1 (left: 1)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 + 6 = 9 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n6 / 3 = 2 (left: 2 6)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n14 - 8 = 6 (left: 2 6 8)\n8 / 2 = 4 (left: 6 4)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 12 8)\n"
                ]
            }
        ],
        "idx": 830,
        "ys": [
            "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n14 - 8 = 6 (left: 2 6 8)\n8 / 2 = 4 (left: 6 4)\n",
            "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
            "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
            "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
            "3 + 3 = 6 (left: 2 6 9)\n2 * 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 12 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 44398,
            "prompt_tokens": 151482,
            "cost": 0.31601900000000005
        },
        "time_spent": 29.54940915107727
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 4 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 4 9",
                "ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n6 / 4 = 1.5 (left: 1.5 9)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 * 6 = 24 (left: 9 24)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9 9)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n4 * 9 = 36 (left: 9 9 36)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n1 + 3 = 4 (left: 4 9)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n3 * 9 = 27 (left: 1 27)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n3 - 1 = 2 (left: 2 9)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 / 3 = 3 (left: 1 3)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 3 = 6 (left: 1 6)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 6 7)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n3 * 4 = 12 (left: 6 12)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n4 + 6 = 10 (left: 3 10)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n4 * 6 = 24 (left: 3 24)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n6 + 3 = 9 (left: 4 9)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 * 6 = 24 (left: 9 24)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 4 9",
                "ys": [
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 * 6 = 24 (left: 9 24)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n"
                ],
                "new_ys": [
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n8 + 3 = 11 (left: 11)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n8 - 3 = 5 (left: 5)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n8 * 3 = 24 (left: 24)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\nInput: 5 5 5 1\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\nPossible next steps:\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n5 + 5 = 10 (left: 10 5 1)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n5 * 5 = 25 (left: 25 5 1)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n5 - 1 = 4 (left: 4 5 5)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n5 + 1 = 6 (left: 6 5 5)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n5 / 1 = 5 (left: 5 5 5)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 * 10 = 90 (left: 90)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n10 - 9 = 1 (left: 1)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 - 10 = -1 (left: -1)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n6 + 13 = 19 (left: 19)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n13 - 6 = 7 (left: 7 13)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n13 / 6 = 2 (left: 2 13)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n6 * 13 = 78 (left: 78)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\nInput: 4 5 6 7\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n5 - 4 = 1 (left: 1 6 7)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n5 * 4 = 20 (left: 6 7 20)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n7 - 6 = 1 (left: 4 1 7)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n7 * 6 = 42 (left: 4 5 42)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n7 + 6 = 13 (left: 4 5 13)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n6 / 4 = 1 (left: 1 5 7)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n7 - 4 = 3 (left: 3 5 6)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n7 / 4 = 1 (left: 1 5 6)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n7 * 4 = 28 (left: 5 6 28)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n6 - 4 = 2 (left: 2 5 7)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n6 / 4 = 1 (left: 1 5 7)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\nInput: 1 2 3 4\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n3 + 4 = 7 (left: 1 2 7)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 - 1 = 3 (left: 2 3 4)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 / 2 = 2 (left: 1 3 4)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n3 - 1 = 2 (left: 2 2 4)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n3 / 1 = 3 (left: 2 3 4)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 - 2 = 2 (left: 1 2 4)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 * 6 = 24 (left: 9 24)\n9 + 24 = 33 (left: 33)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 * 6 = 24 (left: 9 24)\n9 * 24 = 216 (left: 216)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 * 6 = 24 (left: 9 24)\n24 / 9 = 2 (left: 2 24)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 * 6 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15 24)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n9 + 9 = 18 (left: 18 13)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n9 / 9 = 1 (left: 1 13)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n13 - 9 = 4 (left: 9 4)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n13 - 9 = 4 (left: 9 4)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    100,
                    50,
                    100,
                    50,
                    100,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n8 * 3 = 24 (left: 24)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 - 1 = 3 (left: 2 3 4)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 4 9",
                "ys": [
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n8 * 3 = 24 (left: 24)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 - 1 = 3 (left: 2 3 4)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n"
                ],
                "new_ys": [
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n8 * 3 = 24 (left: 24)\nAnswer: (3 / 3) * (9 - 1) = 24\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n5 / 5 = 1 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n5 / 5 = 1 (left: 1 5 5)\n5 * 1 = 5 (left: 5 5)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 1 = 8 (left: 8 3)\n5 / 5 = 1 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n6 * 4 = 24 (left: 1 24)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n6 + 4 = 10 (left: 1 10)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n6 / 4 = 1.5 (left: 1 1.5)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n4 / 6 = 0.6666666666666666 (left: 1 0.6666666666666666)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 - 1 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 - 1 = 3 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 - 1 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 - 1 = 3 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 - 1 = 3 (left: 2 3 4)\n3 - 2 = 1 (left: 1 4)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n3 + 1 = 4 (left: 4 8)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 8 8)\n"
                ],
                "values": [
                    0,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    100,
                    0,
                    0,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n6 * 4 = 24 (left: 1 24)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 - 1 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n"
                ]
            },
            {
                "step": 4,
                "x": "3 3 4 9",
                "ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n6 * 4 = 24 (left: 1 24)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 - 1 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\nInput: 3 3 3 3\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n3 * 3 = 9 (left: 3 3 3 9)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n6 * 4 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n6 * 4 = 24 (left: 1 24)\n24 / 1 = 24 (left: 1)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 - 1 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 - 1 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5 6)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 - 1 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 - 1 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 = 2 (left: 2)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 * 2 = 8 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    100,
                    50,
                    50,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n6 * 4 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 - 1 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\n"
                ]
            }
        ],
        "idx": 831,
        "ys": [
            "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
            "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\n",
            "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n3 + 3 = 6 (left: 3 6 3 3)\n",
            "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n2 * 3 = 6 (left: 1 4 6)\n6 * 4 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
            "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n4 - 1 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 46166,
            "prompt_tokens": 156438,
            "cost": 0.326989
        },
        "time_spent": 38.27197003364563
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n",
                    "4 * 3 = 12 (left: 6 10 12)\n",
                    "6 + 4 = 10 (left: 3 10 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n",
                    "4 * 3 = 12 (left: 6 10 12)\n",
                    "6 + 4 = 10 (left: 3 10 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 6 10",
                "ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n",
                    "4 * 3 = 12 (left: 6 10 12)\n",
                    "6 + 4 = 10 (left: 3 10 10)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 * 7 = 42 (left: 42 10)\n",
                    "4 * 3 = 12 (left: 6 10 12)\n6 + 10 = 16 (left: 16 12)\n",
                    "4 * 3 = 12 (left: 6 10 12)\n6 * 10 = 60 (left: 60 12)\n",
                    "4 * 3 = 12 (left: 6 10 12)\n10 - 6 = 4 (left: 4 12)\n",
                    "4 * 3 = 12 (left: 6 10 12)\n10 / 6 = 1 (left: 1 12)\n",
                    "6 + 4 = 10 (left: 3 10 10)\n3 + 10 = 13 (left: 10 13)\n",
                    "6 + 4 = 10 (left: 3 10 10)\n10 / 3 = 3.33 (left: 3 10 3.33)\n",
                    "6 + 4 = 10 (left: 3 10 10)\n10 + 3 = 13 (left: 3 10 13)\n",
                    "6 + 4 = 10 (left: 3 10 10)\n3 * 10 = 30 (left: 10 30)\n",
                    "6 + 4 = 10 (left: 3 10 10)\n10 - 3 = 7 (left: 7 10)\n",
                    "6 + 4 = 10 (left: 3 10 10)\n10 / 3 = 3.33 (left: 3 10 3.33)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 * 7 = 42 (left: 42 10)\n",
                    "4 * 3 = 12 (left: 6 10 12)\n6 + 10 = 16 (left: 16 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 6 10",
                "ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 * 7 = 42 (left: 42 10)\n",
                    "4 * 3 = 12 (left: 6 10 12)\n6 + 10 = 16 (left: 16 12)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n1 + 7 = 8 (left: 8 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n10 - 1 = 9 (left: 9 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 + 10 = 23 (left: 10 23)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 * 10 = 130 (left: 10 130)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 - 10 = 3 (left: 3 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 / 10 = 1.3 (left: 1.3 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\nInput: 5 5 5 5\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n5 / 5 = 1 (left: 1 5 5 5)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n5 * 5 = 25 (left: 5 5 25 5)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n5 - 5 = 0 (left: 0 5 5 5)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 * 7 = 42 (left: 42 10)\n42 + 10 = 52 (left: 52)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 * 7 = 42 (left: 42 10)\n42 - 10 = 32 (left: 32)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 * 7 = 42 (left: 42 10)\n42 * 10 = 420 (left: 420)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 * 7 = 42 (left: 42 10)\n42 / 10 = 4.2 (left: 4.2)\n",
                    "4 * 3 = 12 (left: 6 10 12)\n6 + 10 = 16 (left: 16 12)\n16 - 12 = 4 (left: 4)\n",
                    "4 * 3 = 12 (left: 6 10 12)\n6 + 10 = 16 (left: 16 12)\n16 / 12 = 1 (left: 1)\n",
                    "4 * 3 = 12 (left: 6 10 12)\n6 + 10 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n",
                    "4 * 3 = 12 (left: 6 10 12)\n6 + 10 = 16 (left: 16 12)\n16 * 12 = 192 (left: 192)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n1 + 7 = 8 (left: 8 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n10 - 1 = 9 (left: 9 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 + 10 = 23 (left: 10 23)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 * 10 = 130 (left: 10 130)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 6 10",
                "ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n1 + 7 = 8 (left: 8 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n10 - 1 = 9 (left: 9 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 + 10 = 23 (left: 10 23)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 * 10 = 130 (left: 10 130)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n1 + 7 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n1 + 7 = 8 (left: 8 10)\n10 - 8 = 2 (left: 2)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n7 + 10 = 17 (left: 10 17)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n7 * 10 = 70 (left: 10 70)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 / 7 = 1.43 (left: 1.43 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n10 - 1 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n10 - 1 = 9 (left: 9 10)\n9 * 10 = 90 (left: 90)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n10 - 1 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n10 - 1 = 9 (left: 9 10)\n9 - 10 = -1 (left: -1)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 + 10 = 23 (left: 10 23)\n10 + 23 = 33 (left: 33)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 + 10 = 23 (left: 10 23)\n10 - 23 = -13 (left: -13)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 + 10 = 23 (left: 10 23)\n10 * 23 = 230 (left: 230)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 + 10 = 23 (left: 10 23)\n10 / 23 = 0.43 (left: 0.43)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 * 10 = 130 (left: 10 130)\n10 + 130 = 140 (left: 140)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 * 10 = 130 (left: 10 130)\n10 * 130 = 1300 (left: 1300)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 * 10 = 130 (left: 10 130)\n10 / 130 = 0.07692307692307693 (left: 0.07692307692307693)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 * 10 = 130 (left: 10 130)\n130 - 10 = 120 (left: 120)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n1 + 7 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n7 + 10 = 17 (left: 10 17)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n10 - 1 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 + 10 = 23 (left: 10 23)\n10 + 23 = 33 (left: 33)\n"
                ]
            },
            {
                "step": 4,
                "x": "3 4 6 10",
                "ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n1 + 7 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n7 + 10 = 17 (left: 10 17)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n10 - 1 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 + 10 = 23 (left: 10 23)\n10 + 23 = 33 (left: 33)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n1 + 7 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 + 0 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n1 + 7 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 - 0 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n1 + 7 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 * 1 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n1 + 7 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 / 1 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n7 + 10 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n7 + 10 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n10 / 3 = 3 (left: 3 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\nInput: 1 2 3 4\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n2 * 4 = 8 (left: 1 3 8)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 + 1 = 4 (left: 4 3 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n4 - 1 = 3 (left: 2 3 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n4 - 2 = 2 (left: 1 2 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n4 / 2 = 2 (left: 1 3 2)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n4 + 3 = 7 (left: 1 2 7)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 4 = 12 (left: 1 2 12)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n10 - 1 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n2 * 19 = 38 (left: 19 38)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n10 - 1 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n19 * 2 = 38 (left: 19 38)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n10 - 1 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n19 + 19 = 38 (left: 19 38)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n10 - 1 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n19 - 19 = 0 (left: 0 19)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 + 10 = 23 (left: 10 23)\n10 + 23 = 33 (left: 33)\nInput: 3 3\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 + 10 = 23 (left: 10 23)\n10 + 23 = 33 (left: 33)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 + 10 = 23 (left: 10 23)\n10 + 23 = 33 (left: 33)\n3 + 3 = 6 (left: 6)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 + 10 = 23 (left: 10 23)\n10 + 23 = 33 (left: 33)\n3 * 3 = 9 (left: 9)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 + 10 = 23 (left: 10 23)\n10 + 23 = 33 (left: 33)\n3 / 3 = 1 (left: 1)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 13 10)\n13 + 10 = 23 (left: 10 23)\n10 + 23 = 33 (left: 33)\n3 - 3 = 0 (left: 0)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    100,
                    50,
                    100,
                    0,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n2 * 4 = 8 (left: 1 3 8)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n4 - 1 = 3 (left: 2 3 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 4 = 12 (left: 1 2 12)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n1 + 7 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 + 0 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n1 + 7 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 - 0 = 18 (left: 18)\n"
                ]
            }
        ],
        "idx": 832,
        "ys": [
            "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n2 * 4 = 8 (left: 1 3 8)\n",
            "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n4 - 1 = 3 (left: 2 3 4)\n",
            "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n7 * 1 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 4 = 12 (left: 1 2 12)\n",
            "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n1 + 7 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 + 0 = 18 (left: 18)\n",
            "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 7 10)\n1 + 7 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 - 0 = 18 (left: 18)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 47423,
            "prompt_tokens": 160833,
            "cost": 0.3360955
        },
        "time_spent": 31.554285764694214
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 6 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 * 4 = 12 (left: 6 12 12)\n",
                    "4 + 6 = 10 (left: 3 10 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n",
                    "12 / 4 = 3 (left: 3 6 12)\n",
                    "12 - 4 = 8 (left: 3 6 8)\n"
                ],
                "values": [
                    100,
                    50,
                    100,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "3 * 4 = 12 (left: 6 12 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n",
                    "12 / 4 = 3 (left: 3 6 12)\n",
                    "4 + 6 = 10 (left: 3 10 12)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 6 12",
                "ys": [
                    "3 * 4 = 12 (left: 6 12 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n",
                    "12 / 4 = 3 (left: 3 6 12)\n",
                    "4 + 6 = 10 (left: 3 10 12)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n"
                ],
                "new_ys": [
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 * 6 = 72 (left: 12 72)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n12 - 2 = 10 (left: 10 4)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n12 / 4 = 3 (left: 2 3 12)\n",
                    "12 / 4 = 3 (left: 3 6 12)\n3 * 6 = 18 (left: 12 18)\n",
                    "12 / 4 = 3 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n",
                    "12 / 4 = 3 (left: 3 6 12)\n12 + 3 = 15 (left: 6 15)\n",
                    "12 / 4 = 3 (left: 3 6 12)\n3 + 6 = 9 (left: 9 12)\n",
                    "12 / 4 = 3 (left: 3 6 12)\n12 - 3 = 9 (left: 6 9)\n",
                    "12 / 4 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "4 + 6 = 10 (left: 3 10 12)\n3 + 10 = 13 (left: 10 12 13)\n",
                    "4 + 6 = 10 (left: 3 10 12)\n3 * 10 = 30 (left: 12 30)\n",
                    "4 + 6 = 10 (left: 3 10 12)\n10 - 3 = 7 (left: 7 12)\n",
                    "4 + 6 = 10 (left: 3 10 12)\n12 - 3 = 9 (left: 9 12)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 6 7)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n4 * 3 = 12 (left: 6 12)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n4 + 3 = 7 (left: 7 6)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n4 - 3 = 1 (left: 1 6)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n6 + 3 = 9 (left: 4 9)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n6 * 3 = 18 (left: 4 18)\n"
                ],
                "values": [
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 6 12",
                "ys": [
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n"
                ],
                "new_ys": [
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 * 18 = 216 (left: 216)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 / 12 = 1.5 (left: 1.5)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 12 = 72 (left: 72)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n12 * 6 = 72 (left: 72)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n6 * 12 = 72 (left: 12 72)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 + 6 = 18 (left: 6 18)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n8 / 12 = 0.666... (left: 0.666... 8 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\nInput: 3 5 5 7\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\nPossible next steps:\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n3 + 5 = 8 (left: 8 5 7)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n3 * 5 = 15 (left: 15 5 7)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n5 + 5 = 10 (left: 3 10 7)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n5 * 5 = 25 (left: 3 25 7)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n7 - 3 = 4 (left: 4 5 7)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n7 - 5 = 2 (left: 3 2 7)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n5 / 5 = 1 (left: 3 1 7)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n7 - 5 = 2 (left: 3 5 2)\n"
                ],
                "values": [
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    100,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 + 6 = 18 (left: 6 18)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 6 12",
                "ys": [
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 + 6 = 18 (left: 6 18)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n"
                ],
                "new_ys": [
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (12 / 6) = 24\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 + 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 + 6 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3 18)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nInput: 2 3 5 8\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nPossible next steps:\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n2 + 3 = 5 (left: 5 5 8)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 + 5 = 8 (left: 2 8 8)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n5 * 3 = 15 (left: 2 8 15)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 * 8 = 24 (left: 2 5 24)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n8 - 2 = 6 (left: 3 6 8)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n5 - 3 = 2 (left: 2 2 8)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n8 / 2 = 4 (left: 2 4 8)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n8 - 5 = 3 (left: 2 3 8)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\nInput: 3 3 3 3\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\nPossible next steps:\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n3 - 3 = 0 (left: 0 3 3)\n"
                ],
                "values": [
                    1000,
                    100,
                    100,
                    50,
                    100,
                    50,
                    0,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    100,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (12 / 6) = 24\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 + 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 + 5 = 8 (left: 2 8 8)\n"
                ]
            },
            {
                "step": 4,
                "x": "3 4 6 12",
                "ys": [
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (12 / 6) = 24\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 + 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 + 5 = 8 (left: 2 8 8)\n"
                ],
                "new_ys": null,
                "values": null,
                "select_new_ys": null
            }
        ],
        "idx": 833,
        "ys": [
            "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (12 / 6) = 24\n",
            "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
            "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
            "6 / 3 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n12 + 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
            "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 + 5 = 8 (left: 2 8 8)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 48612,
            "prompt_tokens": 164853,
            "cost": 0.3445035
        },
        "time_spent": 27.770168781280518
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 7 7 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n"
                ],
                "values": [
                    100,
                    50,
                    100,
                    50,
                    100,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 7 7 10",
                "ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 * 7 = 49 (left: 10 49)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 - 7 = 0 (left: 0 10)\n",
                    "3 + 7 = 10 (left: 7 7 10)\nInput: 3 5 1 9\n",
                    "3 + 7 = 10 (left: 7 7 10)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 7 7 10)\n3 + 5 = 8 (left: 1 8 9)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 + 3 = 8 (left: 1 8 9)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n3 / 5 = 0.6 (left: 0.6 1 9)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n7 - 2 = 5 (left: 2 5 10)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n10 / 2 = 5 (left: 2 7 5)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n7 + 10 = 17 (left: 17 21)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n7 * 10 = 70 (left: 70 21)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 + 7 = 17 (left: 17 21)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 * 7 = 70 (left: 70 21)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 7 = 14 (left: 14 21)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 10 = 11 (left: 11 21)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n4 + 7 = 11 (left: 10 11)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n7 - 4 = 3 (left: 3 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n4 * 7 = 28 (left: 10 28)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n7 / 4 = 1.75 (left: 1.75 10)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n3 + 7 = 10 (left: 7 10)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n7 - 3 = 4 (left: 4 10)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n3 * 7 = 21 (left: 10 21)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n7 / 3 = 2 (left: 2 10)\n",
                    "7 + 3 = 10 (left: 3 7 10)\nInput: 1 5 6 9\n",
                    "7 + 3 = 10 (left: 3 7 10)\nPossible next steps:\n",
                    "7 + 3 = 10 (left: 3 7 10)\n1 + 5 = 6 (left: 6 6 9)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n5 / 1 = 5 (left: 5 6 9)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n9 - 6 = 3 (left: 3 6 9)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n1 * 5 = 5 (left: 5 6 9)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n6 + 9 = 15 (left: 5 15)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n9 / 3 = 3 (left: 3 6 15)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n9 - 6 = 3 (left: 3 6 9)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n9 / 3 = 3 (left: 3 6 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 * 7 = 49 (left: 10 49)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 7 7 10",
                "ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n9 / 3 = 3 (left: 3 6 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 * 7 = 49 (left: 10 49)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n14 * 10 = 140 (left: 140)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n1 + 9 = 10 (left: 10 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n15 - 1 = 14 (left: 9 14)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4 10)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 14 140)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 / 10 = 1.4 (left: 14 1.4)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n9 / 3 = 3 (left: 3 6 15)\n3 * 6 = 18 (left: 6 15 18)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n9 / 3 = 3 (left: 3 6 15)\n6 * 3 = 18 (left: 15 18 18)\n",
                    "7 + 3 = 10 (left: 3 7 10)\n9 / 3 = 3 (left: 3 6 15)\n15 - 3 = 12 (left: 6 12 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 * 7 = 49 (left: 10 49)\n10 * 4 = 40 (left: 40 49)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 * 7 = 49 (left: 10 49)\n49 + 10 = 59 (left: 10 59)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 * 7 = 49 (left: 10 49)\n49 - 10 = 39 (left: 10 39)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 * 7 = 49 (left: 10 49)\n49 / 10 = 4.9 (left: 4.9 49)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n1 + 9 = 10 (left: 10 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n15 - 1 = 14 (left: 9 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 7 7 10",
                "ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n1 + 9 = 10 (left: 10 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n15 - 1 = 14 (left: 9 14)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((3 + 7) + 7) + 10 = 24\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 + 9 = 24 (left: 9)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 / 9 = 1.67 (left: 1.67 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 - 15 = -6 (left: -6 9)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 / 15 = 0.6 (left: 0.6 15)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 24)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 * 10 = 140 (left: 140)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 - 10 = 4 (left: 4)\n",
                    "7 / 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 / 10 = 1.4 (left: 1.4)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n1 + 9 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n1 + 9 = 10 (left: 10 15)\n10 - 15 = -5 (left: -5)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n1 + 9 = 10 (left: 10 15)\n10 * 15 = 150 (left: 150)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n1 + 9 = 10 (left: 10 15)\n10 / 15 = 0.6667 (left: 0.6667)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n15 - 1 = 14 (left: 9 14)\n9 + 14 = 23 (left: 23)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n15 - 1 = 14 (left: 9 14)\n14 - 9 = 5 (left: 5 14)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n15 - 1 = 14 (left: 9 14)\n9 * 14 = 126 (left: 126)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n15 - 1 = 14 (left: 9 14)\n14 / 9 = 1.5556 (left: 1.5556 14)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n15 - 1 = 14 (left: 9 14)\n14 + 9 = 23 (left: 23)\n"
                ],
                "values": [
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "7 / 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 24)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 - 15 = -6 (left: -6 9)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n1 + 9 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n"
                ]
            },
            {
                "step": 4,
                "x": "3 7 7 10",
                "ys": [
                    "7 / 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 24)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 - 15 = -6 (left: -6 9)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n1 + 9 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n"
                ],
                "new_ys": [
                    "7 / 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (7 / 3) * (2 * 7 + 10) = 24\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 15)\nInput: 15\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 15)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 * 1 = 15 (left: 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 / 1 = 15 (left: 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 - 1 = 14 (left: 14)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 + 1 = 16 (left: 16)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n6 + 15 = 21 (left: 15 21)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 15 = 90 (left: 15 90)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n15 / 6 = 2.5 (left: 2.5 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n15 - 6 = 9 (left: 6 9)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\nInput: 3 3 3 3\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 - 15 = -6 (left: -6 9)\n9 - (-6) = 15 (left: 9 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 - 15 = -6 (left: -6 9)\n9 + (-6) = 3 (left: 3 9)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 - 15 = -6 (left: -6 9)\n9 / (-6) = -1.5 (left: -1.5 9)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 - 15 = -6 (left: -6 9)\n9 * (-6) = -54 (left: -54 9)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n1 + 9 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n2 + 5 = 7 (left: 7)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    100,
                    100,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 * 1 = 15 (left: 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 / 1 = 15 (left: 15)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 - 1 = 14 (left: 14)\n"
                ]
            }
        ],
        "idx": 834,
        "ys": [
            "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n3 + 3 = 6 (left: 3 3 6 3)\n",
            "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n3 * 3 = 9 (left: 3 9 3)\n",
            "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 * 1 = 15 (left: 15)\n",
            "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 / 1 = 15 (left: 15)\n",
            "3 + 7 = 10 (left: 7 7 10)\n5 * 3 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 - 1 = 14 (left: 14)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 50168,
            "prompt_tokens": 170361,
            "cost": 0.35587749999999996
        },
        "time_spent": 29.455448627471924
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 9 11 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 9 11 12)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n",
                    "11 + 3 = 14 (left: 3 12 14)\n",
                    "3 * 9 = 27 (left: 11 12 27)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n",
                    "12 - 9 = 3 (left: 3 3 11)\n",
                    "12 / 3 = 4 (left: 3 9 4)\n",
                    "12 - 3 = 9 (left: 9 9 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 9 = 12 (left: 9 11 12)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n",
                    "11 + 3 = 14 (left: 3 12 14)\n",
                    "3 * 9 = 27 (left: 11 12 27)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 9 11 12",
                "ys": [
                    "3 + 9 = 12 (left: 9 11 12)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n",
                    "11 + 3 = 14 (left: 3 12 14)\n",
                    "3 * 9 = 27 (left: 11 12 27)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n"
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 + 9 = 20 (left: 12 20)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n9 * 11 = 99 (left: 12 99)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 * 9 = 99 (left: 12 99)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n9 / 11 = 0.8181818181818182 (left: 12 0.8181818181818182)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 / 9 = 1.2222222222222223 (left: 12 1.2222222222222223)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n3 + 11 = 14 (left: 11 12 14)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n3 * 11 = 33 (left: 12 33)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n11 - 3 = 8 (left: 8 12)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n11 / 3 = 3 (left: 3 12)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n12 - 3 = 9 (left: 9 12)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "11 + 3 = 14 (left: 3 12 14)\n3 + 12 = 15 (left: 14 15)\n",
                    "11 + 3 = 14 (left: 3 12 14)\n12 / 3 = 4 (left: 4 14)\n",
                    "11 + 3 = 14 (left: 3 12 14)\n14 - 3 = 11 (left: 11 14)\n",
                    "3 * 9 = 27 (left: 11 12 27)\n11 + 12 = 23 (left: 23 27)\n",
                    "3 * 9 = 27 (left: 11 12 27)\n12 - 11 = 1 (left: 1 12 27)\n",
                    "3 * 9 = 27 (left: 11 12 27)\n27 - 11 = 16 (left: 11 16 27)\n",
                    "3 * 9 = 27 (left: 11 12 27)\n27 - 12 = 15 (left: 11 15 27)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n6 + 9 = 15 (left: 9 11 15)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n6 * 9 = 54 (left: 11 54)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n9 - 6 = 3 (left: 3 9 11)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n9 / 6 = 1.5 (left: 1.5 11)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n11 - 6 = 5 (left: 5 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    100,
                    0,
                    50
                ],
                "select_new_ys": [
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n9 - 6 = 3 (left: 3 9 11)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 + 9 = 20 (left: 12 20)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 9 11 12",
                "ys": [
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n9 - 6 = 3 (left: 3 9 11)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 + 9 = 20 (left: 12 20)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n"
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n9 - 6 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n9 - 6 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n9 - 6 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n9 - 6 = 3 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 - 20 = -8 (left: -8 20)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n20 / 12 = 1.67 (left: 1.67 20)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 + 9 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 + 9 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 12)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 + 9 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 + 9 = 20 (left: 12 20)\n20 / 12 = 1.67 (left: 1.67 12)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n-2 + 12 = 10 (left: 10)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n-2 * 12 = -24 (left: -24)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n-2 / 12 = -0.17 (left: -0.17)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n9 - 6 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 9 11 12",
                "ys": [
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n9 - 6 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n"
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 + 9) * (11 - 12) = 24\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n10 * 12 = 120 (left: 120)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n10 / 12 = 0.83 (left: 0.83)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n10 - 12 = -2 (left: -2)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n0 + 12 = 12 (left: 12)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n12 - 0 = 12 (left: 12)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n12 / 0 is undefined\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n12 * 0 = 0 (left: 0)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\nInput: 3 3 3 3\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\nPossible next steps:\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 6 3 3 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 / 3 = 1 (left: 3 1 3 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 / 3 = 1 (left: 3 3 1 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 / 3 = 1 (left: 3 3 3 1)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n9 - 6 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n9 - 6 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 - 12 = -1 (left: -1)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n9 - 6 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 * 12 = 132 (left: 132)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n9 - 6 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 / 12 = 0.92 (left: 0.92)\n"
                ],
                "values": [
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    100,
                    100,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 6 3 3 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 4,
                "x": "3 9 11 12",
                "ys": [
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 6 3 3 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 6 9)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 6 6 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 6 3 3 3)\n6 + 3 = 9 (left: 3 3 9)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 6 3 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 6 3 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n3 * 3 = 9 (left: 9 3 6)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n3 / 3 = 1 (left: 1 3 6)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 3 6)\n3 + 3 = 6 (left: 3 6 6)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 3 6)\n3 * 3 = 9 (left: 6 3 9)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 3 6)\n3 / 3 = 1 (left: 1 3 6)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 3 6)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\nPossible next steps:\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n12 + 0 = 12 (left: 0 12)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n12 - 0 = 12 (left: 0 12)\n"
                ],
                "values": [
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 6 6 3)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 6 3 3 3)\n6 + 3 = 9 (left: 3 3 9)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 3 6)\n3 + 3 = 6 (left: 3 6 6)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 6 9)\n",
                    "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 6 3 3 3)\n6 / 3 = 2 (left: 2 3 3)\n"
                ]
            }
        ],
        "idx": 835,
        "ys": [
            "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 6 6 3)\n",
            "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 6 3 3 3)\n6 + 3 = 9 (left: 3 3 9)\n",
            "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 3 6)\n3 + 3 = 6 (left: 3 6 6)\n",
            "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 6 9)\n",
            "3 + 9 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 12 = 0 (left: 0 12)\n3 + 3 = 6 (left: 6 3 3 3)\n6 / 3 = 2 (left: 2 3 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 51676,
            "prompt_tokens": 175556,
            "cost": 0.366686
        },
        "time_spent": 36.62228775024414
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 4 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 4 6 7)\n",
                    "4 / 2 = 2 (left: 2 4 7)\n"
                ],
                "values": [
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 4 6 7)\n",
                    "4 / 2 = 2 (left: 2 4 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 4 7",
                "ys": [
                    "2 + 4 = 6 (left: 4 6 7)\n",
                    "4 / 2 = 2 (left: 2 4 7)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 6 = 10 (left: 7 10)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n7 + 4 = 11 (left: 6 11)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 * 6 = 24 (left: 7 24)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 * 4 = 24 (left: 7 24)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 - 4 = 2 (left: 2 7)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n7 - 4 = 3 (left: 3 6)\n",
                    "4 / 2 = 2 (left: 2 4 7)\n2 + 4 = 6 (left: 6 7)\n",
                    "4 / 2 = 2 (left: 2 4 7)\n4 * 2 = 8 (left: 8 7)\n",
                    "4 / 2 = 2 (left: 2 4 7)\n7 - 2 = 5 (left: 4 5)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 6 = 10 (left: 7 10)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n7 + 4 = 11 (left: 6 11)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 * 6 = 24 (left: 7 24)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 4 7",
                "ys": [
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 6 = 10 (left: 7 10)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n7 + 4 = 11 (left: 6 11)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 * 6 = 24 (left: 7 24)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 6 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 6 = 10 (left: 7 10)\n7 * 10 = 70 (left: 70)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 6 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 6 = 10 (left: 7 10)\n10 / 7 = 1.43 (left: 1.43)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n7 * 10 = 70 (left: 70)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n10 / 7 = 1.43 (left: 1.43 10)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n7 + 4 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n7 + 4 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 * 6 = 24 (left: 7 24)\n7 * 24 = 168 (left: 168)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 * 6 = 24 (left: 7 24)\n7 + 24 = 31 (left: 31)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 * 6 = 24 (left: 7 24)\n7 - 24 = -17 (left: -17)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 * 6 = 24 (left: 7 24)\n7 / 24 = 0.2916666666666667 (left: 0.2916666666666667)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 6 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 4 7",
                "ys": [
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 6 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 6 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n17 is a single number, please input four numbers to continue the game.\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n17 is the final result.\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n10 - 3 = 7 (left: 7)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n10 / 3 = 3 (left: 3)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n17 is the goal!\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 11 16)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 / 5 = 2.2 (left: 2.2 11)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 - 11 = -6 (left: -6 11)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 11 16)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 - 11 = -6 (left: -6 11)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 4 4 7",
                "ys": [
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 11 16)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 - 11 = -6 (left: -6 11)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n13 is the only number, no possible next steps.\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\nNo possible next steps.\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 11 16)\n11 * 16 = 176 (left: 176)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 11 16)\n16 - 11 = 5 (left: 5)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 11 16)\n16 / 11 = 1 (left: 1)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 - 11 = -6 (left: -6 11)\n-6 + 11 = 5 (left: 5)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 - 11 = -6 (left: -6 11)\n-6 - 11 = -17 (left: -17)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 - 11 = -6 (left: -6 11)\n-6 * 11 = -66 (left: -66)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 - 11 = -6 (left: -6 11)\n-6 / 11 = 0.5454545454545454 (left: 0.5454545454545454)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n13 is the only number, no possible next steps.\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\nNo possible next steps.\n"
                ]
            }
        ],
        "idx": 836,
        "ys": [
            "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n",
            "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n",
            "2 + 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
            "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n13 is the only number, no possible next steps.\n",
            "2 + 4 = 6 (left: 4 6 7)\n6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\nNo possible next steps.\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 52425,
            "prompt_tokens": 179712,
            "cost": 0.374418
        },
        "time_spent": 20.193722009658813
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n",
                    "4 + 5 = 9 (left: 3 9 9)\n",
                    "5 * 4 = 20 (left: 3 20 9)\n",
                    "5 + 4 = 9 (left: 3 9 9)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n",
                    "5 / 4 = 1 (left: 1 1 9)\n",
                    "4 * 3 = 12 (left: 5 12 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n",
                    "4 + 5 = 9 (left: 3 9 9)\n",
                    "5 * 4 = 20 (left: 3 20 9)\n",
                    "5 + 4 = 9 (left: 3 9 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 5 9",
                "ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n",
                    "4 + 5 = 9 (left: 3 9 9)\n",
                    "5 * 4 = 20 (left: 3 20 9)\n",
                    "5 + 4 = 9 (left: 3 9 9)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 / 5 = 1 (left: 1 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 * 5 = 45 (left: 7 45)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n5 + 12 = 17 (left: 9 17)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n5 * 12 = 60 (left: 9 60)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n12 - 5 = 7 (left: 7 9)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n12 / 5 = 2.4 (left: 2.4 9)\n",
                    "3 * 4 = 12 (left: 5 12 9)\nInput: 1 3 4 6\n",
                    "3 * 4 = 12 (left: 5 12 9)\nPossible next steps:\n",
                    "3 * 4 = 12 (left: 5 12 9)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n1 * 3 = 3 (left: 3 4 6)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n3 + 4 = 7 (left: 1 7 6)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 1 12 6)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n4 + 6 = 10 (left: 1 3 10)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n4 * 6 = 24 (left: 1 3 24)\n",
                    "4 + 5 = 9 (left: 3 9 9)\n3 + 9 = 12 (left: 9 12)\n",
                    "4 + 5 = 9 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "4 + 5 = 9 (left: 3 9 9)\n9 * 3 = 27 (left: 9 27)\n",
                    "4 + 5 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "5 * 4 = 20 (left: 3 20 9)\n3 + 20 = 23 (left: 9 23)\n",
                    "5 * 4 = 20 (left: 3 20 9)\n20 / 3 = 6 (left: 6 9)\n",
                    "5 * 4 = 20 (left: 3 20 9)\n20 - 3 = 17 (left: 17 9)\n",
                    "5 * 4 = 20 (left: 3 20 9)\n3 * 20 = 60 (left: 9 60)\n",
                    "5 * 4 = 20 (left: 3 20 9)\n20 - 9 = 11 (left: 11 9)\n",
                    "5 * 4 = 20 (left: 3 20 9)\n20 / 9 = 2 (left: 2 9)\n",
                    "5 * 4 = 20 (left: 3 20 9)\n20 + 3 = 23 (left: 3 23)\n",
                    "5 + 4 = 9 (left: 3 9 9)\n3 + 9 = 12 (left: 9 12)\n",
                    "5 + 4 = 9 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "5 + 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 / 5 = 1 (left: 1 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 5 9",
                "ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 / 5 = 1 (left: 1 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 * 12 = 108 (left: 108)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 / 9 = 1 (left: 1 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n9 + 35 = 44 (left: 44)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 - 9 = 26 (left: 26)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n9 * 35 = 315 (left: 315)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 / 9 = 3 (left: 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\nInput: 4 5 6 7\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n5 + 6 = 11 (left: 4 7 11)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n6 + 7 = 13 (left: 4 5 13)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n4 * 5 = 20 (left: 6 7 20)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n5 * 6 = 30 (left: 4 7 30)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n6 * 7 = 42 (left: 4 5 42)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n4 / 5 = 0.8 (left: 0.8 5 6 7)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n5 / 6 = 0.8333333333333334 (left: 4 0.8333333333333334 6 7)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n6 / 7 = 0.8571428571428571 (left: 4 5 0.8571428571428571 7)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n7 / 4 = 1.75 (left: 5 6 1.75 7)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n2 + 9 = 11 (left: 9 11)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n9 / 2 = 4.5 (left: 4.5 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 / 5 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 / 5 = 1 (left: 1 9)\n9 / 1 = 9 (left: 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 / 5 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 / 5 = 1 (left: 1 9)\n9 + 1 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n7 + 14 = 21 (left: 21)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n14 - 7 = 7 (left: 7)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n7 * 14 = 98 (left: 98)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n14 / 7 = 2 (left: 2)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 / 9 = 1 (left: 1 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 - 9 = 26 (left: 26)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n4 + 5 = 9 (left: 6 7 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 5 9",
                "ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 / 9 = 1 (left: 1 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 - 9 = 26 (left: 26)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n4 + 5 = 9 (left: 6 7 9)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 3 3 3 3\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n3 + 12 = 15 (left: 12 15)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 / 9 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 / 9 = 1 (left: 1 12)\n12 / 1 = 12 (left: 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 / 9 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 / 9 = 1 (left: 1 12)\n12 + 1 = 13 (left: 13)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 - 9 = 26 (left: 26)\nSorry, there are no possible next steps.\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n4 + 5 = 9 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n4 + 5 = 9 (left: 6 7 9)\n7 + 9 = 16 (left: 6 16)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n4 + 5 = 9 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n4 + 5 = 9 (left: 6 7 9)\n6 - 7 = -1 (left: -1 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n4 + 5 = 9 (left: 6 7 9)\n7 - 9 = -2 (left: 6 -2)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n4 + 5 = 9 (left: 6 7 9)\n6 / 7 = 0.857 (left: 0.857 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n4 + 5 = 9 (left: 6 7 9)\n7 / 9 = 0.778 (left: 6 0.778)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n3 + 12 = 15 (left: 12 15)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n"
                ]
            },
            {
                "step": 4,
                "x": "3 4 5 9",
                "ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n3 + 12 = 15 (left: 12 15)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n3 * 3 = 9 (left: 6 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n3 / 3 = 1 (left: 1 6)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\nInput: 4 5 6 7\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n4 - 5 = -1 (left: -1 6 7)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n4 * 5 = 20 (left: 6 7 20)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n4 / 5 = 0.8 (left: 0.8 6 7)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n5 + 6 = 11 (left: 4 7 11)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n5 - 6 = -1 (left: 4 -1 7)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n5 * 6 = 30 (left: 4 7 30)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n5 / 6 = 0.8333333333333334 (left: 0.8333333333333334 4 7)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n6 + 7 = 13 (left: 4 6 13)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n6 - 7 = -1 (left: 4 6 -1)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n6 * 7 = 42 (left: 4 42)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n6 / 7 = 0.8571428571428571 (left: 0.8571428571428571 4 7)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\nInput: 1 2 3 4\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n1 / 2 = 0.5 (left: 0.5 3 4)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n2 + 3 = 5 (left: 4 5)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n2 * 3 = 6 (left: 4 6)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n2 / 3 = 0.6666666666666666 (left: 0.6666666666666666 4 6)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n3 + 4 = 7 (left: 4 7)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n3 * 4 = 12 (left: 4 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n3 / 4 = 0.75 (left: 0.75 4 4)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n4 + 1 = 5 (left: 5 3 4)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n4 * 1 = 4 (left: 4 3 4)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n4 / 1 = 4 (left: 4 4)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 / 3 = 1 (left: 1 3 3)\n1 + 3 = 4 (left: 3 4)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 / 3 = 1 (left: 1 3 3)\n3 * 1 = 3 (left: 3 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 / 3 = 1 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n3 + 12 = 15 (left: 12 15)\n12 + 15 = 27 (left: 15 27)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n3 + 12 = 15 (left: 12 15)\n12 - 15 = -3 (left: -3 15)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n3 + 12 = 15 (left: 12 15)\n12 * 15 = 180 (left: 15 180)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n3 + 12 = 15 (left: 12 15)\n15 / 12 = 1.25 (left: 1.25 15)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n4 + 12 = 16 (left: 12 16)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    100,
                    0,
                    50,
                    100,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n2 * 3 = 6 (left: 4 6)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 9)\n"
                ]
            }
        ],
        "idx": 837,
        "ys": [
            "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n1 * 2 = 2 (left: 2 3 4)\n",
            "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n2 * 3 = 6 (left: 4 6)\n",
            "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
            "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
            "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 54626,
            "prompt_tokens": 184581,
            "cost": 0.3861235
        },
        "time_spent": 42.68936777114868
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n",
                    "4 / 5 = 0 (left: 0 5 7)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n",
                    "7 + 5 = 12 (left: 4 12 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n",
                    "4 / 5 = 0 (left: 0 5 7)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n",
                    "7 + 5 = 12 (left: 4 12 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 7 12",
                "ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n",
                    "4 / 5 = 0 (left: 0 5 7)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n",
                    "7 + 5 = 12 (left: 4 12 12)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 16 12)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 * 9 = 63 (left: 63 12)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 + 12 = 21 (left: 7 21)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 * 12 = 108 (left: 7 108)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 7 = 5 (left: 5 12)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 / 9 = 1 (left: 7 1)\n",
                    "4 + 5 = 9 (left: 7 9 12)\nInput: 3 5 5 8\n",
                    "4 + 5 = 9 (left: 7 9 12)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 + 5 = 8 (left: 8 5 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 * 8 = 40 (left: 3 5 40)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n8 - 3 = 5 (left: 5 5 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n8 / 5 = 1 (left: 3 1 8)\n",
                    "4 / 5 = 0 (left: 0 5 7)\n0 + 5 = 5 (left: 5 7)\n",
                    "4 / 5 = 0 (left: 0 5 7)\n5 * 7 = 35 (left: 0 35)\n",
                    "4 / 5 = 0 (left: 0 5 7)\nInput: 1 3 5 7\n",
                    "4 / 5 = 0 (left: 0 5 7)\nPossible next steps:\n",
                    "4 / 5 = 0 (left: 0 5 7)\n1 * 3 = 3 (left: 3 5 7)\n",
                    "4 / 5 = 0 (left: 0 5 7)\n5 + 7 = 12 (left: 1 3 12)\n",
                    "4 / 5 = 0 (left: 0 5 7)\n7 - 5 = 2 (left: 1 2 7)\n",
                    "4 / 5 = 0 (left: 0 5 7)\n5 - 3 = 2 (left: 1 2 7)\n",
                    "4 / 5 = 0 (left: 0 5 7)\n7 - 3 = 4 (left: 1 4 7)\n",
                    "4 / 5 = 0 (left: 0 5 7)\n7 / 1 = 7 (left: 3 5 7)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n5 + 8 = 13 (left: 7 13)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n7 + 8 = 15 (left: 5 15)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 7)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n8 - 7 = 1 (left: 1 8)\n",
                    "7 + 5 = 12 (left: 4 12 12)\n4 + 12 = 16 (left: 12 16)\n",
                    "7 + 5 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "7 + 5 = 12 (left: 4 12 12)\n12 - 4 = 8 (left: 8 12)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    100,
                    100,
                    100,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 * 8 = 40 (left: 3 5 40)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n8 / 5 = 1 (left: 3 1 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 16 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 7 12",
                "ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 * 8 = 40 (left: 3 5 40)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n8 / 5 = 1 (left: 3 1 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 16 12)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 + 5 = 20 (left: 8 20)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 - 5 = 10 (left: 10 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 / 5 = 3 (left: 3 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 * 5 = 75 (left: 8 75)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\nInput: 3 3 4 6\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 + 3 = 6 (left: 4 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 * 3 = 9 (left: 4 6 9)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n4 + 6 = 10 (left: 3 10)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n4 / 3 = 1.33 (left: 1.33 3 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n6 + 3 = 9 (left: 3 4 9)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n3 + 13 = 16 (left: 8 16)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n3 * 13 = 39 (left: 8 39)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n13 - 3 = 10 (left: 10 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n13 / 3 = 4 (left: 4 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n13 + 3 = 16 (left: 16 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n13 - 8 = 5 (left: 3 5)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n13 / 8 = 1.625 (left: 1.625 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 * 8 = 40 (left: 3 5 40)\n3 + 5 = 8 (left: 8 40)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 * 8 = 40 (left: 3 5 40)\n5 * 3 = 15 (left: 15 40)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 * 8 = 40 (left: 3 5 40)\n40 - 3 = 37 (left: 5 37)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 * 8 = 40 (left: 3 5 40)\n40 / 5 = 8 (left: 3 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 * 8 = 40 (left: 3 5 40)\nInput: 1 2 3 4\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 * 8 = 40 (left: 3 5 40)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 * 8 = 40 (left: 3 5 40)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 * 8 = 40 (left: 3 5 40)\n2 * 3 = 6 (left: 1 4 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 * 8 = 40 (left: 3 5 40)\n4 - 1 = 3 (left: 2 3 3)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 * 8 = 40 (left: 3 5 40)\n4 / 2 = 2 (left: 1 3 2)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n8 / 5 = 1 (left: 3 1 8)\n3 + 1 = 4 (left: 4 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n8 / 5 = 1 (left: 3 1 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n8 / 5 = 1 (left: 3 1 8)\n3 - 1 = 2 (left: 2 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n8 / 5 = 1 (left: 3 1 8)\n3 / 1 = 3 (left: 3 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n8 / 5 = 1 (left: 3 1 8)\n8 + 1 = 9 (left: 3 9)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n8 / 5 = 1 (left: 3 1 8)\n8 * 1 = 8 (left: 8 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n8 / 5 = 1 (left: 3 1 8)\n8 - 1 = 7 (left: 7 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n8 / 5 = 1 (left: 3 1 8)\n8 / 1 = 8 (left: 8 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 16 12)\n16 * 12 = 192 (left: 192)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 16 12)\n16 - 12 = 4 (left: 4)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 16 12)\n16 / 12 = 1.33 (left: 1.33)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    100,
                    100,
                    50,
                    50,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    50,
                    100,
                    50,
                    0,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 / 5 = 3 (left: 3 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 + 3 = 6 (left: 4 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n3 + 13 = 16 (left: 8 16)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n13 + 3 = 16 (left: 16 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 7 12",
                "ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 / 5 = 3 (left: 3 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 + 3 = 6 (left: 4 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n3 + 13 = 16 (left: 8 16)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n13 + 3 = 16 (left: 16 8)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 / 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 / 5 = 3 (left: 3 8)\n8 / 3 = 2 (left: 2 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 + 3 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 + 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n6 - 4 = 2 (left: 2 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n3 + 13 = 16 (left: 8 16)\n8 + 16 = 24 (left:)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n3 + 13 = 16 (left: 8 16)\n16 - 8 = 8 (left:)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n3 + 13 = 16 (left: 8 16)\n8 * 16 = 128 (left:)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n3 + 13 = 16 (left: 8 16)\n16 / 8 = 2 (left:)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n13 + 3 = 16 (left: 16 8)\n16 + 8 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n13 + 3 = 16 (left: 16 8)\n16 - 8 = 8 (left: 8 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n13 + 3 = 16 (left: 16 8)\n16 * 8 = 128 (left: 128)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n13 + 3 = 16 (left: 16 8)\n16 / 8 = 2 (left: 2 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n13 + 3 = 16 (left: 16 8)\n16 + 8 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 / 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 / 5 = 3 (left: 3 8)\n8 / 3 = 2 (left: 2 8)\n"
                ]
            },
            {
                "step": 4,
                "x": "4 5 7 12",
                "ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n13 + 3 = 16 (left: 16 8)\n16 + 8 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 / 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 / 5 = 3 (left: 3 8)\n8 / 3 = 2 (left: 2 8)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 + 5) * (7 - 12) = 24\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\nInput: 1 1 6 8\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n1 + 1 = 2 (left: 2 6 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n1 * 6 = 6 (left: 6 1 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n1 + 6 = 7 (left: 7 1 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n1 * 8 = 8 (left: 8 1 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n1 / 1 = 1 (left: 1 6 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n6 * 8 = 48 (left: 1 48)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n6 + 8 = 14 (left: 1 14 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n8 + 1 = 9 (left: 1 6 9)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n5 + 8 = 13 (left: 3 13 8)\n13 + 3 = 16 (left: 16 8)\n16 + 8 = 24 (left: 24)\nAnswer: ((4 + 5) + 7) + 12 = 24\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 / 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 / 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n11 - 8 = 3 (left: 3 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 / 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 - 11 = -3 (left: -3 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 / 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 * 11 = 88 (left: 88)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 / 5 = 3 (left: 3 8)\n8 / 3 = 2 (left: 2 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 / 5 = 3 (left: 3 8)\n8 / 3 = 2 (left: 2 8)\n8 / 2 = 4 (left: 2 4)\n"
                ],
                "values": [
                    0,
                    50,
                    50,
                    0,
                    100,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    100,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n1 + 1 = 2 (left: 2 6 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 / 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n11 - 8 = 3 (left: 3 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n"
                ]
            }
        ],
        "idx": 838,
        "ys": [
            "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
            "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n1 + 1 = 2 (left: 2 6 8)\n",
            "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n15 / 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n11 - 8 = 3 (left: 3 8)\n",
            "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
            "4 + 5 = 9 (left: 7 9 12)\n3 * 5 = 15 (left: 15 5 8)\n3 / 3 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 56350,
            "prompt_tokens": 189885,
            "cost": 0.39752750000000003
        },
        "time_spent": 34.71570873260498
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 7 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 7 = 9 (left: 9 9 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n",
                    "13 - 9 = 4 (left: 2 7 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n",
                    "9 - 2 = 7 (left: 7 7 13)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n",
                    "13 - 2 = 11 (left: 2 7 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n",
                    "2 + 7 = 9 (left: 9 9 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n",
                    "13 - 9 = 4 (left: 2 7 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 7 9 13",
                "ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n",
                    "2 + 7 = 9 (left: 9 9 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n",
                    "13 - 9 = 4 (left: 2 7 4)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 9 = 54 (left: 2 54)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 + 9 = 15 (left: 2 15)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 - 6 = 3 (left: 2 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 - 2 = 4 (left: 4 9)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 / 2 = 4.5 (left: 4.5 6)\n",
                    "13 - 7 = 6 (left: 2 6 9)\nInput: 3 3 3 3\n",
                    "13 - 7 = 6 (left: 2 6 9)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n2 ^ 2 = 4 (left: 4 13)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n2 / 2 = 1 (left: 1 13)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n13 + 2 = 15 (left: 2 15)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n13 - 2 = 11 (left: 2 11)\n",
                    "2 + 7 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 18 13)\n",
                    "2 + 7 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n",
                    "2 + 7 = 9 (left: 9 9 13)\n9 * 9 = 81 (left: 81 13)\n",
                    "2 + 7 = 9 (left: 9 9 13)\n9 / 9 = 1 (left: 1 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 * 7 = 35 (left: 13 35)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n7 + 5 = 12 (left: 12 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n7 / 5 = 1 (left: 1 7 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n13 - 5 = 8 (left: 7 8 13)\n",
                    "13 - 9 = 4 (left: 2 7 4)\n4 + 2 = 6 (left: 6 7)\n",
                    "13 - 9 = 4 (left: 2 7 4)\n2 * 4 = 8 (left: 8 7)\n",
                    "13 - 9 = 4 (left: 2 7 4)\n7 - 4 = 3 (left: 2 3)\n",
                    "13 - 9 = 4 (left: 2 7 4)\n7 / 2 = 3 (left: 3 4)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 9 = 54 (left: 2 54)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 + 9 = 15 (left: 2 15)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 - 2 = 4 (left: 4 9)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 7 9 13",
                "ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 9 = 54 (left: 2 54)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 + 9 = 15 (left: 2 15)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 - 2 = 4 (left: 4 9)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n9 / 3 = 3 (left: 3 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 9 = 54 (left: 2 54)\n2 + 54 = 56 (left: 56)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 9 = 54 (left: 2 54)\n54 / 2 = 27 (left: 27)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 9 = 54 (left: 2 54)\nInput: 5 5 5 5\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 9 = 54 (left: 2 54)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 9 = 54 (left: 2 54)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 9 = 54 (left: 2 54)\n5 / 5 = 1 (left: 5 5 1 5)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 9 = 54 (left: 2 54)\n5 * 5 = 25 (left: 5 5 5 25)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 9 = 54 (left: 2 54)\n5 - 5 = 0 (left: 0 5 5 5)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 + 9 = 15 (left: 2 15)\n2 * 15 = 30 (left: 30)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 + 9 = 15 (left: 2 15)\n15 / 2 = 7.5 (left: 7.5)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 - 2 = 4 (left: 4 9)\n4 + 9 = 13 (left: 13)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 - 2 = 4 (left: 4 9)\n9 - 4 = 5 (left: 5)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 - 2 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 - 2 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 * 6 = 18 (left: 3 18 3)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    100,
                    50,
                    100
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 * 6 = 18 (left: 3 18 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 7 9 13",
                "ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 * 6 = 18 (left: 3 18 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 3 = 9 (left: 9 27)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n27 / 3 = 9 (left: 3 9)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\nInput: 1 2 3 4\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n2 + 3 = 5 (left: 1 5 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 + 4 = 7 (left: 1 2 7)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n2 * 3 = 6 (left: 1 6 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 4 = 12 (left: 1 2 12)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n4 - 1 = 3 (left: 3 2 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 / 1 = 3 (left: 3 3 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n9 / 3 = 3 (left: 3 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 3 6)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\nInput: 5 5 5 5\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n5 + 5 = 10 (left: 5 10 5)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 * 6 = 18 (left: 3 18 3)\n3 * 3 = 9 (left: 9 18)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 * 6 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 * 6 = 18 (left: 3 18 3)\n18 / 3 = 6 (left: 6 18)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n12 - 3 = 9 (left: 9 12)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n6 + 3 = 9 (left: 3 9)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n6 - 3 = 3 (left: 3 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n6 * 3 = 18 (left: 18)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n6 / 3 = 2 (left: 2 3)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    100,
                    100,
                    100,
                    50,
                    50,
                    0,
                    100,
                    50,
                    100,
                    0,
                    0,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n2 * 3 = 6 (left: 1 6 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 4 = 12 (left: 1 2 12)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n4 - 1 = 3 (left: 3 2 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 7 9 13",
                "ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n2 * 3 = 6 (left: 1 6 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 4 = 12 (left: 1 2 12)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n4 - 1 = 3 (left: 3 2 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n1 * 2 = 2 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n1 * 2 = 2 (left: 2 3 4)\n4 / 2 = 2 (left: 2 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n1 * 2 = 2 (left: 2 3 4)\n4 - 3 = 1 (left: 1 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n2 * 3 = 6 (left: 1 6 4)\n1 + 6 = 7 (left: 4 7)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n2 * 3 = 6 (left: 1 6 4)\n6 - 1 = 5 (left: 5 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 4 6)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 4 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 4 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 4 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 4 = 12 (left: 1 2 12)\nInput: 3 6 1 4\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 4 = 12 (left: 1 2 12)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 4 = 12 (left: 1 2 12)\n3 + 6 = 9 (left: 1 4 9)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 4 = 12 (left: 1 2 12)\n6 - 3 = 3 (left: 1 3 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 4 = 12 (left: 1 2 12)\n4 + 3 = 7 (left: 1 7)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 4 = 12 (left: 1 2 12)\n4 / 1 = 4 (left: 3 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 4 = 12 (left: 1 2 12)\n6 * 1 = 6 (left: 3 6)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 4 = 12 (left: 1 2 12)\n6 / 3 = 2 (left: 2 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 4 = 12 (left: 1 2 12)\n4 - 1 = 3 (left: 3 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 4 = 12 (left: 1 2 12)\n1 * 4 = 4 (left: 3 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n4 - 1 = 3 (left: 3 2 4)\n3 + 2 = 5 (left: 4 5)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n4 - 1 = 3 (left: 3 2 4)\n3 * 2 = 6 (left: 4 6)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n4 - 1 = 3 (left: 3 2 4)\n3 - 2 = 1 (left: 1 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n4 - 1 = 3 (left: 3 2 4)\n2 + 4 = 6 (left: 3 6)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n4 - 1 = 3 (left: 3 2 4)\n2 * 4 = 8 (left: 3 8)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n4 - 1 = 3 (left: 3 2 4)\n2 - 4 = -2 (left: -2 4)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 27 = 81 (left: 27 81)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    0,
                    0,
                    50,
                    50,
                    100,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    100,
                    0,
                    50,
                    100,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 4 6)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 4 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n4 - 1 = 3 (left: 3 2 4)\n3 * 2 = 6 (left: 4 6)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n4 - 1 = 3 (left: 3 2 4)\n2 * 4 = 8 (left: 3 8)\n"
                ]
            }
        ],
        "idx": 839,
        "ys": [
            "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
            "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 4 6)\n",
            "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 4 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n",
            "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n4 - 1 = 3 (left: 3 2 4)\n3 * 2 = 6 (left: 4 6)\n",
            "13 - 7 = 6 (left: 2 6 9)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n4 - 1 = 3 (left: 3 2 4)\n2 * 4 = 8 (left: 3 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 58128,
            "prompt_tokens": 194766,
            "cost": 0.408405
        },
        "time_spent": 39.45104789733887
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 9 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 9 = 14 (left: 9 11 14)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n",
                    "5 * 9 = 45 (left: 9 11 45)\n",
                    "9 / 5 = 1.8 (left: 1.8 9 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n",
                    "11 - 5 = 6 (left: 6 9 11)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 4 9 11)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n",
                    "5 * 9 = 45 (left: 9 11 45)\n",
                    "11 - 5 = 6 (left: 6 9 11)\n",
                    "9 / 5 = 1.8 (left: 1.8 9 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 9 9 11",
                "ys": [
                    "9 - 5 = 4 (left: 4 9 11)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n",
                    "5 * 9 = 45 (left: 9 11 45)\n",
                    "11 - 5 = 6 (left: 6 9 11)\n",
                    "9 / 5 = 1.8 (left: 1.8 9 11)\n"
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 / 4 = 2.25 (left: 2.25 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 * 11 = 99 (left: 14 99)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 14)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n11 / 9 = 1 (left: 1 14)\n",
                    "5 + 9 = 14 (left: 9 11 14)\nInput: 3 3 8 8\n",
                    "5 + 9 = 14 (left: 9 11 14)\nPossible next steps:\n",
                    "5 + 9 = 14 (left: 9 11 14)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n3 * 3 = 9 (left: 8 8 9)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n3 - 3 = 0 (left: 0 8 8)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 + 3 = 11 (left: 8 11 8)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 * 3 = 24 (left: 24 8)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "5 * 9 = 45 (left: 9 11 45)\n9 * 11 = 99 (left: 45 99)\n",
                    "5 * 9 = 45 (left: 9 11 45)\n11 - 9 = 2 (left: 2 45)\n",
                    "5 * 9 = 45 (left: 9 11 45)\n45 + 9 = 54 (left: 11 54)\n",
                    "5 * 9 = 45 (left: 9 11 45)\n45 - 9 = 36 (left: 11 36)\n",
                    "11 - 5 = 6 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n",
                    "11 - 5 = 6 (left: 6 9 11)\n9 / 3 = 3 (left: 6 3 11)\n",
                    "11 - 5 = 6 (left: 6 9 11)\n11 - 6 = 5 (left: 5 6 11)\n",
                    "9 / 5 = 1.8 (left: 1.8 9 11)\n1.8 + 9 = 10.8 (left: 10.8 11)\n",
                    "9 / 5 = 1.8 (left: 1.8 9 11)\n9 - 1.8 = 7.2 (left: 7.2 11)\n",
                    "9 / 5 = 1.8 (left: 1.8 9 11)\n9 / 1.8 = 5 (left: 5 11)\n",
                    "9 / 5 = 1.8 (left: 1.8 9 11)\n1.8 * 9 = 16.2 (left: 16.2 11)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 9 9 11",
                "ys": [
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n"
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 + 11 = 24\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 * 11 = 143\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 - 11 = 2\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 / 11 = 1\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 * 9 = 135 (left: 9 15 135)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6 15 9)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 / 9 = 1.67 (left: 1.67 15 9)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n11 / 5 = 2 (left: 2)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 * 11 = 55 (left: 55)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 / 11 = 3 (left: 3 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 + 11 = 47 (left: 11 47)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 * 9 = 135 (left: 9 15 135)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6 15 9)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 9 9 11",
                "ys": [
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 * 9 = 135 (left: 9 15 135)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6 15 9)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n"
                ],
                "new_ys": [
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 + 9 = 24 (left: 9 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 * 9 = 135 (left: 135 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 - 9 = 6 (left: 6 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 / 9 = 1.67 (left: 1.67 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n9 + 15 = 24 (left: 15 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n9 * 15 = 135 (left: 135 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n9 - 15 = -6 (left: -6 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n9 / 15 = 0.6 (left: 0.6 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 * 9 = 135 (left: 9 15 135)\n9 * 15 = 135 (left: 15 135)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 * 9 = 135 (left: 9 15 135)\n15 / 9 = 1.66666666667 (left: 1.66666666667 135)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 * 9 = 135 (left: 9 15 135)\n15 - 9 = 6 (left: 6 15 135)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 * 9 = 135 (left: 9 15 135)\n15 * 9 = 135 (left: 15 135)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 * 9 = 135 (left: 9 15 135)\n15 + 9 = 24 (left: 24 135)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 * 9 = 135 (left: 9 15 135)\n9 / 15 = 0.6 (left: 0.6 15 135)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6 15 9)\n6 + 15 = 21 (left: 9 21)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6 15 9)\n15 - 6 = 9 (left: 9 9)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6 15 9)\n6 * 9 = 54 (left: 15 54)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6 15 9)\n15 / 6 = 2 (left: 2 9)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6 15 9)\n15 - 9 = 6 (left: 6 9)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 - 9 = 6 (left: 6 15 9)\n15 - 6 = 9 (left: 9 9)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n10 - 8 = 2 (left: 2)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 + 9 = 24 (left: 9 24)\n"
                ]
            },
            {
                "step": 4,
                "x": "5 9 9 11",
                "ys": [
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 + 9 = 24 (left: 9 24)\n"
                ],
                "new_ys": [
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (5 + 9) * (9 - 11) = 24\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n8 * 16 = 128 (left: 16)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n128 / 8 = 16 (left: 16)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\nInput: 3 7 7 9\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\nPossible next steps:\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n3 * 7 = 21 (left: 7 9 21)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n7 + 3 = 10 (left: 7 10 9)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n9 - 3 = 6 (left: 6 7 7)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n7 / 3 = 2 (left: 2 7 7)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n7 - 3 = 4 (left: 4 7 7)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n9 - 7 = 2 (left: 2 7 7)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n2 * 16 = 32 (left: 32)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n16 / 2 = 8 (left: 8 16)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n8 - 8 = 0 (left: 0)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n8 * 8 = 64 (left: 64)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n8 / 8 = 1 (left: 1)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 + 9 = 24 (left: 9 24)\n9 + 24 = 33 (left: 33)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 + 9 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 + 9 = 24 (left: 9 24)\n9 * 24 = 216 (left: 216)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 + 9 = 24 (left: 9 24)\n24 / 9 = 2 (left: 2)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 + 9 = 24 (left: 9 24)\nInput: 1 2 3 4\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 + 9 = 24 (left: 9 24)\nPossible next steps:\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 + 9 = 24 (left: 9 24)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 + 9 = 24 (left: 9 24)\n2 * 3 = 6 (left: 1 4 6)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 + 9 = 24 (left: 9 24)\n1 + 3 = 4 (left: 4 4)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 + 9 = 24 (left: 9 24)\n3 + 4 = 7 (left: 1 2 7)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 + 9 = 24 (left: 9 24)\n4 - 1 = 3 (left: 2 3)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 + 9 = 24 (left: 9 24)\n4 - 3 = 1 (left: 1 1 2)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 + 9 = 24 (left: 9 24)\n4 / 2 = 2 (left: 1 2 2)\n"
                ],
                "values": [
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n16 / 2 = 8 (left: 8 16)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 + 9 = 24 (left: 9 24)\n2 * 3 = 6 (left: 1 4 6)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n8 * 16 = 128 (left: 16)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n128 / 8 = 16 (left: 16)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n3 * 7 = 21 (left: 7 9 21)\n"
                ]
            }
        ],
        "idx": 840,
        "ys": [
            "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n16 / 2 = 8 (left: 8 16)\n",
            "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 15 9)\n15 + 9 = 24 (left: 15 9 24)\n15 + 9 = 24 (left: 9 24)\n2 * 3 = 6 (left: 1 4 6)\n",
            "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n8 * 16 = 128 (left: 16)\n",
            "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n128 / 8 = 16 (left: 16)\n",
            "5 + 9 = 14 (left: 9 11 14)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n3 * 7 = 21 (left: 7 9 21)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 59817,
            "prompt_tokens": 199972,
            "cost": 0.419592
        },
        "time_spent": 36.64964199066162
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 6 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n"
                ],
                "values": [
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 6 6 8",
                "ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 12 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n6 * 8 = 48 (left: 12 48)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 * 6 = 48 (left: 12 48)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 + 6 = 18 (left: 8 18)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 + 6 = 14 (left: 12 14)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 / 6 = 2 (left: 2 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 + 8 = 14 (left: 1 14)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 * 6 = 6 (left: 6 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 / 1 = 6 (left: 6 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n8 - 1 = 7 (left: 1 7)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n8 - 6 = 2 (left: 1 2)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 / 6 = 2 (left: 2 12)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 12 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 6 6 8",
                "ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 / 6 = 2 (left: 2 12)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 12 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n"
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 - 8 = 0 (left: 0)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 * 8 = 64 (left: 64)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 / 8 = 1 (left: 1)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 12 8)\n12 + 8 = 20 (left: 8 20)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 12 8)\n12 - 8 = 4 (left: 4 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 12 8)\n12 * 8 = 96 (left: 8 96)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 12 8)\n12 / 8 = 1.5 (left: 1.5 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n8 - 6 = 2 (left: 2)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n8 / 6 = 1.33 (left: 1.33)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 6 6 8",
                "ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n"
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((6 + 6) / 6) * 8 = 24\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (6 + 6) * (6 / 8) = 24\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (6 + 6) * (8 / 6) = 24\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (6 + 6) * (8 / 2) = 24\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 * 12 = 72 (left: 72)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6 12)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    50
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((6 + 6) / 6) * 8 = 24\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (6 + 6) * (6 / 8) = 24\n"
                ]
            },
            {
                "step": 4,
                "x": "6 6 6 8",
                "ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((6 + 6) / 6) * 8 = 24\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (6 + 6) * (6 / 8) = 24\n"
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\nInput: 2 3 3 6\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\nPossible next steps:\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n3 + 3 = 6 (left: 2 6 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n2 * 3 = 6 (left: 6 3 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n6 / 2 = 3 (left: 3 3 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n3 * 2 = 6 (left: 3 6 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n3 - 2 = 1 (left: 1 3 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n6 - 3 = 3 (left: 2 3 3)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((6 + 6) / 6) * 8 = 24\n6 + 6 = 12 (left: 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((6 + 6) / 6) * 8 = 24\n6 * 6 = 36 (left: 36)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((6 + 6) / 6) * 8 = 24\n6 / 6 = 1 (left: 1)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((6 + 6) / 6) * 8 = 24\n6 - 6 = 0 (left: 0)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (6 + 6) * (6 / 8) = 24\n6 + 6 = 12 (left: 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (6 + 6) * (6 / 8) = 24\n6 / 6 = 1 (left: 1)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (6 + 6) * (6 / 8) = 24\n6 * 6 = 36 (left: 36)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (6 + 6) * (6 / 8) = 24\n6 - 6 = 0 (left: 0)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n2 * 3 = 6 (left: 6 3 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n3 * 2 = 6 (left: 3 6 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n3 + 3 = 6 (left: 2 6 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n6 / 2 = 3 (left: 3 3 6)\n"
                ]
            }
        ],
        "idx": 841,
        "ys": [
            "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
            "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n2 * 3 = 6 (left: 6 3 6)\n",
            "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n3 * 2 = 6 (left: 3 6 6)\n",
            "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n3 + 3 = 6 (left: 2 6 6)\n",
            "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n6 / 2 = 3 (left: 3 3 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 60776,
            "prompt_tokens": 205631,
            "cost": 0.4299985
        },
        "time_spent": 24.567811250686646
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 7 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 + 1 = 8 (left: 8 12 12)\n",
                    "7 - 1 = 6 (left: 6 7 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n",
                    "7 / 1 = 7 (left: 7 12 12)\n",
                    "12 - 7 = 5 (left: 5 12 12)\n",
                    "12 / 1 = 12 (left: 12 12 12)\n",
                    "12 - 7 = 5 (left: 5 12 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "7 + 1 = 8 (left: 8 12 12)\n",
                    "7 - 1 = 6 (left: 6 7 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n",
                    "7 / 1 = 7 (left: 7 12 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 7 12 12",
                "ys": [
                    "7 + 1 = 8 (left: 8 12 12)\n",
                    "7 - 1 = 6 (left: 6 7 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n",
                    "7 / 1 = 7 (left: 7 12 12)\n"
                ],
                "new_ys": [
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 / 8 = 1 (left: 1 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 * 8 = 96 (left: 12 96)\n",
                    "7 - 1 = 6 (left: 6 7 12)\n6 + 7 = 13 (left: 13 12)\n",
                    "7 - 1 = 6 (left: 6 7 12)\n6 * 7 = 42 (left: 42 12)\n",
                    "7 - 1 = 6 (left: 6 7 12)\n7 - 6 = 1 (left: 1 12)\n",
                    "7 - 1 = 6 (left: 6 7 12)\n7 / 6 = 1 (left: 1 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 * 11 = 77 (left: 12 77)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 7 12 18)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n7 + 12 = 19 (left: 12 19)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 - 7 = 5 (left: 5 12 12)\n",
                    "7 / 1 = 7 (left: 7 12 12)\n7 + 12 = 19 (left: 12 19)\n",
                    "7 / 1 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12)\n",
                    "7 / 1 = 7 (left: 7 12 12)\n12 + 7 = 19 (left: 12 19)\n",
                    "7 / 1 = 7 (left: 7 12 12)\n7 - 12 = -5 (left: -5 12)\n",
                    "7 / 1 = 7 (left: 7 12 12)\n12 - 7 = 5 (left: 5 12)\n",
                    "7 / 1 = 7 (left: 7 12 12)\n12 /  7 = 1 (left: 1 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 / 8 = 1 (left: 1 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "7 - 1 = 6 (left: 6 7 12)\n6 + 7 = 13 (left: 13 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 7 12 12",
                "ys": [
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 / 8 = 1 (left: 1 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "7 - 1 = 6 (left: 6 7 12)\n6 + 7 = 13 (left: 13 12)\n"
                ],
                "new_ys": [
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 - 20 = -8 (left: -8 20)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 / 20 = 0.6 (left: 0.6 20)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 + 12 = 32 (left: 12 32)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 * 12 = 240 (left: 12 240)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 / 12 = 1.6666666666666667 (left: 1.6666666666666667 20)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 / 8 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 / 8 = 1 (left: 1 12)\n12 / 1 = 12 (left: 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 / 8 = 1 (left: 1 12)\n12 + 1 = 13 (left: 13)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n4 * 12 = 48 (left: 12 48)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n12 - 12 = 0 (left: 0 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n12 + 4 = 16 (left: 4 16)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n4 / 12 = 0.3333 (left: 0.3333 12)\n",
                    "7 - 1 = 6 (left: 6 7 12)\n6 + 7 = 13 (left: 13 12)\n13 + 12 = 25 (left: 25)\n",
                    "7 - 1 = 6 (left: 6 7 12)\n6 + 7 = 13 (left: 13 12)\n13 - 12 = 1 (left: 1)\n",
                    "7 - 1 = 6 (left: 6 7 12)\n6 + 7 = 13 (left: 13 12)\n13 * 12 = 156 (left: 156)\n",
                    "7 - 1 = 6 (left: 6 7 12)\n6 + 7 = 13 (left: 13 12)\n13 / 12 = 1.08 (left: 1.08)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 - 20 = -8 (left: -8 20)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 7 12 12",
                "ys": [
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 - 20 = -8 (left: -8 20)\n"
                ],
                "new_ys": [
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)\n12 - 13 = -1 (left: -1)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)\n12 * 13 = 156 (left: 156)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)\n12 / 13 = 0.92 (left: 0.92)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n11 - 12 = -1 (left: -1)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n11 * 12 = 132 (left: 132)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n11 / 12 = 0.92 (left: 0.92)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n20 + 32 = 52 (left: 52)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n20 * 32 = 640 (left: 640)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n32 - 20 = 12 (left: 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n32 / 20 = 1.6 (left: 1.6)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 - 20 = -8 (left: -8 20)\n20 - (-8) = 28 (left: 20 28)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 - 20 = -8 (left: -8 20)\n20 / (-8) = -2.5 (left: -2.5 20)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 - 20 = -8 (left: -8 20)\n20 + (-8) = 12 (left: 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 - 20 = -8 (left: -8 20)\n20 - (-8) = 28 (left: 20 28)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n32 - 20 = 12 (left: 12)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n"
                ]
            },
            {
                "step": 4,
                "x": "1 7 12 12",
                "ys": [
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n32 - 20 = 12 (left: 12)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n"
                ],
                "new_ys": [
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 * 7) / 12) + 12 = 24\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n25 is the only number provided, and there are no possible next steps to perform.\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n2 + 3 = 5 (left: 5)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 * 2 = 6 (left: 6)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 / 2 = 1.5 (left: 1.5)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 - 2 = 1 (left: 1)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n32 - 20 = 12 (left: 12)\n12 is the final result.\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 2 = 72\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 3 = 48\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 4 = 36\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 6 = 24\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 8 = 18\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 9 = 16\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 12 = 12\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 * 7) / 12) + 12 = 24\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n25 is the only number provided, and there are no possible next steps to perform.\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n2 + 3 = 5 (left: 5)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 * 2 = 6 (left: 6)\n",
                    "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 / 2 = 1.5 (left: 1.5)\n"
                ]
            }
        ],
        "idx": 842,
        "ys": [
            "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 * 7) / 12) + 12 = 24\n",
            "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n25 is the only number provided, and there are no possible next steps to perform.\n",
            "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n2 + 3 = 5 (left: 5)\n",
            "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 * 2 = 6 (left: 6)\n",
            "1 * 7 = 7 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 / 2 = 1.5 (left: 1.5)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 62050,
            "prompt_tokens": 210821,
            "cost": 0.4403315
        },
        "time_spent": 31.063721895217896
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 6 9 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 6 = 7 (left: 7 9 10)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n",
                    "9 + 1 = 10 (left: 6 10 10)\n",
                    "10 - 6 = 4 (left: 1 4 9)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n",
                    "6 * 9 = 54 (left: 1 10 54)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50
                ],
                "select_new_ys": [
                    "6 + 9 = 15 (left: 1 10 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 6 9 10",
                "ys": [
                    "6 + 9 = 15 (left: 1 10 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n"
                ],
                "new_ys": [
                    "6 + 9 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n10 + 1 = 11 (left: 11 15)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n10 * 1 = 10 (left: 10 15)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n15 - 10 = 5 (left: 1 5)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n15 / 1 = 15 (left: 1 15)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n15 / 10 = 1.5 (left: 1.5 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 * 6 = 54 (left: 9 54)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 6 = 15 (left: 6 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 / 6 = 1.5 (left: 1.5 9)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n1 + 9 = 10 (left: 10 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 + 1 = 10 (left: 10 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 - 1 = 8 (left: 8 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 / 1 = 9 (left: 9 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n15 - 1 = 14 (left: 14 15)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 * 9 = 63 (left: 10 63)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 * 10 = 90 (left: 7 90)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n10 / 7 = 1 (left: 1 10)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n9 + 6 = 15 (left: 10 15)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n6 * 9 = 54 (left: 10 54)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n9 * 6 = 54 (left: 10 54)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n9 / 6 = 1.5 (left: 1.5 10)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n6 - 9 = -3 (left: -3 10)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n9 - 6 = 3 (left: 3 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 9 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 / 1 = 9 (left: 9 15)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 6 9 10",
                "ys": [
                    "6 + 9 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 / 1 = 9 (left: 9 15)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n"
                ],
                "new_ys": [
                    "6 + 9 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n14 * 10 = 140 (left: 140)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n10 - 14 = -4 (left: -4)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 - 15 = -6 (left: -6 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 / 15 = 0 (left: 0 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 / 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 / 1 = 9 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 / 1 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 / 1 = 9 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 / 1 = 9 (left: 9 15)\n9 - 15 = -6 (left: 9 -6)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 / 1 = 9 (left: 9 15)\n9 / 15 = 0 (left: 0 15)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 * 15 = 165 (left: 165)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n15 - 11 = 4 (left: 4)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n15 / 11 = 1.36 (left: 1.36)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    100,
                    100,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 9 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 6 9 10",
                "ys": [
                    "6 + 9 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "6 + 9 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "6 + 9 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (6 + 9) + (1 - 10) = 24\n",
                    "6 + 9 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (6 + 9) + (1 - 10) = 24\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 - 9 = 6 (left: 6 9)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 / 9 = 1 (left: 1 9)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 * 15 = 135 (left: 9 135)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\nInput: 3 3 8\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\nPossible next steps:\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n3 + 3 = 6 (left: 6 8)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n3 * 3 = 9 (left: 8 9)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n3 / 3 = 1 (left: 1 8)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n3 - 3 = 0 (left: 0 8)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n8 - 3 = 5 (left: 3 5)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n8 / 3 = 2 (left: 2 8)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n8 * 3 = 24 (left: 3 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n9 - 15 = -6 (left: -6 9)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n9 / 15 = 0.6 (left: 0.6 15)\n",
                    "9 + 6 = 15 (left: 1 9 15)\n9 * 1 = 9 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (9 + 6) * (9 + 1) = 24\n"
                ],
                "values": [
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 - 9 = 6 (left: 6 9)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 / 9 = 1 (left: 1 9)\n"
                ]
            },
            {
                "step": 4,
                "x": "1 6 9 10",
                "ys": [
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 - 9 = 6 (left: 6 9)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 / 9 = 1 (left: 1 9)\n"
                ],
                "new_ys": [
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 - 15 = -6 (left: -6 9)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 / 15 = 0 (left: 0 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((10 - 1) + 6) + 9 = 24\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((10 - 1) + 6) + 9 = 24\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 - 9 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 - 9 = 6 (left: 6 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 - 9 = 6 (left: 6 9)\n6 * 9 = 54 (left: 9 54)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 - 9 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 / 9 = 1 (left: 1 9)\n1 + 9 = 10 (left: 9 10)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 / 9 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8 9)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    1000,
                    1000,
                    100,
                    50,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((10 - 1) + 6) + 9 = 24\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((10 - 1) + 6) + 9 = 24\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 - 9 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n"
                ]
            }
        ],
        "idx": 843,
        "ys": [
            "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((10 - 1) + 6) + 9 = 24\n",
            "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((10 - 1) + 6) + 9 = 24\n",
            "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
            "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
            "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 9 15)\n15 - 9 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 63552,
            "prompt_tokens": 217286,
            "cost": 0.453033
        },
        "time_spent": 34.08284640312195
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 2 10 11)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n",
                    "10 - 2 = 8 (left: 5 6 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 2 10 11)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n",
                    "10 - 2 = 8 (left: 5 6 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 6 10",
                "ys": [
                    "5 + 6 = 11 (left: 2 10 11)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n",
                    "10 - 2 = 8 (left: 5 6 8)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 - 2 = 8 (left: 2 8 11)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n5 * 4 = 20 (left: 20 10)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n5 + 4 = 9 (left: 9 10)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)\n",
                    "10 - 2 = 8 (left: 5 6 8)\n5 + 6 = 11 (left: 8 11)\n",
                    "10 - 2 = 8 (left: 5 6 8)\n6 + 8 = 14 (left: 5 14)\n",
                    "10 - 2 = 8 (left: 5 6 8)\n5 + 8 = 13 (left: 6 13)\n",
                    "10 - 2 = 8 (left: 5 6 8)\n5 * 6 = 30 (left: 8 30)\n",
                    "10 - 2 = 8 (left: 5 6 8)\n6 * 8 = 48 (left: 5 48)\n",
                    "10 - 2 = 8 (left: 5 6 8)\n5 * 8 = 40 (left: 6 40)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 - 2 = 8 (left: 2 8 11)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n5 * 4 = 20 (left: 20 10)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n5 + 4 = 9 (left: 9 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 6 10",
                "ys": [
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 - 2 = 8 (left: 2 8 11)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n5 * 4 = 20 (left: 20 10)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n5 + 4 = 9 (left: 9 10)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 + 2 = 13 (left: 13 12)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 - 2 = 9 (left: 9 12)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 / 2  = 5.5 (left: 5.5 12)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 * 11 = 22 (left: 12 22)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 * 2 = 22 (left: 22 12)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 - 2 = 8 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 - 2 = 8 (left: 2 8 11)\n8 * 2 = 16 (left: 16 11)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 - 2 = 8 (left: 2 8 11)\n8 - 2 = 6 (left: 6 11)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 - 2 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n9 * 10 = 90 (left: 10 90)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n10 / 9 = 1.11 (left: 1.11 10)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\nInput: 3 3 3 3\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\nPossible next steps:\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n5 * 4 = 20 (left: 20 10)\n20 + 10 = 30 (left: 10 30)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n5 * 4 = 20 (left: 20 10)\n20 - 10 = 10 (left: 10 10)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n5 * 4 = 20 (left: 20 10)\n20 * 10 = 200 (left: 10 200)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n5 * 4 = 20 (left: 20 10)\n20 / 10 = 2 (left: 2 10)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n5 + 4 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n5 + 4 = 9 (left: 9 10)\n9 * 10 = 90 (left: 90)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n5 + 4 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 + 2 = 13 (left: 13 12)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 - 2 = 9 (left: 9 12)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 * 11 = 22 (left: 12 22)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 5 6 10",
                "ys": [
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 + 2 = 13 (left: 13 12)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 - 2 = 9 (left: 9 12)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 * 11 = 22 (left: 12 22)\n"
                ],
                "new_ys": [
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n9 / 3 = 3 (left: 3 3)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n13 - 12 = 1 (left: 1 13)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 + 2 = 13 (left: 13 12)\n12 + 13 = 25 (left: 25)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 + 2 = 13 (left: 13 12)\n13 * 12 = 156 (left: 156)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 + 2 = 13 (left: 13 12)\n13 - 12 = 1 (left: 1)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 + 2 = 13 (left: 13 12)\n13 / 12 = 1.08 (left: 1.08)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 - 2 = 9 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 - 2 = 9 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 - 2 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 - 2 = 9 (left: 9 12)\n12 / 9 = 1 (left: 1 12)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 * 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 * 11 = 22 (left: 12 22)\n12 - 22 = -10 (left: -10)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 * 11 = 22 (left: 12 22)\n12 * 22 = 264 (left: 264)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 * 11 = 22 (left: 12 22)\n12 / 22 = 0.5455 (left: 0.5455)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n13 - 12 = 1 (left: 1 13)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 + 2 = 13 (left: 13 12)\n12 + 13 = 25 (left: 25)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 5 6 10",
                "ys": [
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n13 - 12 = 1 (left: 1 13)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 + 2 = 13 (left: 13 12)\n12 + 13 = 25 (left: 25)\n"
                ],
                "new_ys": [
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n12 - 3 = 9 (left: 9 12)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n6 * 3 = 18 (left: 3 18)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n6 + 3 = 9 (left: 9 3)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n6 - 3 = 3 (left: 3 3)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n6 / 3 = 2 (left: 2 3)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\nInput: 1 3 4 6\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n3 + 1 = 4 (left: 4 4 6)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n3 * 1 = 3 (left: 3 4 6)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 - 4 = 2 (left: 1 2 6)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 / 3 = 2 (left: 1 4 2)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 - 3 = 3 (left: 1 3 4)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 / 1 = 6 (left: 3 4 6)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\nInput: 3 5 7 8\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n5 - 3 = 2 (left: 2 7 8)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n7 - 5 = 2 (left: 2 3 8)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n8 - 7 = 1 (left: 3 5 1)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n13 - 12 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n13 - 12 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n13 - 12 = 1 (left: 1 13)\n13 / 1 = 13 (left: 13)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n13 - 12 = 1 (left: 1 13)\n13 * 1 = 13 (left: 13)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 2 11 12)\n11 + 2 = 13 (left: 13 12)\n12 + 13 = 25 (left: 25)\n25 is the final result, no possible next steps.\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n12 - 3 = 9 (left: 9 12)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n6 * 3 = 18 (left: 3 18)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n6 + 3 = 9 (left: 9 3)\n"
                ]
            }
        ],
        "idx": 844,
        "ys": [
            "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n",
            "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n",
            "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n12 - 3 = 9 (left: 9 12)\n",
            "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n6 * 3 = 18 (left: 3 18)\n",
            "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n6 + 3 = 9 (left: 9 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 1281,
            "prompt_tokens": 4401,
            "cost": 0.0091635
        },
        "time_spent": 28.455376863479614
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 8 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 8 9 12",
                "ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n"
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 * 11 = 99 (left: 12 99)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 / 9 = 1 (left: 1 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\nInput: 5 5 5 5\n",
                    "3 + 8 = 11 (left: 9 11 12)\nPossible next steps:\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 + 5 = 10 (left: 5 10 5)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 * 5 = 25 (left: 5 25 5)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "3 + 8 = 11 (left: 9 11 12)\nInput: 3 6 9 12\n",
                    "3 + 8 = 11 (left: 9 11 12)\nPossible next steps:\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 + 6 = 9 (left: 9 9 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 - 6 = 3 (left: 3 3 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 6 3)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n9 + 12 = 21 (left: 21 24)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n9 * 12 = 108 (left: 24 108)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n12 * 24 = 288 (left: 9 288)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n12 / 9 = 1.33 (left: 1.33 24)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 / 12 = 2 (left: 9 2 24)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 - 9 = 15 (left: 12 15 24)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 13 12)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 * 8 = 40 (left: 40 12)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n8 - 5 = 3 (left: 3 12)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    50,
                    100,
                    100,
                    50,
                    0,
                    0,
                    50,
                    100,
                    100,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 * 5 = 25 (left: 5 25 5)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 8 9 12",
                "ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 * 5 = 25 (left: 5 25 5)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n"
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 / 5 = 1 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 / 5 = 1 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 / 5 = 1 (left: 1 5 5)\n5 / 1 = 5 (left: 5 5)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 / 5 = 1 (left: 1 5 5)\nInput: 3 3 3 3\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 / 5 = 1 (left: 1 5 5)\nPossible next steps:\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 / 5 = 1 (left: 1 5 5)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 / 5 = 1 (left: 1 5 5)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 / 5 = 1 (left: 1 5 5)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 / 5 = 1 (left: 1 5 5)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 / 5 = 1 (left: 1 5 5)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 / 5 = 1 (left: 1 5 5)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 / 5 = 1 (left: 1 5 5)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 / 5 = 1 (left: 1 5 5)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 * 5 = 25 (left: 5 25 5)\n5 + 25 = 30 (left: 5 30)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 * 5 = 25 (left: 5 25 5)\n25 / 5 = 5 (left: 5 5)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 * 5 = 25 (left: 5 25 5)\n25 - 5 = 20 (left: 5 20)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n5 * 5 = 25 (left: 5 25 5)\n5 * 25 = 125 (left: 5 125)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 - 9 = 9 (left: 9 12 9)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 / 9 = 2 (left: 2 12 9)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 * 9 = 162 (left: 12 162)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n12 + 9 = 21 (left: 18 21)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n12 - 9 = 3 (left: 3 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n12 / 9 = 1 (left: 1 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n12 * 9 = 108 (left: 108)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n9 / 3 = 3 (left: 3 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n12 - 3 = 9 (left: 9 12)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    100,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 8 9 12",
                "ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n"
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 + 8) * (9 - 12) = 24\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 8) * (9 - 12) = 24\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n9 + 12 = 21 (left: 21 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n9 * 12 = 108 (left: 108 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 12 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n27 - 9 = 18 (left: 12 18 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n9 * 3 = 27 (left: 12 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n27 / 9 = 3 (left: 12 3)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n9 + 12 = 21 (left: 21 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    100,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 12 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n27 - 9 = 18 (left: 12 18 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n9 * 3 = 27 (left: 12 27)\n"
                ]
            },
            {
                "step": 4,
                "x": "3 8 9 12",
                "ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 12 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n27 - 9 = 18 (left: 12 18 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n9 * 3 = 27 (left: 12 27)\n"
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 27)\n3 * 27 = 81 (left: 27 81)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((3 + 8) + (6 - 3)) + 9 = 24\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 12 27)\n3 * 12 = 36 (left: 12 27 36)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 12 27)\n12 / 3 = 4 (left: 4 12 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 12 27)\n27 - 3 = 24 (left: 12 24 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n27 - 9 = 18 (left: 12 18 27)\n12 + 18 = 30 (left: 30 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n27 - 9 = 18 (left: 12 18 27)\n12 * 18 = 216 (left: 216 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n27 - 9 = 18 (left: 12 18 27)\n18 - 12 = 6 (left: 6 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n27 - 9 = 18 (left: 12 18 27)\n18 / 12 = 1.5 (left: 1.5 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n27 - 9 = 18 (left: 12 18 27)\n27 + 12 = 39 (left: 18 39)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n27 - 9 = 18 (left: 12 18 27)\n27 - 12 = 15 (left: 15 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n9 * 3 = 27 (left: 12 27)\n12 + 27 = 39 (left: 27 39)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n9 * 3 = 27 (left: 12 27)\n27 - 12 = 15 (left: 15 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n9 * 3 = 27 (left: 12 27)\n12 * 27 = 324 (left: 27 324)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n9 * 3 = 27 (left: 12 27)\n27 / 12 = 2.25 (left: 2.25 27)\n"
                ],
                "values": [
                    0,
                    50,
                    0,
                    100,
                    100,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 12 27)\n3 * 12 = 36 (left: 12 27 36)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 12 27)\n12 / 3 = 4 (left: 4 12 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 12 27)\n27 - 3 = 24 (left: 12 24 27)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n27 - 9 = 18 (left: 12 18 27)\n18 - 12 = 6 (left: 6 27)\n"
                ]
            }
        ],
        "idx": 845,
        "ys": [
            "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 12 27)\n3 * 12 = 36 (left: 12 27 36)\n",
            "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 12 27)\n12 / 3 = 4 (left: 4 12 27)\n",
            "3 + 8 = 11 (left: 9 11 12)\n6 - 3 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n",
            "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n12 - 9 = 3 (left: 3 12 27)\n27 - 3 = 24 (left: 12 24 27)\n",
            "3 + 8 = 11 (left: 9 11 12)\n3 * 6 = 18 (left: 18 9 12)\n18 + 9 = 27 (left: 9 12 27)\n27 - 9 = 18 (left: 12 18 27)\n18 - 12 = 6 (left: 6 27)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 2660,
            "prompt_tokens": 9775,
            "cost": 0.0199825
        },
        "time_spent": 30.065456867218018
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 6 11)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n",
                    "6 + 3 = 9 (left: 2 9 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n",
                    "11 - 2 = 9 (left: 9 6 11)\n",
                    "11 - 3 = 8 (left: 8 6 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 6 11)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n",
                    "6 + 3 = 9 (left: 2 9 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n",
                    "11 - 2 = 9 (left: 9 6 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 11",
                "ys": [
                    "2 + 3 = 5 (left: 5 6 11)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n",
                    "6 + 3 = 9 (left: 2 9 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n",
                    "11 - 2 = 9 (left: 9 6 11)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 / 6 = 0.83 (left: 0.83 11)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n11 + 6 = 17 (left: 6 17)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n11 * 6 = 66 (left: 6 66)\n",
                    "6 + 3 = 9 (left: 2 9 11)\n2 + 9 = 11 (left: 11)\n",
                    "6 + 3 = 9 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n",
                    "6 + 3 = 9 (left: 2 9 11)\n2 * 9 = 18 (left: 11 18)\n",
                    "6 + 3 = 9 (left: 2 9 11)\n9 / 2 = 4.5 (not an integer, left: 2 9 11)\n",
                    "6 + 3 = 9 (left: 2 9 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "6 + 3 = 9 (left: 2 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 12 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n",
                    "11 - 2 = 9 (left: 9 6 11)\n9 + 6 = 15 (left: 11 15)\n",
                    "11 - 2 = 9 (left: 9 6 11)\n9 - 6 = 3 (left: 3 11)\n",
                    "11 - 2 = 9 (left: 9 6 11)\n6 - 9 = -3 (left: -3 11)\n",
                    "11 - 2 = 9 (left: 9 6 11)\n9 * 6 = 54 (left: 11 54)\n",
                    "11 - 2 = 9 (left: 9 6 11)\n9 / 6 = 1.5 (left: 1.5 11)\n",
                    "11 - 2 = 9 (left: 9 6 11)\n6 / 9 = 0.67 (left: 0.67 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 6 11",
                "ys": [
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 * 11 = 66 (left: 11 66)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 / 6 = 1 (left: 1 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n11 + 30 = 41 (left: 41)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n11 * 30 = 330 (left: 330)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 / 11 = 2.73 (left: 2.73)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 11 12)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 1 10)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 - 12 = -1 (left: -1)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 * 12 = 132 (left: 132)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 / 12 = 0.92 (left: 0.92)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n11 + 36 = 47 (left: 47)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n11 * 36 = 396 (left: 396)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 / 11 = 3.27 (left: 3.27)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 / 6 = 1 (left: 1 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 11 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 6 11",
                "ys": [
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 / 6 = 1 (left: 1 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 11 12)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n17 - 11 = 6 (left: 6)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 / 5 = 2 (left: 2 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 * 11 = 55 (left: 55)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\nInput: 3 3 3 3\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 / 6 = 1 (left: 1 11)\n11 + 1 = 12 (left: 1 12)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 1 10)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 / 6 = 1 (left: 1 11)\n11 / 1 = 11 (left: 1 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 / 6 = 1 (left: 1 11)\n11 * 1 = 11 (left: 1 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n20 - 1 = 19 (left: 1)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n18 + 1 = 19 (left: 1)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n19 * 1 = 19 (left: 1)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n19 / 1 = 19 (left: 1)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 11 12)\n11 - 12 = -1 (left: -1)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 11 12)\n11 * 12 = 132 (left: 132)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 11 12)\n11 / 12 = 0.9167 (left: 0.9167)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 / 5 = 2 (left: 2 11)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 3 6 11",
                "ys": [
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 / 5 = 2 (left: 2 11)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n2 * 8 = 16 (left: 16)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n8 / 2 = 4 (left: 4)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n28 / 2 = 14 (left: 14)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\nInput: 2 2 8 8\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n2 + 2 = 4 (left: 4 8 8)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n8 * 2 = 16 (left: 4 8 16)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n8 / 2 = 4 (left: 2 4 8)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n8 - 2 = 6 (left: 2 6 8)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n2 * 8 = 16 (left: 2 8 16)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n8 - 2 = 6 (left: 2 6 8)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n8 + 2 = 10 (left: 2 8 10)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n2 + 8 = 10 (left: 8 10)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n8 / 2 = 4 (left: 4 8)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 / 2 = 8 (left: 8 8)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n2 * 8 = 16 (left: 8 16)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n8 - 2 = 6 (left: 6 8)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n11 / 6 = 1.83 (left: 1.83 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n6 - 11 = -5 (left: -5 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 / 5 = 2 (left: 2 11)\n11 - 2 = 9 (left: 2 9)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 / 5 = 2 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 / 5 = 2 (left: 2 11)\n11 / 2 = 5.5 (left: 5.5)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 / 5 = 2 (left: 2 11)\n11 - 2 = 9 (left: 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    100,
                    50,
                    50,
                    100,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n2 + 2 = 4 (left: 4 8 8)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n8 - 2 = 6 (left: 2 6 8)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n2 * 8 = 16 (left: 2 8 16)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n2 * 8 = 16 (left: 8 16)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n"
                ]
            }
        ],
        "idx": 846,
        "ys": [
            "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n2 + 2 = 4 (left: 4 8 8)\n",
            "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n8 - 2 = 6 (left: 2 6 8)\n",
            "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n2 * 8 = 16 (left: 2 8 16)\n",
            "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n2 * 8 = 16 (left: 8 16)\n",
            "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 4174,
            "prompt_tokens": 14636,
            "cost": 0.030302
        },
        "time_spent": 35.827397108078
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 5 6 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n",
                    "4 + 5 = 9 (left: 2 9 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 5 6 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n",
                    "4 + 5 = 9 (left: 2 9 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 5 9",
                "ys": [
                    "2 + 4 = 6 (left: 5 6 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n",
                    "4 + 5 = 9 (left: 2 9 9)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 6 9 11)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 * 6 = 30 (left: 9 30)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 - 5 = 1 (left: 1 9)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 + 5 = 11 (left: 9 11)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 9)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 / 5 = 1.8 (left: 1.8 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 8 9 13)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 + 5 = 13 (left: 13 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 / 5 = 1 (left: 1 8 9)\n",
                    "4 + 5 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 2 7 9)\n",
                    "4 + 5 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 7 9)\n",
                    "4 + 5 = 9 (left: 2 9 9)\n9 / 2 = 4 (left: 2 4 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 6 9 11)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 * 6 = 30 (left: 9 30)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 - 5 = 1 (left: 1 9)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 + 5 = 11 (left: 9 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 5 9",
                "ys": [
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 6 9 11)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 * 6 = 30 (left: 9 30)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 - 5 = 1 (left: 1 9)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 + 5 = 11 (left: 9 11)\n"
                ],
                "new_ys": [
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 / 3 = 2 (left: 2 8 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 6 9 11)\n9 + 6 = 15 (left: 11 15)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 6 9 11)\n6 * 9 = 54 (left: 11 54)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 6 9 11)\n9 * 6 = 54 (left: 11 54)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 6 9 11)\n6 - 9 = -3 (left: -3 11)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 6 9 11)\n9 / 6 = 1.5 (left: 1.5 11)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 6 9 11)\n6 / 9 = 0.6666666666666666 (left: 0.6666666666666666 11)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 * 6 = 30 (left: 9 30)\n9 * 30 = 270 (left: 270)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 * 6 = 30 (left: 9 30)\n30 / 9 = 3 (left: 3 30)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 * 6 = 30 (left: 9 30)\n30 - 9 = 21 (left: 9 21)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 - 5 = 1 (left: 1 9)\n1 + 9 = 10 (left: 9 10)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 - 5 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8 9)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 + 5 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 + 5 = 11 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 + 5 = 11 (left: 9 11)\n11 / 9 = 1 (left: 1 11)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 + 5 = 11 (left: 9 11)\n11 * 9 = 99 (left: 99)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 + 5 = 11 (left: 9 11)\n9 - 11 = -2 (left: -2 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 / 3 = 2 (left: 2 8 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 5 9",
                "ys": [
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 / 3 = 2 (left: 2 8 9)\n"
                ],
                "new_ys": [
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 11 17)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 - 9 = -1 (left: -1 11)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 * 9 = 72 (left: 11 72)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 / 8 = 1.125 (left: 1.125 11)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 11 = -2 (left: 8 -2)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n8 + 9 = 17 (left: 17 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 * 8 = 72 (left: 72 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n8 * 9 = 72 (left: 72 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 24 = -15 (left: 8 -15)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n24 - 9 = 15 (left: 8 15)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n24 / 9 = 2 (left: 8 2)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n8 + 9 = 17 (left: 5 17)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 / 3 = 2 (left: 2 8 9)\n2 + 8 = 10 (left: 9 10)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 / 3 = 2 (left: 2 8 9)\n8 - 2 = 6 (left: 6 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 / 3 = 2 (left: 2 8 9)\n9 - 2 = 7 (left: 7 8)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 / 3 = 2 (left: 2 8 9)\n2 * 8 = 16 (left: 9 16)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 / 3 = 2 (left: 2 8 9)\n2 + 8 = 10 (left: 9 10)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 / 3 = 2 (left: 2 8 9)\n8 / 2 = 4 (left: 4 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n8 / 3 = 2 (left: 2 8 9)\n9 - 8 = 1 (left: 1 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    100,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 4 5 9",
                "ys": [
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n"
                ],
                "new_ys": [
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n1 / 24 = 0.04167 (left: 0.04167 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\nInput: 3 3 3 3\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\nPossible next steps:\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\nInput: 5 5 5 5\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\nPossible next steps:\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n5 - 5 = 0 (left: 0 5 5 5)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n5 * 5 = 25 (left: 5 5 25 5)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n5 / 5 = 1 (left: 1 5 5 5)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 11 17)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 - 9 = -1 (left: -1 11)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 * 9 = 72 (left: 11 72)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n9 + 24 = 33 (left: 33)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n9 * 24 = 216 (left: 216)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 / 9 = 2.67 (left: 2.67 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\nInput: 3 6 6 12\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\nPossible next steps:\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n3 + 6 = 9 (left: 9 6 12)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n6 / 3 = 2 (left: 2 6 12)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n12 - 6 = 6 (left: 3 6 6)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n6 * 3 = 18 (left: 18 6 12)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n6 / 3 = 2 (left: 2 6 12)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n12 - 3 = 9 (left: 6 9 12)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n12 - 6 = 6 (left: 6 6 12)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n5 + 8 = 13 (left: 8 9 13)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n8 + 5 = 13 (left: 13 9)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    100,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    100,
                    100,
                    100,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15 9)\n"
                ]
            }
        ],
        "idx": 847,
        "ys": [
            "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
            "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
            "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 24)\n",
            "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1 (left: 1 24)\n3 + 3 = 6 (left: 3 6 3 3)\n",
            "2 * 4 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 5870,
            "prompt_tokens": 19053,
            "cost": 0.0403195
        },
        "time_spent": 36.13476920127869
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 7 11 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n",
                    "11 + 1 = 12 (left: 4 12 12)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n",
                    "7 + 4 = 11 (left: 11 11 12)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n",
                    "12 - 4 = 8 (left: 7 8 11)\n",
                    "11 - 7 = 4 (left: 4 4 12)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n",
                    "11 + 1 = 12 (left: 4 12 12)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n",
                    "7 + 4 = 11 (left: 11 11 12)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 7 11 12",
                "ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n",
                    "11 + 1 = 12 (left: 4 12 12)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n",
                    "7 + 4 = 11 (left: 11 11 12)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n"
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 / 11 = 1 (left: 1 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 11)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n12 - 11 = 1 (left: 1 12)\n",
                    "11 + 1 = 12 (left: 4 12 12)\n4 + 12 = 16 (left: 12 16)\n",
                    "11 + 1 = 12 (left: 4 12 12)\n4 * 12 = 48 (left: 12 48)\n",
                    "11 + 1 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "11 + 1 = 12 (left: 4 12 12)\n12 - 4 = 8 (left: 8 12)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n11 + 12 = 23 (left: 23 28)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n11 * 12 = 132 (left: 28 132)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n11 - 12 = -1 (left: -1 11 28)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n12 - 11 = 1 (left: 1 12 28)\n",
                    "7 + 4 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n",
                    "7 + 4 = 11 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n",
                    "7 + 4 = 11 (left: 11 11 12)\n11 / 11 = 1 (left: 1 12)\n",
                    "7 + 4 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n4 + 7 = 11 (left: 1 11)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n7 - 4 = 3 (left: 3 1)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n4 * 7 = 28 (left: 1 28)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n7 / 4 = 1 (left: 1 1)\n",
                    "12 - 11 = 1 (left: 4 7 1)\nInput: 3 3 9 2\n",
                    "12 - 11 = 1 (left: 4 7 1)\nPossible next steps:\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 3 = 6 (left: 6 9 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 * 3 = 9 (left: 9 9 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 - 3 = 0 (left: 0 9 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 / 3 = 1 (left: 1 9 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 + 3 = 12 (left: 3 12 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 - 3 = 6 (left: 3 6 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 / 3 = 3 (left: 3 3 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 3 = 27 (left: 3 27 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 - 3 = 6 (left: 3 6 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 / 3 = 3 (left: 3 3 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 2 = 5 (left: 3 9 5)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 * 2 = 6 (left: 6 9 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 - 2 = 1 (left: 1 9 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 / 2 = 1 (left: 1 3 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 + 2 = 11 (left: 3 11 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 - 2 = 7 (left: 7 3 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 / 2 = 4 (left: 4 3 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 - 2 = 7 (left: 7 3 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 / 2 = 4 (left: 4 3 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n2 + 3 = 5 (left: 3 9 5)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n2 * 3 = 6 (left: 6 9 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n2 - 3 = -1 (left: -1 9 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n2 / 3 = 0 (left: 0 9 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 3 = 6 (left: 6 9 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 2 = 5 (left: 3 9 5)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 - 2 = 7 (left: 7 3 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n2 + 3 = 5 (left: 3 9 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 7 11 12",
                "ys": [
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 3 = 6 (left: 6 9 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 2 = 5 (left: 3 9 5)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 - 2 = 7 (left: 7 3 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n2 + 3 = 5 (left: 3 9 5)\n"
                ],
                "new_ys": [
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 3 = 6 (left: 6 9 2)\n6 + 9 = 15 (left: 15 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 3 = 6 (left: 6 9 2)\n6 * 9 = 54 (left: 54 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 3 = 6 (left: 6 9 2)\n9 - 6 = 3 (left: 3 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 2 = 5 (left: 3 9 5)\n3 + 9 = 12 (left: 5 12)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 2 = 5 (left: 3 9 5)\n9 - 3 = 6 (left: 6 5)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 2 = 5 (left: 3 9 5)\n3 * 9 = 27 (left: 27 5)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 2 = 5 (left: 3 9 5)\n9 / 3 = 3 (left: 3 5)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 - 2 = 7 (left: 7 3 3)\n7 + 3 = 10 (left: 3 10)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 - 2 = 7 (left: 7 3 3)\n3 * 3 = 9 (left: 7 9)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 - 2 = 7 (left: 7 3 3)\n7 - 3 = 4 (left: 4 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 - 2 = 7 (left: 7 3 3)\n7 / 3 = 2 (left: 2 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n3 * 18 = 54 (left: 3 54 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 / 3 = 6 (left: 3 6 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 + 3 = 21 (left: 3 21 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n3 / 18 = 0.16666666666666666 (left: 0.16666666666666666 18 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n3 - 18 = -15 (left: -15 3 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n2 + 3 = 5 (left: 3 9 5)\n3 + 9 = 12 (left: 5 12)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n2 + 3 = 5 (left: 3 9 5)\n9 - 3 = 6 (left: 6 5)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n2 + 3 = 5 (left: 3 9 5)\n3 * 9 = 27 (left: 27 5)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n2 + 3 = 5 (left: 3 9 5)\n9 / 3 = 3 (left: 3 5)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n3 - 18 = -15 (left: -15 3 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 3 = 6 (left: 6 9 2)\n6 + 9 = 15 (left: 15 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 3 = 6 (left: 6 9 2)\n6 * 9 = 54 (left: 54 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 2 = 5 (left: 3 9 5)\n3 + 9 = 12 (left: 5 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 7 11 12",
                "ys": [
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n3 - 18 = -15 (left: -15 3 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 3 = 6 (left: 6 9 2)\n6 + 9 = 15 (left: 15 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 3 = 6 (left: 6 9 2)\n6 * 9 = 54 (left: 54 2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 2 = 5 (left: 3 9 5)\n3 + 9 = 12 (left: 5 12)\n"
                ],
                "new_ys": [
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n3 + 15 = 18 (left: 3 18 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 / 3 = 5 (left: 3 5 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n3 * 15 = 45 (left: 3 45 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 - 3 = 12 (left: 3 12 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n3 - 18 = -15 (left: -15 3 3)\n3 - (-15) = 18 (left: 3 18)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n3 - 18 = -15 (left: -15 3 3)\n3 * (-15) = -45 (left: 3 -45)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n3 - 18 = -15 (left: -15 3 3)\n3 + (-15) = -12 (left: -12 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n3 - 18 = -15 (left: -15 3 3)\n3 / (-15) = -0.2 (left: 3 -0.2)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 3 = 6 (left: 6 9 2)\n6 + 9 = 15 (left: 15 2)\n15 - 2 = 13 (left: 13)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 3 = 6 (left: 6 9 2)\n6 + 9 = 15 (left: 15 2)\n15 / 2 = 7.5 (left: 7.5)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 3 = 6 (left: 6 9 2)\n6 + 9 = 15 (left: 15 2)\n15 * 2 = 30 (left: 30)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 3 = 6 (left: 6 9 2)\n6 + 9 = 15 (left: 15 2)\n15 + 2 = 17 (left: 17)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 3 = 6 (left: 6 9 2)\n6 * 9 = 54 (left: 54 2)\n54 + 2 = 56 (left: 56)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 3 = 6 (left: 6 9 2)\n6 * 9 = 54 (left: 54 2)\n54 - 2 = 52 (left: 52)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 3 = 6 (left: 6 9 2)\n6 * 9 = 54 (left: 54 2)\n54 * 2 = 108 (left: 108)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 3 = 6 (left: 6 9 2)\n6 * 9 = 54 (left: 54 2)\n54 / 2 = 27 (left: 27)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 2 = 5 (left: 3 9 5)\n3 + 9 = 12 (left: 5 12)\n5 + 12 = 17 (left: 12 17)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 2 = 5 (left: 3 9 5)\n3 + 9 = 12 (left: 5 12)\n12 - 5 = 7 (left: 7 12)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 2 = 5 (left: 3 9 5)\n3 + 9 = 12 (left: 5 12)\n5 * 12 = 60 (left: 12 60)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 2 = 5 (left: 3 9 5)\n3 + 9 = 12 (left: 5 12)\n12 / 5 = 2 (left: 2 12)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    100
                ],
                "select_new_ys": [
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n3 + 15 = 18 (left: 3 18 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 2 = 5 (left: 3 9 5)\n3 + 9 = 12 (left: 5 12)\n12 / 5 = 2 (left: 2 12)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 / 3 = 5 (left: 3 5 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n3 * 15 = 45 (left: 3 45 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 - 3 = 12 (left: 3 12 3)\n"
                ]
            },
            {
                "step": 4,
                "x": "4 7 11 12",
                "ys": [
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n3 + 15 = 18 (left: 3 18 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 2 = 5 (left: 3 9 5)\n3 + 9 = 12 (left: 5 12)\n12 / 5 = 2 (left: 2 12)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 / 3 = 5 (left: 3 5 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n3 * 15 = 45 (left: 3 45 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 - 3 = 12 (left: 3 12 3)\n"
                ],
                "new_ys": [
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n3 + 15 = 18 (left: 3 18 3)\n3 * 3 = 9 (left: 9 18)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n3 + 15 = 18 (left: 3 18 3)\n18 / 3 = 6 (left: 6 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n3 + 15 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 15 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 2 = 5 (left: 3 9 5)\n3 + 9 = 12 (left: 5 12)\n12 / 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 12 14)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 2 = 5 (left: 3 9 5)\n3 + 9 = 12 (left: 5 12)\n12 / 5 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n3 + 2 = 5 (left: 3 9 5)\n3 + 9 = 12 (left: 5 12)\n12 / 5 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 / 3 = 5 (left: 3 5 3)\n3 + 5 = 8 (left: 3 8)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 / 3 = 5 (left: 3 5 3)\n5 - 3 = 2 (left: 2 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 / 3 = 5 (left: 3 5 3)\n3 * 5 = 15 (left: 3 15)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n3 * 15 = 45 (left: 3 45 3)\n3 + 45 = 48 (left: 3 48 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n3 * 15 = 45 (left: 3 45 3)\n3 * 45 = 135 (left: 3 135 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n3 * 15 = 45 (left: 3 45 3)\n3 / 45 = 0.07 (left: 3 0.07 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n3 * 15 = 45 (left: 3 45 3)\n45 - 3 = 42 (left: 3 42 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 - 3 = 12 (left: 3 12 3)\n3 + 12 = 15 (left: 3 15 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 - 3 = 12 (left: 3 12 3)\n12 / 3 = 4 (left: 3 4 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 - 3 = 12 (left: 3 12 3)\n3 * 12 = 36 (left: 3 36 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 - 3 = 12 (left: 3 12 3)\n12 - 3 = 9 (left: 3 9 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 / 3 = 5 (left: 3 5 3)\n3 + 5 = 8 (left: 3 8)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 - 3 = 12 (left: 3 12 3)\n3 + 12 = 15 (left: 3 15 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 - 3 = 12 (left: 3 12 3)\n12 - 3 = 9 (left: 3 9 3)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n3 + 15 = 18 (left: 3 18 3)\n3 * 3 = 9 (left: 9 18)\n",
                    "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n3 + 15 = 18 (left: 3 18 3)\n18 / 3 = 6 (left: 6 3)\n"
                ]
            }
        ],
        "idx": 848,
        "ys": [
            "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 / 3 = 5 (left: 3 5 3)\n3 + 5 = 8 (left: 3 8)\n",
            "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 - 3 = 12 (left: 3 12 3)\n3 + 12 = 15 (left: 3 15 3)\n",
            "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n15 - 3 = 12 (left: 3 12 3)\n12 - 3 = 9 (left: 3 9 3)\n",
            "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n3 + 15 = 18 (left: 3 18 3)\n3 * 3 = 9 (left: 9 18)\n",
            "12 - 11 = 1 (left: 4 7 1)\n9 * 2 = 18 (left: 3 18 3)\n18 - 3 = 15 (left: 3 15 3)\n3 + 15 = 18 (left: 3 18 3)\n18 / 3 = 6 (left: 6 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 7668,
            "prompt_tokens": 23940,
            "cost": 0.05124600000000001
        },
        "time_spent": 44.706485986709595
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 4 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 4 9)\n",
                    "2 * 2 = 4 (left: 4 4 9)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "9 / 3 = 3 (left: 2 4 3)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n",
                    "2 * 2 = 4 (left: 4 4 9)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 4 9",
                "ys": [
                    "9 / 3 = 3 (left: 2 4 3)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n",
                    "2 * 2 = 4 (left: 4 4 9)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n"
                ],
                "new_ys": [
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n4 - 2 = 2 (left: 2 3)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n4 / 2 = 2 (left: 2 3)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 / 4 = 1 (left: 1 9)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n9 / 4 = 2 (left: 4 2)\n",
                    "2 * 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n",
                    "2 * 2 = 4 (left: 4 4 9)\n4 / 4 = 1 (left: 1 9)\n",
                    "2 * 2 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)\n",
                    "2 * 2 = 4 (left: 4 4 9)\n9 / 4 = 2 (left: 2 4)\n",
                    "2 * 2 = 4 (left: 4 4 9)\n9 + 4 = 13 (left: 4 13)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n2 + 4 = 6 (left: 6 7)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n4 * 7 = 28 (left: 2 28)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n7 - 4 = 3 (left: 2 3)\n",
                    "9 - 2 = 7 (left: 2 4 7)\nInput: 3 3 6 8\n",
                    "9 - 2 = 7 (left: 2 4 7)\nPossible next steps:\n",
                    "9 - 2 = 7 (left: 2 4 7)\n3 + 3 = 6 (left: 6 6 8)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n3 * 6 = 18 (left: 3 18 8)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n3 + 6 = 9 (left: 3 8 9)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n3 / 3 = 1 (left: 1 6 8)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 + 8 = 14 (left: 3 6 14)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n8 - 3 = 5 (left: 3 5 6)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n8 / 3 = 2 (left: 2 3 6)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 - 3 = 3 (left: 3 3 8)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n3 + 6 = 9 (left: 3 8 9)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 4 9",
                "ys": [
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n3 + 6 = 9 (left: 3 8 9)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n"
                ],
                "new_ys": [
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n3 + 6 = 9 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n3 + 6 = 9 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n3 + 6 = 9 (left: 3 8 9)\n8 + 9 = 17 (left: 3 17 9)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n3 + 6 = 9 (left: 3 8 9)\n3 - 8 = -5 (left: -5 8 9)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n48 / 8 = 6 (left: 3 6)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n6 / 3 = 2 (left: 2 6)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n8 - 9 = -1 (left: -1)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n8 / 9 = 0.89 (left: 0.89)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n3 + 6 = 9 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 4 9",
                "ys": [
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n3 + 6 = 9 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n"
                ],
                "new_ys": [
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 * 2 = 48 (left: 24 48)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 / 2 = 12 (left: 12 48)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3 18)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n11 - 8 = 3 (left: 3)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 * 11 = 88 (left: 88)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n11 / 8 = 1.375 (left: 1.375)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 13)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n8 - 5 = 3 (left: 3)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n3 + 6 = 9 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 - 9 = -1 (left: -1 11)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n3 + 6 = 9 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n3 + 6 = 9 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 * 9 = 72 (left: 72 11)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n3 + 6 = 9 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n3 + 6 = 9 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 + 8 = 17 (left: 17 11)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n3 + 6 = 9 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 * 8 = 72 (left: 72 11)\n"
                ],
                "values": [
                    100,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 * 2 = 48 (left: 24 48)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 / 2 = 12 (left: 12 48)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3 18)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 2 4 9",
                "ys": [
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 * 2 = 48 (left: 24 48)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 / 2 = 12 (left: 12 48)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3 18)\n"
                ],
                "new_ys": [
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 * 2 = 48 (left: 24 48)\n24 + 48 = 72 (left: 72)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 * 2 = 48 (left: 24 48)\n24 - 48 = -24 (left: -24)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 * 2 = 48 (left: 24 48)\n24 * 48 = 1152 (left: 1152)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 * 2 = 48 (left: 24 48)\n48 / 24 = 2 (left: 2)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 * 2 = 48 (left: 24 48)\n  \n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 * 2 = 48 (left: 24 48)\nInput: 3 3 3 3\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 * 2 = 48 (left: 24 48)\nPossible next steps:\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 * 2 = 48 (left: 24 48)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 * 2 = 48 (left: 24 48)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 * 2 = 48 (left: 24 48)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 * 2 = 48 (left: 24 48)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (9 / 3) * (2 + 4) = 24\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 / 2 = 12 (left: 12 48)\n12 + 48 = 60 (left: 60)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 / 2 = 12 (left: 12 48)\n12 * 48 = 576 (left: 576)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 / 2 = 12 (left: 12 48)\n48 / 12 = 4 (left: 4 12)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 / 2 = 12 (left: 12 48)\n48 - 12 = 36 (left: 36)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 / 2 = 12 (left: 12 48)\n\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n12 * 18 = 216 (left: 216)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n18 / 12 = 1.5 (left: 1.5 18)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\nInput: 4 6 7 7\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\nPossible next steps:\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n4 + 6 = 10 (left: 10 7 7)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n6 + 7 = 13 (left: 4 13 7)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n7 + 4 = 11 (left: 11 7 7)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n4 * 6 = 24 (left: 24 7 7)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n6 * 7 = 42 (left: 4 42 7)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n7 * 4 = 28 (left: 28 7 7)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n4 - 6 = -2 (left: -2 6 7)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n6 - 7 = -1 (left: 4 -1 7)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n7 - 4 = 3 (left: 3 7 7)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6 7)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n6 / 7 = 0.8571428571428571 (left: 4 0.8571428571428571 7)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n7 / 4 = 1.75 (left: 1.75 7 7)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3 18)\n3 * 18 = 54 (left: 18 54)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3 18)\n18 / 3 = 6 (left: 6 18)\n"
                ],
                "values": [
                    0,
                    50,
                    0,
                    0,
                    100,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    100,
                    100,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    100
                ],
                "select_new_ys": [
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 * 2 = 48 (left: 24 48)\n  \n",
                    "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 * 2 = 48 (left: 24 48)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n4 + 6 = 10 (left: 10 7 7)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n6 + 7 = 13 (left: 4 13 7)\n"
                ]
            }
        ],
        "idx": 849,
        "ys": [
            "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 * 2 = 48 (left: 24 48)\n  \n",
            "9 - 2 = 7 (left: 2 4 7)\n6 * 8 = 48 (left: 3 48 8)\n3 * 8 = 24 (left: 24 48)\n24 * 2 = 48 (left: 24 48)\n3 + 3 = 6 (left: 3 6 3 3)\n",
            "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
            "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n4 + 6 = 10 (left: 10 7 7)\n",
            "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n6 + 7 = 13 (left: 4 13 7)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 9190,
            "prompt_tokens": 28907,
            "cost": 0.061740500000000004
        },
        "time_spent": 34.21707820892334
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 6 8 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n"
                ],
                "values": [
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 6 8 8",
                "ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n"
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64)\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 + 4 = 10 (left: 8 10)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8 14)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n6 * 8 = 48 (left: 8 8 48)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 / 6 = 1 (left: 1 8 8)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n8 / 4 = 2 (left: 2 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 6 8 8",
                "ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n8 / 4 = 2 (left: 2 8)\n"
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 128)\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 * 8 = 128 (left: 128)\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n10 - 8 = 2 (left: 2)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n8 * 10 = 80 (left: 80)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n8 / 10 = 0.8 (left: 0.8)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n8 * 3 = 24 (left: 8 24)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n8 / 3 = 2.67 (left: 2.67 24)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\nInput: 3 3 3 3\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\nPossible next steps:\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n8 / 4 = 2 (left: 2 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n8 / 4 = 2 (left: 2 8)\n8 / 2 = 4 (left: 2 4)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 6 8 8",
                "ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n"
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: ((2 + 6) + 8) + 8 = 24\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n3 * 3 = 9 (left: 3 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 * 10 = 80 (left: 80)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n10 / 8 = 1.25 (left: 1.25)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n10 - 8 = 2 (left: 2)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n8 - 6 = 2 (left: 2)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n8 / 6 = 1.33 (left: 1.33)\n"
                ],
                "values": [
                    1000,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: ((2 + 6) + 8) + 8 = 24\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 6 8 8",
                "ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: ((2 + 6) + 8) + 8 = 24\n",
                    "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n"
                ],
                "new_ys": null,
                "values": null,
                "select_new_ys": null
            }
        ],
        "idx": 850,
        "ys": [
            "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: ((2 + 6) + 8) + 8 = 24\n",
            "8 - 2 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
            "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
            "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
            "6 - 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 9975,
            "prompt_tokens": 32469,
            "cost": 0.0686535
        },
        "time_spent": 20.1990909576416
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 5 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n",
                    "5 + 4 = 9 (left: 5 7 9)\n",
                    "5 / 5 = 1 (left: 4 7 1)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n",
                    "7 - 5 = 2 (left: 2 5 5)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n",
                    "5 + 4 = 9 (left: 5 7 9)\n",
                    "5 / 5 = 1 (left: 4 7 1)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n",
                    "7 - 5 = 2 (left: 2 5 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 5 7",
                "ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n",
                    "5 + 4 = 9 (left: 5 7 9)\n",
                    "5 / 5 = 1 (left: 4 7 1)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n",
                    "7 - 5 = 2 (left: 2 5 5)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 + 5 = 12 (left: 9 12)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 / 5 = 1.4 (left: 1.4 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\nInput: 3 3 3 3\n",
                    "4 + 5 = 9 (left: 5 7 9)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "5 + 4 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "5 + 4 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n",
                    "5 + 4 = 9 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n",
                    "5 + 4 = 9 (left: 5 7 9)\n7 / 5 = 1.4 (left: 1.4 9)\n",
                    "5 + 4 = 9 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n",
                    "5 + 4 = 9 (left: 5 7 9)\n9 * 5 = 45 (left: 7 45)\n",
                    "5 / 5 = 1 (left: 4 7 1)\n4 + 7 = 11 (left: 1 11)\n",
                    "5 / 5 = 1 (left: 4 7 1)\n7 - 4 = 3 (left: 1 3)\n",
                    "5 / 5 = 1 (left: 4 7 1)\n4 * 7 = 28 (left: 1 28)\n",
                    "5 / 5 = 1 (left: 4 7 1)\n7 / 4 = 1 (left: 1 1)\n",
                    "5 / 5 = 1 (left: 4 7 1)\n7 + 4 = 11 (left: 1 11)\n",
                    "5 / 5 = 1 (left: 4 7 1)\n7 - 1 = 6 (left: 6)\n",
                    "5 / 5 = 1 (left: 4 7 1)\n4 - 1 = 3 (left: 3)\n",
                    "5 / 5 = 1 (left: 4 7 1)\nInput: 5 5 10 2\n",
                    "5 / 5 = 1 (left: 4 7 1)\nPossible next steps:\n",
                    "5 / 5 = 1 (left: 4 7 1)\n5 + 5 = 10 (left: 10 10 2)\n",
                    "5 / 5 = 1 (left: 4 7 1)\n5 / 5 = 1 (left: 1 10 2)\n",
                    "5 / 5 = 1 (left: 4 7 1)\n10 + 5 = 15 (left: 5 15 2)\n",
                    "5 / 5 = 1 (left: 4 7 1)\n5 * 5 = 25 (left: 10 25 2)\n",
                    "5 / 5 = 1 (left: 4 7 1)\n10 - 5 = 5 (left: 5 5 2)\n",
                    "5 / 5 = 1 (left: 4 7 1)\n5 - 2 = 3 (left: 3 5 5)\n",
                    "5 / 5 = 1 (left: 4 7 1)\n10 / 2 = 5 (left: 5 5 5)\n",
                    "5 / 5 = 1 (left: 4 7 1)\n5 - 5 = 0 (left: 0 10 2)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 * 7 = 35 (left: 1 35)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n7 - 1 = 6 (left: 5 6)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n7 - 5 = 2 (left: 1 2)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n7 / 1 = 7 (left: 5 7)\n",
                    "7 - 5 = 2 (left: 2 5 5)\n5 - 2 = 3 (left: 3 5 5)\n",
                    "7 - 5 = 2 (left: 2 5 5)\n5 * 2 = 10 (left: 5 5 10)\n",
                    "7 - 5 = 2 (left: 2 5 5)\n5 / 2 = 2.5 (left: 2.5 5 5)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 + 5 = 12 (left: 9 12)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 5 7",
                "ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 + 5 = 12 (left: 9 12)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 + 3 = 12 (left: 3 12)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 / 3 = 3 (left: 3 3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 * 3 = 27 (left: 3 27)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 - 3 = 6 (left: 3 6)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 / 9 = 1 (left: 1 12)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n35 + 9 = 44 (left: 44)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n35 - 9 = 26 (left: 26)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n35 * 9 = 315 (left: 315)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n35 / 9 = 3.89 (left: 3.89)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\nInput: 4 4 8 2\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 * 4 = 16 (left: 16 8 2)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 / 4 = 1 (left: 1 8 2)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n8 - 4 = 4 (left: 4 4 2)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 + 5 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 + 5 = 12 (left: 9 12)\n9 - 12 = -3 (left: -3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 + 5 = 12 (left: 9 12)\n9 * 12 = 108 (left: 108)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 + 5 = 12 (left: 9 12)\n9 / 12 = 0.75 (left: 0.75)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n2 + 9 = 11 (left: 9 11)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n9 - 2 = 7 (left: 7 9)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    100,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 * 3 = 27 (left: 3 27)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 * 4 = 16 (left: 16 8 2)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 + 3 = 12 (left: 3 12)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 - 3 = 6 (left: 3 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 5 7",
                "ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 * 3 = 27 (left: 3 27)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 * 4 = 16 (left: 16 8 2)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 + 3 = 12 (left: 3 12)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 - 3 = 6 (left: 3 6)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 * 3 = 27 (left: 3 27)\n3 * 27 = 81 (left: 81)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 * 3 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n8 + 8 = 16 (left: 2 16)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n8 / 8 = 1 (left: 1 2)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n8 - 8 = 0 (left: 0 2)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\nInput: 3 6 2 5\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n3 + 6 = 9 (left: 2 5 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n6 / 2 = 3 (left: 3 3 5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n5 + 2 = 7 (left: 3 6 7)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n3 * 6 = 18 (left: 2 5 18)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n3 - 2 = 1 (left: 1 5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n6 - 2 = 4 (left: 3 4 5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n6 + 2 = 8 (left: 3 5 8)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n5 - 2 = 3 (left: 3 3 8)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 * 4 = 16 (left: 16 8 2)\n16 + 8 = 24 (left: 8 2 24)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 * 4 = 16 (left: 16 8 2)\n16 / 8 = 2 (left: 2 2 8)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 * 4 = 16 (left: 16 8 2)\n16 - 8 = 8 (left: 8 2 8)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 + 3 = 12 (left: 3 12)\n3 * 3 = 9 (left: 9 12)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 + 3 = 12 (left: 3 12)\n12 - 3 = 9 (left: 3 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 - 3 = 6 (left: 3 6)\n3 + 6 = 9 (left: 6 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 - 3 = 6 (left: 3 6)\n6 / 3 = 2 (left: 2 6)\n"
                ],
                "values": [
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 * 4 = 16 (left: 16 8 2)\n16 - 8 = 8 (left: 8 2 8)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 * 3 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n8 + 8 = 16 (left: 2 16)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n3 + 6 = 9 (left: 2 5 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n6 / 2 = 3 (left: 3 3 5)\n"
                ]
            },
            {
                "step": 4,
                "x": "4 5 5 7",
                "ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 * 4 = 16 (left: 16 8 2)\n16 - 8 = 8 (left: 8 2 8)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 * 3 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n8 + 8 = 16 (left: 2 16)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n3 + 6 = 9 (left: 2 5 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n6 / 2 = 3 (left: 3 3 5)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 * 4 = 16 (left: 16 8 2)\n16 - 8 = 8 (left: 8 2 8)\n8 + 2 = 10 (left: 2 8 10)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 * 4 = 16 (left: 16 8 2)\n16 - 8 = 8 (left: 8 2 8)\n8 / 2 = 4 (left: 4 8 8)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 * 4 = 16 (left: 16 8 2)\n16 - 8 = 8 (left: 8 2 8)\n8 * 2 = 16 (left: 8 8 16)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 * 4 = 16 (left: 16 8 2)\n16 - 8 = 8 (left: 8 2 8)\n8 - 2 = 6 (left: 6 8 8)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 * 3 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n9 * 3 = 27 (left: 9 27)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 * 3 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n27 / 9 = 3 (left: 3 27)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n8 + 8 = 16 (left: 2 16)\n2 * 16 = 32 (left: 32)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n8 + 8 = 16 (left: 2 16)\n16 / 2 = 8 (left: 8 16)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n3 + 6 = 9 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n3 + 6 = 9 (left: 2 5 9)\n9 - 5 = 4 (left: 4 5 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n3 + 6 = 9 (left: 2 5 9)\n9 + 2 = 11 (left: 5 9 11)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n6 / 2 = 3 (left: 3 3 5)\n3 + 3 = 6 (left: 5 6)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n6 / 2 = 3 (left: 3 3 5)\n3 * 3 = 9 (left: 5 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n6 / 2 = 3 (left: 3 3 5)\n3 - 3 = 0 (left: 0 5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n6 / 2 = 3 (left: 3 3 5)\n3 / 3 = 1 (left: 1 5)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 * 4 = 16 (left: 16 8 2)\n16 - 8 = 8 (left: 8 2 8)\n8 / 2 = 4 (left: 4 8 8)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 * 3 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n27 / 9 = 3 (left: 3 27)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n8 + 8 = 16 (left: 2 16)\n16 / 2 = 8 (left: 8 16)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n3 + 6 = 9 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 * 4 = 16 (left: 16 8 2)\n16 - 8 = 8 (left: 8 2 8)\n8 + 2 = 10 (left: 2 8 10)\n"
                ]
            }
        ],
        "idx": 851,
        "ys": [
            "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 * 4 = 16 (left: 16 8 2)\n16 - 8 = 8 (left: 8 2 8)\n8 / 2 = 4 (left: 4 8 8)\n",
            "4 + 5 = 9 (left: 5 7 9)\n3 * 3 = 9 (left: 9 3 3)\n9 * 3 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n27 / 9 = 3 (left: 3 27)\n",
            "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n8 + 8 = 16 (left: 2 16)\n16 / 2 = 8 (left: 8 16)\n",
            "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 + 4 = 8 (left: 8 8 2)\n3 + 6 = 9 (left: 2 5 9)\n5 - 2 = 3 (left: 3 5 9)\n",
            "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 35 9)\n4 * 4 = 16 (left: 16 8 2)\n16 - 8 = 8 (left: 8 2 8)\n8 + 2 = 10 (left: 2 8 10)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 11598,
            "prompt_tokens": 37346,
            "cost": 0.07921500000000001
        },
        "time_spent": 36.6854190826416
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 2 11 11)\n",
                    "2 * 3 = 6 (left: 6 8 11)\n",
                    "8 - 3 = 5 (left: 2 5 11)\n"
                ],
                "values": [
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 8 = 11 (left: 2 11 11)\n",
                    "2 * 3 = 6 (left: 6 8 11)\n",
                    "8 - 3 = 5 (left: 2 5 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 8 11",
                "ys": [
                    "3 + 8 = 11 (left: 2 11 11)\n",
                    "2 * 3 = 6 (left: 6 8 11)\n",
                    "8 - 3 = 5 (left: 2 5 11)\n"
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 / 2 = 5.5 (left: 5.5 11)\n",
                    "2 * 3 = 6 (left: 6 8 11)\n6 + 8 = 14 (left: 8 11 14)\n",
                    "2 * 3 = 6 (left: 6 8 11)\n8 - 6 = 2 (left: 2 8 11)\n",
                    "8 - 3 = 5 (left: 2 5 11)\n5 - 2 = 3 (left: 2 3 11)\n",
                    "8 - 3 = 5 (left: 2 5 11)\n11 - 5 = 6 (left: 2 6 11)\n",
                    "8 - 3 = 5 (left: 2 5 11)\n11 - 2 = 9 (left: 2 9 11)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "2 * 3 = 6 (left: 6 8 11)\n6 + 8 = 14 (left: 8 11 14)\n",
                    "2 * 3 = 6 (left: 6 8 11)\n8 - 6 = 2 (left: 2 8 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 8 11",
                "ys": [
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "2 * 3 = 6 (left: 6 8 11)\n6 + 8 = 14 (left: 8 11 14)\n",
                    "2 * 3 = 6 (left: 6 8 11)\n8 - 6 = 2 (left: 2 8 11)\n"
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 * 13 = 143 (left: 143)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 + 22 = 33 (left: 33)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 - 22 = -11 (left: -11)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 / 22 = 0.5 (left: 0.5)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 * 22 = 242 (left: 242)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n11 / 9 = 1.22 (left: 1.22 11)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n11 * 9 = 99 (left: 99)\n",
                    "2 * 3 = 6 (left: 6 8 11)\n6 + 8 = 14 (left: 8 11 14)\n8 + 11 = 19 (left: 14 19)\n",
                    "2 * 3 = 6 (left: 6 8 11)\n6 + 8 = 14 (left: 8 11 14)\n8 - 11 = -3 (left: -3 14)\n",
                    "2 * 3 = 6 (left: 6 8 11)\n6 + 8 = 14 (left: 8 11 14)\n8 * 11 = 88 (left: 14 88)\n",
                    "2 * 3 = 6 (left: 6 8 11)\n6 + 8 = 14 (left: 8 11 14)\n8 / 11 = 0.73 (left: 0.73 14)\n",
                    "2 * 3 = 6 (left: 6 8 11)\n8 - 6 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n",
                    "2 * 3 = 6 (left: 6 8 11)\n8 - 6 = 2 (left: 2 8 11)\n8 - 2 = 6 (left: 6 11)\n",
                    "2 * 3 = 6 (left: 6 8 11)\n8 - 6 = 2 (left: 2 8 11)\n11 - 2 = 9 (left: 8 9)\n",
                    "2 * 3 = 6 (left: 6 8 11)\n8 - 6 = 2 (left: 2 8 11)\n2 * 8 = 16 (left: 16 11)\n",
                    "2 * 3 = 6 (left: 6 8 11)\n8 - 6 = 2 (left: 2 8 11)\n8 / 2 = 4 (left: 4 11)\n"
                ],
                "values": [
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 + 22 = 33 (left: 33)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 - 22 = -11 (left: -11)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 8 11",
                "ys": [
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 + 22 = 33 (left: 33)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 - 22 = -11 (left: -11)\n"
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 * 11 = 143 (left: 143)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 - 13 = -2 (left: -2)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 / 13 = 0.846 (left: 0.846)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n11 - 11 = 0 (left: 0)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n11 * 11 = 121 (left: 121)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n11 / 11 = 1 (left: 1)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 + 22 = 33 (left: 33)\nInput: 33\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 + 22 = 33 (left: 33)\nPossible next steps:\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 - 22 = -11 (left: -11)\nThere are no possible next steps.\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 3 8 11",
                "ys": [
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\n"
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (3 + 8) + (2 + 11) = 24\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: ((3 + 8) + 11) + 2 = 24\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n13 + 15 = 28 (left: 28)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n15 - 13 = 2 (left: 2 15)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n15 / 13 = 1.15 (left: 1.15 15)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n15 * 13 = 195 (left: 195)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\nInput: 3 5 7 8\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\nPossible next steps:\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n3 + 5 = 8 (left: 7 8 8)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n7 + 5 = 12 (left: 3 12 8)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n7 / 3 = 2.33 (left: 2.33 5 8)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n7 - 3 = 4 (left: 4 5 8)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n7 * 3 = 21 (left: 21 5 8)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n8 - 5 = 3 (left: 3 7 8)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n8 / 5 = 1.6 (left: 1.6 7 8)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n8 + 5 = 13 (left: 3 7 13)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n3 * 5 = 15 (left: 7 8 15)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n3 / 5 = 0.6 (left: 0.6 5 7)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n2 + 11 = 13 (left: 13)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n11 - 2 = 9 (left: 9)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n11 / 2 = 5.5 (left: 5.5)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\n22 + 2 = 24 (left: 22 2)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\n22 - 2 = 20 (left: 2 20)\n"
                ],
                "values": [
                    1000,
                    1000,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    100,
                    50
                ],
                "select_new_ys": [
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (3 + 8) + (2 + 11) = 24\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: ((3 + 8) + 11) + 2 = 24\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n7 * 3 = 21 (left: 21 5 8)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\n22 + 2 = 24 (left: 22 2)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n13 + 15 = 28 (left: 28)\n"
                ]
            }
        ],
        "idx": 852,
        "ys": [
            "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (3 + 8) + (2 + 11) = 24\n",
            "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: ((3 + 8) + 11) + 2 = 24\n",
            "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n7 * 3 = 21 (left: 21 5 8)\n",
            "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\n22 + 2 = 24 (left: 22 2)\n",
            "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n13 + 15 = 28 (left: 28)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 12670,
            "prompt_tokens": 42401,
            "cost": 0.0889415
        },
        "time_spent": 26.207118034362793
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 7 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 8 11 13)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n",
                    "13 - 7 = 6 (left: 4 6 8)\n",
                    "13 / 4 = 3 (left: 3 7 8)\n",
                    "13 / 7 = 1 (left: 1 7 8)\n"
                ],
                "values": [
                    50,
                    100,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "7 - 4 = 3 (left: 3 8 13)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n",
                    "13 - 7 = 6 (left: 4 6 8)\n",
                    "13 / 4 = 3 (left: 3 7 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 7 8 13",
                "ys": [
                    "7 - 4 = 3 (left: 3 8 13)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n",
                    "13 - 7 = 6 (left: 4 6 8)\n",
                    "13 / 4 = 3 (left: 3 7 8)\n"
                ],
                "new_ys": [
                    "7 - 4 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 8 11 13)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 8 13 24)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n8 - 3 = 5 (left: 5 8 13)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10 13)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 * 8 = 56 (left: 56 9)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 * 7 = 56 (left: 56 9)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 - 8 = -1 (left: -1 9)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 / 7 = 1 (left: 1 9)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 / 8 = 0 (left: 0 9)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 / 11 = 0.7272727272727273 (left: 0.7272727272727273 13)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 13 = 24 (left: 8 24)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 * 11 = 88 (left: 13 88)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 - 8 = 3 (left: 3 13)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n13 - 8 = 5 (left: 5 13)\n",
                    "13 - 7 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n",
                    "13 - 7 = 6 (left: 4 6 8)\n6 + 8 = 14 (left: 4 14)\n",
                    "13 - 7 = 6 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n",
                    "13 - 7 = 6 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n",
                    "13 - 7 = 6 (left: 4 6 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "13 - 7 = 6 (left: 4 6 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "13 / 4 = 3 (left: 3 7 8)\n3 + 7 = 10 (left: 7 8 10)\n",
                    "13 / 4 = 3 (left: 3 7 8)\n7 - 3 = 4 (left: 4 7 8)\n",
                    "13 / 4 = 3 (left: 3 7 8)\n3 * 7 = 21 (left: 7 8 21)\n",
                    "13 / 4 = 3 (left: 3 7 8)\n7 / 3 = 2 (left: 2 7 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n",
                    "13 / 4 = 3 (left: 3 7 8)\n3 * 7 = 21 (left: 7 8 21)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 8 11 13)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 8 13 24)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 7 8 13",
                "ys": [
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n",
                    "13 / 4 = 3 (left: 3 7 8)\n3 * 7 = 21 (left: 7 8 21)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 8 11 13)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 8 13 24)\n"
                ],
                "new_ys": [
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 / 15 = 0.6 (left: 0.6 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 * 15 = 135 (left: 15 135)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "13 / 4 = 3 (left: 3 7 8)\n3 * 7 = 21 (left: 7 8 21)\n7 + 8 = 15 (left: 15 21)\n",
                    "13 / 4 = 3 (left: 3 7 8)\n3 * 7 = 21 (left: 7 8 21)\n7 * 8 = 56 (left: 21 56)\n",
                    "13 / 4 = 3 (left: 3 7 8)\n3 * 7 = 21 (left: 7 8 21)\n8 + 7 = 15 (left: 15 21)\n",
                    "13 / 4 = 3 (left: 3 7 8)\n3 * 7 = 21 (left: 7 8 21)\n21 - 7 = 14 (left: 14 21)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 8 11 13)\n11 + 13 = 24 (left: 8 24)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 8 11 13)\n8 * 11 = 88 (left: 13 88)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 8 11 13)\n11 * 13 = 143 (left: 8 143)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 8 11 13)\n11 / 8 = 1.375 (left: 1.375 13)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 8 11 13)\n13 - 8 = 5 (left: 5 13)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 8 11 13)\n13 - 11 = 2 (left: 2 13)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 8 13 24)\n8 + 13 = 21 (left: 21 24)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 8 13 24)\n8 - 13 = -5 (left: -5 24)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 8 13 24)\n8 * 13 = 104 (left: 24 104)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 8 13 24)\n13 - 8 = 5 (left: 5 24)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 8 13 24)\n13 / 8 = 1.625 (left: 1.625 24)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 8 13 24)\n13 + 8 = 21 (left: 21 24)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 7 8 13",
                "ys": [
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n"
                ],
                "new_ys": [
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (13 - 4) + (8 + 7) = 24\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: (13 - 4) + (8 + 7) = 24\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15 24)\n15 + 24 = 39 (left: 15 39)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15 24)\n15 - 24 = -9 (left: -9 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15 24)\n15 * 24 = 360 (left: 15 360)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15 24)\n15 / 24 = 0.625 (left: 0.625 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 24)\n9 + 24 = 33 (left: 33)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 24)\n9 * 24 = 216 (left: 216)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9 24)\n24 / 9 = 2.67 (left: 2.67)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n6 + 15 = 21 (left: 15 21)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n15 - 6 = 9 (left: 9 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 15 = 90 (left: 15 90)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n15 / 6 = 2 (left: 2 15)\n"
                ],
                "values": [
                    1000,
                    1000,
                    100,
                    50,
                    100,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    100,
                    0,
                    50
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (13 - 4) + (8 + 7) = 24\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: (13 - 4) + (8 + 7) = 24\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15 24)\n15 + 24 = 39 (left: 15 39)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15 24)\n15 * 24 = 360 (left: 15 360)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n15 - 6 = 9 (left: 9 15)\n"
                ]
            },
            {
                "step": 4,
                "x": "4 7 8 13",
                "ys": [
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (13 - 4) + (8 + 7) = 24\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: (13 - 4) + (8 + 7) = 24\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15 24)\n15 + 24 = 39 (left: 15 39)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15 24)\n15 * 24 = 360 (left: 15 360)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n15 - 6 = 9 (left: 9 15)\n"
                ],
                "new_ys": null,
                "values": null,
                "select_new_ys": null
            }
        ],
        "idx": 853,
        "ys": [
            "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (13 - 4) + (8 + 7) = 24\n",
            "13 - 4 = 9 (left: 7 8 9)\n8 + 7 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: (13 - 4) + (8 + 7) = 24\n",
            "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15 24)\n15 + 24 = 39 (left: 15 39)\n",
            "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15 24)\n15 * 24 = 360 (left: 15 360)\n",
            "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n15 - 6 = 9 (left: 9 15)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 13851,
            "prompt_tokens": 46745,
            "cost": 0.0978195
        },
        "time_spent": 27.044022798538208
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 6 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 8 12 12)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 8 12 12)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 6 8 12",
                "ys": [
                    "6 + 6 = 12 (left: 8 12 12)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n"
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 * 12 = 144 (left: 8 144)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n8 / 1 = 8 (left: 8 12)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n12 + 1 = 13 (left: 8 13)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n1 * 8 = 8 (left: 8 12)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n8 - 1 = 7 (left: 7 12)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n6 / 6 = 1 (left: 1 8)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 8)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 * 12 = 144 (left: 8 144)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n8 / 1 = 8 (left: 8 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 6 8 12",
                "ys": [
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 * 12 = 144 (left: 8 144)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n8 / 1 = 8 (left: 8 12)\n"
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 / 12 = 1.6666666666666667 (left: 12 1.6666666666666667)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 * 12 = 144 (left: 8 144)\n8 * 2 = 16 (left: 16 144)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 * 12 = 144 (left: 8 144)\n8 / 2 = 4 (left: 4 144)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 * 12 = 144 (left: 8 144)\n144 / 8 = 18 (left: 8 18)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n12 / 9 = 1 (left: 1 12)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n8 / 1 = 8 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n8 / 1 = 8 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n8 / 1 = 8 (left: 8 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "6 / 6 = 1 (left: 1 8 12)\n8 / 1 = 8 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 * 12 = 144 (left: 8 144)\n8 / 2 = 4 (left: 4 144)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 * 12 = 144 (left: 8 144)\n144 / 8 = 18 (left: 8 18)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 6 8 12",
                "ys": [
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 * 12 = 144 (left: 8 144)\n8 / 2 = 4 (left: 4 144)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 * 12 = 144 (left: 8 144)\n144 / 8 = 18 (left: 8 18)\n"
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n20 + 32 = 52 (left: 52)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n20 - 32 = -12 (left: -12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n20 / 32 = 0.625 (left: 0.625)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n20 * 32 = 640 (left: 640)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 * 1 = 20 (left: 20 240)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n240 / 1 = 240 (left: 20 240)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n240 - 20 = 220 (left: 20 220)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n8 + 20 = 28 (left: 20 28)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n20 - 8 = 12 (left: 8 12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 * 12 = 144 (left: 8 144)\n8 / 2 = 4 (left: 4 144)\n4 * 144 = 576 (left: 144 576)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 * 12 = 144 (left: 8 144)\n8 / 2 = 4 (left: 4 144)\n144 / 4 = 36 (left: 36 144)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 * 12 = 144 (left: 8 144)\n144 / 8 = 18 (left: 8 18)\n8 + 18 = 26 (left: 26)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 * 12 = 144 (left: 8 144)\n144 / 8 = 18 (left: 8 18)\n18 - 8 = 10 (left: 10)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 * 12 = 144 (left: 8 144)\n144 / 8 = 18 (left: 8 18)\n8 * 18 = 144 (left: 144)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 * 12 = 144 (left: 8 144)\n144 / 8 = 18 (left: 8 18)\n18 / 8 = 2 (left: 2)\n"
                ],
                "values": [
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n20 - 32 = -12 (left: -12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 * 1 = 20 (left: 20 240)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n240 / 1 = 240 (left: 20 240)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n240 - 20 = 220 (left: 20 220)\n"
                ]
            },
            {
                "step": 4,
                "x": "6 6 8 12",
                "ys": [
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n20 - 32 = -12 (left: -12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 * 1 = 20 (left: 20 240)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n240 / 1 = 240 (left: 20 240)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n240 - 20 = 220 (left: 20 220)\n"
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n20 - 32 = -12 (left: -12)\n-12 is not a valid input for the 24 puzzle.\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 * 1 = 20 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 * 1 = 20 (left: 20 240)\n20 * 240 = 4800 (left: 4800)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 * 1 = 20 (left: 20 240)\n240 / 20 = 12 (left: 12 240)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 * 1 = 20 (left: 20 240)\n240 - 20 = 220 (left: 220 240)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n240 / 1 = 240 (left: 20 240)\n20 * 12 = 240 (left: 12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n240 / 1 = 240 (left: 20 240)\n20 * 12 = 240 (left: 12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n240 / 1 = 240 (left: 20 240)\n20 + 220 = 240 (left: 220)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n240 / 1 = 240 (left: 20 240)\n20 + 220 = 240 (left: 220)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\n240 + 260 = 500 (left: 500)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\n240 * 260 = 62400 (left: 62400)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\n260 - 240 = 20 (left: 20)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\n260 / 240 = 1.08333 (left: 1.08333)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\nInput: 5 5 5 5\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\nPossible next steps:\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\n5 + 5 = 10 (left: 5 10 5)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n240 - 20 = 220 (left: 20 220)\n20 * 2 = 40 (left: 40 220)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n240 - 20 = 220 (left: 20 220)\n20 + 2 = 22 (left: 22 220)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n240 - 20 = 220 (left: 20 220)\n20 / 2 = 10 (left: 10 220)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n240 - 20 = 220 (left: 20 220)\n20 - 2 = 18 (left: 18 220)\n"
                ],
                "values": [
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    100,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 * 1 = 20 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 * 1 = 20 (left: 20 240)\n240 / 20 = 12 (left: 12 240)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 * 1 = 20 (left: 20 240)\n240 - 20 = 220 (left: 220 240)\n"
                ]
            }
        ],
        "idx": 854,
        "ys": [
            "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\n5 / 5 = 1 (left: 1 5 5)\n",
            "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\n5 * 5 = 25 (left: 5 5 25)\n",
            "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 * 1 = 20 (left: 20 240)\n20 + 240 = 260 (left: 240 260)\n",
            "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 * 1 = 20 (left: 20 240)\n240 / 20 = 12 (left: 12 240)\n",
            "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n20 * 1 = 20 (left: 20 240)\n240 - 20 = 220 (left: 220 240)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 14948,
            "prompt_tokens": 51142,
            "cost": 0.10660900000000001
        },
        "time_spent": 26.938716888427734
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 8 9 11)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n",
                    "6 + 8 = 14 (left: 9 14 8)\n",
                    "8 - 5 = 3 (left: 6 3 9)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n",
                    "9 - 5 = 4 (left: 4 8 9)\n",
                    "9 / 3 = 3 (left: 5 3 8)\n",
                    "9 - 3 = 6 (left: 5 6 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 8 9 11)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n",
                    "6 + 8 = 14 (left: 9 14 8)\n",
                    "8 - 5 = 3 (left: 6 3 9)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 8 9",
                "ys": [
                    "5 + 6 = 11 (left: 8 9 11)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n",
                    "6 + 8 = 14 (left: 9 14 8)\n",
                    "8 - 5 = 3 (left: 6 3 9)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 * 9 = 72 (left: 72 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 / 8 = 1 (left: 1 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 8 2)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n8 + 9 = 17 (left: 17 30)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n8 * 9 = 72 (left: 72 30)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n9 * 8 = 72 (left: 72 30)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n9 + 8 = 17 (left: 17 30)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n8 - 9 = -1 (left: -1 30)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n9 - 8 = 1 (left: 1 30)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n8 / 9 = 0.89 (left: 0.89 30)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n9 / 8 = 1.13 (left: 1.13 30)\n",
                    "6 + 8 = 14 (left: 9 14 8)\n9 + 14 = 23 (left: 8 23)\n",
                    "6 + 8 = 14 (left: 9 14 8)\n14 - 9 = 5 (left: 5 14)\n",
                    "6 + 8 = 14 (left: 9 14 8)\n9 * 14 = 126 (left: 8 126)\n",
                    "6 + 8 = 14 (left: 9 14 8)\n14 / 9 = 1 (left: 1 14)\n",
                    "6 + 8 = 14 (left: 9 14 8)\n14 + 8 = 22 (left: 8 22)\n",
                    "6 + 8 = 14 (left: 9 14 8)\n8 - 9 = -1 (left: -1 8)\n",
                    "6 + 8 = 14 (left: 9 14 8)\n8 * 14 = 112 (left: 112)\n",
                    "6 + 8 = 14 (left: 9 14 8)\n8 / 14 = 0 (left: 0 8)\n",
                    "8 - 5 = 3 (left: 6 3 9)\n6 + 3 = 9 (left: 9 9)\n",
                    "8 - 5 = 3 (left: 6 3 9)\n6 / 3 = 2 (left: 2 9)\n",
                    "8 - 5 = 3 (left: 6 3 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "8 - 5 = 3 (left: 6 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n6 * 8 = 48 (left: 8 14 48)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n8 + 6 = 14 (left: 14 14)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 - 6 = 8 (left: 8 8 14)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 / 8 = 1 (left: 1 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 8 9",
                "ys": [
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 / 8 = 1 (left: 1 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n"
                ],
                "new_ys": [
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n17 + 11 = 28 (left: 28)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n17 - 11 = 6 (left: 6)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n17 * 11 = 187 (left: 187)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n17 / 11 = 1.55 (left: 1.55)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n1 + 11 = 12 (left: 11 12)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 / 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 1 10)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 / 8 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 / 8 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 / 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 1 12)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n3 + 11 = 14 (left: 11 14)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n17 + 11 = 28 (left: 28)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n1 + 11 = 12 (left: 11 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 6 8 9",
                "ys": [
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n17 + 11 = 28 (left: 28)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n1 + 11 = 12 (left: 11 12)\n"
                ],
                "new_ys": [
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 12 8)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n8 + 3 = 11 (left: 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n3 - 8 = -5 (left: -5)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n3 / 8 = 0.375 (left: 0.375)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n7 + 8 = 15 (left: 8 14 15)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n8 - 7 = 1 (left: 1 8 14)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n7 * 8 = 56 (left: 14 56)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n8 / 7 = 1 (left: 1 8 14)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n14 - 7 = 7 (left: 7 8 14)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n14 / 7 = 2 (left: 2 8 14)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\nInput: 5 5 5 5\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\nPossible next steps:\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 + 5 = 10 (left: 5 10 5)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 * 5 = 25 (left: 5 25 5)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n17 + 11 = 28 (left: 28)\n28 / 2 = 14 (left: 14)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n17 + 11 = 28 (left: 28)\n28 - 2 = 26 (left: 26)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n17 + 11 = 28 (left: 28)\n28 + 2 = 30 (left: 30)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n17 + 11 = 28 (left: 28)\n28 * 2 = 56 (left: 56)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n1 + 11 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n1 + 11 = 12 (left: 11 12)\n11 - 12 = -1 (left: -1)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n1 + 11 = 12 (left: 11 12)\n11 / 12 = 0.9166666666666666 (left: 0.9166666666666666)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n1 + 11 = 12 (left: 11 12)\n11 * 12 = 132 (left: 132)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    0,
                    0,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n14 / 7 = 2 (left: 2 8 14)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 * 5 = 25 (left: 5 25 5)\n"
                ]
            },
            {
                "step": 4,
                "x": "5 6 8 9",
                "ys": [
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n14 / 7 = 2 (left: 2 8 14)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 * 5 = 25 (left: 5 25 5)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((5 + 6) - (11 - 8)) * 8 = 24\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (5 + 6) * (8 - (11 - 3)) = 24\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n14 / 7 = 2 (left: 2 8 14)\n8 / 2 = 4 (left: 2 4 14)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n14 / 7 = 2 (left: 2 8 14)\n14 - 2 = 12 (left: 2 8 12)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n5 * 5 = 25 (left: 1 25)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n5 / 5 = 1 (left: 1 1)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\nInput: 3 3 6 6\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\nPossible next steps:\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n3 + 3 = 6 (left: 6 6 6)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n6 - 3 = 3 (left: 3 6 6)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n6 / 3 = 2 (left: 2 6 6)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n3 * 3 = 9 (left: 6 6 9)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n6 + 3 = 9 (left: 3 9 6)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n6 - 3 = 3 (left: 3 6 6)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n6 / 3 = 2 (left: 2 6 6)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n3 * 6 = 18 (left: 3 6 18)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 * 5 = 25 (left: 5 25 5)\n5 + 25 = 30 (left: 5 30)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 * 5 = 25 (left: 5 25 5)\n25 / 5 = 5 (left: 5 5)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 * 5 = 25 (left: 5 25 5)\n25 - 5 = 20 (left: 5 20)\n"
                ],
                "values": [
                    0,
                    0,
                    100,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n14 / 7 = 2 (left: 2 8 14)\n8 / 2 = 4 (left: 2 4 14)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n5 * 5 = 25 (left: 1 25)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n6 - 3 = 3 (left: 3 6 6)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n14 / 7 = 2 (left: 2 8 14)\n14 - 2 = 12 (left: 2 8 12)\n",
                    "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n"
                ]
            }
        ],
        "idx": 855,
        "ys": [
            "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n14 / 7 = 2 (left: 2 8 14)\n8 / 2 = 4 (left: 2 4 14)\n",
            "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n5 * 5 = 25 (left: 1 25)\n",
            "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n6 - 3 = 3 (left: 3 6 6)\n",
            "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n14 / 7 = 2 (left: 2 8 14)\n14 - 2 = 12 (left: 2 8 12)\n",
            "9 + 5 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8 14)\n5 / 5 = 1 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 16567,
            "prompt_tokens": 56675,
            "cost": 0.11814649999999999
        },
        "time_spent": 34.750345945358276
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 5 6 9)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n"
                ],
                "values": [
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 5 9",
                "ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n"
                ],
                "new_ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 + 9 = 17 (left: 3 17 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n5 * 6 = 30 (left: 30 9)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n6 - 5 = 1 (left: 1 9)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n6 / 5 = 1.2 (left: 1.2 9)\n",
                    "3 + 3 = 6 (left: 5 6 9)\nInput: 3 3 7 7\n",
                    "3 + 3 = 6 (left: 5 6 9)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 5 6 9)\n3 + 3 = 6 (left: 6 7 7)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n3 * 3 = 9 (left: 9 7 7)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n3 / 3 = 1 (left: 1 7 7)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n7 - 3 = 4 (left: 4 7 7)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n7 / 3 = 2.3333333333333335 (left: 2.3333333333333335 7 7)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n7 - 3 = 4 (left: 4 7 7)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n7 / 3 = 2.3333333333333335 (left: 2.3333333333333335 7 7)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n5 + 9 = 14 (left: 9 14)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n5 * 9 = 45 (left: 45 9)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n9 - 5 = 4 (left: 4 9)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n9 / 5 = 1 (left: 1 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 + 9 = 17 (left: 3 17 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 5 9",
                "ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 + 9 = 17 (left: 3 17 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n"
                ],
                "new_ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 - 9 = -1 (left: -1 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 * 9 = 72 (left: 72 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 / 8 = 1.125 (left: 1.125 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 + 8 = 17 (left: 17 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n8 + 9 = 17 (left: 17 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 * 8 = 72 (left: 72 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 / 8 = 1.125 (left: 1.125 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\nInput: 3 3 8 8\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\nPossible next steps:\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n3 * 3 = 9 (left: 8 9 8)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n3 / 3 = 1 (left: 1 8 8)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 8 8)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 + 9 = 17 (left: 3 17 9)\n3 + 17 = 20 (left: 9 20)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 + 9 = 17 (left: 3 17 9)\n3 * 17 = 51 (left: 9 51)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 + 9 = 17 (left: 3 17 9)\n17 - 3 = 14 (left: 9 14)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 + 9 = 17 (left: 3 17 9)\n17 / 3 = 5 (left: 5 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 + 9 = 17 (left: 3 17 9)\n9 + 3 = 12 (left: 12 17)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 + 9 = 17 (left: 3 17 9)\n9 * 3 = 27 (left: 17 27)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n8 / 5 = 1 (left: 1 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n9 * 5 = 45 (left: 8 45)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n9 + 11 = 20 (left: 11 20)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n11 / 9 = 1 (left: 1 11)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n11 * 9 = 99 (left: 9 99)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 - 9 = -1 (left: -1 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 + 8 = 17 (left: 17 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 5 9",
                "ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 - 9 = -1 (left: -1 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 + 8 = 17 (left: 17 11)\n"
                ],
                "new_ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 - 9 = -1 (left: -1 11)\n-1 + 11 = 10 (left: 10)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 - 9 = -1 (left: -1 11)\n11 - (-1) = 12 (left: 12)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 - 9 = -1 (left: -1 11)\n-1 * 11 = -11 (left: -11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 - 9 = -1 (left: -1 11)\n11 / -1 = -11 (left: -11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n17 + 11 = 28 (left: 28)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n17 - 11 = 6 (left: 6)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n17 * 11 = 187 (left: 187)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n17 / 11 = 1.55 (left: 1.55)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 + 8 = 17 (left: 17 11)\n17 + 11 = 28 (left: 28)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 + 8 = 17 (left: 17 11)\n17 - 11 = 6 (left: 6)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 + 8 = 17 (left: 17 11)\n17 * 11 = 187 (left: 187)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 + 8 = 17 (left: 17 11)\n17 / 11 = 1 (left: 1)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 + 8 = 17 (left: 17 11)\n11 + 17 = 28 (left: 28)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 + 8 = 17 (left: 17 11)\n11 - 17 = -6 (left: -6)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 4,
                "x": "3 3 5 9",
                "ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (3 + 5) * (3 * 8) = 24\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\nInput: 3 3 8 8\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\nPossible next steps:\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n3 * 3 = 9 (left: 8 8 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n8 + 3 = 11 (left: 3 8 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n3 - 8 = -5 (left: -5 3 8)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n3 / 3 = 1 (left: 1 8 8)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n8 * 3 = 24 (left: 8 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\nInput: 3 3 3 3\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\nPossible next steps:\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\nInput: 5 5 5 5\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\nPossible next steps:\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\nOutput:\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\nNo possible next steps.\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\nPossible next steps:\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n12 * 1 = 12 (left: 1)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n12 / 1 = 12 (left: 1)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\nInput: 3 6 6 9\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\nPossible next steps:\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n3 + 6 = 9 (left: 6 9 6)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n9 - 6 = 3 (left: 3 6 6)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n6 / 3 = 2 (left: 2 6 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n9 - 3 = 6 (left: 6 6 6)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n3 * 6 = 18 (left: 6 9 18)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n9 / 3 = 3 (left: 3 6 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n6 + 3 = 9 (left: 3 9 6)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n9 / 6 = 1 (left: 1 6 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n9 + 6 = 15 (left: 6 6 15)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n6 - 3 = 3 (left: 3 6 15)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n9 - 6 = 3 (left: 3 6 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n6 / 3 = 2 (left: 2 6 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n9 - 3 = 6 (left: 6 6 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n6 * 3 = 18 (left: 6 9 18)\n"
                ],
                "values": [
                    0,
                    100,
                    100,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    100,
                    100,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n5 / 5 = 1 (left: 1 5 5)\n"
                ]
            }
        ],
        "idx": 856,
        "ys": [
            "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
            "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\n",
            "5 + 3 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n9 - 8 = 1 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n8 / 3 = 2 (left: 2 8 8)\n",
            "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n3 * 3 = 9 (left: 3 3 9)\n",
            "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n5 / 5 = 1 (left: 1 5 5)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 18504,
            "prompt_tokens": 61407,
            "cost": 0.1291185
        },
        "time_spent": 39.3734450340271
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 7 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 * 5 = 20 (left: 7 11 20)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n",
                    "7 + 11 = 18 (left: 4 5 18)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n",
                    "11 - 5 = 6 (left: 4 6 11)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "4 * 5 = 20 (left: 7 11 20)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n",
                    "7 + 11 = 18 (left: 4 5 18)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 7 11",
                "ys": [
                    "4 * 5 = 20 (left: 7 11 20)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n",
                    "7 + 11 = 18 (left: 4 5 18)\n"
                ],
                "new_ys": [
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 * 11 = 77 (left: 77 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 * 7 = 77 (left: 77 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n20 - 7 = 13 (left: 7 13 20)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 + 7 = 12 (left: 11 12)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 + 11 = 18 (left: 5 18)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 * 11 = 77 (left: 5 77)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n11 - 7 = 4 (left: 4 11)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n7 + 9 = 16 (left: 11 16)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n9 + 11 = 20 (left: 7 20)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n7 * 9 = 63 (left: 11 63)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n9 - 7 = 2 (left: 2 11)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n11 - 7 = 4 (left: 4 11)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n7 / 9 = 0.7777777777777778 (left: 0.7777777777777778 11)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n9 / 11 = 0.8181818181818182 (left: 7 0.8181818181818182)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n4 + 11 = 15 (left: 15 12)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n11 - 4 = 7 (left: 7 12)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n4 * 11 = 44 (left: 44 12)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n11 + 4 = 15 (left: 15 12)\n",
                    "7 + 11 = 18 (left: 4 5 18)\n4 + 5 = 9 (left: 9 18)\n",
                    "7 + 11 = 18 (left: 4 5 18)\n5 * 4 = 20 (left: 20 18)\n",
                    "7 + 11 = 18 (left: 4 5 18)\n5 + 4 = 9 (left: 9 18)\n",
                    "7 + 11 = 18 (left: 4 5 18)\n5 / 4 = 1.25 (left: 1.25 18)\n",
                    "7 + 11 = 18 (left: 4 5 18)\nInput: 3 6 2 1\n",
                    "7 + 11 = 18 (left: 4 5 18)\nPossible next steps:\n",
                    "7 + 11 = 18 (left: 4 5 18)\n3 + 6 = 9 (left: 2 1 9)\n",
                    "7 + 11 = 18 (left: 4 5 18)\n6 - 3 = 3 (left: 2 3 1)\n",
                    "7 + 11 = 18 (left: 4 5 18)\n3 * 2 = 6 (left: 6 1 2)\n",
                    "7 + 11 = 18 (left: 4 5 18)\n6 / 3 = 2 (left: 2 1 2)\n",
                    "7 + 11 = 18 (left: 4 5 18)\n3 - 2 = 1 (left: 1 2 1)\n",
                    "7 + 11 = 18 (left: 4 5 18)\n6 + 3 = 9 (left: 2 1 9)\n",
                    "7 + 11 = 18 (left: 4 5 18)\n6 / 2 = 3 (left: 3 1 2)\n",
                    "7 + 11 = 18 (left: 4 5 18)\n3 - 1 = 2 (left: 2 2 1)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n20 - 7 = 13 (left: 7 13 20)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 7 11",
                "ys": [
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n20 - 7 = 13 (left: 7 13 20)\n"
                ],
                "new_ys": [
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 * 11 = 44 (left: 44 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 - 4 = 7 (left: 7 20)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n11 * 3 = 33 (left: 33 35)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n35 - 11 = 24 (left: 11 24)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n11 + 35 = 46 (left: 11 46)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n35 / 11 = 3 (left: 3 35)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 - 20 = -2 (left: -2)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 * 20 = 360 (left: 360)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 / 20 = 0.9 (left: 0.9)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 - 20 = -2 (left: -2)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 * 20 = 360 (left: 360)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 / 20 = 0.9 (left: 0.9)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n20 - 7 = 13 (left: 7 13 20)\n7 + 13 = 20 (left: 13 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n20 - 7 = 13 (left: 7 13 20)\n13 - 7 = 6 (left: 6 13 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n20 - 7 = 13 (left: 7 13 20)\n7 / 13 = 0.54 (left: 0.54 13 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n20 - 7 = 13 (left: 7 13 20)\n7 * 13 = 91 (left: 13 20 91)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 * 11 = 44 (left: 44 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 - 4 = 7 (left: 7 20)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n35 - 11 = 24 (left: 11 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 7 11",
                "ys": [
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 * 11 = 44 (left: 44 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 - 4 = 7 (left: 7 20)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n35 - 11 = 24 (left: 11 24)\n"
                ],
                "new_ys": [
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 * 11 = 44 (left: 44 20)\n44 + 20 = 64 (left: 20 64)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 * 11 = 44 (left: 44 20)\n44 - 20 = 24 (left: 24 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 * 11 = 44 (left: 44 20)\n44 * 20 = 880 (left: 20 880)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 * 11 = 44 (left: 44 20)\n44 / 20 = 2.2 (left: 2.2 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 + 20 = 35 (left: 20 35)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 * 20 = 300 (left: 20 300)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 / 20 = 0.75 (left: 0.75 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 + 20 = 35 (left: 35)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 * 20 = 300 (left: 300)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 / 20 = 0.75 (left: 0.75)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\nInput: 3 5 5 9\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\nPossible next steps:\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n3 + 5 = 8 (left: 8 5 9)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n5 / 3 = 1.67 (left: 1.67 5 9)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n5 - 3 = 2 (left: 2 5 9)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n9 - 5 = 4 (left: 3 4 5)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n3 / 5 = 0.6 (left: 0.6 5 9)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n5 + 9 = 14 (left: 3 5 14)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 - 4 = 7 (left: 7 20)\n7 * 20 = 140 (left: 20 140)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 - 4 = 7 (left: 7 20)\n20 / 7 = 2 (left: 2 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 - 4 = 7 (left: 7 20)\n20 - 7 = 13 (left: 7 13)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n35 - 11 = 24 (left: 11 24)\n11 + 24 = 35 (left: 35)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n35 - 11 = 24 (left: 11 24)\n11 * 24 = 264 (left: 264)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n35 - 11 = 24 (left: 11 24)\n11 - 24 = -13 (left: -13)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 * 7 = 35 (left: 11 35)\n35 - 11 = 24 (left: 11 24)\n11 / 24 = 0.4583333333333333 (left: 0.4583333333333333)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 + 20 = 35 (left: 20 35)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 * 20 = 300 (left: 20 300)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 + 20 = 35 (left: 35)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n3 + 5 = 8 (left: 8 5 9)\n"
                ]
            },
            {
                "step": 4,
                "x": "4 5 7 11",
                "ys": [
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 + 20 = 35 (left: 20 35)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 * 20 = 300 (left: 20 300)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 + 20 = 35 (left: 35)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n3 + 5 = 8 (left: 8 5 9)\n"
                ],
                "new_ys": [
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 + 20 = 35 (left: 20 35)\n20 + 35 = 55 (left: 55)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 + 20 = 35 (left: 20 35)\n20 * 35 = 700 (left: 700)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 + 20 = 35 (left: 20 35)\n20 - 35 = -15 (left: -15)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 + 20 = 35 (left: 20 35)\n20 / 35 = 0.57 (left: 0.57)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n20 - (-5) = 25 (left: -5 25)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n20 + (-5) = 15 (left: -5 15)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n20 * (-5) = -100 (left: -100)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n20 / (-5) = -4 (left: -4)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\nInput: 3 3 3 4\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\nPossible next steps:\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n3 + 3 = 6 (left: 3 4 6)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n3 / 3 = 1 (left: 1 3 4)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n4 + 3 = 7 (left: 3 3 7)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n3 * 3 = 9 (left: 4 9 3)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n4 - 3 = 1 (left: 1 3 4)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n3 * 4 = 12 (left: 3 12 3)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n4 / 3 = 1 (left: 1 3 4)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n3 - 3 = 0 (left: 0 3 4)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 * 20 = 300 (left: 20 300)\n20 * 300 = 6000 (left: 6000)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 * 20 = 300 (left: 20 300)\n300 / 20 = 15 (left: 15 300)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 * 20 = 300 (left: 20 300)\n300 - 20 = 280 (left: 20 280)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 * 20 = 300 (left: 20 300)\n300 + 20 = 320 (left: 20 320)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 + 20 = 35 (left: 35)\nInput: 3 3 8 8\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 + 20 = 35 (left: 35)\nPossible next steps:\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 + 20 = 35 (left: 35)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 + 20 = 35 (left: 35)\n3 * 3 = 9 (left: 8 8 9)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 + 20 = 35 (left: 35)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 + 20 = 35 (left: 35)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 + 20 = 35 (left: 35)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 + 20 = 35 (left: 35)\n8 + 3 = 11 (left: 3 8 11)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 + 20 = 35 (left: 35)\n3 * 8 = 24 (left: 8 8 24)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n3 + 5 = 8 (left: 8 5 9)\n8 + 5 = 13 (left: 9 13)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n3 + 5 = 8 (left: 8 5 9)\n8 * 5 = 40 (left: 40 9)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n3 + 5 = 8 (left: 8 5 9)\n8 - 5 = 3 (left: 3 9)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n3 + 5 = 8 (left: 8 5 9)\n8 / 5 = 1.6 (left: 1.6 9)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n3 + 5 = 8 (left: 8 5 9)\n5 + 9 = 14 (left: 8 14)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n3 + 5 = 8 (left: 8 5 9)\n5 * 9 = 45 (left: 8 45)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n3 + 5 = 8 (left: 8 5 9)\n5 - 9 = -4 (left: -4 9)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n3 + 5 = 8 (left: 8 5 9)\n5 / 9 = 0.5555555555555556 (left: 0.5555555555555556 9)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n4 + 3 = 7 (left: 3 3 7)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 + 20 = 35 (left: 35)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 + 20 = 35 (left: 35)\n3 * 8 = 24 (left: 8 8 24)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 + 20 = 35 (left: 20 35)\n20 - 35 = -15 (left: -15)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n3 + 3 = 6 (left: 3 4 6)\n"
                ]
            }
        ],
        "idx": 857,
        "ys": [
            "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n4 + 3 = 7 (left: 3 3 7)\n",
            "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 + 20 = 35 (left: 35)\n8 / 3 = 2 (left: 2 8 8)\n",
            "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n11 + 4 = 15 (left: 15 20)\n15 + 20 = 35 (left: 35)\n3 * 8 = 24 (left: 8 8 24)\n",
            "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 + 20 = 35 (left: 20 35)\n20 - 35 = -15 (left: -15)\n",
            "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n4 + 11 = 15 (left: 15 20)\n15 - 20 = -5 (left: -5 20)\n3 + 3 = 6 (left: 3 4 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 20519,
            "prompt_tokens": 66276,
            "cost": 0.140452
        },
        "time_spent": 39.795827865600586
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 9 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 9 = 13 (left: 12 12 13)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n",
                    "12 - 4 = 8 (left: 8 12 12)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n",
                    "12 - 4 = 8 (left: 8 12 12)\n",
                    "12 / 9 = 1 (left: 1 12 12)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    100,
                    0,
                    100,
                    0
                ],
                "select_new_ys": [
                    "12 / 4 = 3 (left: 3 12 12)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n",
                    "12 / 9 = 1 (left: 1 12 12)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 9 12 12",
                "ys": [
                    "12 / 4 = 3 (left: 3 12 12)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n",
                    "12 / 9 = 1 (left: 1 12 12)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n"
                ],
                "new_ys": [
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12 12)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12 12)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n3 + 12 = 15 (left: 12 15)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n",
                    "12 / 9 = 1 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)\n",
                    "12 / 9 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n",
                    "12 / 9 = 1 (left: 1 12 12)\n12 * 1 = 12 (left: 12 12)\n",
                    "12 / 9 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 * 12 = 144 (left: 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 / 12 = 1 (left: 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\nPlease input 3 numbers for the 24 puzzle.\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 * 12 = 60 (left: 12 60)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 / 5 = 2 (left: 2 12)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 - 5 = 7 (left: 7 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    100,
                    50
                ],
                "select_new_ys": [
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n",
                    "12 / 9 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n",
                    "12 / 9 = 1 (left: 1 12 12)\n12 * 1 = 12 (left: 12 12)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 / 5 = 2 (left: 2 12)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 9 12 12",
                "ys": [
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n",
                    "12 / 9 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n",
                    "12 / 9 = 1 (left: 1 12 12)\n12 * 1 = 12 (left: 12 12)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 / 5 = 2 (left: 2 12)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n"
                ],
                "new_ys": [
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 / 3 = 4 (left: 4 36)\n",
                    "12 / 9 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 / 9 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "12 / 9 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "12 / 9 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "12 / 9 = 1 (left: 1 12 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24\n",
                    "12 / 9 = 1 (left: 1 12 12)\n12 * 1 = 12 (left: 12 12)\n12 - 12 = 0\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 / 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 / 5 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 24 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 * 12 = 144 (left: 36 144)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    0,
                    100,
                    100
                ],
                "select_new_ys": [
                    "12 / 9 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 / 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 9 12 12",
                "ys": [
                    "12 / 9 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 / 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\n"
                ],
                "new_ys": [
                    "12 / 9 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / 9) * (12 + 12) = 24\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 / 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 4) * (12 / 5) = 24\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 - 1 = 11 (left: 11 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 / 1 = 12 (left: 12 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 + 1 = 13 (left: 13 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 + 12 = 12 (left: 12 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 / 12 = 0 (left: 12 36)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\nInput: 1 3 4 6\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\nPossible next steps:\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\n3 + 4 = 7 (left: 1 7 6)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\n3 * 4 = 12 (left: 1 12 6)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\n4 + 6 = 10 (left: 1 3 10)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\n1 * 3 = 3 (left: 3 4 6)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\n6 - 3 = 3 (left: 1 3 4)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\n6 - 4 = 2 (left: 1 2 6)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\n6 / 3 = 2 (left: 1 2 4)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\nInput: 5 5 5 5\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\nPossible next steps:\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\n5 + 5 = 10 (left: 5 10 5)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\n5 * 5 = 25 (left: 5 25 5)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "12 - 9 = 3 (left: 3 12 12)\n12 * 3 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\n5 - 5 = 0 (left: 0 5 5)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    100,
                    100,
                    50,
                    100,
                    100,
                    100,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    100,
                    100,
                    50
                ],
                "select_new_ys": [
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 / 1 = 12 (left: 12 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 + 12 = 12 (left: 12 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 / 12 = 0 (left: 12 36)\n"
                ]
            },
            {
                "step": 4,
                "x": "4 9 12 12",
                "ys": [
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 / 1 = 12 (left: 12 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 + 12 = 12 (left: 12 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 / 12 = 0 (left: 12 36)\n"
                ],
                "new_ys": [
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 / 1 = 12 (left: 12 36)\n12 * 3 = 36 (left: 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 / 1 = 12 (left: 12 36)\n12 / 3 = 4 (left: 4 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 / 1 = 12 (left: 12 36)\nInput: 1 4 5\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 / 1 = 12 (left: 12 36)\nPossible next steps:\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 / 1 = 12 (left: 12 36)\n1 + 4 = 5 (left: 5 5)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 / 1 = 12 (left: 12 36)\n5 - 4 = 1 (left: 1 5)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 / 1 = 12 (left: 12 36)\n5 - 1 = 4 (left: 4 5)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 / 1 = 12 (left: 12 36)\n4 * 5 = 20 (left: 20)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 / 1 = 12 (left: 12 36)\n4 / 1 = 4 (left: 4 5)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n12 + 36 = 48 (left: 48)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n36 - 12 = 24 (left: 24)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n36 / 12 = 3 (left: 3 12)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n12 * 36 = 432 (left: 432)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\nInput: 4 6 8 10\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\nPossible next steps:\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n4 + 6 = 10 (left: 8 10 10)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n10 - 6 = 4 (left: 4 8 10)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n8 / 4 = 2 (left: 2 6 10)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n10 - 8 = 2 (left: 2 4 10)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n10 - 4 = 6 (left: 6 8 10)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n8 + 6 = 14 (left: 4 10 14)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n10 / 4 = 2 (left: 2 6 8)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n6 * 8 = 48 (left: 4 10 48)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 + 12 = 12 (left: 12 36)\n12 * 3 = 36 (left: 36)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 + 12 = 12 (left: 12 36)\n12 + 36 = 48 (left: 48)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 + 12 = 12 (left: 12 36)\n12 - 36 = -24 (left: -24)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 + 12 = 12 (left: 12 36)\n12 / 36 = 0.333 (left: 0.333)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n12 + 36 = 48 (left: 48)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n12 * 36 = 432 (left: 432)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n36 / 12 = 3 (left: 3 12)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n36 - 12 = 24 (left: 24)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\nInput: 4 5 6 7\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\nPossible next steps:\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n4 * 5 = 20 (left: 6 7 20)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n5 + 6 = 11 (left: 4 7 11)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n4 + 6 = 10 (left: 5 7 10)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n7 - 4 = 3 (left: 3 5 6)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n7 - 5 = 2 (left: 2 4 6)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n7 - 6 = 1 (left: 1 4 5)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n6 / 4 = 1 (left: 1 5 7)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n6 / 5 = 1 (left: 1 4 7)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n6 / 7 = 0 (left: 4 5 0)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n7 / 4 = 1 (left: 1 5 6)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n7 / 5 = 1 (left: 1 4 6)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 / 12 = 0 (left: 12 36)\n12 + 36 = 48 (left: 48)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 / 12 = 0 (left: 12 36)\n12 * 36 = 432 (left: 432)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 / 12 = 0 (left: 12 36)\n36 / 12 = 3 (left: 3 12)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 / 12 = 0 (left: 12 36)\n36 - 12 = 24 (left: 24)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 / 12 = 0 (left: 12 36)\nInput: 3 3 7 7\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 / 12 = 0 (left: 12 36)\nPossible next steps:\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 / 12 = 0 (left: 12 36)\n3 + 3 = 6 (left: 6 7 7)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 / 12 = 0 (left: 12 36)\n3 * 3 = 9 (left: 9 7 7)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 / 12 = 0 (left: 12 36)\n7 + 3 = 10 (left: 3 7 10)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 / 12 = 0 (left: 12 36)\n7 * 3 = 21 (left: 7 7 21)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 / 12 = 0 (left: 12 36)\n7 - 3 = 4 (left: 4 7 7)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 / 12 = 0 (left: 12 36)\n7 / 3 = 2 (left: 2 7 7)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 / 12 = 0 (left: 12 36)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 / 12 = 0 (left: 12 36)\n7 / 3 = 2 (left: 2 4 7)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    100,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    50,
                    100,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n36 - 12 = 24 (left: 24)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n10 - 8 = 2 (left: 2 4 10)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n10 - 4 = 6 (left: 6 8 10)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n10 / 4 = 2 (left: 2 6 8)\n",
                    "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n36 - 12 = 24 (left: 24)\n"
                ]
            }
        ],
        "idx": 858,
        "ys": [
            "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n36 - 12 = 24 (left: 24)\n",
            "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n10 - 8 = 2 (left: 2 4 10)\n",
            "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n10 - 4 = 6 (left: 6 8 10)\n",
            "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 12 36)\n12 * 1 = 12 (left: 12 36)\n10 / 4 = 2 (left: 2 6 8)\n",
            "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 12 36)\n0 * 12 = 0 (left: 12 36)\n36 - 12 = 24 (left: 24)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 22364,
            "prompt_tokens": 71773,
            "cost": 0.1523875
        },
        "time_spent": 38.67936730384827
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 6 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n",
                    "9 - 3 = 6 (left: 6 6 9)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    100,
                    100
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n",
                    "9 - 3 = 6 (left: 6 6 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 6 9",
                "ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n",
                    "9 - 3 = 6 (left: 6 6 9)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 * 9 = 81 (left: 6 81 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 / 6 = 1.5 (left: 1.5 9 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 + 6 = 9 (left: 2 9)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n9 - 2 = 7 (left: 7 9)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "9 - 6 = 3 (left: 3 3 9)\n3 / 3 = 1 (left: 1 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 / 6 = 1 (left: 1 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 + 6 = 15 (left: 6 15)\n",
                    "9 - 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n",
                    "9 - 3 = 6 (left: 6 6 9)\n6 * 6 = 36 (left: 9 36)\n",
                    "9 - 3 = 6 (left: 6 6 9)\n6 / 6 = 1 (left: 1 9)\n",
                    "9 - 3 = 6 (left: 6 6 9)\n6 - 6 = 0 (left: 0 9)\n",
                    "9 - 3 = 6 (left: 6 6 9)\n9 + 6 = 15 (left: 6 15)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 * 9 = 81 (left: 6 81 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 + 6 = 9 (left: 2 9)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 6 9",
                "ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 * 9 = 81 (left: 6 81 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 + 6 = 9 (left: 2 9)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 + 9 = 18 (left: 15 18)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 * 9 = 81 (left: 15 81)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 / 9 = 1 (left: 1 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n15 + 9 = 24 (left: 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n15 - 9 = 6 (left: 6 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 * 9 = 81 (left: 6 81 9)\n6 * 9 = 54 (left: 54 81)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 * 9 = 81 (left: 6 81 9)\n81 - 6 = 75 (left: 75 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 * 9 = 81 (left: 6 81 9)\n81 / 9 = 9 (left: 6 9 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n3 * 9 = 27 (left: 9 9 27)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n3 + 9 = 12 (left: 9 12 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9 9)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 + 6 = 9 (left: 2 9)\n9 - 2 = 7 (left: 2 7)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 + 6 = 9 (left: 2 9)\n2 * 9 = 18 (left: 18)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 + 6 = 9 (left: 2 9)\n9 / 2 = 4.5 (not possible)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n6 - 9 = -3 (left: -3 9)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n6 * 9 = 54 (left: 9 54)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n9 * 9 = 81 (left: 6 81 9)\n81 / 9 = 9 (left: 6 9 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 + 9 = 18 (left: 15 18)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 6 9",
                "ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n9 * 9 = 81 (left: 6 81 9)\n81 / 9 = 9 (left: 6 9 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 + 9 = 18 (left: 15 18)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n9 * 9 = 81 (left: 6 81 9)\n81 / 9 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 * 9 = 81 (left: 6 81 9)\n81 / 9 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 6 3 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 * 9 = 81 (left: 6 81 9)\n81 / 9 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n3 * 18 = 54 (left: 9 54)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 / 3 = 6 (left: 6 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n9 * 3 = 27 (left: 18 27)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 9 = 9 (left: 9 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 + 3 = 21 (left: 9 21)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 - 15 = -6 (left: -6 15)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 / 9 = 1.6666666666666667 (left: 1.6666666666666667 15)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 / 15 = 0.6 (left: 0.6 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 + 9 = 18 (left: 15 18)\n15 + 18 = 33 (left: 33)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 + 9 = 18 (left: 15 18)\n15 - 18 = -3 (left: -3)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 + 9 = 18 (left: 15 18)\n15 * 18 = 270 (left: 270)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 + 9 = 18 (left: 15 18)\n15 / 18 = 0.83 (left: 0.83)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 + 9 = 18 (left: 15 18)\n18 + 15 = 33 (left: 33)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 + 9 = 18 (left: 15 18)\n18 - 15 = 3 (left: 3)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 + 9 = 18 (left: 15 18)\n18 * 15 = 270 (left: 270)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 + 9 = 18 (left: 15 18)\n18 / 15 = 1.2 (left: 1.2)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\n0 + 15 = 15 (left: 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\n15 - 0 = 15 (left: 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\n15 / 0 = undefined (left: 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\n15 * 0 = 0 (left: 0)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\nInput: 3 3 3 3\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\nPossible next steps:\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\n3 - 3 = 0 (left: 0 3 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    0,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    0
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 * 9 = 81 (left: 6 81 9)\n81 / 9 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n"
                ]
            },
            {
                "step": 4,
                "x": "3 3 6 9",
                "ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 * 9 = 81 (left: 6 81 9)\n81 / 9 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n9 - 15 = -6 (left: 9 -6)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n9 / 15 = 0.6 (left: 0.6 15)\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((6 / 3) * 3) + (9 + 15) = 24\n",
                    "6 / 3 = 2 (left: 2 6 9)\n3 * 2 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 * 2) + 6) + 9 = 24\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\n3 * 3 = 9 (left: 3 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 * 9 = 81 (left: 6 81 9)\n81 / 9 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 + 9 = 18 (left: 15 18)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 * 9 = 81 (left: 6 81 9)\n81 / 9 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 / 9 = 1 (left: 1 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 * 9 = 81 (left: 6 81 9)\n81 / 9 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 * 9 = 81 (left: 15 81)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 * 9 = 81 (left: 6 81 9)\n81 / 9 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n9 - 9 = 0 (left: 0 15)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n9 - 15 = -6 (left: 9 -6)\n"
                ]
            }
        ],
        "idx": 859,
        "ys": [
            "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
            "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
            "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
            "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
            "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18 9)\n18 - 3 = 15 (left: 9 15)\n9 - 15 = -6 (left: 9 -6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 23844,
            "prompt_tokens": 77310,
            "cost": 0.16365300000000002
        },
        "time_spent": 36.831796169281006
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 5 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 5 = 8 (left: 8 9 13)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n"
                ],
                "values": [
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 5 9 13",
                "ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n"
                ],
                "new_ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n",
                    "13 - 3 = 10 (left: 5 9 10)\nInput: 3 3 3 3\n",
                    "13 - 3 = 10 (left: 5 9 10)\nPossible next steps:\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 * 3 = 9 (left: 3 9 3 3)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n8 - 9 = -1 (left: -1 13)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n8 + 9 = 17 (left: 17 13)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n8 * 9 = 72 (left: 72 13)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n8 / 9 = 0.8888888888888888 (left: 0.8888888888888888 13)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n9 - 8 = 1 (left: 1 13)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n9 + 8 = 17 (left: 17 13)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n9 * 8 = 72 (left: 72 13)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n9 / 8 = 1.125 (left: 1.125 13)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n1 + 9 = 10 (left: 10 13)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n9 + 1 = 10 (left: 10 13)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n9 - 1 = 8 (left: 8 13)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n9 / 1 = 9 (left: 9 13)\n",
                    "5 / 3 = 1 (left: 1 9 13)\nInput: 3 3 8 9\n",
                    "5 / 3 = 1 (left: 1 9 13)\nPossible next steps:\n",
                    "5 / 3 = 1 (left: 1 9 13)\n3 + 3 = 6 (left: 6 8 9)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n3 * 3 = 9 (left: 8 9 9)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n3 + 8 = 11 (left: 3 9 11)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n3 / 3 = 1 (left: 1 8 9)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n3 - 3 = 0 (left: 0 8 9)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 + 3 = 11 (left: 3 9 11)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 / 3 = 2 (left: 2 3 9)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 - 3 = 5 (left: 5 3 9)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n9 - 3 = 6 (left: 3 6 9)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n3 + 8 = 11 (left: 3 9 11)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 + 3 = 11 (left: 3 9 11)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 - 3 = 5 (left: 5 3 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 5 9 13",
                "ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n3 + 8 = 11 (left: 3 9 11)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 + 3 = 11 (left: 3 9 11)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 - 3 = 5 (left: 5 3 9)\n"
                ],
                "new_ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n3 + 8 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n3 + 8 = 11 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n3 + 8 = 11 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 + 3 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 + 3 = 11 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 + 3 = 11 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 - 3 = 5 (left: 5 3 9)\n5 + 3 = 8 (left: 8 9)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 - 3 = 5 (left: 5 3 9)\n5 * 3 = 15 (left: 15 9)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 - 3 = 5 (left: 5 3 9)\n5 - 3 = 2 (left: 2 9)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 - 3 = 5 (left: 5 3 9)\n3 + 5 = 8 (left: 8 9)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 - 3 = 5 (left: 5 3 9)\nInput: 4 6 3 12\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 - 3 = 5 (left: 5 3 9)\nPossible next steps:\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 - 3 = 5 (left: 5 3 9)\n4 + 6 = 10 (left: 10 3 12)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 - 3 = 5 (left: 5 3 9)\n4 * 3 = 12 (left: 6 12 12)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 - 3 = 5 (left: 5 3 9)\n4 - 3 = 1 (left: 1 6 12)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 - 3 = 5 (left: 5 3 9)\n6 / 3 = 2 (left: 4 2 12)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 - 3 = 5 (left: 5 3 9)\n4 * 6 = 24 (left: 24 3 12)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 - 3 = 5 (left: 5 3 9)\n6 - 3 = 3 (left: 4 3 12)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 - 3 = 5 (left: 5 3 9)\n6 + 3 = 9 (left: 4 9 12)\n",
                    "5 / 3 = 1 (left: 1 9 13)\n8 - 3 = 5 (left: 5 3 9)\n6 / 3 = 2 (left: 4 2 12)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    0,
                    100,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    50,
                    100,
                    50,
                    100,
                    50,
                    100,
                    100,
                    0
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 3 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 5 9 13",
                "ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 3 9)\n"
                ],
                "new_ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\nInput: 1 3 4 6\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\nPossible next steps:\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n3 + 1 = 4 (left: 4 4 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n3 * 4 = 12 (left: 1 12 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n4 + 1 = 5 (left: 5 3 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n6 - 4 = 2 (left: 1 3 2)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n6 / 3 = 2 (left: 1 2 4)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n6 - 4 = 2 (left: 1 2 2)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n3 - 1 = 2 (left: 2 4 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n14 - 10 = 4 (left: 4 10)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n14 / 10 = 1 (left: 1 10)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n10 - 14 = -4 (left: -4 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\nInput: 3 3 8 8\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\nPossible next steps:\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n3 * 3 = 9 (left: 8 8 9)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n8 * 3 = 24 (left: 24 8)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n8 + 3 = 11 (left: 8 11 8)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n8 * 3 = 24 (left: 24 8)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 3 9 9)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 3 9)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n9 / 3 = 3 (left: 3 3 9)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 9)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n6 / 3 = 2 (left: 2 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n6 + 3 = 9 (left: 6 9)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n3 * 6 = 18 (left: 6 18)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\nInput: 4 5 6 6\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\nPossible next steps:\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n4 + 5 = 9 (left: 6 6 9)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n5 - 4 = 1 (left: 1 6 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n6 - 4 = 2 (left: 2 6 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n6 / 4 = 1 (left: 1 6 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n6 + 4 = 10 (left: 6 6 10)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n6 - 5 = 1 (left: 4 1 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n6 - 5 = 1 (left: 4 1 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n6 / 5 = 1.2 (left: 1.2 6 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n6 / 5 = 1.2 (left: 1.2 6 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n6 - 5 = 1 (left: 4 1 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n6 - 5 = 1 (left: 4 1 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n6 / 5 = 1.2 (left: 1.2 6 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 6)\n6 / 5 = 1.2 (left: 1.2 6 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 3 9)\n9 / 3 = 3 (left: 3 9)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    100,
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n8 / 3 = 2 (left: 2 8 8)\n"
                ]
            },
            {
                "step": 4,
                "x": "3 5 9 13",
                "ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n8 / 3 = 2 (left: 2 8 8)\n"
                ],
                "new_ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (13 - 3) + (5 + 9) = 24\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: ((13 - 3) + (5 + 9)) + 10 = 24\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((13 - 3) + 5) + 9 = 24\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (13 - 3) * (5 + 9) = 24\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n8 / 3 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n8 / 3 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n8 / 3 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n"
                ],
                "values": [
                    1000,
                    0,
                    1000,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (13 - 3) + (5 + 9) = 24\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((13 - 3) + 5) + 9 = 24\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n8 / 3 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n8 / 3 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n8 / 3 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n"
                ]
            }
        ],
        "idx": 860,
        "ys": [
            "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (13 - 3) + (5 + 9) = 24\n",
            "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((13 - 3) + 5) + 9 = 24\n",
            "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n8 / 3 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
            "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n8 / 3 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
            "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 10 14)\n8 / 3 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 25851,
            "prompt_tokens": 83043,
            "cost": 0.1762665
        },
        "time_spent": 43.748915910720825
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 7 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 10 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 7 8 13",
                "ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n"
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 + 13 = 23 (left: 8 23)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 * 10 = 80 (left: 80 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 * 13 = 130 (left: 8 130)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 + 8 = 18 (left: 18 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 8 = 5 (left: 5 10)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n7 + 8 = 15 (left: 8 10 15)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n8 - 7 = 1 (left: 1 8 10)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n7 * 8 = 56 (left: 10 56)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n8 / 7 = 1 (left: 1 8 10)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n8 + 13 = 21 (left: 8 21)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n13 - 8 = 5 (left: 5 13 21)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n21 - 8 = 13 (left: 8 13 13)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n13 / 8 = 1 (left: 1 8 13)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 + 13 = 23 (left: 8 23)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 7 8 13",
                "ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 + 13 = 23 (left: 8 23)\n"
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 11)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 / 11 = 1 (left: 1 11)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 + 3 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 / 3 = 2 (left: 2 8)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 - 3 = 5 (left: 5 8)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n13 - 3 = 10 (left: 10)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n13 / 3 = 4 (left: 4)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n18 - 13 = 5 (left: 5)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n18 / 13 = 1.38461538462 (left: 1.38461538462)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n18 + 13 = 31 (left: 31)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n18 * 13 = 234 (left: 234)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n13 - 18 = -5 (left: -5)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n13 / 18 = 0.722222222222 (left: 0.722222222222)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 + 13 = 23 (left: 8 23)\n8 + 23 = 31 (left: 31)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 + 13 = 23 (left: 8 23)\n23 - 8 = 15 (left: 15)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 + 13 = 23 (left: 8 23)\n8 * 23 = 184 (left: 184)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 + 13 = 23 (left: 8 23)\n23 / 8 = 2.875 (left: 2.875)\n"
                ],
                "values": [
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 11)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 7 8 13",
                "ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 11)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n"
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((7 - 3) + 4) + 13 = 24\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)\nAnswer: (3 + 7) * (8 - 13) = 24\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 11)\n11 / 2 = 5.5 (left: 5.5)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n11 * 11 = 121 (left: 121)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n11 - 11 = 0 (left: 0)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n11 / 11 = 1 (left: 1)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 + 13 = 13 (left: 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 * 13 = 0 (left: 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n13 / 0 is undefined\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\nInput: 3 3 8 8\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\nPossible next steps:\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n3 * 3 = 9 (left: 8 8 9)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 + 3 = 11 (left: 3 8 11)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n3 * 8 = 24 (left: 8 24)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 / 3 = 2 (left: 2 8 8)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 + 13 = 13 (left: 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 * 13 = 0 (left: 13)\n"
                ]
            },
            {
                "step": 4,
                "x": "3 7 8 13",
                "ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 + 13 = 13 (left: 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 * 13 = 0 (left: 13)\n"
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 / 3 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 / 3 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 / 3 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 11)\n2 * 11 = 22 (left: 22)\n22 is the final result.\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\n22 + 2 = 24 (left: 22)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 + 13 = 13 (left: 13)\n13 is the final number.\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 * 13 = 0 (left: 13)\nInput: 6 6 10 10\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 * 13 = 0 (left: 13)\nPossible next steps:\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 * 13 = 0 (left: 13)\n6 + 6 = 12 (left: 10 10 12)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 * 13 = 0 (left: 13)\n6 / 6 = 1 (left: 1 10 10)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 * 13 = 0 (left: 13)\n10 + 6 = 16 (left: 6 10 16)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 * 13 = 0 (left: 13)\n6 * 6 = 36 (left: 10 10 36)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 * 13 = 0 (left: 13)\n10 - 6 = 4 (left: 4 10 10)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 * 13 = 0 (left: 13)\n10 / 6 = 1 (left: 1 10 10)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 * 13 = 0 (left: 13)\n10 * 6 = 60 (left: 6 10 60)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 * 13 = 0 (left: 13)\n10 - 6 = 4 (left: 4 10 10)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 * 13 = 0 (left: 13)\n10 - 6 = 4 (left: 4 10 10)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 / 3 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 / 3 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 / 3 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n"
                ]
            }
        ],
        "idx": 861,
        "ys": [
            "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 / 3 = 2 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n",
            "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n0 * 13 = 0 (left: 13)\n10 - 6 = 4 (left: 4 10 10)\n",
            "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 / 3 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
            "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 / 3 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
            "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0 13)\n8 / 3 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 27098,
            "prompt_tokens": 88297,
            "cost": 0.1866415
        },
        "time_spent": 30.882951974868774
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 4 5 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 4 5 7",
                "ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n"
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 / 5 = 1.4 (left: 1.4 8)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 / 5 = 1.6 (left: 1.6 8)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 * 7 = 35 (left: 1 35)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n7 - 5 = 2 (left: 1 2)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n7 / 5 = 1.4 (left: 1 1.4)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n3 + 4 = 7 (left: 5 7)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n3 * 4 = 12 (left: 5 12)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n4 + 5 = 9 (left: 9)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n4 * 3 = 12 (left: 5 12)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n5 + 3 = 8 (left: 8)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n5 * 3 = 15 (left: 15)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n4 + 7 = 11 (left: 1 11)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 4 = 3 (left: 1 3 7)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 6 7)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n4 * 7 = 28 (left: 1 28)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 / 1 = 7 (left: 4 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    100,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 4 5 7",
                "ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n"
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n8 + 35 = 43 (left: 43)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n35 - 8 = 27 (left: 27)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n8 * 35 = 280 (left: 280)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n35 / 8 = 4.375 (left: 4.375)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n12 / 1 = 12 (left: 12)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n12 - 1 = 11 (left: 11)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n12 + 1 = 13 (left: 13)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n35 - 8 = 27 (left: 27)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 4 5 7",
                "ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n35 - 8 = 27 (left: 27)\n"
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n11 - 8 = 3 (left: 3)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 * 11 = 88 (left: 88)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n11 / 8 = 1.375 (left: 1.375)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 13)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 - 8 = -3 (left: -3)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 / 8 = 0.625 (left: 0.625)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n2 * 10 = 20 (left: 10)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n20 / 2 = 10 (left: 10)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n20 - 10 = 10 (left: 10)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n20 + 10 = 30 (left: 10)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n35 - 8 = 27 (left: 27)\n3 * 9 = 27 (left: 9)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n35 - 8 = 27 (left: 27)\n27 / 3 = 9 (left: 9)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n35 - 8 = 27 (left: 27)\n27 - 3 = 24 (left: 3)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 13)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n2 * 10 = 20 (left: 10)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n20 / 2 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 4,
                "x": "4 4 5 7",
                "ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 13)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n2 * 10 = 20 (left: 10)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n20 / 2 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\nInput: 3 3 3 3\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\nPossible next steps:\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 13)\n13 is the final number.\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nInput: 3 3 3 3\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nPossible next steps:\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n2 * 10 = 20 (left: 10)\nInput: 3 3 3 3\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n2 * 10 = 20 (left: 10)\nPossible next steps:\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n2 * 10 = 20 (left: 10)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n2 * 10 = 20 (left: 10)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n2 * 10 = 20 (left: 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n20 / 2 = 10 (left: 10)\n2 + 8 = 10 (left: 8 10)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n2 * 10 = 20 (left: 10)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n3 / 3 = 1 (left: 1 3 3)\n"
                ]
            }
        ],
        "idx": 862,
        "ys": [
            "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n3 * 3 = 9 (left: 3 3 9)\n",
            "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n3 * 3 = 9 (left: 3 3 9)\n",
            "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n2 * 10 = 20 (left: 10)\n3 * 3 = 9 (left: 3 3 9)\n",
            "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n3 + 3 = 6 (left: 3 3 6)\n",
            "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n3 / 3 = 1 (left: 1 3 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 28199,
            "prompt_tokens": 92915,
            "cost": 0.19577050000000001
        },
        "time_spent": 27.309069633483887
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 5 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n",
                    "5 * 1 = 5 (left: 5 5 11)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n",
                    "5 * 1 = 5 (left: 5 5 11)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 5 11",
                "ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n",
                    "5 * 1 = 5 (left: 5 5 11)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 + 5 = 11 (left: 5 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n",
                    "5 * 1 = 5 (left: 5 5 11)\n5 + 5 = 10 (left: 10 11)\n",
                    "5 * 1 = 5 (left: 5 5 11)\n5 / 5 = 1 (left: 1 11)\n",
                    "5 * 1 = 5 (left: 5 5 11)\n11 - 5 = 6 (left: 5 6)\n",
                    "5 * 1 = 5 (left: 5 5 11)\n11 - 5 = 6 (left: 5 6)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n5 + 5 = 10 (left: 10 10)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n5 * 5 = 25 (left: 10 25)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n5 - 5 = 0 (left: 0 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 + 5 = 11 (left: 5 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n",
                    "5 * 1 = 5 (left: 5 5 11)\n5 + 5 = 10 (left: 10 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 5 11",
                "ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 + 5 = 11 (left: 5 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n",
                    "5 * 1 = 5 (left: 5 5 11)\n5 + 5 = 10 (left: 10 11)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 / 6 = 1 (left: 1 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 - 11 = -5 (left: -5 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 + 5 = 11 (left: 5 11)\n5 + 11 = 16 (left: 11 16)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 + 5 = 11 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 + 5 = 11 (left: 5 11)\n5 * 11 = 55 (left: 11 55)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 + 5 = 11 (left: 5 11)\n11 / 5 = 2 (left: 2 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 + 6 = 11 (left: 6 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n6 - 5 = 1 (left: 1 6)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n6 / 5 = 1.2 (left: 1.2 6)\n",
                    "5 * 1 = 5 (left: 5 5 11)\n5 + 5 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n",
                    "5 * 1 = 5 (left: 5 5 11)\n5 + 5 = 10 (left: 10 11)\n11 - 10 = 1 (left: 1 11)\n",
                    "5 * 1 = 5 (left: 5 5 11)\n5 + 5 = 10 (left: 10 11)\n11 / 10 = 1 (left: 1 11)\n",
                    "5 * 1 = 5 (left: 5 5 11)\n5 + 5 = 10 (left: 10 11)\n10 - 11 = -1 (left: -1 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 / 6 = 1 (left: 1 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 - 11 = -5 (left: -5 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 5 11",
                "ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 / 6 = 1 (left: 1 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 - 11 = -5 (left: -5 11)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n6 * 5 = 30 (left: 5)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n30 / 6 = 5 (left: 5)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\nInput: 3 3 8 8\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 / 3 = 2 (left: 2 3 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 + 3 = 11 (left: 3 8 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n3 * 3 = 9 (left: 8 9 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n3 / 3 = 1 (left: 1 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 - 17 = -6 (left: -6)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 * 17 = 187 (left: 187)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 11 17)\n11 / 17 = 0.65 (left: 0.65)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 / 5 = 2 (left: 2)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n11 * 5 = 55 (left: 55)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 / 6 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 - 11 = -5 (left: -5 11)\n11 - (-5) = 16 (left: 16)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 - 11 = -5 (left: -5 11)\n11 + (-5) = 6 (left: 6)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 - 11 = -5 (left: -5 11)\n11 * (-5) = -55 (left: -55)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 - 11 = -5 (left: -5 11)\n11 / (-5) = -2.2 (left: -2.2)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 / 3 = 2 (left: 2 3 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 + 3 = 11 (left: 3 8 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n3 * 3 = 9 (left: 8 9 8)\n"
                ]
            },
            {
                "step": 4,
                "x": "1 5 5 11",
                "ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 / 3 = 2 (left: 2 3 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 + 3 = 11 (left: 3 8 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n3 * 3 = 9 (left: 8 9 8)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n3 + 5 = 8 (left: 8 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n3 + 8 = 11 (left: 5 8 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n3 * 5 = 15 (left: 8 8 15)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n3 * 8 = 24 (left: 5 8 24)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n3 - 5 = -2 (left: -2 5 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n3 / 5 = 0.6 (left: 0.6 5 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n3 - 8 = -5 (left: -5 5 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n3 / 8 = 0.375 (left: 0.375 5 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n5 + 8 = 13 (left: 3 8 13)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n5 * 8 = 40 (left: 3 8 40)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n5 - 8 = -3 (left: -3 5 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n5 / 8 = 0.625 (left: 0.625 5 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n8 + 8 = 16 (left: 3 8 16)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n8 * 8 = 64 (left: 3 8 64)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n8 - 8 = 0 (left: 0 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n8 / 8 = 1 (left: 3 1 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n3 + 3 = 6 (left: 6 8 8)\n6 + 8 = 14 (left: 8 8 14)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n3 + 3 = 6 (left: 6 8 8)\n8 / 6 = 1 (left: 1 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n3 + 3 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 / 3 = 2 (left: 2 3 8 8)\n2 + 3 = 5 (left: 5 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 / 3 = 2 (left: 2 3 8 8)\n3 * 2 = 6 (left: 6 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 / 3 = 2 (left: 2 3 8 8)\n8 - 2 = 6 (left: 6 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 / 3 = 2 (left: 2 3 8 8)\n8 / 2 = 4 (left: 4 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 + 3 = 11 (left: 3 8 11)\n3 + 8 = 11 (left: 8 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 + 3 = 11 (left: 3 8 11)\n8 - 3 = 5 (left: 5 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 + 3 = 11 (left: 3 8 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n3 * 3 = 9 (left: 8 9 8)\n8 + 9 = 17 (left: 8 17)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n3 * 3 = 9 (left: 8 9 8)\n8 / 9 = 0.8888888888888888 (left: 0.8888888888888888 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n3 * 3 = 9 (left: 8 9 8)\n9 - 8 = 1 (left: 1 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n3 * 3 = 9 (left: 8 9 8)\n9 / 8 = 1.125 (left: 1.125 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n3 * 3 = 9 (left: 8 9 8)\n8 * 9 = 72 (left: 72)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n3 * 3 = 9 (left: 8 9 8)\n9 + 8 = 17 (left: 8 17)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n3 + 5 = 8 (left: 8 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n3 + 8 = 11 (left: 5 8 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n5 + 8 = 13 (left: 3 8 13)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n8 * 8 = 64 (left: 3 8 64)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n8 / 8 = 1 (left: 3 1 8)\n"
                ]
            }
        ],
        "idx": 863,
        "ys": [
            "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n3 + 5 = 8 (left: 8 8 8)\n",
            "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n3 + 8 = 11 (left: 5 8 11)\n",
            "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n5 + 8 = 13 (left: 3 8 13)\n",
            "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n8 * 8 = 64 (left: 3 8 64)\n",
            "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n5 * 6 = 30 (left: 6 30)\n8 - 3 = 5 (left: 3 5 8 8)\n8 / 8 = 1 (left: 3 1 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 29657,
            "prompt_tokens": 97328,
            "cost": 0.20530600000000002
        },
        "time_spent": 31.380144119262695
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 6 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 6 6 13)\n",
                    "4 * 6 = 24 (left: 2 24 13)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n"
                ],
                "values": [
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "6 - 4 = 2 (left: 2 2 13)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n",
                    "4 * 6 = 24 (left: 2 24 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 6 13",
                "ys": [
                    "6 - 4 = 2 (left: 2 2 13)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n",
                    "4 * 6 = 24 (left: 2 24 13)\n"
                ],
                "new_ys": [
                    "6 - 4 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 / 2 = 1 (left: 1 13)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 + 2 = 15 (left: 2 15)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 - 2 = 11 (left: 2 11)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 / 2 = 6 (left: 2 6)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n6 + 13 = 19 (left: 6 19)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n6 / 6 = 1 (left: 1 13)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n",
                    "4 * 6 = 24 (left: 2 24 13)\n2 * 24 = 48 (left: 13 48)\n",
                    "4 * 6 = 24 (left: 2 24 13)\n24 / 2 = 12 (left: 12 13)\n",
                    "4 * 6 = 24 (left: 2 24 13)\n24 - 2 = 22 (left: 13 22)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 / 2 = 1 (left: 1 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 6 13",
                "ys": [
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 / 2 = 1 (left: 1 13)\n"
                ],
                "new_ys": [
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n2 * 26 = 52 (left: 52)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n13 - 4 = 9 (left: 9)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n4 * 13 = 52 (left: 52)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n13 / 4 = 3 (left: 3)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n13 - 4 = 9 (left: 9)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 * 13 = 52 (left: 52)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n13 / 4 = 3.25 (left: 3.25)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n0 + 13 = 13 (left: 13)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n13 / 0 = not possible\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n13 * 0 = 0 (left: 0)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 / 2 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 / 2 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\n"
                ],
                "values": [
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n0 + 13 = 13 (left: 13)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 6 13",
                "ys": [
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n0 + 13 = 13 (left: 13)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)\n"
                ],
                "new_ys": [
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n13 + 26 = 39 (left: 39)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n26 - 13 = 13 (left: 13 13)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n13 * 26 = 338 (left: 338)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n26 / 13 = 2 (left: 2 26)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\nInput: 3 3 7 7\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\nPossible next steps:\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n3 + 3 = 6 (left: 6 7 7)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n7 + 3 = 10 (left: 3 10 7)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n3 * 3 = 9 (left: 7 9 7)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n7 * 3 = 21 (left: 3 7 21)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n7 + 7 = 14 (left: 3 7 14)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n7 * 7 = 49 (left: 3 7 49)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n3 * 7 = 21 (left: 3 21 7)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n3 + 7 = 10 (left: 10 7 7)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n17 is the final result.\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\nInput: 5 5 5 5\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\nPossible next steps:\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n5 + 5 = 10 (left: 10 5 5)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n0 + 13 = 13 (left: 13)\nInput: 13\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n0 + 13 = 13 (left: 13)\nPossible next steps:\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n0 + 13 = 13 (left: 13)\n13 * 1 = 13 (left: 1 13)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n0 + 13 = 13 (left: 13)\n13 / 1 = 13 (left: 1 13)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)\nInput: 1 2 3 4\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)\nPossible next steps:\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)\n2 * 3 = 6 (left: 1 4 6)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)\n3 + 4 = 7 (left: 1 2 7)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)\n4 - 2 = 2 (left: 1 2 3)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)\n4 / 2 = 2 (left: 1 2 2)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)\n3 - 1 = 2 (left: 2 2 4)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)\nInput: 20 10 5 2\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)\nPossible next steps:\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)\n20 - 10 = 10 (left: 10 5 2)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 - 2 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)\n5 * 2 = 10 (left: 20 10 10)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    100,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    100,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    100,
                    50,
                    100,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n26 / 13 = 2 (left: 2 26)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n7 + 7 = 14 (left: 3 7 14)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n3 + 7 = 10 (left: 10 7 7)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n5 / 5 = 1 (left: 1 5 5)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 4 6 13",
                "ys": [
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n26 / 13 = 2 (left: 2 26)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n7 + 7 = 14 (left: 3 7 14)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n3 + 7 = 10 (left: 10 7 7)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n5 / 5 = 1 (left: 1 5 5)\n"
                ],
                "new_ys": [
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n26 / 13 = 2 (left: 2 26)\n2 * 26 = 52 (left: 52)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n26 / 13 = 2 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n26 / 13 = 2 (left: 2 26)\n26 - 2 = 24 (left: 24 26)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n7 + 7 = 14 (left: 3 7 14)\n3 + 7 = 10 (left: 10 14)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n7 + 7 = 14 (left: 3 7 14)\n7 / 3 = 2 (left: 2 14)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n7 + 7 = 14 (left: 3 7 14)\n14 - 3 = 11 (left: 11 14)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n3 + 7 = 10 (left: 10 7 7)\n10 + 7 = 17 (left: 7 7 17)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n3 + 7 = 10 (left: 10 7 7)\n10 * 7 = 70 (left: 7 7 70)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n3 + 7 = 10 (left: 10 7 7)\n10 - 7 = 3 (left: 3 7 7)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n3 + 7 = 10 (left: 10 7 7)\n10 / 7 = 1.43 (left: 1.43 7 7)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n3 + 7 = 10 (left: 10 7 7)\n7 + 7 = 14 (left: 7 14)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n3 + 7 = 10 (left: 10 7 7)\n7 * 7 = 49 (left: 7 49)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n3 + 7 = 10 (left: 10 7 7)\n7 - 7 = 0 (left: 0 7)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n3 + 7 = 10 (left: 10 7 7)\n7 / 7 = 1 (left: 1 7)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n5 * 5 = 25 (left: 5 5 25)\n5 + 5 = 10 (left: 10 25)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n5 * 5 = 25 (left: 5 5 25)\n5 * 5 = 25 (left: 25 25)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n5 * 5 = 25 (left: 5 5 25)\n5 / 5 = 1 (left: 1 25)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n5 * 5 = 25 (left: 5 5 25)\n5 - 5 = 0 (left: 0 25)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n5 / 5 = 1 (left: 1 5 5)\n1 * 5 = 5 (left: 5 5)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n5 / 5 = 1 (left: 1 5 5)\n5 + 1 = 6 (left: 5 6)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n5 / 5 = 1 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n5 / 5 = 1 (left: 1 5 5)\n5 / 1 = 5 (left: 5 5)\n"
                ],
                "values": [
                    0,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n7 + 7 = 14 (left: 3 7 14)\n3 + 7 = 10 (left: 10 14)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n5 * 5 = 25 (left: 5 5 25)\n5 / 5 = 1 (left: 1 25)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n26 / 13 = 2 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n7 + 7 = 14 (left: 3 7 14)\n7 / 3 = 2 (left: 2 14)\n",
                    "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n7 + 7 = 14 (left: 3 7 14)\n14 - 3 = 11 (left: 11 14)\n"
                ]
            }
        ],
        "idx": 864,
        "ys": [
            "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n7 + 7 = 14 (left: 3 7 14)\n3 + 7 = 10 (left: 10 14)\n",
            "6 - 4 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n5 * 5 = 25 (left: 5 5 25)\n5 / 5 = 1 (left: 1 25)\n",
            "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n26 / 13 = 2 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n",
            "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n7 + 7 = 14 (left: 3 7 14)\n7 / 3 = 2 (left: 2 14)\n",
            "6 - 4 = 2 (left: 2 2 13)\n13 * 2 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13 26)\n7 + 7 = 14 (left: 3 7 14)\n14 - 3 = 11 (left: 11 14)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 31015,
            "prompt_tokens": 101727,
            "cost": 0.21462050000000002
        },
        "time_spent": 29.275600910186768
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 7 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n",
                    "7 - 6 = 1 (left: 1 9 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n",
                    "7 - 6 = 1 (left: 1 9 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 7 9 12",
                "ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n",
                    "7 - 6 = 1 (left: 1 9 12)\n"
                ],
                "new_ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 - 12 = -3 (left: -3 13)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 * 12 = 108 (left: 13 108)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 - 9 = 3 (left: 3 13)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 / 9 = 1 (left: 1 13)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n9 * 12 = 108 (left: 42 108)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n12 - 9 = 3 (left: 3 42)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n12 / 9 = 1 (left: 1 42)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n42 - 9 = 33 (left: 33 12)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n42 / 12 = 3 (left: 3 3 42)\n",
                    "7 - 6 = 1 (left: 1 9 12)\n1 + 9 = 10 (left: 10 12)\n",
                    "7 - 6 = 1 (left: 1 9 12)\n9 + 1 = 10 (left: 10 12)\n",
                    "7 - 6 = 1 (left: 1 9 12)\n9 - 1 = 8 (left: 8 12)\n",
                    "7 - 6 = 1 (left: 1 9 12)\n9 / 1 = 9 (left: 9 12)\n",
                    "7 - 6 = 1 (left: 1 9 12)\n1 * 9 = 9 (left: 9 12)\n",
                    "7 - 6 = 1 (left: 1 9 12)\n12 - 1 = 11 (left: 11 12)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 - 12 = -3 (left: -3 13)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 - 9 = 3 (left: 3 13)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 / 9 = 1 (left: 1 13)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n12 - 9 = 3 (left: 3 42)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 7 9 12",
                "ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 - 12 = -3 (left: -3 13)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 - 9 = 3 (left: 3 13)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 / 9 = 1 (left: 1 13)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n12 - 9 = 3 (left: 3 42)\n"
                ],
                "new_ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 - 13 = 8 (left: 8 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 / 13 = 1 (left: 1 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 * 13 = 273 (left: 13 273)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 - 13 = 8 (left: 8 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 - 12 = -3 (left: -3 13)\n13 - (-3) = 16 (left: -3 16)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 - 12 = -3 (left: -3 13)\n13 + (-3) = 10 (left: -3 10)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 - 12 = -3 (left: -3 13)\n13 * (-3) = -39 (left: -39)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 - 12 = -3 (left: -3 13)\n13 / (-3) = -4.33 (left: -4.33)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 - 9 = 3 (left: 3 13)\n3 * 13 = 39 (left: 13 39)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 - 9 = 3 (left: 3 13)\n13 / 3 = 4 (left: 3 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 - 9 = 3 (left: 3 13)\n13 - 3 = 10 (left: 3 10)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 / 9 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 / 9 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 / 9 = 1 (left: 1 13)\n13 / 1 = 13 (left: 13)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 / 9 = 1 (left: 1 13)\n13 * 1 = 13 (left: 13)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n12 - 9 = 3 (left: 3 42)\n3 * 42 = 126 (left: 126)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n12 - 9 = 3 (left: 3 42)\n42 / 3 = 14 (left: 14)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n12 - 9 = 3 (left: 3 42)\n42 - 3 = 39 (left: 39)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n12 - 9 = 3 (left: 3 42)\n3 + 42 = 45 (left: 45)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 - 13 = 8 (left: 8 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 / 13 = 1 (left: 1 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 * 13 = 273 (left: 13 273)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 7 9 12",
                "ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 - 13 = 8 (left: 8 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 / 13 = 1 (left: 1 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 * 13 = 273 (left: 13 273)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n"
                ],
                "new_ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\nInput: 1 2 3 4\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\nPossible next steps:\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n2 + 3 = 5 (left: 2 5 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n2 * 3 = 6 (left: 6 4 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n3 + 4 = 7 (left: 2 3 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n3 - 2 = 1 (left: 1 3 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n4 - 3 = 1 (left: 1 2 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n4 / 2 = 2 (left: 1 2 2)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 - 13 = 8 (left: 8 21)\n8 + 21 = 29 (left: 29)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 - 13 = 8 (left: 8 21)\n21 - 8 = 13 (left: 13)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 - 13 = 8 (left: 8 21)\n8 * 21 = 168 (left: 168)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 - 13 = 8 (left: 8 21)\n21 / 8 = 2.625 (left: 2.625)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 / 13 = 1 (left: 1 21)\n21 - 1 = 20 (left: 1 20)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 / 13 = 1 (left: 1 21)\n21 / 1 = 21 (left: 1 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 / 13 = 1 (left: 1 21)\n21 * 1 = 21 (left: 1 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 / 13 = 1 (left: 1 21)\n21 + 1 = 22 (left: 1 22)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 * 13 = 273 (left: 13 273)\n13 + 273 = 286 (left: 286)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 * 13 = 273 (left: 13 273)\n13 * 273 = 3549 (left: 3549)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 * 13 = 273 (left: 13 273)\n273 + 13 = 286 (left: 286)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 * 13 = 273 (left: 13 273)\n273 - 13 = 260 (left: 260)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 * 13 = 273 (left: 13 273)\n273 / 13 = 21 (left: 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n13 + 34 = 47 (left: 47)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n34 - 13 = 21 (left: 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n13 * 34 = 442 (left: 442)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n34 / 13 = 2 (left: 2 13)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\nInput: 3 3 5 7\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\nPossible next steps:\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n3 + 3 = 6 (left: 5 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n3 - 3 = 0 (left: 0 5 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n3 * 3 = 9 (left: 5 7 9)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n3 + 5 = 8 (left: 3 7 8)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n3 - 5 = -2 (left: -2 3 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n3 * 5 = 15 (left: 3 7 15)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n3 + 7 = 10 (left: 3 5 10)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n3 - 7 = -4 (left: -4 3 5)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n3 * 7 = 21 (left: 5 7 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n5 + 3 = 8 (left: 3 8 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n5 - 3 = 2 (left: 2 3 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n5 * 3 = 15 (left: 15 3 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n5 + 7 = 12 (left: 3 12 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n5 - 7 = -2 (left: -2 5 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n5 * 7 = 35 (left: 5 7 35)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n7 + 3 = 10 (left: 3 5 10)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n7 - 3 = 4 (left: 4 5 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n7 * 3 = 21 (left: 5 7 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n7 + 5 = 12 (left: 3 7 12)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n7 - 5 = 2 (left: 2 7 5)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n7 * 5 = 35 (left: 7 5 35)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n2 + 3 = 5 (left: 2 5 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n2 * 3 = 6 (left: 6 4 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n3 + 4 = 7 (left: 2 3 7)\n"
                ]
            },
            {
                "step": 4,
                "x": "6 7 9 12",
                "ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n2 + 3 = 5 (left: 2 5 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n2 * 3 = 6 (left: 6 4 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n3 + 4 = 7 (left: 2 3 7)\n"
                ],
                "new_ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 * 2 = 2 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 * 2 = 2 (left: 2 3 4)\n4 + 3 = 7 (left: 2 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 * 2 = 2 (left: 2 3 4)\n4 - 2 = 2 (left: 2 2)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 * 2 = 2 (left: 2 3 4)\n4 / 2 = 2 (left: 2 2)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n3 * 3 = 9 (left: 4 9)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n3 / 3 = 1 (left: 1 3)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\nInput: 2 5 6 7\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\nPossible next steps:\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n2 + 5 = 7 (left: 6 7 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n5 - 2 = 3 (left: 3 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n7 - 6 = 1 (left: 1 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n7 - 5 = 2 (left: 2 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n7 / 2 = 3 (left: 3 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n6 - 2 = 4 (left: 4 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n6 / 2 = 3 (left: 3 3 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n7 / 3 = 2 (left: 2 4 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n7 - 4 = 3 (left: 3 4 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n7 - 7 = 0 (left: 0 7 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n6 - 5 = 1 (left: 1 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n6 - 2 = 4 (left: 4 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n6 / 2 = 3 (left: 3 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n7 - 6 = 1 (left: 1 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n7 / 2 = 3 (left: 3 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n7 - 6 = 1 (left: 1 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n7 - 5 = 2 (left: 2 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n7 / 2 = 3 (left: 3 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n7 - 6 = 1 (left: 1 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n7 - 5 = 2 (left: 2 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n7 / 2 = 3 (left: 3 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n7 - 6 = 1 (left: 1 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n7 - 5 = 2 (left: 2 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n7 / 2 = 3 (left: 3 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n2 + 3 = 5 (left: 2 5 4)\n2 + 5 = 7 (left: 4 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n2 + 3 = 5 (left: 2 5 4)\n5 - 2 = 3 (left: 3 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n2 + 3 = 5 (left: 2 5 4)\n2 * 5 = 10 (left: 4 10)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n2 + 3 = 5 (left: 2 5 4)\n5 / 2 = 2.5 (left: 2.5 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n2 * 3 = 6 (left: 6 4 4)\n6 + 4 = 10 (left: 4 10)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n2 * 3 = 6 (left: 6 4 4)\n6 / 4 = 1.5 (left: 1.5 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n2 * 3 = 6 (left: 6 4 4)\n4 + 6 = 10 (left: 4 10)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n2 * 3 = 6 (left: 6 4 4)\n6 - 4 = 2 (left: 2 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n2 * 3 = 6 (left: 6 4 4)\n4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n2 * 3 = 6 (left: 6 4 4)\n4 - 6 = -2 (left: -2 4)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n3 + 4 = 7 (left: 2 3 7)\n2 + 3 = 5 (left: 5 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n3 + 4 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 6 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n3 + 4 = 7 (left: 2 3 7)\n7 - 2 = 5 (left: 5 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n3 + 4 = 7 (left: 2 3 7)\n7 / 2 = 3 (left: 3 7)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n6 / 2 = 3 (left: 3 3 7)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 * 2 = 2 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n"
                ]
            }
        ],
        "idx": 865,
        "ys": [
            "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
            "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n",
            "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 + 2 = 3 (left: 3 3 4)\n6 / 2 = 3 (left: 3 3 7)\n",
            "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
            "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n1 * 2 = 2 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 33176,
            "prompt_tokens": 106134,
            "cost": 0.225553
        },
        "time_spent": 45.66810989379883
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 6 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 6 13)\n",
                    "5 + 1 = 6 (left: 6 6 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n",
                    "5 + 1 = 6 (left: 6 6 13)\n",
                    "6 + 1 = 7 (left: 5 7 13)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 * 5 = 5 (left: 5 6 13)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n",
                    "5 + 1 = 6 (left: 6 6 13)\n",
                    "6 + 1 = 7 (left: 5 7 13)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 6 13",
                "ys": [
                    "1 * 5 = 5 (left: 5 6 13)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n",
                    "5 + 1 = 6 (left: 6 6 13)\n",
                    "6 + 1 = 7 (left: 5 7 13)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n"
                ],
                "new_ys": [
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 6 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 / 5 = 1.2 (left: 1.2 6 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7 13)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n6 / 6 = 1 (left: 1 13)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n6 - 6 = 0 (left: 0 13)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n",
                    "5 + 1 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n",
                    "5 + 1 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)\n",
                    "5 + 1 = 6 (left: 6 6 13)\n6 - 6 = 0 (left: 0 13)\n",
                    "5 + 1 = 6 (left: 6 6 13)\n6 / 6 = 1 (left: 1 13)\n",
                    "5 + 1 = 6 (left: 6 6 13)\n13 + 6 = 19 (left: 6 19)\n",
                    "5 + 1 = 6 (left: 6 6 13)\n13 * 6 = 78 (left: 6 78)\n",
                    "5 + 1 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n",
                    "6 + 1 = 7 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n",
                    "6 + 1 = 7 (left: 5 7 13)\n7 - 5 = 2 (left: 2 13)\n",
                    "6 + 1 = 7 (left: 5 7 13)\n5 * 7 = 35 (left: 35 13)\n",
                    "6 + 1 = 7 (left: 5 7 13)\n7 / 5 = 1 (left: 1 13)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 7 12)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 6 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 6 13",
                "ys": [
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 6 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8 13)\n"
                ],
                "new_ys": [
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n19 * 5 = 95 (left: 95)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n19 / 5 = 3.8 (left: 3.8)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 6 13)\n1 + 6 = 7 (left: 7 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 6 13)\n6 * 1 = 6 (left: 6 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 6 13)\n13 - 1 = 12 (left: 6 12)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n30 + 13 = 43 (left: 43)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n30 - 13 = 17 (left: 17)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n30 * 13 = 390 (left: 390)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n30 / 13 = 2 (left: 2)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\nInput: 5 5 5 5\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\nPossible next steps:\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n5 - 5 = 0 (left: 0 5 5 5)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n5 * 5 = 25 (left: 5 25 5)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n5 / 5 = 1 (left: 1 5 5 5)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 14 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8 13)\n8 * 6 = 48 (left: 48 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8 13)\n8 / 6 = 1.33 (left: 1.33 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8 13)\n8 - 6 = 2 (left: 2 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8 13)\n6 / 8 = 0.75 (left: 0.75 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8 13)\n6 - 8 = -2 (left: -2 13)\n"
                ],
                "values": [
                    100,
                    100,
                    100,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n5 * 5 = 25 (left: 5 25 5)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 6 13",
                "ys": [
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n5 * 5 = 25 (left: 5 25 5)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n"
                ],
                "new_ys": [
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 * 13 = 143 (left: 143)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 * 11 = 143 (left: 143)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\nAnswer: (1 * 5) + (6 + 13) = 24\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (1 * 5) + (6 + 13) = 24\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n5 * 5 = 25 (left: 5 25 5)\n5 + 25 = 30 (left: 5 30 5)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n5 * 5 = 25 (left: 5 25 5)\n25 / 5 = 5 (left: 5 5 5)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n5 * 5 = 25 (left: 5 25 5)\n5 * 25 = 125 (left: 5 125 5)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n5 * 5 = 25 (left: 5 25 5)\n25 - 5 = 20 (left: 5 20 5)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 is the final result.\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    1000,
                    1000,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\nAnswer: (1 * 5) + (6 + 13) = 24\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (1 * 5) + (6 + 13) = 24\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n5 * 5 = 25 (left: 5 25 5)\n5 + 25 = 30 (left: 5 30 5)\n"
                ]
            },
            {
                "step": 4,
                "x": "1 5 6 13",
                "ys": [
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\nAnswer: (1 * 5) + (6 + 13) = 24\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (1 * 5) + (6 + 13) = 24\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n5 * 5 = 25 (left: 5 25 5)\n5 + 25 = 30 (left: 5 30 5)\n"
                ],
                "new_ys": null,
                "values": null,
                "select_new_ys": null
            }
        ],
        "idx": 866,
        "ys": [
            "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\nAnswer: (1 * 5) + (6 + 13) = 24\n",
            "1 * 5 = 5 (left: 5 6 13)\n6 + 13 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (1 * 5) + (6 + 13) = 24\n",
            "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
            "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
            "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n5 * 5 = 25 (left: 5 25 5)\n5 + 25 = 30 (left: 5 30 5)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 34225,
            "prompt_tokens": 110476,
            "cost": 0.234164
        },
        "time_spent": 22.90924096107483
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 8 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 8 8 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n"
                ],
                "values": [
                    50,
                    100,
                    100
                ],
                "select_new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 8 8 11",
                "ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n"
                ],
                "new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 8 13)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n5 * 8 = 40 (left: 40)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 + 5 = 13 (left: 5 13)\n",
                    "8 - 3 = 5 (left: 5 8 11)\nInput: 3 3 8 12\n",
                    "8 - 3 = 5 (left: 5 8 11)\nPossible next steps:\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 + 3 = 6 (left: 6 8 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 8 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 8 = 24 (left: 24 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 + 8 = 11 (left: 11 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 3 = 0 (left: 0 8 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 / 3 = 1 (left: 1 8 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 + 12 = 15 (left: 3 8 15)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 12 = 36 (left: 36 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 / 12 = 0.25 (left: 0.25 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 8 = -5 (left: -5 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 / 8 = 0.375 (left: 0.375 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 / 3 = 1 (left: 1 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 + 3 = 6 (left: 6 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 8 = 24 (left: 24 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 + 8 = 11 (left: 11 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 3 = 0 (left: 0 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 / 3 = 1 (left: 1 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 + 12 = 15 (left: 3 15)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 12 = 36 (left: 36 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 / 12 = 0.25 (left: 0.25 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 3 = 0 (left: 0 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 / 3 = 1 (left: 1 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 + 3 = 6 (left: 6 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 8 = 24 (left: 24 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 + 8 = 11 (left: 11 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 3 = 0 (left: 0 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 / 3 = 1 (left: 1 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 + 12 = 15 (left: 3 15)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 12 = 36 (left: 36 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 / 12 = 0.25 (left: 0.25 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 3 = 0 (left: 0 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 / 3 = 1 (left: 1 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 + 3 = 6 (left: 6 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 8 = 24 (left: 24 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 + 8 = 11 (left: 11 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 3 = 0 (left: 0 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 / 3 = 1 (left: 1 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 + 12 = 15 (left: 3 15)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 12 = 36 (left: 36 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 / 12 = 0.25 (left: 0.25 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 3 = 0 (left: 0 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 / 3 = 1 (left: 1 3)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n2 + 8 = 10 (left: 8 8 10)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 / 2 = 4 (left: 4 8 8)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 * 2 = 16 (left: 8 8 16)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 - 2 = 6 (left: 6 8 8)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 + 8 = 16 (left: 16 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 * 8 = 64 (left: 64 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 / 8 = 1 (left: 1 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 - 8 = 0 (left: 0 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\nInput: 4 5 6 7\n",
                    "3 + 8 = 11 (left: 8 8 11)\nPossible next steps:\n",
                    "3 + 8 = 11 (left: 8 8 11)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n4 * 5 = 20 (left: 6 7 20)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n4 / 5 = 0.8 (left: 0.8 6 7)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n4 - 5 = -1 (left: -1 6 7)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n5 + 6 = 11 (left: 4 7 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n5 * 6 = 30 (left: 4 7 30)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n5 / 6 = 0.83 (left: 4 0.83 7)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n5 - 6 = -1 (left: 4 -1 7)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n6 + 7 = 13 (left: 4 13)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n6 * 7 = 42 (left: 4 42)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n6 / 7 = 0.86 (left: 4 0.86 7)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n6 - 7 = -1 (left: 4 7 -1)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n7 + 4 = 11 (left: 6 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n7 * 4 = 28 (left: 6 28)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n7 / 4 = 1.75 (left: 6 1.75)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n7 - 4 = 3 (left: 6 3)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    100,
                    50,
                    100,
                    100,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 + 3 = 6 (left: 6 3 12)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 / 2 = 4 (left: 4 8 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 8 8 11",
                "ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 + 3 = 6 (left: 6 3 12)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 / 2 = 4 (left: 4 8 8)\n"
                ],
                "new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 8)\n8 / 3 = 2 (left: 2)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n-9 + 3 = -6 (left: -6 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n-9 * 3 = -27 (left: -27 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n-9 / 3 = -3 (left: -3 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n3 + 12 = 15 (left: -9 15)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n3 * 12 = 36 (left: -9 36)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n3 / 12 = 0.25 (left: -9 0.25)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\nInput: 6 3 1 8\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\nPossible next steps:\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 + 3 = 9 (left: 1 8 9)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 / 3 = 2 (left: 2 1 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 * 3 = 18 (left: 1 8 18)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n3 + 1 = 4 (left: 4 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n3 / 1 = 3 (left: 3 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n3 * 1 = 3 (left: 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n3 - 1 = 2 (left: 2 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n8 + 1 = 9 (left: 6 9)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n8 / 1 = 8 (left: 6 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n8 * 1 = 8 (left: 6 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n8 - 1 = 7 (left: 6 7)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 3 12)\n9 / 3 = 3 (left: 3 12 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 3 12)\n12 - 9 = 3 (left: 3 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 3 12)\n12 / 3 = 4 (left: 9 4 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 + 3 = 6 (left: 6 3 12)\n6 * 3 = 18 (left: 12 18)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 + 3 = 6 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 + 3 = 6 (left: 6 3 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 + 3 = 6 (left: 6 3 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 / 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 / 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 / 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n3 + 12 = 15 (left: -9 15)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n3 * 1 = 3 (left: 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 8 8 11",
                "ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n3 + 12 = 15 (left: -9 15)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n3 * 1 = 3 (left: 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n"
                ],
                "new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (8 - 3) * (8 - 5) = 24\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n3 + 12 = 15 (left: -9 15)\n-9 + 15 = 6 (left: 6)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n3 + 12 = 15 (left: -9 15)\n15 - (-9) = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n3 + 12 = 15 (left: -9 15)\n-9 - 15 = -24 (left: -24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n3 + 12 = 15 (left: -9 15)\n-9 * 15 = -135 (left: -135)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n3 + 12 = 15 (left: -9 15)\n-9 / 15 = -0.6 (left: -0.6)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 + 1 = 4 (left: 4 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 - 1 = 2 (left: 2 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 / 1 = 3 (left: 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n1 + 8 = 9 (left: 3 9)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n1 * 8 = 8 (left: 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n1 - 3 = -2 (left: -2 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n1 / 3 = 0.3333333333333333 (left: 0.3333333333333333 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    100,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 / 1 = 3 (left: 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n1 * 8 = 8 (left: 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 + 1 = 4 (left: 4 8)\n"
                ]
            },
            {
                "step": 4,
                "x": "3 8 8 11",
                "ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 / 1 = 3 (left: 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n1 * 8 = 8 (left: 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 + 1 = 4 (left: 4 8)\n"
                ],
                "new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 = 2 (left: 2)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 / 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 / 1 = 3 (left: 3 8)\n8 * 3 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 / 1 = 3 (left: 3 8)\n8 / 3 = 2 (left: 2 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n1 * 8 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n1 * 8 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n1 * 8 = 8 (left: 3 8)\n8 / 3 = 2 (left: 2 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n1 * 8 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 * 3 = 9 (left: 9 3 12)\n9 + 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((8 - 3) * 3) + (8 + 11) = 24\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 + 1 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 + 1 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 + 1 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 + 1 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    100,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 / 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 / 1 = 3 (left: 3 8)\n8 * 3 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n1 * 8 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 + 1 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n"
                ]
            }
        ],
        "idx": 867,
        "ys": [
            "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
            "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 / 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
            "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 / 1 = 3 (left: 3 8)\n8 * 3 = 24 (left: 24)\n",
            "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n1 * 8 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
            "8 - 3 = 5 (left: 5 8 11)\n3 - 12 = -9 (left: -9 3 12)\n6 - 3 = 3 (left: 3 1 8)\n3 + 1 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 36582,
            "prompt_tokens": 115530,
            "cost": 0.246459
        },
        "time_spent": 44.88997197151184
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 4 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n",
                    "4 * 2 = 8 (left: 3 8 10)\n",
                    "10 - 2 = 8 (left: 3 4 8)\n"
                ],
                "values": [
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n",
                    "4 * 2 = 8 (left: 3 8 10)\n",
                    "10 - 2 = 8 (left: 3 4 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 4 10",
                "ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n",
                    "4 * 2 = 8 (left: 3 8 10)\n",
                    "10 - 2 = 8 (left: 3 4 8)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 8 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n7 / 2 = 3 (left: 3 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n10 / 2 = 5 (left: 5 10)\n",
                    "4 * 2 = 8 (left: 3 8 10)\n3 + 8 = 11 (left: 8 10 11)\n",
                    "4 * 2 = 8 (left: 3 8 10)\n3 * 8 = 24 (left: 8 10 24)\n",
                    "4 * 2 = 8 (left: 3 8 10)\n8 - 3 = 5 (left: 5 8 10)\n",
                    "4 * 2 = 8 (left: 3 8 10)\n10 - 3 = 7 (left: 7 8 10)\n",
                    "10 - 2 = 8 (left: 3 4 8)\n3 + 4 = 7 (left: 7 8)\n",
                    "10 - 2 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n",
                    "10 - 2 = 8 (left: 3 4 8)\n4 + 8 = 12 (left: 3 12)\n",
                    "10 - 2 = 8 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 8 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n7 / 2 = 3 (left: 3 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 4 10",
                "ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 8 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n7 / 2 = 3 (left: 3 10)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 / 10 = 1.4 (left: 1.4 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 * 10 = 90 (left: 10 90)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n10 / 9 = 1.11 (left: 1.11 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\nInput: 3 3 3 3\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 * 3 = 9 (left: 3 9 3 3)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 / 3 = 1 (left: 1 3 3 3)  \n",
                    "3 + 4 = 7 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n10 - 5 = 5 (left: 5)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n10 / 5 = 2 (left: 2)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 8 10)\n8 - 10 = -2 (left: -2)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 8 10)\n8 * 10 = 80 (left: 80)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 8 10)\n8 / 10 = 0.8 (left: 0.8)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n7 / 2 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n7 / 2 = 3 (left: 3 10)\n10 - 3 = 7 (left: 7)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n7 / 2 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n7 / 2 = 3 (left: 3 10)\n10 / 3 = 3.33 (left: 3.33)\n"
                ],
                "values": [
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 4 10",
                "ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n3 * 5 = 15 (left: 14 15)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 10 24)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n-4 + 14 = 10 (left: 10 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 6 6 3)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 * 3 = 9 (left: 6 9 3)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4 10)\n10 - 4 = 6 (left: 6)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4 10)\n10 / 4 = 2.5 (left: 2.5)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140 10)\n140 + 10 = 150 (left: 10 150)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140 10)\n140 - 10 = 130 (left: 10 130)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140 10)\n140 / 10 = 14 (left: 14 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140 10)\n140 * 10 = 1400 (left: 1400 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n10 + 19 = 29 (left: 10 29)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n10 - 19 = -9 (left: -9 19)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n10 * 19 = 190 (left: 190)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n10 / 19 = 0.53 (left: 0.53 19)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 6 6 3)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140 10)\n140 / 10 = 14 (left: 14 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n3 * 5 = 15 (left: 14 15)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 10 24)\n"
                ]
            },
            {
                "step": 4,
                "x": "2 3 4 10",
                "ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 6 6 3)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140 10)\n140 / 10 = 14 (left: 14 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n3 * 5 = 15 (left: 14 15)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 10 24)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 6 6 3)\n6 + 6 = 12 (left: 3 12)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 6 6 3)\n6 / 3 = 2 (left: 2 6)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 6 6 3)\n6 - 3 = 3 (left: 3 6)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27 3)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n9 / 3 = 3 (left: 3 3 3)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 3 6 3)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140 10)\n140 / 10 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140 10)\n140 / 10 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n3 * 5 = 15 (left: 14 15)\n14 + 15 = 29 (left: 29)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n3 * 5 = 15 (left: 14 15)\n14 - 15 = -1 (left: -1)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n3 * 5 = 15 (left: 14 15)\n14 * 15 = 210 (left: 210)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n3 * 5 = 15 (left: 14 15)\n14 / 15 = 0.93 (left: 0.93)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 10 24)\n10 * 24 = 240 (left: 240)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 10 24)\n24 / 10 = 2.4 (left: 2.4 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 10 24)\n24 - 10 = 14 (left: 14)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 10 24)\nInput: 4 12 5\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 10 24)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 10 24)\n4 + 12 = 16 (left: 16 5)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 10 24)\n4 * 12 = 48 (left: 48 5)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 10 24)\n12 / 4 = 3 (left: 3 5)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 10 24)\n12 + 5 = 17 (left: 4 17)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 10 24)\n12 * 5 = 60 (left: 4 60)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 10 24)\n5 - 4 = 1 (left: 1 12)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 14 10)\n14 + 10 = 24 (left: 10 24)\n5 + 4 = 9 (left: 9 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140 10)\n140 / 10 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 6 6 3)\n6 + 6 = 12 (left: 3 12)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 6 6 3)\n6 / 3 = 2 (left: 2 6)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 6 6 3)\n6 - 3 = 3 (left: 3 6)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27 3)\n"
                ]
            }
        ],
        "idx": 868,
        "ys": [
            "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140 10)\n140 / 10 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\n",
            "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 6 6 3)\n6 + 6 = 12 (left: 3 12)\n",
            "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 6 6 3)\n6 / 3 = 2 (left: 2 6)\n",
            "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 6 6 3)\n6 - 3 = 3 (left: 3 6)\n",
            "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 6 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 37883,
            "prompt_tokens": 119937,
            "cost": 0.2556715
        },
        "time_spent": 28.927228927612305
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 6 8 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 8 8 12)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n",
                    "8 + 6 = 14 (left: 6 8 14)\n",
                    "8 / 6 = 1 (left: 1 8 8)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 8 8)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n",
                    "8 + 6 = 14 (left: 6 8 14)\n",
                    "8 / 6 = 1 (left: 1 8 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 6 8 8",
                "ys": [
                    "8 - 6 = 2 (left: 2 8 8)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n",
                    "8 + 6 = 14 (left: 6 8 14)\n",
                    "8 / 6 = 1 (left: 1 8 8)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "8 - 6 = 2 (left: 2 8 8)\nInput: 3 3 3 3\n",
                    "8 - 6 = 2 (left: 2 8 8)\nPossible next steps:\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 12 64)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n8 + 8 = 16 (left: 16 36)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n8 * 8 = 64 (left: 64 36)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n8 / 8 = 1 (left: 1 8 36)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n8 - 8 = 0 (left: 0 8 36)\n",
                    "8 + 6 = 14 (left: 6 8 14)\n6 + 8 = 14 (left: 14 14)\n",
                    "8 + 6 = 14 (left: 6 8 14)\n6 * 8 = 48 (left: 48 14)\n",
                    "8 + 6 = 14 (left: 6 8 14)\n8 / 6 = 1 (left: 1 14)\n",
                    "8 + 6 = 14 (left: 6 8 14)\n8 - 6 = 2 (left: 2 14)\n",
                    "8 + 6 = 14 (left: 6 8 14)\n14 - 6 = 8 (left: 8 14)\n",
                    "8 / 6 = 1 (left: 1 8 8)\n1 + 8 = 9 (left: 8 9)\n",
                    "8 / 6 = 1 (left: 1 8 8)\n8 + 1 = 9 (left: 8 9)\n",
                    "8 / 6 = 1 (left: 1 8 8)\n8 - 1 = 7 (left: 7 8)\n",
                    "8 / 6 = 1 (left: 1 8 8)\n8 / 1 = 8 (left: 8 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 + 3 = 6 (left: 3 6 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 6 8 8",
                "ys": [
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 + 3 = 6 (left: 3 6 3)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 / 3 = 1 (left: 1 9)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n9 / 3 = 3 (left: 3 3)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n10 - 8 = 2 (left: 2)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 * 10 = 80 (left: 80)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n10 / 8 = 1.25 (left: 1.25)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\nInput: 3 3 3 3\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\nPossible next steps:\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 8 14)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n8 - 6 = 2 (left: 2 8)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 * 8 = 48 (left: 8 48)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n8 / 6 = 1.33 (left: 1.33 8)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 + 3 = 6 (left: 3 6 3)\n3 + 6 = 9 (left: 3 9)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 + 3 = 6 (left: 3 6 3)\n6 / 3 = 2 (left: 2 3)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 + 3 = 6 (left: 3 6 3)\n3 * 6 = 18 (left: 3 18)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 + 3 = 6 (left: 3 6 3)\n6 - 3 = 3 (left: 3 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 / 3 = 1 (left: 1 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 6 8 8",
                "ys": [
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 / 3 = 1 (left: 1 9)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 * 4 = 32 (left: 8 32)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 / 4 = 2 (left: 2 32)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 / 9 = 1 (left: 1)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 - 9 = 0 (left: 0)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 * 9 = 54 (left: 9 54)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 / 3 = 1 (left: 1 9)\n1 + 9 = 10 (left: 9 10)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 / 3 = 1 (left: 1 9)\n9 / 1 = 9 (left: 9 9)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 / 3 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8 9)\n"
                ],
                "values": [
                    100,
                    100,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 * 4 = 32 (left: 8 32)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 / 4 = 2 (left: 2 32)\n"
                ]
            },
            {
                "step": 4,
                "x": "6 6 8 8",
                "ys": [
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 * 4 = 32 (left: 8 32)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 / 4 = 2 (left: 2 32)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n3 * 3 = 9 (left: 9 18)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n3 + 3 = 6 (left: 6 18)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n18 / 3 = 6 (left: 3 6)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n18 - 3 = 15 (left: 3 15)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12 3)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n9 / 3 = 3 (left: 3 3 3)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27 3)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 3 6 3)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 * 4 = 32 (left: 8 32)\n8 / 8 = 1 (left: 1 32)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 * 4 = 32 (left: 8 32)\n8 * 8 = 64 (left: 32 64)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 - 15 = -6 (left: 9 -6)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 / 15 = 0 (left: 0 15)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 / 4 = 2 (left: 2 32)\n2 * 32 = 64 (left: 64)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 / 4 = 2 (left: 2 32)\n32 / 2 = 16 (left: 16)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n3 + 3 = 6 (left: 6 18)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n3 * 3 = 9 (left: 9 18)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n18 / 3 = 6 (left: 3 6)\n"
                ]
            }
        ],
        "idx": 869,
        "ys": [
            "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n3 + 3 = 6 (left: 6 18)\n",
            "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
            "8 - 6 = 2 (left: 2 8 8)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
            "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n3 * 3 = 9 (left: 9 18)\n",
            "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n18 / 3 = 6 (left: 3 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 39256,
            "prompt_tokens": 124814,
            "cost": 0.265733
        },
        "time_spent": 31.78357720375061
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 9 9 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 9 = 13 (left: 9 9 10)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n",
                    "9 / 4 = 2 (left: 2 9 10)\n",
                    "9 + 4 = 13 (left: 4 9 10)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n",
                    "10 - 9 = 1 (left: 1 9 9)\n",
                    "10 / 4 = 2 (left: 2 9 9)\n",
                    "10 - 9 = 1 (left: 1 9 10)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 5 9 10)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n",
                    "9 / 4 = 2 (left: 2 9 10)\n",
                    "9 + 4 = 13 (left: 4 9 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 9 9 10",
                "ys": [
                    "9 - 4 = 5 (left: 5 9 10)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n",
                    "9 / 4 = 2 (left: 2 9 10)\n",
                    "9 + 4 = 13 (left: 4 9 10)\n"
                ],
                "new_ys": [
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 * 5 = 45 (left: 10 45)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 - 9 = -4 (left: -4 10)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 / 9 = 0.56 (left: 0.56 10)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n6 * 9 = 54 (left: 9 9 54)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 + 6 = 15 (left: 6 9 15)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 * 6 = 54 (left: 9 9 54)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 / 6 = 1.5 (left: 1.5 9 9)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 * 9 = 81 (left: 10 81)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n",
                    "4 + 9 = 13 (left: 9 9 10)\nInput: 3 3 3 3\n",
                    "4 + 9 = 13 (left: 9 9 10)\nPossible next steps:\n",
                    "4 + 9 = 13 (left: 9 9 10)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n\n",
                    "9 / 4 = 2 (left: 2 9 10)\n2 + 9 = 11 (left: 10 11)\n",
                    "9 / 4 = 2 (left: 2 9 10)\n9 - 2 = 7 (left: 7 10)\n",
                    "9 / 4 = 2 (left: 2 9 10)\n2 * 9 = 18 (left: 10 18)\n",
                    "9 / 4 = 2 (left: 2 9 10)\n9 / 2 = 4.5 (left: 4.5 10)\n",
                    "9 / 4 = 2 (left: 2 9 10)\nInput: 3 3 3 3\n",
                    "9 / 4 = 2 (left: 2 9 10)\nPossible next steps:\n",
                    "9 / 4 = 2 (left: 2 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "9 / 4 = 2 (left: 2 9 10)\n3 * 3 = 9 (left: 3 9 3 3)\n",
                    "9 / 4 = 2 (left: 2 9 10)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "9 + 4 = 13 (left: 4 9 10)\n4 + 9 = 13 (left: 13 10)\n",
                    "9 + 4 = 13 (left: 4 9 10)\n9 - 4 = 5 (left: 5 10)\n",
                    "9 + 4 = 13 (left: 4 9 10)\n9 / 4 = 2 (left: 2 10)\n",
                    "9 + 4 = 13 (left: 4 9 10)\n4 * 9 = 36 (left: 36 10)\n",
                    "9 + 4 = 13 (left: 4 9 10)\nInput: 3 3 8 8\n",
                    "9 + 4 = 13 (left: 4 9 10)\nPossible next steps:\n",
                    "9 + 4 = 13 (left: 4 9 10)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "9 + 4 = 13 (left: 4 9 10)\n3 * 3 = 9 (left: 9 8 8)\n",
                    "9 + 4 = 13 (left: 4 9 10)\n8 - 3 = 5 (left: 5 3 8)\n",
                    "9 + 4 = 13 (left: 4 9 10)\n8 - 3 = 5 (left: 5 8 3)\n",
                    "9 + 4 = 13 (left: 4 9 10)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "9 + 4 = 13 (left: 4 9 10)\n3 * 8 = 24 (left: 24 8)\n",
                    "9 + 4 = 13 (left: 4 9 10)\n3 + 8 = 11 (left: 11 8)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "9 / 4 = 2 (left: 2 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "9 + 4 = 13 (left: 4 9 10)\n8 / 3 = 2 (left: 2 8 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 9 9 10",
                "ys": [
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "9 / 4 = 2 (left: 2 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "9 + 4 = 13 (left: 4 9 10)\n8 / 3 = 2 (left: 2 8 8)\n"
                ],
                "new_ys": [
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 / 10 = 1.4 (left: 1.4)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 - 14 = -4 (left: -4)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4 14)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 / 10 = 1.4 (left: 1.4 14)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4 14)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\nInput: 3 5 7 8\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\nPossible next steps:\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 + 5 = 8 (left: 7 8 8)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n5 + 7 = 12 (left: 3 8 12)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n7 - 3 = 4 (left: 4 5 8)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n8 - 5 = 3 (left: 3 7 8)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n7 - 5 = 2 (left: 2 8 8)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n7 + 8 = 15 (left: 3 8 15)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n5 * 7 = 35 (left: 3 8 35)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n3 * 3 = 9 (left: 3 9 3)\n9 / 3 = 3 (left: 3 3)\n",
                    "9 / 4 = 2 (left: 2 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "9 / 4 = 2 (left: 2 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 3 2 3)\n",
                    "9 / 4 = 2 (left: 2 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 6 9)\n",
                    "9 / 4 = 2 (left: 2 9 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "9 + 4 = 13 (left: 4 9 10)\n8 / 3 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "9 + 4 = 13 (left: 4 9 10)\n8 / 3 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "9 + 4 = 13 (left: 4 9 10)\n8 / 3 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    100,
                    50,
                    50,
                    100,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n7 - 5 = 2 (left: 2 8 8)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n5 * 7 = 35 (left: 3 8 35)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 9 9 10",
                "ys": [
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n7 - 5 = 2 (left: 2 8 8)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n5 * 7 = 35 (left: 3 8 35)\n"
                ],
                "new_ys": [
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (9 - 4) + (5 + 9) = 24\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (9 - 4) + (5 + 9) = 24\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n5 + 8 = 13 (left: 13 21)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n5 * 8 = 40 (left: 40 21)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n8 * 5 = 13 (left: 13 21)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n21 - 5 = 16 (left: 16 8)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n21 / 5 = 4 (left: 4 8)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n21 - 8 = 13 (left: 5 13)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n8 - 5 = 3 (left: 3 21)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n7 - 5 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n7 - 5 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n7 - 5 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n5 * 7 = 35 (left: 3 8 35)\n3 + 8 = 11 (left: 8 11 35)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n5 * 7 = 35 (left: 3 8 35)\n8 * 3 = 24 (left: 24 35)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n5 * 7 = 35 (left: 3 8 35)\n35 - 3 = 32 (left: 8 32)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n5 * 7 = 35 (left: 3 8 35)\n35 / 5 = 7 (left: 7 35)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n21 - 5 = 16 (left: 16 8)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n8 - 5 = 3 (left: 3 21)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n5 * 7 = 35 (left: 3 8 35)\n35 - 3 = 32 (left: 8 32)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n5 + 8 = 13 (left: 13 21)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n5 * 8 = 40 (left: 40 21)\n"
                ]
            },
            {
                "step": 4,
                "x": "4 9 9 10",
                "ys": [
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n21 - 5 = 16 (left: 16 8)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n8 - 5 = 3 (left: 3 21)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n5 * 7 = 35 (left: 3 8 35)\n35 - 3 = 32 (left: 8 32)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n5 + 8 = 13 (left: 13 21)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n5 * 8 = 40 (left: 40 21)\n"
                ],
                "new_ys": [
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n21 - 5 = 16 (left: 16 8)\n16 + 8 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n21 - 5 = 16 (left: 16 8)\n16 * 8 = 128 (left: 128)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n21 - 5 = 16 (left: 16 8)\n16 / 8 = 2 (left: 2 16)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n21 - 5 = 16 (left: 16 8)\n16 - 8 = 8 (left: 8 8)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n8 - 5 = 3 (left: 3 21)\n3 * 21 = 63 (left: 21 63)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n8 - 5 = 3 (left: 3 21)\n21 / 3 = 7 (left: 7 21)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n5 * 7 = 35 (left: 3 8 35)\n35 - 3 = 32 (left: 8 32)\n8 * 4 = 32 (left: 4)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n5 * 7 = 35 (left: 3 8 35)\n35 - 3 = 32 (left: 8 32)\n8 / 32 = 0.25 (left: 0.25)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n5 * 7 = 35 (left: 3 8 35)\n35 - 3 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n5 * 7 = 35 (left: 3 8 35)\n35 - 3 = 32 (left: 8 32)\n8 - 32 = -24 (left: -24)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n5 + 8 = 13 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n5 + 8 = 13 (left: 13 21)\n21 - 13 = 8 (left: 8 21)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n5 + 8 = 13 (left: 13 21)\n21 / 13 = 1 (left: 1 21)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n5 + 8 = 13 (left: 13 21)\n21 * 13 = 273 (left: 273)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n5 * 8 = 40 (left: 40 21)\n40 + 21 = 61 (left: 21 61)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n5 * 8 = 40 (left: 40 21)\n40 - 21 = 19 (left: 19 21)\n"
                ],
                "values": [
                    100,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n21 - 5 = 16 (left: 16 8)\n16 + 8 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n21 - 5 = 16 (left: 16 8)\n16 / 8 = 2 (left: 2 16)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n21 - 5 = 16 (left: 16 8)\n16 - 8 = 8 (left: 8 8)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n8 - 5 = 3 (left: 3 21)\n21 / 3 = 7 (left: 7 21)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n5 * 7 = 35 (left: 3 8 35)\n35 - 3 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\n"
                ]
            }
        ],
        "idx": 870,
        "ys": [
            "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n21 - 5 = 16 (left: 16 8)\n16 + 8 = 24 (left: 24)\n",
            "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n21 - 5 = 16 (left: 16 8)\n16 / 8 = 2 (left: 2 16)\n",
            "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n21 - 5 = 16 (left: 16 8)\n16 - 8 = 8 (left: 8 8)\n",
            "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n3 * 7 = 21 (left: 5 8 21)\n8 - 5 = 3 (left: 3 21)\n21 / 3 = 7 (left: 7 21)\n",
            "9 - 4 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n5 * 7 = 35 (left: 3 8 35)\n35 - 3 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 41038,
            "prompt_tokens": 130321,
            "cost": 0.2775575
        },
        "time_spent": 36.19652509689331
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 7 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 7 9)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n",
                    "7 - 3 = 4 (left: 4 7 9)\n",
                    "9 - 3 = 6 (left: 6 7 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 7 9)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n",
                    "7 - 3 = 4 (left: 4 7 9)\n",
                    "9 - 3 = 6 (left: 6 7 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 7 9",
                "ys": [
                    "3 + 3 = 6 (left: 6 7 9)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n",
                    "7 - 3 = 4 (left: 4 7 9)\n",
                    "9 - 3 = 6 (left: 6 7 9)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 - 6 = 1 (left: 1 9)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 / 6 = 1 (left: 1 9)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n7 + 9 = 16 (left: 9 9 16)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n9 + 9 = 18 (left: 7 18 9)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n9 - 7 = 2 (left: 2 9 9)\n",
                    "7 - 3 = 4 (left: 4 7 9)\n4 + 7 = 11 (left: 9 11)\n",
                    "7 - 3 = 4 (left: 4 7 9)\n7 * 4 = 28 (left: 9 28)\n",
                    "7 - 3 = 4 (left: 4 7 9)\n7 - 4 = 3 (left: 3 9)\n",
                    "7 - 3 = 4 (left: 4 7 9)\n7 / 4 = 1.75 (left: 1.75 9)\n",
                    "7 - 3 = 4 (left: 4 7 9)\n9 + 4 = 13 (left: 7 13)\n",
                    "7 - 3 = 4 (left: 4 7 9)\n9 - 4 = 5 (left: 5 9)\n",
                    "9 - 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n",
                    "9 - 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n",
                    "9 - 3 = 6 (left: 6 7 9)\n7 - 6 = 1 (left: 1 9)\n",
                    "9 - 3 = 6 (left: 6 7 9)\n7 / 6 = 1 (left: 1 9)\n",
                    "9 - 3 = 6 (left: 6 7 9)\nInput: 3 3 5 7\n",
                    "9 - 3 = 6 (left: 6 7 9)\nPossible next steps:\n",
                    "9 - 3 = 6 (left: 6 7 9)\n3 + 3 = 6 (left: 5 6 7)\n",
                    "9 - 3 = 6 (left: 6 7 9)\n3 * 3 = 9 (left: 5 7 9)\n",
                    "9 - 3 = 6 (left: 6 7 9)\n3 - 3 = 0 (left: 0 5 7)\n",
                    "9 - 3 = 6 (left: 6 7 9)\n3 / 3 = 1 (left: 1 5 7)\n",
                    "9 - 3 = 6 (left: 6 7 9)\n3 + 5 = 8 (left: 5 7 8)\n",
                    "9 - 3 = 6 (left: 6 7 9)\n3 * 5 = 15 (left: 7 15)\n",
                    "9 - 3 = 6 (left: 6 7 9)\n3 - 5 = -2 (left: -2 7)\n",
                    "9 - 3 = 6 (left: 6 7 9)\n3 / 5 = 0 (left: 0 7)\n",
                    "9 - 3 = 6 (left: 6 7 9)\n5 + 7 = 12 (left: 3 12)\n",
                    "9 - 3 = 6 (left: 6 7 9)\n5 * 7 = 35 (left: 3 35)\n",
                    "9 - 3 = 6 (left: 6 7 9)\n7 - 3 = 4 (left: 4 5 7)\n",
                    "9 - 3 = 6 (left: 6 7 9)\n7 / 3 = 2 (left: 2 5 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 - 6 = 1 (left: 1 9)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 / 6 = 1 (left: 1 9)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n7 + 9 = 16 (left: 9 9 16)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 7 9",
                "ys": [
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 - 6 = 1 (left: 1 9)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 / 6 = 1 (left: 1 9)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n7 + 9 = 16 (left: 9 9 16)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n13 / 9 = 1 (left: 1 13)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 - 13 = -4 (left: -4 13)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n9 * 2 = 18 (left: 18 42)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n9 + 2 = 11 (left: 11 42)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n9 - 2 = 7 (left: 7 42)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n9 / 2 = 4.5 (left: 4.5 42)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\nInput: 3 3 3 3\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 + 3 = 6 (left: 6 3 3)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 - 6 = 1 (left: 1 9)\n1 + 9 = 10 (left: 9 10)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 - 6 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8 9)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 / 6 = 1 (left: 1 9)\n9 - 1 = 8 (left: 1 8)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 / 6 = 1 (left: 1 9)\n9 / 1 = 9 (left: 1 9)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 / 6 = 1 (left: 1 9)\n9 * 1 = 9 (left: 1 9)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n7 + 9 = 16 (left: 9 9 16)\n9 + 9 = 18 (left: 16 18)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n7 + 9 = 16 (left: 9 9 16)\n9 - 9 = 0 (left: 0 16)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n7 + 9 = 16 (left: 9 9 16)\n9 * 9 = 81 (left: 16 81)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n7 + 9 = 16 (left: 9 9 16)\n9 / 9 = 1 (left: 1 16)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n9 * 2 = 18 (left: 18 42)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n13 / 9 = 1 (left: 1 13)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 7 9",
                "ys": [
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n9 * 2 = 18 (left: 18 42)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n13 / 9 = 1 (left: 1 13)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n9 * 2 = 18 (left: 18 42)\n18 + 42 = 60 (left: 60)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n9 * 2 = 18 (left: 18 42)\n18 - 42 = -24 (left: -24)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n9 * 2 = 18 (left: 18 42)\n18 * 42 = 756 (left: 756)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n9 * 2 = 18 (left: 18 42)\n18 / 42 = 0.42857 (left: 0.42857)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 * 3 = 9 (left: 9 3 3)\n9 - 3 = 6 (left: 6 3)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 * 3 = 9 (left: 9 3 3)\n9 / 3 = 3 (left: 3 3)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 * 3 = 9 (left: 9 3 3)\n9 * 3 = 27 (left: 3 27)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 * 3 = 9 (left: 9 3 3)\n3 - 9 = -6 (left: -6 3)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 * 3 = 9 (left: 9 3 3)\n3 / 9 = 0.3333333333333333 (left: 0.3333333333333333 3)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 * 3 = 9 (left: 9 3 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\nInput: 1 3 4 6\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n3 + 4 = 7 (left: 1 7 6)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n1 * 3 = 3 (left: 3 4 6)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n4 + 1 = 5 (left: 3 5 6)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n6 - 4 = 2 (left: 1 3 2)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n3 * 1 = 3 (left: 3 4 6)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n6 - 3 = 3 (left: 1 3 4)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n4 * 1 = 4 (left: 4 4 6)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4 13)\n13 - 4 = 9 (left: 9)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4 13)\n4 * 13 = 52 (left: 52)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4 13)\n13 / 4 = 3 (left: 3)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n13 / 9 = 1 (left: 1 13)\n1 + 13 = 14 (left: 13 14)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n13 / 9 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12 13)\n"
                ],
                "values": [
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 * 3 = 9 (left: 9 3 3)\n9 * 3 = 27 (left: 3 27)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 * 3 = 9 (left: 9 3 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n9 * 2 = 18 (left: 18 42)\n18 - 42 = -24 (left: -24)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 * 3 = 9 (left: 9 3 3)\n9 - 3 = 6 (left: 6 3)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 * 3 = 9 (left: 9 3 3)\n3 - 9 = -6 (left: -6 3)\n"
                ]
            }
        ],
        "idx": 871,
        "ys": [
            "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 * 3 = 9 (left: 9 3 3)\n9 * 3 = 27 (left: 3 27)\n",
            "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 * 3 = 9 (left: 9 3 3)\n3 * 9 = 27 (left: 3 27)\n",
            "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n9 * 2 = 18 (left: 18 42)\n18 - 42 = -24 (left: -24)\n",
            "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 * 3 = 9 (left: 9 3 3)\n9 - 3 = 6 (left: 6 3)\n",
            "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n3 * 3 = 9 (left: 9 3 3)\n3 - 9 = -6 (left: -6 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 1311,
            "prompt_tokens": 3479,
            "cost": 0.0078405
        },
        "time_spent": 31.248126745224
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 7 9 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n",
                    "7 + 1 = 8 (left: 8 9 10)\n",
                    "1 * 7 = 7 (left: 7 9 10)\n",
                    "7 * 1 = 7 (left: 7 9 10)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n",
                    "7 / 1 = 7 (left: 7 9 10)\n",
                    "9 + 1 = 10 (left: 10 9 10)\n",
                    "9 - 1 = 8 (left: 8 9 10)\n",
                    "9 / 1 = 9 (left: 9 9 10)\n",
                    "10 - 1 = 9 (left: 9 10 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n",
                    "7 + 1 = 8 (left: 8 9 10)\n",
                    "1 * 7 = 7 (left: 7 9 10)\n",
                    "7 * 1 = 7 (left: 7 9 10)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 7 9 10",
                "ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n",
                    "7 + 1 = 8 (left: 8 9 10)\n",
                    "1 * 7 = 7 (left: 7 9 10)\n",
                    "7 * 1 = 7 (left: 7 9 10)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n"
                ],
                "new_ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 * 9 = 72 (left: 10 72)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 * 10 = 90 (left: 8 90)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 / 8 = 1.125 (left: 1.125 8 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 9 = 1 (left: 8 1)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\nInput: 5 5 5 5\n",
                    "1 + 7 = 8 (left: 8 9 10)\nPossible next steps:\n",
                    "1 + 7 = 8 (left: 8 9 10)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n5 / 5 = 1 (left: 5 5 1 5)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n5 * 5 = 25 (left: 5 5 25 5)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n5 - 5 = 0 (left: 5 5 5 0)\n",
                    "7 + 1 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "7 + 1 = 8 (left: 8 9 10)\n8 * 9 = 72 (left: 10 72)\n",
                    "7 + 1 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n",
                    "7 + 1 = 8 (left: 8 9 10)\n8 / 9 = 0.89 (left: 0.89 10)\n",
                    "7 + 1 = 8 (left: 8 9 10)\n9 + 8 = 17 (left: 10 17)\n",
                    "1 * 7 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n",
                    "1 * 7 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n",
                    "1 * 7 = 7 (left: 7 9 10)\n7 * 9 = 63 (left: 10 63)\n",
                    "1 * 7 = 7 (left: 7 9 10)\n9 * 10 = 90 (left: 7 90)\n",
                    "1 * 7 = 7 (left: 7 9 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "1 * 7 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 9)\n",
                    "7 * 1 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n",
                    "7 * 1 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n",
                    "7 * 1 = 7 (left: 7 9 10)\n7 * 9 = 63 (left: 10 63)\n",
                    "7 * 1 = 7 (left: 7 9 10)\n9 / 7 = 1 (left: 1 10)\n",
                    "7 * 1 = 7 (left: 7 9 10)\n7 - 9 = -2 (left: -2 10)\n",
                    "7 * 1 = 7 (left: 7 9 10)\n9 - 10 = -1 (left: 7 -1)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 * 9 = 54 (left: 10 54)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n9 - 6 = 3 (left: 3 9 10)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n9 / 6 = 1 (left: 1 9 10)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 * 10 = 90 (left: 8 90)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 7 9 10",
                "ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 * 10 = 90 (left: 8 90)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n"
                ],
                "new_ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 / 10 = 1.7 (left: 1.7 17)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 - 17 = -7 (left: -7 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 * 19 = 152 (left: 152)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n19 / 8 = 2.375 (left: 2.375)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 * 10 = 90 (left: 8 90)\n8 + 90 = 98 (left: 98)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 * 10 = 90 (left: 8 90)\n90 - 8 = 82 (left: 8 82)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20 (left: 10 20)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n-1 + 10 = 9 (left: 9)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n-1 * 10 = -10 (left: -10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n10 - (-1) = 11 (left: 11)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n10 / (-1) = -10 (left: -10)\n"
                ],
                "values": [
                    50,
                    100,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 - 17 = -7 (left: -7 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 7 9 10",
                "ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 - 17 = -7 (left: -7 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n7 + 17 = 24 (left: )\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n7 * 17 = 119 (left: )\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n17 - 7 = 10 (left: )\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 + 1 = 28 (left: 1 28)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 - 1 = 26 (left: 1 26)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 * 1 = 27 (left: 1 27)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 / 1 = 27 (left: 1 27)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 - 17 = -7 (left: -7 10)\n10 - (-7) = 17 (left: 17)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 - 17 = -7 (left: -7 10)\n10 + (-7) = 3 (left: 3)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 - 17 = -7 (left: -7 10)\n10 * (-7) = -70 (left: -70)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 - 17 = -7 (left: -7 10)\n10 / (-7) = -1.4285714285714286 (left: -1.4285714285714286)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n27 / 3 = 9 (left: 9)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n27 / 9 = 3 (left: 3)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\nThere are no possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 + 1 = 28 (left: 1 28)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 - 1 = 26 (left: 1 26)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 * 1 = 27 (left: 1 27)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 / 1 = 27 (left: 1 27)\n"
                ]
            }
        ],
        "idx": 872,
        "ys": [
            "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\n",
            "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 + 1 = 28 (left: 1 28)\n",
            "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 - 1 = 26 (left: 1 26)\n",
            "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 * 1 = 27 (left: 1 27)\n",
            "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 / 1 = 27 (left: 1 27)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 2490,
            "prompt_tokens": 7183,
            "cost": 0.0157545
        },
        "time_spent": 26.98518705368042
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 2 12 13)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n",
                    "9 + 3 = 12 (left: 2 12 13)\n",
                    "9 / 3 = 3 (left: 2 3 13)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "13 - 2 = 11 (left: 3 9 11)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n",
                    "9 + 3 = 12 (left: 2 12 13)\n",
                    "9 / 3 = 3 (left: 2 3 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 9 13",
                "ys": [
                    "13 - 2 = 11 (left: 3 9 11)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n",
                    "9 + 3 = 12 (left: 2 12 13)\n",
                    "9 / 3 = 3 (left: 2 3 13)\n"
                ],
                "new_ys": [
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 13 24)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 + 2 = 14 (left: 14 13)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 12 11)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n2 * 13 = 26 (left: 26 27)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n13 + 2 = 15 (left: 15 27)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n27 - 2 = 25 (left: 13 25)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n27 / 2 = 13 (left: 13 13)\n",
                    "9 + 3 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 13 24)\n",
                    "9 + 3 = 12 (left: 2 12 13)\n12 + 2 = 14 (left: 14 13)\n",
                    "9 + 3 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n",
                    "9 + 3 = 12 (left: 2 12 13)\n13 + 2 = 15 (left: 12 15)\n",
                    "9 + 3 = 12 (left: 2 12 13)\n13 * 2 = 26 (left: 12 26)\n",
                    "9 + 3 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 11 13)\n",
                    "9 / 3 = 3 (left: 2 3 13)\n2 + 3 = 5 (left: 5 13)\n",
                    "9 / 3 = 3 (left: 2 3 13)\n3 * 2 = 6 (left: 6 13)\n",
                    "9 / 3 = 3 (left: 2 3 13)\n13 - 2 = 11 (left: 3 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 + 3 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 11 13)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 9 13",
                "ys": [
                    "9 + 3 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 11 13)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n"
                ],
                "new_ys": [
                    "9 + 3 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 - 12 = -1 (left: -1)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 * 12 = 132 (left: 132)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 / 12 = 0.9166666666666666 (left: 0.9166666666666666)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 + 27 = 38 (left: 38)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 * 27 = 297 (left: 297)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 / 27 = 0.41 (left: 0.41)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 - 11 = -5 (left: -5)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 * 11 = 66 (left: 66)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n11 / 6 = 1.83 (left: 1.83)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n11 - 3 = 8 (left: 8)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n11 / 3 = 3 (left: 3)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n"
                ],
                "values": [
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "9 + 3 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 + 27 = 38 (left: 38)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 9 13",
                "ys": [
                    "9 + 3 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 + 27 = 38 (left: 38)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n"
                ],
                "new_ys": [
                    "9 + 3 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "9 + 3 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "9 + 3 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 * 11 = 143 (left: 143)\n",
                    "9 + 3 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "9 + 3 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 - 13 = -2 (left: -2)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nPossible next steps:\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n2 + 3 = 5 (left: 5)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n2 * 3 = 6 (left: 6)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 + 2 = 5 (left: 5)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 * 2 = 6 (left: 6)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nInput: 1 5 7 8\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nPossible next steps:\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n1 + 5 = 6 (left: 6 7 8)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n5 + 7 = 12 (left: 1 12 8)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n7 + 8 = 15 (left: 1 5 15)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n1 * 5 = 5 (left: 5 7 8)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n5 * 7 = 35 (left: 1 35 8)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n7 * 8 = 56 (left: 1 5 56)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n1 - 5 = -4 (left: -4 5 7)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n5 - 7 = -2 (left: 1 -2 8)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n7 - 8 = -1 (left: 1 5 -1)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 + 27 = 38 (left: 38)\nThere are no possible next steps for the input 38.\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\nInput: 3 3 3 3\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\nPossible next steps:\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\nInput: 5 5 5 5\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\nPossible next steps:\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n17 is the last number, no more steps can be taken.\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    50,
                    50,
                    100,
                    100,
                    0
                ],
                "select_new_ys": [
                    "9 + 3 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "9 + 3 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\n5 / 5 = 1 (left: 1 5 5)\n"
                ]
            }
        ],
        "idx": 873,
        "ys": [
            "9 + 3 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
            "9 + 3 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
            "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\n3 * 3 = 9 (left: 3 3 9)\n",
            "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\n5 * 5 = 25 (left: 5 5 25)\n",
            "13 - 2 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 - 27 = -16 (left: -16)\n5 / 5 = 1 (left: 1 5 5)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 3632,
            "prompt_tokens": 10885,
            "cost": 0.0235915
        },
        "time_spent": 25.190125703811646
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 3 5",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n",
                    "5 - 3 = 2 (left: 2 3 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n",
                    "5 - 3 = 2 (left: 2 3 3)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 3 5",
                "ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n",
                    "5 - 3 = 2 (left: 2 3 3)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n6 - 3 = 3 (left: 3 5)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n6 / 3 = 2 (left: 2 5)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n3 + 5 = 8 (left: 1 8)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n5 - 3 = 2 (left: 1 2)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n3 * 5 = 15 (left: 1 15)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n5 / 3 = 1.67 (left: 1 1.67)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n3 / 5 = 0.6 (left: 1 0.6)\n",
                    "5 - 3 = 2 (left: 2 3 3)\n2 + 3 = 5 (left: 3 5)\n",
                    "5 - 3 = 2 (left: 2 3 3)\n3 * 2 = 6 (left: 3 6)\n",
                    "5 - 3 = 2 (left: 2 3 3)\n3 + 2 = 5 (left: 2 5)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n6 - 3 = 3 (left: 3 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 3 5",
                "ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n6 - 3 = 3 (left: 3 5)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n8 - 6 = 2 (left: 2)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 * 8 = 48 (left: 48)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n8 / 6 = 1.33 (left: 1.33)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 + 11 = 14 (left: 14)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n11 - 3 = 8 (left: 8)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n11 / 3 = 3 (left: 3)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n15 - 6 = 9 (left: 9)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n3 * 10 = 30 (left: 3 30)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n6 - 3 = 3 (left: 3 5)\n3 + 5 = 8 (left: 5 8)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n6 - 3 = 3 (left: 3 5)\n3 * 5 = 15 (left: 15)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n6 - 3 = 3 (left: 3 5)\n3 - 5 = -2 (left: -2)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n6 - 3 = 3 (left: 3 5)\n5 - 3 = 2 (left: 2)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 + 11 = 14 (left: 14)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n3 * 10 = 30 (left: 3 30)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 3 5",
                "ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 + 11 = 14 (left: 14)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n3 * 10 = 30 (left: 3 30)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n8 + 6 = 14 (left: 6 8)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n8 - 6 = 2 (left: 2 8)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n8 / 6 = 1 (left: 1 8)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 + 11 = 14 (left: 14)\n14 is the final number, no more steps can be taken.\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\nInput: 1 3 5 7\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\n1 + 3 = 4 (left: 4 5 7)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\n3 + 7 = 10 (left: 1 5 10)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\n3 * 7 = 21 (left: 1 5 21)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\n7 - 5 = 2 (left: 1 2 7)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\n1 * 7 = 7 (left: 3 5 7)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\n5 - 3 = 2 (left: 1 2 7)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\n5 + 7 = 12 (left: 1 3 12)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\n1 + 5 = 6 (left: 3 6 7)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\nThere are no possible next steps.\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n3 * 10 = 30 (left: 3 30)\n3 * 10 = 30 (left: 10)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n3 * 10 = 30 (left: 3 30)\n30 / 3 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n3 * 10 = 30 (left: 3 30)\nInput: 4 5 6\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n3 * 10 = 30 (left: 3 30)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n3 * 10 = 30 (left: 3 30)\n4 + 5 = 9 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n3 * 10 = 30 (left: 3 30)\n4 * 6 = 24 (left: 5 24)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n3 * 10 = 30 (left: 3 30)\n6 * 4 = 24 (left: 5 24)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n3 * 10 = 30 (left: 3 30)\n6 - 4 = 2 (left: 2 5)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n3 * 10 = 30 (left: 3 30)\n6 / 4 = 1 (left: 1 5)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n3 * 10 = 30 (left: 3 30)\n5 + 6 = 11 (left: 4 11)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n3 * 10 = 30 (left: 3 30)\n5 * 6 = 30 (left: 4 30)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n8 + 6 = 14 (left: 6 8)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n8 - 6 = 2 (left: 2 8)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\n1 + 3 = 4 (left: 4 5 7)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\n3 + 7 = 10 (left: 1 5 10)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\n3 * 7 = 21 (left: 1 5 21)\n"
                ]
            }
        ],
        "idx": 874,
        "ys": [
            "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n8 + 6 = 14 (left: 6 8)\n",
            "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n8 - 6 = 2 (left: 2 8)\n",
            "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\n1 + 3 = 4 (left: 4 5 7)\n",
            "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\n3 + 7 = 10 (left: 1 5 10)\n",
            "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n3 * 11 = 33 (left: 33)\n3 * 7 = 21 (left: 1 5 21)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 4464,
            "prompt_tokens": 14121,
            "cost": 0.030109500000000004
        },
        "time_spent": 23.25114130973816
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n",
                    "9 + 6 = 15 (left: 5 9 15)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n",
                    "9 / 3 = 3 (left: 5 12 3)\n",
                    "12 - 6 = 6 (left: 5 9 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n",
                    "9 + 6 = 15 (left: 5 9 15)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 9 12",
                "ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n",
                    "9 + 6 = 15 (left: 5 9 15)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 + 12 = 23 (left: 9 23)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 * 11 = 99 (left: 12 99)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 * 12 = 132 (left: 9 132)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 12)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n5 + 12 = 17 (left: 9 17)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n5 * 12 = 60 (left: 9 60)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n12 - 5 = 7 (left: 7 9)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n12 / 5 = 2.4 (left: 2.4 9)\n",
                    "6 * 2 = 12 (left: 5 12 9)\nInput: 3 3 4 12\n",
                    "6 * 2 = 12 (left: 5 12 9)\nPossible next steps:\n",
                    "6 * 2 = 12 (left: 5 12 9)\n3 + 3 = 6 (left: 4 6 12)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 3 12 12)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n4 / 3 = 1.33 (left: 1.33 3 12)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n4 - 3 = 1 (left: 1 3 12)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n3 / 3 = 1 (left: 1 4 12)\n",
                    "9 + 6 = 15 (left: 5 9 15)\n5 + 9 = 14 (left: 14 15)\n",
                    "9 + 6 = 15 (left: 5 9 15)\n9 + 5 = 14 (left: 14 15)\n",
                    "9 + 6 = 15 (left: 5 9 15)\n9 * 5 = 45 (left: 45 15)\n",
                    "9 + 6 = 15 (left: 5 9 15)\n9 - 5 = 4 (left: 4 15)\n",
                    "9 + 6 = 15 (left: 5 9 15)\n15 - 9 = 6 (left: 5 6)\n",
                    "9 + 6 = 15 (left: 5 9 15)\n15 / 5 = 3 (left: 3 15)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 / 4 = 1.5 (left: 1.5 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 4 = 8 (left: 8 6)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n5 - 3 = 2 (left: 2 12)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n5 * 3 = 15 (left: 15 12)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n5 + 3 = 8 (left: 8 12)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n3 * 12 = 36 (left: 5 36)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n3 + 12 = 15 (left: 5 15)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n3 / 12 = 0.25 (left: 5 0.25)\n",
                    "9 - 6 = 3 (left: 5 3 12)\nInput: 2 3 4 5\n",
                    "9 - 6 = 3 (left: 5 3 12)\nPossible next steps:\n",
                    "9 - 6 = 3 (left: 5 3 12)\n2 * 3 = 6 (left: 4 5 6)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n2 + 3 = 5 (left: 4 5 5)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n2 - 3 = -1 (left: -1 4 5)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n2 / 3 = 0.67 (left: 0.67 4 5)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n3 * 4 = 12 (left: 2 5 12)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n3 + 4 = 7 (left: 2 5 7)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n3 - 4 = -1 (left: 2 -1 5)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n3 / 4 = 0.75 (left: 2 0.75 5)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n4 + 5 = 9 (left: 2 9)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n4 - 5 = -1 (left: 2 -1)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n4 / 5 = 0.8 (left: 2 0.8)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 3 12 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n5 - 3 = 2 (left: 2 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 9 12",
                "ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 3 12 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n5 - 3 = 2 (left: 2 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 3 12 12)\n3 + 12 = 15 (left: 12 15)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 3 12 12)\n12 + 3 = 15 (left: 12 15)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 36)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n5 - 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n5 - 3 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 / 20 = 0.6 (left: 0.6 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 36)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n5 - 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 6 9 12",
                "ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 36)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 6 = 3 (left: 5 3 12)\n5 - 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 6) * (9 - 12) = 24\n",
                    "6 * 2 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 36)\n12 + 36 = 48 (left: 48)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 36)\n12 * 36 = 432 (left: 432)\n",
                    "6 * 2 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 36)\n36 / 12 = 3 (left: 3 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 5) * (6 - 4) * 12 = 24\n",
                    "9 - 6 = 3 (left: 5 3 12)\n5 - 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 - 3) * (5 - 6) * 12 = 24\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 / 2 = 7 (left: 7)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 / 7 = 2 (left: 2)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 - 2 = 12 (left: 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 + 2 = 16 (left: 16)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 * 2 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 36)\n36 / 12 = 3 (left: 3 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 - 2 = 12 (left: 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 + 2 = 16 (left: 16)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 6) * (9 - 12) = 24\n",
                    "6 * 2 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 36)\n12 + 36 = 48 (left: 48)\n"
                ]
            }
        ],
        "idx": 875,
        "ys": [
            "6 * 2 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 36)\n36 / 12 = 3 (left: 3 12)\n",
            "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 - 2 = 12 (left: 12)\n",
            "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 + 2 = 16 (left: 16)\n",
            "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 6) * (9 - 12) = 24\n",
            "6 * 2 = 12 (left: 5 12 9)\n3 * 4 = 12 (left: 3 12 12)\n3 * 12 = 36 (left: 12 36)\n12 + 36 = 48 (left: 48)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 5749,
            "prompt_tokens": 18773,
            "cost": 0.0396575
        },
        "time_spent": 29.426491260528564
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 9 10 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 9 = 15 (left: 10 11 15)\n",
                    "6 / 9 = 0.67 (left: 0.67 10 11)\n",
                    "11 - 10 = 1 (left: 6 9 1)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n",
                    "10 + 6 = 16 (left: 9 11 16)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    100,
                    100,
                    50
                ],
                "select_new_ys": [
                    "9 - 6 = 3 (left: 3 10 11)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n",
                    "11 - 10 = 1 (left: 6 9 1)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 9 10 11",
                "ys": [
                    "9 - 6 = 3 (left: 3 10 11)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n",
                    "11 - 10 = 1 (left: 6 9 1)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n"
                ],
                "new_ys": [
                    "9 - 6 = 3 (left: 3 10 11)\n3 + 10 = 13 (left: 10 11 13)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n3 * 10 = 30 (left: 11 30)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n10 + 3 = 13 (left: 11 13)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n10 / 3 = 3 (left: 3 11)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n11 - 3 = 8 (left: 8 11)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n9 / 5 = 1 (left: 1 10)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n10 + 11 = 21 (left: 15 21)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n11 + 15 = 26 (left: 10 26)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n10 * 11 = 110 (left: 15 110)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n15 + 10 = 25 (left: 11 25)\n",
                    "11 - 10 = 1 (left: 6 9 1)\n6 + 9 = 15 (left: 1 15)\n",
                    "11 - 10 = 1 (left: 6 9 1)\n9 - 6 = 3 (left: 3 9)\n",
                    "11 - 10 = 1 (left: 6 9 1)\n6 * 9 = 54 (left: 1 54)\n",
                    "11 - 10 = 1 (left: 6 9 1)\n9 / 6 = 1 (left: 1 1)\n",
                    "11 - 10 = 1 (left: 6 9 1)\n6 - 9 = -3 (left: -3 9)\n",
                    "11 - 10 = 1 (left: 6 9 1)\n9 * 1 = 9 (left: 6 9)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n10 + 11 = 21 (left: 21 54)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n10 * 11 = 110 (left: 110 54)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n11 - 10 = 1 (left: 1 54)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n11 / 10 = 1.1 (left: 1.1 54)\n",
                    "6 * 9 = 54 (left: 10 11 54)\nInput: 3 3 3 6\n",
                    "6 * 9 = 54 (left: 10 11 54)\nPossible next steps:\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 / 3 = 1 (left: 1 3 6)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 * 3 = 9 (left: 9 3 6)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 - 3 = 0 (left: 0 3 6)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n6 - 3 = 3 (left: 3 3 6)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 - 6 = 3 (left: 3 10 11)\n10 + 3 = 13 (left: 11 13)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n3 + 10 = 13 (left: 10 11 13)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n3 * 10 = 30 (left: 11 30)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 9 10 11",
                "ys": [
                    "9 - 6 = 3 (left: 3 10 11)\n10 + 3 = 13 (left: 11 13)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n3 + 10 = 13 (left: 10 11 13)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n3 * 10 = 30 (left: 11 30)\n"
                ],
                "new_ys": [
                    "9 - 6 = 3 (left: 3 10 11)\n10 + 3 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n10 + 3 = 13 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n10 + 3 = 13 (left: 11 13)\n11 * 13 = 143 (left: 143)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n10 + 3 = 13 (left: 11 13)\n13 * 11 = 143 (left: 143)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 * 10 = 140 (left: 140)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 / 10 = 1.4 (left: 1.4 10)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 / 14 = 0.71 (left: 0.71 14)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 * 3 = 18 (left: 6 6 18)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 / 3 = 2 (left: 2 6 6)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 + 3 = 9 (left: 6 6 9)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n3 + 10 = 13 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n3 + 10 = 13 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n3 + 10 = 13 (left: 10 11 13)\n10 * 11 = 110 (left: 110 13)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n3 + 10 = 13 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n3 + 10 = 13 (left: 10 11 13)\n13 - 10 = 3 (left: 3 13)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n3 * 10 = 30 (left: 11 30)\n11 + 30 = 41 (left: 41)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n3 * 10 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n3 * 10 = 30 (left: 11 30)\n11 * 30 = 330 (left: 330)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n3 * 10 = 30 (left: 11 30)\n30 / 11 = 2.73 (left: 2.73)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 - 6 = 3 (left: 3 10 11)\n10 + 3 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n10 + 3 = 13 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 9 10 11",
                "ys": [
                    "9 - 6 = 3 (left: 3 10 11)\n10 + 3 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "9 - 6 = 3 (left: 3 10 11)\n10 + 3 = 13 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n"
                ],
                "new_ys": [
                    "9 - 6 = 3 (left: 3 10 11)\n10 + 3 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (10 + (9 - 6)) + 11 = 24\n",
                    "9 - 6 = 3 (left: 3 10 11)\n10 + 3 = 13 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (10 + (9 - 6)) + 11 = 24\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (11 - 6) + (5 + 9) = 24\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: ((11 - 6) + 5) + 9 = 24\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n3 + 6 = 9 (left: 6 9)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n6 + 3 = 9 (left: 3 9)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n6 / 3 = 2 (left: 2 6)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\nInput: 1 7 5 6\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\nPossible next steps:\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n1 + 7 = 8 (left: 5 8 6)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n7 - 1 = 6 (left: 6 5 6)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n1 * 7 = 7 (left: 5 7 6)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n7 / 1 = 7 (left: 5 7 6)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n6 + 5 = 11 (left: 1 11 6)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n5 - 1 = 4 (left: 4 6)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n1 + 5 = 6 (left: 6 6)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n5 / 1 = 5 (left: 5 6)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n6 - 1 = 5 (left: 5 6)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n6 / 1 = 6 (left: 6)\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "9 - 6 = 3 (left: 3 10 11)\n10 + 3 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (10 + (9 - 6)) + 11 = 24\n",
                    "9 - 6 = 3 (left: 3 10 11)\n10 + 3 = 13 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (10 + (9 - 6)) + 11 = 24\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n7 - 1 = 6 (left: 6 5 6)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n5 - 1 = 4 (left: 4 6)\n"
                ]
            }
        ],
        "idx": 876,
        "ys": [
            "9 - 6 = 3 (left: 3 10 11)\n10 + 3 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (10 + (9 - 6)) + 11 = 24\n",
            "9 - 6 = 3 (left: 3 10 11)\n10 + 3 = 13 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (10 + (9 - 6)) + 11 = 24\n",
            "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)\n",
            "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n7 - 1 = 6 (left: 6 5 6)\n",
            "6 * 9 = 54 (left: 10 11 54)\n3 + 3 = 6 (left: 6 3 6)\n6 - 3 = 3 (left: 3 6 6)\n5 - 1 = 4 (left: 4 6)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 6967,
            "prompt_tokens": 23745,
            "cost": 0.049551500000000005
        },
        "time_spent": 25.923656225204468
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 5 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 2 9 11)\n",
                    "5 - 4 = 1 (left: 1 4 11)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n"
                ],
                "values": [
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "11 - 2 = 9 (left: 4 9 11)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n",
                    "5 - 4 = 1 (left: 1 4 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 5 11",
                "ys": [
                    "11 - 2 = 9 (left: 4 9 11)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n",
                    "5 - 4 = 1 (left: 1 4 11)\n"
                ],
                "new_ys": [
                    "11 - 2 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n11 - 4 = 7 (left: 7 11)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n9 / 4 = 2 (left: 2 11)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n2 + 9 = 11 (left: 11)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n2 * 9 = 18 (left: 11 18)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n9 / 2 = 4.5 (left: 4.5 11)\n",
                    "4 + 5 = 9 (left: 2 9 11)\nInput: 3 3 3 3\n",
                    "4 + 5 = 9 (left: 2 9 11)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "5 - 4 = 1 (left: 1 4 11)\n4 + 11 = 15 (left: 1 15)\n",
                    "5 - 4 = 1 (left: 1 4 11)\n4 * 11 = 44 (left: 1 44)\n",
                    "5 - 4 = 1 (left: 1 4 11)\n11 - 4 = 7 (left: 1 7)\n",
                    "5 - 4 = 1 (left: 1 4 11)\n11 / 4 = 2 (left: 1 2)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 2 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n11 - 4 = 7 (left: 7 11)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 5 11",
                "ys": [
                    "11 - 2 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n11 - 4 = 7 (left: 7 11)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)\n"
                ],
                "new_ys": [
                    "11 - 2 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 * 13 = 143 (left: 143)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n13 - 2 = 11 (left: 11 11)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n9 / 3 = 3 (left: 3 3)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 3 6)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\nInput: 4 4 6 8\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n4 + 4 = 8 (left: 6 8 8)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n4 / 4 = 1 (left: 1 6 8)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n4 * 4 = 16 (left: 6 8 16)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n8 - 4 = 4 (left: 4 6 8)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n6 + 4 = 10 (left: 8 10 8)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n8 / 4 = 2 (left: 2 10 8)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n8 - 4 = 4 (left: 4 8 8)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n6 * 4 = 24 (left: 8 8 24)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n11 / 5 = 2 (left: 2)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 * 11 = 55 (left: 55)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n11 - 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n11 - 4 = 7 (left: 7 11)\n11 - 7 = 4 (left: 4 11)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n11 - 4 = 7 (left: 7 11)\n11 / 7 = 1.57 (left: 1.57 11)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n11 - 4 = 7 (left: 7 11)\n7 - 11 = -4 (left: -4 11)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)\n11 + 36 = 47 (left: 47)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)\n11 * 36 = 396 (left: 396)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)\n36 / 11 = 3.27 (left: 3.27)\n"
                ],
                "values": [
                    100,
                    0,
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 2 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n8 - 4 = 4 (left: 4 8 8)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n6 * 4 = 24 (left: 8 8 24)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 5 11",
                "ys": [
                    "11 - 2 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n8 - 4 = 4 (left: 4 8 8)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n6 * 4 = 24 (left: 8 8 24)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n"
                ],
                "new_ys": [
                    "11 - 2 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 3 = 9 (left: 9 27)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n27 / 3 = 9 (left: 3 9)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n8 - 4 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n8 - 4 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n8 - 4 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n6 * 4 = 24 (left: 8 8 24)\n8 + 8 = 16 (left: 16 24)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n6 * 4 = 24 (left: 8 8 24)\n8 * 8 = 64 (left: 24 64)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n6 * 4 = 24 (left: 8 8 24)\n8 / 8 = 1 (left: 1 24)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 13 15)\n",
                    "11 - 2 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n13 - 2 = 11 (left: 2 11)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "11 - 2 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n8 - 4 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n6 * 4 = 24 (left: 8 8 24)\n8 / 8 = 1 (left: 1 24)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 3 = 9 (left: 9 27)\n",
                    "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n27 / 3 = 9 (left: 3 9)\n"
                ]
            }
        ],
        "idx": 877,
        "ys": [
            "11 - 2 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
            "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n8 - 4 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n",
            "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n6 * 4 = 24 (left: 8 8 24)\n8 / 8 = 1 (left: 1 24)\n",
            "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 3 = 9 (left: 9 27)\n",
            "4 + 5 = 9 (left: 2 9 11)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n27 / 3 = 9 (left: 3 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 7915,
            "prompt_tokens": 26995,
            "cost": 0.0563225
        },
        "time_spent": 24.332244157791138
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 5 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 3 5 10)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n",
                    "10 - 1 = 9 (left: 2 5 9)\n"
                ],
                "values": [
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 2 4 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n",
                    "10 - 1 = 9 (left: 2 5 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 5 10",
                "ys": [
                    "5 - 1 = 4 (left: 2 4 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n",
                    "10 - 1 = 9 (left: 2 5 9)\n"
                ],
                "new_ys": [
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 * 10 = 20 (left: 4 20)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 + 10 = 15 (left: 3 15)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 * 5 = 15 (left: 15 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 * 10 = 50 (left: 3 50)\n",
                    "10 - 1 = 9 (left: 2 5 9)\n5 + 2 = 7 (left: 7 9)\n",
                    "10 - 1 = 9 (left: 2 5 9)\n9 - 2 = 7 (left: 5 7)\n",
                    "10 - 1 = 9 (left: 2 5 9)\n9 - 5 = 4 (left: 4 9)\n",
                    "10 - 1 = 9 (left: 2 5 9)\n5 * 2 = 10 (left: 10 9)\n",
                    "10 - 1 = 9 (left: 2 5 9)\n9 / 2 = 4 (left: 5 4)\n",
                    "10 - 1 = 9 (left: 2 5 9)\n9 - 2 = 7 (left: 5 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 2 4 10)\n2 * 10 = 20 (left: 4 20)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 5 10",
                "ys": [
                    "5 - 1 = 4 (left: 2 4 10)\n2 * 10 = 20 (left: 4 20)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n"
                ],
                "new_ys": [
                    "5 - 1 = 4 (left: 2 4 10)\n2 * 10 = 20 (left: 4 20)\n4 * 5 = 20 (left: 20)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 * 10 = 20 (left: 4 20)\n20 / 4 = 5 (left: 5 20)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 / 6 = 1.67 (left: 1.67)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 - 8 = 2 (left: 2)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 * 10 = 80 (left: 80)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 / 10 = 0.8 (left: 0.8)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n5 - 4 = 1 (left: 1 5)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n4 * 5 = 20 (left: 5 20)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n5 / 4 = 1.25 (left: 1.25 5)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 * 10 = 20 (left: 4 20)\n4 * 5 = 20 (left: 20)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 * 10 = 20 (left: 4 20)\n20 / 4 = 5 (left: 5 20)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 2 5 10",
                "ys": [
                    "5 - 1 = 4 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 * 10 = 20 (left: 4 20)\n4 * 5 = 20 (left: 20)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 * 10 = 20 (left: 4 20)\n20 / 4 = 5 (left: 5 20)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n"
                ],
                "new_ys": [
                    "5 - 1 = 4 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 * 4 = 32 (left: 8 32)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 / 4 = 2 (left: 2 32)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 * 10 = 20 (left: 4 20)\n4 * 5 = 20 (left: 20)\nThere are no possible next steps.\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 * 10 = 20 (left: 4 20)\n20 / 4 = 5 (left: 5 20)\n5 * 4 = 20 (left: 5 20)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 + 8 = 24 (left: 8 24)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 + 1 = 17 (left: 1 17)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 + 2 = 18 (left: 2 18)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 + 3 = 19 (left: 3 19)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 + 4 = 20 (left: 4 20)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 + 5 = 21 (left: 5 21)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 + 6 = 22 (left: 6 22)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 + 7 = 23 (left: 7 23)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 + 9 = 25 (left: 9 25)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 + 10 = 26 (left: 10 26)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 + 11 = 27 (left: 11 27)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 + 12 = 28 (left: 12 28)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 + 13 = 29 (left: 13 29)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 + 14 = 30 (left: 14 30)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 + 15 = 31 (left: 15 31)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\nInput: 3 3 3 3\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\nPossible next steps:\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n3 / 3 = 1 (left: 1 3 3)\n"
                ],
                "values": [
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 * 4 = 32 (left: 8 32)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 + 4 = 20 (left: 4 20)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 / 4 = 2 (left: 2 32)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 * 10 = 20 (left: 4 20)\n20 / 4 = 5 (left: 5 20)\n5 * 4 = 20 (left: 5 20)\n"
                ]
            }
        ],
        "idx": 878,
        "ys": [
            "5 - 1 = 4 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 * 4 = 32 (left: 8 32)\n",
            "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 + 4 = 20 (left: 4 20)\n",
            "5 - 1 = 4 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n3 * 3 = 9 (left: 3 3 9)\n",
            "5 - 1 = 4 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 / 4 = 2 (left: 2 32)\n",
            "5 - 1 = 4 (left: 2 4 10)\n2 * 10 = 20 (left: 4 20)\n20 / 4 = 5 (left: 5 20)\n5 * 4 = 20 (left: 5 20)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 8813,
            "prompt_tokens": 30233,
            "cost": 0.0629755
        },
        "time_spent": 21.689616918563843
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 2 5",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 2 5",
                "ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 4 = 1 (left: 1 2)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 8 5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 4 = 1 (left: 1 5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 * 5 = 20 (left: 2 20)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 + 2 = 3 (left: 3 5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n2 * 5 = 10 (left: 1 10)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n2 + 1 = 3 (left: 3 5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n5 - 2 = 3 (left: 1 3)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n2 + 2 = 4 (left: 3 4)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n2 * 2 = 4 (left: 3 4)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n2 / 2 = 1 (left: 1 3)\n",
                    "5 - 2 = 3 (left: 2 2 3)\nInput: 3 5 7 9\n",
                    "5 - 2 = 3 (left: 2 2 3)\nPossible next steps:\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 * 5 = 15 (left: 7 9 15)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n7 - 3 = 4 (left: 4 5 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n7 / 3 = 2 (left: 2 5 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n9 - 3 = 6 (left: 6 5 7)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n9 - 5 = 4 (left: 4 7 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 * 7 = 35 (left: 3 9 35)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 9 = 12 (left: 7 12 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 * 9 = 27 (left: 7 27 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n7 + 9 = 16 (left: 3 5 16)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n9 / 3 = 3 (left: 5 7 3)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n9 - 7 = 2 (left: 2 5 9)\n"
                ],
                "values": [
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    100,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n7 + 9 = 16 (left: 3 5 16)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 8 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 2 5",
                "ys": [
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n7 + 9 = 16 (left: 3 5 16)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 8 5)\n"
                ],
                "new_ys": [
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 / 8 = 0 (left: 0 8 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 * 4 = 12 (left: 4 12 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 + 12 = 15 (left: 9 15)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 / 3 = 1 (left: 1 12 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n12 - 3 = 9 (left: 9 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n12 / 3 = 4 (left: 4 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n12 + 3 = 15 (left: 12 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n9 * 1 = 9 (left: 3 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n7 + 9 = 16 (left: 3 5 16)\n3 * 5 = 15 (left: 15 16)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n7 + 9 = 16 (left: 3 5 16)\n5 + 3 = 8 (left: 8 16)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n7 + 9 = 16 (left: 3 5 16)\n16 - 3 = 13 (left: 3 13 16)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n2 + 9 = 11 (left: 9 11)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n9 / 2 = 4.5 (left: 4.5 9)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 8 5)\n8 - 5 = 3 (left: 3)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 8 5)\n8 / 5 = 1 (left: 1)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 8 5)\n8 * 5 = 40 (left: 40)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 8 5)\n5 - 8 = -3 (left: -3)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 8 5)\n5 / 8 = 0.625 (left: 0.625)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 8 5)\nInput: 3 3 3 3\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 8 5)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 8 5)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 8 5)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 8 5)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 8 5)\n3 - 3 = 0 (left: 0 3 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    0
                ],
                "select_new_ys": [
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 * 4 = 12 (left: 4 12 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 + 12 = 15 (left: 9 15)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n7 + 9 = 16 (left: 3 5 16)\n5 + 3 = 8 (left: 8 16)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 8 5)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 2 5",
                "ys": [
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 * 4 = 12 (left: 4 12 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 + 12 = 15 (left: 9 15)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n7 + 9 = 16 (left: 3 5 16)\n5 + 3 = 8 (left: 8 16)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 8 5)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n"
                ],
                "new_ys": [
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 * 4 = 12 (left: 4 12 9)\n4 + 12 = 16 (left: 9 16)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 * 4 = 12 (left: 4 12 9)\n4 * 3 = 12 (left: 12 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 * 4 = 12 (left: 4 12 9)\n12 - 4 = 8 (left: 8 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 + 12 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 + 12 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 + 12 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 + 12 = 15 (left: 9 15)\n15 / 9 = 1.67 (left: 1.67 15)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 + 12 = 15 (left: 9 15)\n9 - 15 = -6 (left: -6 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 + 12 = 15 (left: 9 15)\n9 / 15 = 0.6 (left: 0.6 15)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n7 + 9 = 16 (left: 3 5 16)\n5 + 3 = 8 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n7 + 9 = 16 (left: 3 5 16)\n5 + 3 = 8 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 8 5)\n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 8 5)\n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n8 + 9 = 17 (left: 17 15)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n8 * 9 = 72 (left: 72 15)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n9 - 8 = 1 (left: 1 15)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n9 / 8 = 1 (left: 1 15)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\nInput: 3 4 5 6\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\nPossible next steps:\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n3 + 4 = 7 (left: 7 5 6)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n4 + 5 = 9 (left: 3 9 6)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n5 + 6 = 11 (left: 3 4 11)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n3 * 4 = 12 (left: 12 5 6)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n4 * 5 = 20 (left: 3 20 6)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n5 * 6 = 30 (left: 3 4 30)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n3 - 4 = -1 (left: -1 5 6)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n4 - 5 = -1 (left: 3 -1 6)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n5 - 6 = -1 (left: 3 4 -1)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n3 / 4 = 0.75 (left: 0.75 5 6)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n4 / 5 = 0.8 (left: 3 0.8 6)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 8 9 15)\n5 / 6 = 0.8333333333333334 (left: 3 4 0.8333333333333334)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    0,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 + 12 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 + 12 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n7 + 9 = 16 (left: 3 5 16)\n5 + 3 = 8 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 * 4 = 12 (left: 4 12 9)\n4 + 12 = 16 (left: 9 16)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 * 4 = 12 (left: 4 12 9)\n4 * 3 = 12 (left: 12 9)\n"
                ]
            }
        ],
        "idx": 879,
        "ys": [
            "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 + 12 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
            "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 + 12 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
            "5 - 2 = 3 (left: 2 2 3)\n7 + 9 = 16 (left: 3 5 16)\n5 + 3 = 8 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
            "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 * 4 = 12 (left: 4 12 9)\n4 + 12 = 16 (left: 9 16)\n",
            "5 - 2 = 3 (left: 2 2 3)\n5 + 7 = 12 (left: 3 12 9)\n3 * 4 = 12 (left: 4 12 9)\n4 * 3 = 12 (left: 12 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 10186,
            "prompt_tokens": 33489,
            "cost": 0.07060549999999999
        },
        "time_spent": 31.172324180603027
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 12 13 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 12 = 18 (left: 13 18 13)\n",
                    "6 + 13 = 19 (left: 12 19 13)\n",
                    "6 * 12 = 72 (left: 13 72 13)\n",
                    "6 - 12 = -6 (left: -6 12 13)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "13 - 12 = 1 (left: 1 12 13)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n",
                    "6 + 13 = 19 (left: 12 19 13)\n",
                    "6 * 12 = 72 (left: 13 72 13)\n",
                    "6 - 12 = -6 (left: -6 12 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 12 13 13",
                "ys": [
                    "13 - 12 = 1 (left: 1 12 13)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n",
                    "6 + 13 = 19 (left: 12 19 13)\n",
                    "6 * 12 = 72 (left: 13 72 13)\n",
                    "6 - 12 = -6 (left: -6 12 13)\n"
                ],
                "new_ys": [
                    "13 - 12 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 12 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n18 - 13 = 5 (left: 5 13)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 * 18 = 234 (left: 13 234)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n18 / 13 = 1.3846153846153846 (left: 1.3846153846153846 13)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n18 + 13 = 31 (left: 13 31)\n",
                    "6 + 13 = 19 (left: 12 19 13)\n12 + 19 = 31 (left: 13 31)\n",
                    "6 + 13 = 19 (left: 12 19 13)\n12 - 19 = -7 (left: -7 13)\n",
                    "6 + 13 = 19 (left: 12 19 13)\n12 * 19 = 228 (left: 13 228)\n",
                    "6 + 13 = 19 (left: 12 19 13)\n19 - 12 = 7 (left: 7 13)\n",
                    "6 + 13 = 19 (left: 12 19 13)\n19 / 12 = 1.58 (left: 1.58 13)\n",
                    "6 * 12 = 72 (left: 13 72 13)\n13 + 72 = 85 (left: 13 85)\n",
                    "6 * 12 = 72 (left: 13 72 13)\n13 * 72 = 936 (left: 936 13)\n",
                    "6 * 12 = 72 (left: 13 72 13)\n72 / 13 = 5 (left: 5 13)\n",
                    "6 * 12 = 72 (left: 13 72 13)\n72 - 13 = 59 (left: 59 13)\n",
                    "6 * 12 = 72 (left: 13 72 13)\n72 + 13 = 85 (left: 13 85)\n",
                    "6 - 12 = -6 (left: -6 12 13)\n12 + 13 = 25 (left: -6 25)\n",
                    "6 - 12 = -6 (left: -6 12 13)\n13 - 12 = 1 (left: -6 1 13)\n",
                    "6 - 12 = -6 (left: -6 12 13)\n-6 + 12 = 6 (left: 6 13)\n",
                    "6 - 12 = -6 (left: -6 12 13)\n12 - 13 = -1 (left: -6 -1 13)\n",
                    "6 - 12 = -6 (left: -6 12 13)\n-6 - 12 = -18 (left: -18 13)\n",
                    "6 - 12 = -6 (left: -6 12 13)\n12 * 13 = 156 (left: -6 156)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 12 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 12 13 13",
                "ys": [
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 12 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n"
                ],
                "new_ys": [
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 * 13 = 143 (left: 13 143)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 12 13)\n12 - 13 = -1 (left: -1)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 12 13)\n12 * 13 = 156 (left: 156)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 12 13)\n12 / 13 = 0.92 (left: 0.92)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n13 - 12 = 1 (left: 1)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 * 13 = 156 (left: 156)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 / 13 = 0.9230769230769231 (left: 0.9230769230769231)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n13 - 12 = 1 (left: 1 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n13 / 12 = 1.08 (left: 1.08 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n13 * 12 = 156 (left: 13 156)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n13 + 31 = 44 (left: 44)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n13 * 31 = 403 (left: 403)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n31 - 13 = 18 (left: 18)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 * 13 = 143 (left: 13 143)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 12 13 13",
                "ys": [
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 * 13 = 143 (left: 13 143)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n"
                ],
                "new_ys": [
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 11 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 * 13 = 143 (left: 13 143)\n13 * 2 = 26 (left: 26 143)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 * 13 = 143 (left: 13 143)\n13 + 143 = 156 (left: 13 156)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 * 13 = 143 (left: 13 143)\n143 - 13 = 130 (left: 13 130)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n2 + 13 = 15 (left: 15)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\nInput: 3 3 3 3\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\nPossible next steps:\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\nInput: 3 6 6 9\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\nPossible next steps:\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 / 3 = 2 (left: 2 6 9)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n9 - 6 = 3 (left: 3 6 6)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n9 - 3 = 6 (left: 6 6 6)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 + 3 = 9 (left: 6 6 9)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n9 / 3 = 3 (left: 3 6 18)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 / 3 = 2 (left: 2 6 18)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 + 3 = 9 (left: 6 6 9)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 11 13)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 / 3 = 2 (left: 2 6 9)\n",
                    "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n9 - 6 = 3 (left: 3 6 6)\n"
                ]
            }
        ],
        "idx": 880,
        "ys": [
            "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
            "13 - 12 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n13 + 11 = 24 (left: 11 13)\n",
            "13 - 12 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n3 * 3 = 9 (left: 3 3 9)\n",
            "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 / 3 = 2 (left: 2 6 9)\n",
            "13 - 12 = 1 (left: 1 12 13)\n1 * 12 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n9 - 6 = 3 (left: 3 6 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 11336,
            "prompt_tokens": 37195,
            "cost": 0.0784645
        },
        "time_spent": 27.236504077911377
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n",
                    "10 - 6 = 4 (left: 3 4 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n",
                    "10 - 6 = 4 (left: 3 4 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 6 10",
                "ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n",
                    "10 - 6 = 4 (left: 3 4 10)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 * 6 = 60 (left: 6 60)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n9 + 6 = 15 (left: 10 15)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 10 54)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n9 * 6 = 54 (left: 10 54)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n9 / 6 = 1.5 (left: 1.5 10)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n6 - 9 = -3 (left: -3 10)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n9 - 6 = 3 (left: 3 10)\n",
                    "10 - 6 = 4 (left: 3 4 10)\n3 + 4 = 7 (left: 7 10)\n",
                    "10 - 6 = 4 (left: 3 4 10)\n4 + 3 = 7 (left: 7 10)\n",
                    "10 - 6 = 4 (left: 3 4 10)\n3 * 4 = 12 (left: 12 10)\n",
                    "10 - 6 = 4 (left: 3 4 10)\n4 * 3 = 12 (left: 12 10)\n",
                    "10 - 6 = 4 (left: 3 4 10)\n4 / 3 = 1 (left: 1 10)\n",
                    "10 - 6 = 4 (left: 3 4 10)\n10 - 3 = 7 (left: 3 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 6 10",
                "ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 * 12 = 120 (left: 120)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n12 - 10 = 2 (left: 2)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n12 / 10 = 1.2 (left: 1.2)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n12 + 10 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 - 12 = -2 (left: -2)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n10 * 2 = 20 (left: 20 36)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 + 1 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)\n0 + 10 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)\n10 - 0 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)\n0 * 10 = 0 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)\n10 / 0 is undefined\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)\n10 + 0 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n6 + 16 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n6 * 16 = 96 (left: 96)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 / 6 = 2 (left: 2)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\nInput: 3 3 3 3\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n3 * 3 = 9 (left: 3 9 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n3 - 3 = 0 (left: 0 3 3 3)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n12 + 10 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n10 * 2 = 20 (left: 20 36)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 6 10",
                "ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n12 + 10 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n10 * 2 = 20 (left: 20 36)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 6 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\nNo possible next steps.\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n12 + 10 = 22 (left: 22)\nThere are no possible next steps.\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n10 * 2 = 20 (left: 20 36)\n20 + 36 = 56 (left: 56)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n10 * 2 = 20 (left: 20 36)\n20 - 36 = -16 (left: -16)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n10 * 2 = 20 (left: 20 36)\n20 * 36 = 720 (left: 720)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n10 * 2 = 20 (left: 20 36)\n20 / 36 = 0.56 (left: 0.56)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n3 * 10 = 30 (left: 10 30)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n10 / 3 = 3.33 (left: 3 3.33)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\nInput: 4 4 6 8\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n4 + 4 = 8 (left: 6 8 8)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n4 * 4 = 16 (left: 6 8 16)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n8 - 4 = 4 (left: 4 6 8)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n8 / 4 = 2 (left: 2 6 8)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n6 + 4 = 10 (left: 8 8 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n6 / 4 = 1.5 (left: 1.5 4 8)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n6 - 4 = 2 (left: 2 4 8)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n8 - 6 = 2 (left: 2 4 8)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n8 / 6 = 1.33 (left: 1.33 4 8)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n8 * 4 = 32 (left: 6 8 32)\n"
                ],
                "values": [
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    0,
                    100
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n8 / 4 = 2 (left: 2 6 8)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n8 * 4 = 32 (left: 6 8 32)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 6 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n10 * 2 = 20 (left: 20 36)\n20 - 36 = -16 (left: -16)\n"
                ]
            }
        ],
        "idx": 881,
        "ys": [
            "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
            "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n8 / 4 = 2 (left: 2 6 8)\n",
            "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3 (left: 3 10)\n8 * 4 = 32 (left: 6 8 32)\n",
            "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 6 3)\n",
            "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n10 * 2 = 20 (left: 20 36)\n20 - 36 = -16 (left: -16)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 12415,
            "prompt_tokens": 40439,
            "cost": 0.0854885
        },
        "time_spent": 23.32928991317749
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n",
                    "11 - 3 = 8 (left: 8 4 11)\n",
                    "11 - 4 = 7 (left: 7 8 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n",
                    "11 - 3 = 8 (left: 8 4 11)\n",
                    "11 - 4 = 7 (left: 7 8 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 8 11",
                "ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n",
                    "11 - 3 = 8 (left: 8 4 11)\n",
                    "11 - 4 = 7 (left: 7 8 11)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 * 8 = 56 (left: 11 56)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 11)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 - 12 = -4 (left: -4 11)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 * 12 = 96 (left: 11 96)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n12 - 8 = 4 (left: 4 11)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n12 / 8 = 1.5 (left: 1.5 11)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n12 + 8 = 20 (left: 11 20)\n",
                    "11 - 3 = 8 (left: 8 4 11)\n8 + 4 = 12 (left: 12 11)\n",
                    "11 - 3 = 8 (left: 8 4 11)\n8 / 4 = 2 (left: 2 11)\n",
                    "11 - 3 = 8 (left: 8 4 11)\n11 + 8 = 19 (left: 4 19)\n",
                    "11 - 3 = 8 (left: 8 4 11)\n8 * 4 = 32 (left: 32 11)\n",
                    "11 - 3 = 8 (left: 8 4 11)\n8 - 4 = 4 (left: 4 11)\n",
                    "11 - 3 = 8 (left: 8 4 11)\n11 - 8 = 3 (left: 3 11)\n",
                    "11 - 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n",
                    "11 - 4 = 7 (left: 7 8 11)\n7 * 8 = 56 (left: 11 56)\n",
                    "11 - 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n",
                    "11 - 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n",
                    "11 - 4 = 7 (left: 7 8 11)\n11 + 7 = 18 (left: 8 18)\n",
                    "11 - 4 = 7 (left: 7 8 11)\n11 * 7 = 77 (left: 8 77)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 11)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 8 11",
                "ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 11)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n8 - 11 = -3 (left: -3 15)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n8 + 11 = 19 (left: 19 15)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n8 / 11 = 0.727 (left: 0.727 15)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n8 * 11 = 88 (left: 88 15)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n11 - 1 = 10 (left: 1 10)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n11 / 1 = 11 (left: 1 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n11 + 1 = 12 (left: 1 12)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n11 * 1 = 11 (left: 1 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 11)\n11 / 3 = 3 (left: 3 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n11 + 20 = 31 (left: 31)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n20 - 11 = 9 (left: 9 20)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n20 / 11 = 1 (left: 1 20)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n11 * 20 = 220 (left: 220)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\nInput: 3 3 8 8\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\nPossible next steps:\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n3 * 3 = 9 (left: 8 9 8)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n3 / 3 = 1 (left: 1 8 8)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n3 - 3 = 0 (left: 0 8 8)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n8 + 3 = 11 (left: 3 11 8)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n8 * 3 = 24 (left: 3 8 24)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n8 + 3 = 11 (left: 3 8 11)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n8 - 11 = -3 (left: -3 15)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n8 + 11 = 19 (left: 19 15)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 8 11",
                "ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n8 - 11 = -3 (left: -3 15)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n8 + 11 = 19 (left: 19 15)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 * 4 = 32 (left: 4)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 / 8 = 1 (left: 1)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\nInput: 3 3 8\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 + 3 = 6 (left: 6 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 3 = 9 (left: 8 9)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 / 3 = 1 (left: 1 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 - 3 = 5 (left: 3 5)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n8 / 3 = 2 (left: 2 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 + 8 = 11 (left: 3 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 8 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\nInput: 4 2 6 3\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n4 * 2 = 8 (left: 6 8 3)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n4 + 2 = 6 (left: 6 6 3)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n4 + 3 = 7 (left: 6 7 3)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n4 / 2 = 2 (left: 2 6 3)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n4 - 2 = 2 (left: 2 6 3)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n2 + 6 = 8 (left: 8 3)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n2 * 6 = 12 (left: 12 3)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n2 / 6 = 0.3333333333333333 (left: 0.3333333333333333 3)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n2 - 6 = -4 (left: -4 3)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n6 + 3 = 9 (left: 4 9)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n6 * 3 = 18 (left: 4 18)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n6 / 3 = 2 (left: 4 2)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n6 - 3 = 3 (left: 4 3)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 + 4 = 7 (left: 7)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 4 = 12 (left: 12)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 / 4 = 0.75 (left: 0.75)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 - 4 = -1 (left: -1)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n8 / 3 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n8 / 3 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "4 * 3 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n8 / 3 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n8 - 11 = -3 (left: -3 15)\n-3 + 15 = 12 (left: 12)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n8 - 11 = -3 (left: -3 15)\n-3 * 15 = -45 (left: -45)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n8 - 11 = -3 (left: -3 15)\n-3 / 15 = -0.2 (left: -0.2)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n8 - 11 = -3 (left: -3 15)\n-3 - 15 = -18 (left: -18)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n8 + 11 = 19 (left: 19 15)\n19 - 15 = 4 (left: 4 15)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n8 + 11 = 19 (left: 19 15)\n19 / 15 = 1.26667 (left: 1.26667 15)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n8 + 11 = 19 (left: 19 15)\n19 * 15 = 285 (left: 285)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n8 + 11 = 19 (left: 19 15)\n19 + 15 = 34 (left: 34)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 8 11 15)\n8 + 11 = 19 (left: 19 15)\n15 - 19 = -4 (left: 15 -4)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 8 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n4 + 2 = 6 (left: 6 6 3)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n2 + 6 = 8 (left: 8 3)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 + 3 = 6 (left: 6 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 3 = 9 (left: 8 9)\n"
                ]
            }
        ],
        "idx": 882,
        "ys": [
            "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 8 = 24 (left: 24)\n",
            "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n4 + 2 = 6 (left: 6 6 3)\n",
            "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n2 + 6 = 8 (left: 8 3)\n",
            "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 + 3 = 6 (left: 6 8)\n",
            "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n3 * 3 = 9 (left: 8 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 13929,
            "prompt_tokens": 43920,
            "cost": 0.09373800000000002
        },
        "time_spent": 33.693804025650024
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 4 6 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 6 8 13)\n",
                    "4 * 4 = 16 (left: 6 16 13)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n",
                    "6 + 4 = 10 (left: 10 4 13)\n",
                    "6 * 4 = 24 (left: 24 4 13)\n",
                    "6 / 4 = 1 (left: 1 4 6)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    100
                ],
                "select_new_ys": [
                    "4 / 4 = 1 (left: 1 4 6)\n",
                    "6 / 4 = 1 (left: 1 4 6)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n",
                    "4 * 4 = 16 (left: 6 16 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 4 6 13",
                "ys": [
                    "4 / 4 = 1 (left: 1 4 6)\n",
                    "6 / 4 = 1 (left: 1 4 6)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n",
                    "4 * 4 = 16 (left: 6 16 13)\n"
                ],
                "new_ys": [
                    "4 / 4 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 + 1 = 5 (left: 5 6)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n6 - 4 = 2 (left: 1 2)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 - 1 = 3 (left: 3 6)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 4 5)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n6 / 4 = 1 (left: 1 6)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n",
                    "6 / 4 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)\n",
                    "6 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n",
                    "6 / 4 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 4 5)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 + 7 = 11 (left: 7 11 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 7 13)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 8 13 14)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n8 + 6 = 14 (left: 6 13 14)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 * 8 = 48 (left: 8 13 48)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n8 * 6 = 48 (left: 6 13 48)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n8 - 6 = 2 (left: 2 8 13)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 - 8 = 5 (left: 5 8 13)\n",
                    "4 * 4 = 16 (left: 6 16 13)\n6 + 16 = 22 (left: 13 22)\n",
                    "4 * 4 = 16 (left: 6 16 13)\n6 * 16 = 96 (left: 13 96)\n",
                    "4 * 4 = 16 (left: 6 16 13)\n16 - 6 = 10 (left: 10 13)\n",
                    "4 * 4 = 16 (left: 6 16 13)\n16 / 6 = 2 (left: 2 13)\n",
                    "4 * 4 = 16 (left: 6 16 13)\nInput: 3 5 7 8\n",
                    "4 * 4 = 16 (left: 6 16 13)\nPossible next steps:\n",
                    "4 * 4 = 16 (left: 6 16 13)\n3 + 5 = 8 (left: 7 8)\n",
                    "4 * 4 = 16 (left: 6 16 13)\n3 * 5 = 15 (left: 7 15)\n",
                    "4 * 4 = 16 (left: 6 16 13)\n5 - 3 = 2 (left: 2 7 8)\n",
                    "4 * 4 = 16 (left: 6 16 13)\n7 + 3 = 10 (left: 8 10)\n",
                    "4 * 4 = 16 (left: 6 16 13)\n3 / 5 = 0.6 (left: 0.6 7 8)\n",
                    "4 * 4 = 16 (left: 6 16 13)\n5 / 3 = 1.6666666666666667 (left: 1.6666666666666667 7 8)\n",
                    "4 * 4 = 16 (left: 6 16 13)\n7 - 3 = 4 (left: 4 7 8)\n",
                    "4 * 4 = 16 (left: 6 16 13)\n7 / 3 = 2.3333333333333335 (left: 2.3333333333333335 8)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n",
                    "6 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 + 1 = 5 (left: 5 6)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 - 1 = 3 (left: 3 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 4 6 13",
                "ys": [
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n",
                    "6 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 + 1 = 5 (left: 5 6)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 - 1 = 3 (left: 3 6)\n"
                ],
                "new_ys": [
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5 6)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\nInput: 3 3 3 9\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\nPossible next steps:\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 * 3 = 9 (left: 3 9 9)\n",
                    "6 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "6 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5 6)\n",
                    "6 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)\n6 - 5 = 1 (left: 1 6)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)\n6 /  5 = 1 (left: 1 6)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 + 1 = 5 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 + 1 = 5 (left: 5 6)\n6 - 5 = 1 (left: 1)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 + 1 = 5 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 + 1 = 5 (left: 5 6)\n6 / 5 = 1.2 (left: 1.2)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 - 1 = 3 (left: 3 6)\n3 + 6 = 9 (left: 9)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 - 1 = 3 (left: 3 6)\n6 / 3 = 2 (left: 2)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 - 1 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 - 1 = 3 (left: 3 6)\n6 - 3 = 3 (left: 3)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 4 6 13",
                "ys": [
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n"
                ],
                "new_ys": [
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (4 * 6) = 24\n",
                    "6 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 * 6) * 4 = 24\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nNo possible next steps.\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n6 + 2 = 8 (left: 8)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n6 - 2 = 4 (left: 4)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n6 / 2 = 3 (left: 3)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n6 * 2 = 12 (left: 12)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 6 9 18)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n3 - 6 = -3 (left: -3 9)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n3 / 6 = 0.5 (left: 0.5 9)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n6 * 9 = 54 (left: 3 54)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n6 + 9 = 15 (left: 3 15)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n6 - 9 = -3 (left: 3 -3)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n6 / 9 = 0.67 (left: 3 0.67)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n6 * 2 = 12 (left: 12)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 6 9 18)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n3 - 6 = -3 (left: -3 9)\n",
                    "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n6 * 9 = 54 (left: 3 54)\n"
                ]
            }
        ],
        "idx": 883,
        "ys": [
            "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n6 * 2 = 12 (left: 12)\n",
            "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 6 9 18)\n",
            "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n",
            "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n3 - 6 = -3 (left: -3 9)\n",
            "4 / 4 = 1 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 9)\n6 * 9 = 54 (left: 3 54)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 15149,
            "prompt_tokens": 48258,
            "cost": 0.102685
        },
        "time_spent": 28.28043794631958
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 6 7 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 6 = 10 (left: 7 10)\n",
                    "6 + 4 = 10 (left: 7 10)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n",
                    "10 - 6 = 4 (left: 4 7 10)\n",
                    "6 + 4 = 10 (left: 7 10)\n",
                    "4 + 6 = 10 (left: 7 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 6 = 10 (left: 7 10)\n",
                    "6 + 4 = 10 (left: 7 10)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n",
                    "10 - 6 = 4 (left: 4 7 10)\n",
                    "6 + 4 = 10 (left: 7 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 6 7 10",
                "ys": [
                    "4 + 6 = 10 (left: 7 10)\n",
                    "6 + 4 = 10 (left: 7 10)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n",
                    "10 - 6 = 4 (left: 4 7 10)\n",
                    "6 + 4 = 10 (left: 7 10)\n"
                ],
                "new_ys": [
                    "4 + 6 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "4 + 6 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "6 + 4 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n6 * 7 = 42 (left: 10 42)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 / 6 = 1.17 (left: 1.17 10)\n",
                    "10 - 4 = 6 (left: 6 7 10)\nInput: 4 5 3 7\n",
                    "10 - 4 = 6 (left: 6 7 10)\nPossible next steps:\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 + 5 = 9 (left: 3 7 9)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n5 - 4 = 1 (left: 1 3 7)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n5 / 4 = 1.25 (left: 1.25 3 7)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 / 3 = 2.33 (left: 4 2.33 7)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 + 3 = 10 (left: 4 5 10)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n3 * 7 = 21 (left: 4 5 21)\n",
                    "10 - 6 = 4 (left: 4 7 10)\n4 + 7 = 11 (left: 10 11)\n",
                    "10 - 6 = 4 (left: 4 7 10)\n7 - 4 = 3 (left: 3 10)\n",
                    "10 - 6 = 4 (left: 4 7 10)\n4 * 7 = 28 (left: 10 28)\n",
                    "10 - 6 = 4 (left: 4 7 10)\n7 / 4 = 1.75 (left: 1.75 10)\n",
                    "6 + 4 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "6 + 4 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    0,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n",
                    "4 + 6 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "4 + 6 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "6 + 4 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 6 7 10",
                "ys": [
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n",
                    "4 + 6 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "4 + 6 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "6 + 4 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n"
                ],
                "new_ys": [
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n3 + 7 = 10 (left: 10 20)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n3 * 7 = 21 (left: 21 20)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n7 - 3 = 4 (left: 4 20)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n7 / 3 = 2 (left: 2 20)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n4 / 4 = 1 (left: 1 7)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n7 / 4 = 1 (left: 1 4)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\nInput: 3 5 5 7\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\nPossible next steps:\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n3 + 5 = 8 (left: 5 7 8)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n5 / 3 = 1 (left: 1 5 7)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n7 - 5 = 2 (left: 2 5 7)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n7 - 3 = 4 (left: 4 5 7)\n",
                    "4 + 6 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n17 + 2 = 19 (left: 2 19)\n",
                    "4 + 6 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n17 - 2 = 15 (left: 2 15)\n",
                    "4 + 6 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n17 / 2 = 8.5 (left: 2 8.5)\n",
                    "4 + 6 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n17 * 2 = 34 (left: 2 34)\n",
                    "4 + 6 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "4 + 6 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n10 / 3 = 3 (left: 3 10)\n",
                    "4 + 6 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "4 + 6 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n10 - 3 = 7 (left: 7 10)\n",
                    "6 + 4 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n2 + 2 = 4 (left: 4)\n",
                    "6 + 4 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n17 - 2 = 15 (left: 15)\n",
                    "6 + 4 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n2 * 2 = 4 (left: 4)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n7 - 3 = 4 (left: 4 20)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n3 + 7 = 10 (left: 10 20)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n7 / 3 = 2 (left: 2 20)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 6 7 10",
                "ys": [
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n7 - 3 = 4 (left: 4 20)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n3 + 7 = 10 (left: 10 20)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n7 / 3 = 2 (left: 2 20)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n"
                ],
                "new_ys": [
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n7 - 3 = 4 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n7 - 3 = 4 (left: 4 20)\n20 / 4 = 5 (left: 5 20)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n3 + 7 = 10 (left: 10 20)\n10 + 20 = 30 (left: 30)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n3 + 7 = 10 (left: 10 20)\n10 * 20 = 200 (left: 200)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n3 + 7 = 10 (left: 10 20)\n20 - 10 = 10 (left: 10)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n3 + 7 = 10 (left: 10 20)\n20 / 10 = 2 (left: 2)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n3 + 7 = 10 (left: 10 20)\n\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n7 / 3 = 2 (left: 2 20)\n2 + 20 = 22 (left: 20 22)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n7 / 3 = 2 (left: 2 20)\n20 / 2 = 10 (left: 10 20)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n7 + 8 = 15 (left: 8 15)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n8 - 7 = 1 (left: 1 8)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n8 / 7 = 1 (left: 1 8)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n3 + 4 = 7 (left: 7)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n3 / 4 = 0.75 (left: 0.75)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n7 - 3 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n4 - 3 = 1 (left: 1)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n7 - 3 = 4 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n7 - 3 = 4 (left: 4 20)\n20 / 4 = 5 (left: 5 20)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n3 + 7 = 10 (left: 10 20)\n10 + 20 = 30 (left: 30)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n3 + 7 = 10 (left: 10 20)\n20 - 10 = 10 (left: 10)\n",
                    "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n3 + 7 = 10 (left: 10 20)\n\n"
                ]
            }
        ],
        "idx": 884,
        "ys": [
            "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n7 - 3 = 4 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
            "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n7 - 3 = 4 (left: 4 20)\n20 / 4 = 5 (left: 5 20)\n",
            "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n3 + 7 = 10 (left: 10 20)\n10 + 20 = 30 (left: 30)\n",
            "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n3 + 7 = 10 (left: 10 20)\n20 - 10 = 10 (left: 10)\n",
            "10 - 4 = 6 (left: 6 7 10)\n4 * 5 = 20 (left: 3 7 20)\n3 + 7 = 10 (left: 10 20)\n\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 16200,
            "prompt_tokens": 51962,
            "cost": 0.11034300000000001
        },
        "time_spent": 27.628653287887573
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 11 11 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 11 = 17 (left: 11 11 17)\n",
                    "11 * 6 = 66 (left: 11 12 66)\n",
                    "11 + 6 = 17 (left: 11 12 17)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n",
                    "12 - 6 = 6 (left: 6 11 12)\n",
                    "12 - 6 = 6 (left: 6 11 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0
                ],
                "select_new_ys": [
                    "11 / 6 = 1 (left: 1 11 12)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n",
                    "11 * 6 = 66 (left: 11 12 66)\n",
                    "11 + 6 = 17 (left: 11 12 17)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 11 11 12",
                "ys": [
                    "11 / 6 = 1 (left: 1 11 12)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n",
                    "11 * 6 = 66 (left: 11 12 66)\n",
                    "11 + 6 = 17 (left: 11 12 17)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n"
                ],
                "new_ys": [
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 * 11 = 11 (left: 11 12)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 11 22 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 * 11 = 121 (left: 121 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 11 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 11 17)\n",
                    "11 * 6 = 66 (left: 11 12 66)\n11 + 12 = 23 (left: 23 66)\n",
                    "11 * 6 = 66 (left: 11 12 66)\n11 * 12 = 132 (left: 66 132)\n",
                    "11 * 6 = 66 (left: 11 12 66)\n11 - 12 = -1 (left: -1 66)\n",
                    "11 * 6 = 66 (left: 11 12 66)\n12 - 11 = 1 (left: 1 66)\n",
                    "11 * 6 = 66 (left: 11 12 66)\n11 / 12 = 0.92 (left: 0.92 66)\n",
                    "11 * 6 = 66 (left: 11 12 66)\n12 / 11 = 1.09 (left: 1.09 66)\n",
                    "11 + 6 = 17 (left: 11 12 17)\n11 + 12 = 23 (left: 17 23)\n",
                    "11 + 6 = 17 (left: 11 12 17)\n11 - 12 = -1 (left: -1 17)\n",
                    "11 + 6 = 17 (left: 11 12 17)\n11 / 12 = 0.92 (left: 0.92 17)\n",
                    "11 + 6 = 17 (left: 11 12 17)\n11 * 12 = 132 (left: 17 132)\n",
                    "11 + 6 = 17 (left: 11 12 17)\n12 + 17 = 29 (left: 11 29)\n",
                    "11 + 6 = 17 (left: 11 12 17)\n12 - 17 = -5 (left: -5 11)\n",
                    "11 + 6 = 17 (left: 11 12 17)\n12 / 17 = 0.71 (left: 0.71 11)\n",
                    "11 + 6 = 17 (left: 11 12 17)\n12 * 17 = 204 (left: 11 204)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n5 + 11 = 16 (left: 16 12)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n11 + 5 = 16 (left: 16 12)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n5 * 11 = 55 (left: 55 12)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n11 * 5 = 55 (left: 55 12)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n11 - 5 = 6 (left: 6 12)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n5 - 11 = -6 (left: -6 12)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n11 / 5 = 2 (left: 2 12)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n5 / 11 = 0.45 (left: 0.45 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    100,
                    0
                ],
                "select_new_ys": [
                    "11 - 6 = 5 (left: 5 11 12)\n11 / 5 = 2 (left: 2 12)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 * 11 = 11 (left: 11 12)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 11 11 12",
                "ys": [
                    "11 - 6 = 5 (left: 5 11 12)\n11 / 5 = 2 (left: 2 12)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 * 11 = 11 (left: 11 12)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)\n"
                ],
                "new_ys": [
                    "11 - 6 = 5 (left: 5 11 12)\n11 / 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n11 / 5 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n11 / 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n11 / 5 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\nInput: 4 6 6 8\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\nPossible next steps:\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 8)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n4 * 6 = 24 (left: 6 8 24)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 / 4 = 1 (left: 1 6 8)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 * 4 = 24 (left: 6 8 24)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n8 - 6 = 2 (left: 2 6 6)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 / 4 = 1 (left: 1 6 6)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n8 - 6 = 2 (left: 2 6 6)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 / 4 = 1 (left: 1 6 6)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n10 * 12 = 120 (left: 120)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n12 - 10 = 2 (left: 2)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n12 / 10 = 1.2 (left: 1.2)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 * 11 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 * 11 = 11 (left: 11 12)\n11 - 12 = -1 (left: -1)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 * 11 = 11 (left: 11 12)\n11 * 12 = 132 (left: 132)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 * 11 = 11 (left: 11 12)\n11 / 12 = 0.9167 (left: 0.9167)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)\n11 - 12 = -1 (left: -1)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)\n11 * 12 = 132 (left: 132)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)\n11 / 12 = 0.92 (left: 0.92)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    100,
                    100,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 6 = 5 (left: 5 11 12)\n11 / 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 8)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n4 * 6 = 24 (left: 6 8 24)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 * 4 = 24 (left: 6 8 24)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n11 / 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 11 11 12",
                "ys": [
                    "11 - 6 = 5 (left: 5 11 12)\n11 / 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 8)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n4 * 6 = 24 (left: 6 8 24)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 * 4 = 24 (left: 6 8 24)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n11 / 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n"
                ],
                "new_ys": [
                    "11 - 6 = 5 (left: 5 11 12)\n11 / 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (11 / (11 - 6)) * 12 = 24\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 12 8)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 6 4)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 8)\n8 - 6 = 2 (left: 2 8)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n4 * 6 = 24 (left: 6 8 24)\n6 * 8 = 48 (left: 8 24 48)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n4 * 6 = 24 (left: 6 8 24)\n8 * 6 = 48 (left: 6 24 48)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n4 * 6 = 24 (left: 6 8 24)\n24 - 6 = 18 (left: 6 8 18)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n4 * 6 = 24 (left: 6 8 24)\n24 / 6 = 4 (left: 4 8 24)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 * 4 = 24 (left: 6 8 24)\n6 * 8 = 48 (left: 8 24 48)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 * 4 = 24 (left: 6 8 24)\n8 * 6 = 48 (left: 6 24 48)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 * 4 = 24 (left: 6 8 24)\n24 / 6 = 4 (left: 4 8 24)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 * 4 = 24 (left: 6 8 24)\n24 / 8 = 3 (left: 3 8 24)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n11 / 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n2 + 8 = 10 (left: 8 10)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n11 / 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n8 / 2 = 4 (left: 4 8)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n11 / 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 / 2 = 7 (left: 7 14)\n"
                ],
                "values": [
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 6 4)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n4 * 6 = 24 (left: 6 8 24)\n24 - 6 = 18 (left: 6 8 18)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 12 8)\n",
                    "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)\n"
                ]
            }
        ],
        "idx": 885,
        "ys": [
            "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 6 4)\n",
            "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n4 * 6 = 24 (left: 6 8 24)\n24 - 6 = 18 (left: 6 8 18)\n",
            "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
            "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 12 8)\n",
            "11 / 6 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 17471,
            "prompt_tokens": 55988,
            "cost": 0.118924
        },
        "time_spent": 29.025089025497437
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 6 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 6 9 11)\n",
                    "9 + 2 = 11 (left: 6 11 11)\n"
                ],
                "values": [
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 11)\n",
                    "9 + 2 = 11 (left: 6 11 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 6 9 11",
                "ys": [
                    "3 * 3 = 9 (left: 6 9 11)\n",
                    "9 + 2 = 11 (left: 6 11 11)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 * 9 = 54 (left: 11 54)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 / 6 = 1 (left: 1 11)\n",
                    "9 + 2 = 11 (left: 6 11 11)\n6 + 11 = 17 (left: 11 17)\n",
                    "9 + 2 = 11 (left: 6 11 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "9 + 2 = 11 (left: 6 11 11)\n11 / 6 = 1 (left: 1 11)\n",
                    "9 + 2 = 11 (left: 6 11 11)\n6 * 11 = 66 (left: 11 66)\n",
                    "9 + 2 = 11 (left: 6 11 11)\n11 + 6 = 17 (left: 6 17)\n",
                    "9 + 2 = 11 (left: 6 11 11)\n11 - 6 = 5 (left: 5 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 - 9 = 2 (left: 2 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 6 9 11",
                "ys": [
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 - 9 = 2 (left: 2 11)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 - 15 = -4 (left: -4)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 * 15 = 165 (left: 165)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 / 15 = 0.7333333333333333 (left: 0.7333333333333333)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n3 + 11 = 14 (left: 11 14)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n11 / 3 = 3 (left: 3 3)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\nInput: 4 5 6 7\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\nPossible next steps:\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n4 * 5 = 20 (left: 6 7 20)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n7 - 4 = 3 (left: 3 6 7)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n7 - 5 = 2 (left: 2 6 7)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n7 - 6 = 1 (left: 1 6 7)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n7 / 4 = 1 (left: 1 6 7)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n7 / 5 = 1 (left: 1 6 7)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n7 / 6 = 1 (left: 1 6 7)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n6 + 7 = 13 (left: 4 13)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n6 * 7 = 42 (left: 4 42)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n6 - 4 = 2 (left: 2 7)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n6 / 4 = 1 (left: 1 7)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n6 / 5 = 1 (left: 1 7)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\nInput: 1 2 3 4\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\nPossible next steps:\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n4 - 1 = 3 (left: 2 3 3)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n4 / 1 = 4 (left: 2 3 4)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 - 9 = 2 (left: 2 11)\n11 - 2 = 9 (left: 2 9)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 - 9 = 2 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 - 9 = 2 (left: 2 11)\n11 / 2 = 5.5 (left: 5.5)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n4 / 1 = 4 (left: 2 3 4)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 6 9 11",
                "ys": [
                    "3 * 3 = 9 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n4 / 1 = 4 (left: 2 3 4)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 / 3 = 2 (left: 2 8)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n1 * 2 = 2 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n1 * 2 = 2 (left: 2 3 4)\n4 + 2 = 6 (left: 3 6)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n1 * 2 = 2 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n1 * 2 = 2 (left: 2 3 4)\n4 - 2 = 2 (left: 2 2)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n1 * 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n4 / 1 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n4 / 1 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 2 1)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n4 / 1 = 4 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n4 / 1 = 4 (left: 2 3 4)\n3 / 4 = 0.75 (left: 2 0.75)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n26 / 2 = 13 (left: 13)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n26 - 6 = 20 (left: 20)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n26 - 10 = 16 (left: 16)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n26 - 14 = 12 (left: 12)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n26 - 18 = 8 (left: 8)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n26 - 22 = 4 (left: 4)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\nInput: 1 2 3 4\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\nPossible next steps:\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n2 + 3 = 5 (left: 1 5 4)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n3 + 4 = 7 (left: 1 2 7)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n2 * 3 = 6 (left: 1 6 4)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n3 * 4 = 12 (left: 1 2 12)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n2 - 1 = 1 (left: 1 3 4)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n3 - 2 = 1 (left: 1 1 4)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n4 - 3 = 1 (left: 1 2 1)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    100,
                    0,
                    100,
                    50,
                    0,
                    100,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    100,
                    100,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n1 * 2 = 2 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n1 * 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n4 / 1 = 4 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n"
                ]
            }
        ],
        "idx": 886,
        "ys": [
            "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
            "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
            "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n1 * 2 = 2 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n",
            "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n1 * 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n",
            "3 * 3 = 9 (left: 6 9 11)\n9 / 3 = 3 (left: 3 3 11)\n4 / 1 = 4 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 18739,
            "prompt_tokens": 59003,
            "cost": 0.1259825
        },
        "time_spent": 26.801894187927246
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 7 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 7 = 12 (left: 9 12 13)\n",
                    "5 / 7 = 0.71 (left: 0.71 9 13)\n",
                    "13 - 5 = 8 (left: 8 9 13)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n",
                    "5 * 7 = 35 (left: 9 13 35)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n",
                    "13 - 9 = 4 (left: 4 9 13)\n",
                    "13 / 5 = 2.6 (left: 2.6 9 13)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 9 13)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n",
                    "13 - 5 = 8 (left: 8 9 13)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n",
                    "5 * 7 = 35 (left: 9 13 35)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 7 9 13",
                "ys": [
                    "7 - 5 = 2 (left: 2 9 13)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n",
                    "13 - 5 = 8 (left: 8 9 13)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n",
                    "5 * 7 = 35 (left: 9 13 35)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 * 9 = 18 (left: 18 13)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n9 / 2 = 4 (left: 4 13)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 11 13)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n9 / 3 = 3 (left: 3 12 13)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n12 - 9 = 3 (left: 3 3 13)\n",
                    "13 - 5 = 8 (left: 8 9 13)\n8 - 9 = -1 (left: -1 13)\n",
                    "13 - 5 = 8 (left: 8 9 13)\n8 + 9 = 17 (left: 17 13)\n",
                    "13 - 5 = 8 (left: 8 9 13)\n8 * 9 = 72 (left: 72 13)\n",
                    "13 - 5 = 8 (left: 8 9 13)\n8 / 9 = 0.8888888888888888 (left: 0.8888888888888888 13)\n",
                    "13 - 5 = 8 (left: 8 9 13)\n9 - 8 = 1 (left: 1 13)\n",
                    "13 - 5 = 8 (left: 8 9 13)\n9 + 8 = 17 (left: 17 13)\n",
                    "13 - 5 = 8 (left: 8 9 13)\n9 * 8 = 72 (left: 72 13)\n",
                    "13 - 5 = 8 (left: 8 9 13)\n9 / 8 = 1.125 (left: 1.125 13)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n6 + 9 = 15 (left: 13 15)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n9 - 6 = 3 (left: 3 13)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n6 * 9 = 54 (left: 13 54)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n9 / 6 = 1.5 (left: 1.5 13)\n",
                    "13 - 7 = 6 (left: 6 9 13)\nInput: 3 3 8 5\n",
                    "13 - 7 = 6 (left: 6 9 13)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 6 9 13)\n3 + 3 = 6 (left: 6 8 5)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n3 * 3 = 9 (left: 9 8 5)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n8 - 3 = 5 (left: 5 9 5)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 3 5)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n3 - 3 = 0 (left: 0 8 5)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n3 / 3 = 1 (left: 1 8 5)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 + 3 = 8 (left: 3 8 8)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 - 3 = 2 (left: 2 8 5)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n",
                    "5 * 7 = 35 (left: 9 13 35)\n9 + 13 = 22 (left: 22 35)\n",
                    "5 * 7 = 35 (left: 9 13 35)\n9 * 13 = 117 (left: 117 35)\n",
                    "5 * 7 = 35 (left: 9 13 35)\n13 + 9 = 22 (left: 22 35)\n",
                    "5 * 7 = 35 (left: 9 13 35)\n13 * 9 = 117 (left: 117 35)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 11 13)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 * 9 = 18 (left: 18 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 7 9 13",
                "ys": [
                    "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 11 13)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 * 9 = 18 (left: 18 13)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n13 * 11 = 143 (left: 143)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 11 13)\n13 * 11 = 143 (left: 143)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 11 13)\n11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 11 13)\n13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n15 + 8 = 23 (left: 5 23)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n15 * 8 = 120 (left: 5 120)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n15 - 8 = 7 (left: 7 5)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n15 / 8 = 1 (left: 1 5)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n8 + 5 = 13 (left: 13)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n8 * 5 = 40 (left: 40)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n8 - 5 = 3 (left: 3)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n8 / 5 = 1 (left: 1)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n5 + 15 = 20 (left: 8 20)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n5 * 15 = 75 (left: 8 75)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n5 - 15 = -10 (left: 8 -10)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n5 / 15 = 0.3333333333333333 (left: 8 0.3333333333333333)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n7 + 13 = 20 (left: 20)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n13 - 7 = 6 (left: 6 13)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n13 / 7 = 1 (left: 1 13)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n13 * 7 = 91 (left: 91)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\nInput: 1 3 4 6\n",
                    "7 - 5 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\nPossible next steps:\n",
                    "7 - 5 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n3 * 4 = 12 (left: 1 12 6)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n6 / 3 = 2 (left: 1 4 2)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n6 - 1 = 5 (left: 5 3 4)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n4 - 1 = 3 (left: 3 3 6)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n6 / 1 = 6 (left: 3 4 6)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n4 + 6 = 10 (left: 1 3 10)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n1 * 3 = 3 (left: 3 4 6)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 * 9 = 18 (left: 18 13)\n18 + 13 = 31 (left: 31)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 * 9 = 18 (left: 18 13)\n18 - 13 = 5 (left: 5)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 * 9 = 18 (left: 18 13)\n18 * 13 = 234 (left: 234)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 * 9 = 18 (left: 18 13)\n18 / 13 = 1 (left: 1)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 * 9 = 18 (left: 18 13)\nInput: 5 5 5 5\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 * 9 = 18 (left: 18 13)\nPossible next steps:\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 * 9 = 18 (left: 18 13)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 * 9 = 18 (left: 18 13)\n5 / 5 = 1 (left: 1 5 5 5)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 * 9 = 18 (left: 18 13)\n5 - 5 = 0 (left: 0 5 5 5)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 * 9 = 18 (left: 18 13)\n5 * 5 = 25 (left: 5 25 5 5)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n15 * 8 = 120 (left: 5 120)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 7 9 13",
                "ys": [
                    "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "7 - 5 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n15 * 8 = 120 (left: 5 120)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((7 - 5) + 9) + 13 = 24\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (7 - 5 + 9) + 13 = 24\n",
                    "7 - 5 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (7 - 5) * (13 - 2) = 24\n",
                    "7 - 5 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (13 + (9 - 7)) + 11 = 24\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n15 * 8 = 120 (left: 5 120)\n5 * 5 = 25 (left: 25 120)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n15 * 8 = 120 (left: 5 120)\n120 / 5 = 24 (left: 24 5)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n15 * 8 = 120 (left: 5 120)\nInput: 3 3 3 3\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n15 * 8 = 120 (left: 5 120)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n15 * 8 = 120 (left: 5 120)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n15 * 8 = 120 (left: 5 120)\n3 * 3 = 9 (left: 9 3 3 3)\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    100,
                    50
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((7 - 5) + 9) + 13 = 24\n",
                    "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (7 - 5 + 9) + 13 = 24\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n15 * 8 = 120 (left: 5 120)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n15 * 8 = 120 (left: 5 120)\n120 / 5 = 24 (left: 24 5)\n",
                    "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n15 * 8 = 120 (left: 5 120)\n3 * 3 = 9 (left: 9 3 3 3)\n"
                ]
            }
        ],
        "idx": 887,
        "ys": [
            "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((7 - 5) + 9) + 13 = 24\n",
            "7 - 5 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (7 - 5 + 9) + 13 = 24\n",
            "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n15 * 8 = 120 (left: 5 120)\n3 + 3 = 6 (left: 3 6 3 3)\n",
            "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n15 * 8 = 120 (left: 5 120)\n120 / 5 = 24 (left: 24 5)\n",
            "13 - 7 = 6 (left: 6 9 13)\n5 * 3 = 15 (left: 15 8 5)\n15 * 8 = 120 (left: 5 120)\n3 * 3 = 9 (left: 9 3 3 3)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 20379,
            "prompt_tokens": 63971,
            "cost": 0.13671450000000002
        },
        "time_spent": 38.165138959884644
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 12 = 16 (left: 2 16 12)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n"
                ],
                "values": [
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 12 = 16 (left: 2 16 12)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 12 12",
                "ys": [
                    "4 + 12 = 16 (left: 2 16 12)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n"
                ],
                "new_ys": [
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n16 - 2 = 14 (left: 14 12)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 * 16 = 32 (left: 12 32)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n16 / 2 = 8 (left: 8 12)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n8 / 2 = 4 (left: 4 12)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n12 + 2 = 14 (left: 8 14)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 * 8 = 16 (left: 16 12)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n8 - 2 = 6 (left: 6 12)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n12 - 8 = 4 (left: 2 4)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n12 / 2 = 6 (left: 6 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n16 - 2 = 14 (left: 14 12)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 * 16 = 32 (left: 12 32)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n16 / 2 = 8 (left: 8 12)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 12 12",
                "ys": [
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n16 - 2 = 14 (left: 14 12)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 * 16 = 32 (left: 12 32)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n16 / 2 = 8 (left: 8 12)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n"
                ],
                "new_ys": [
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n18 / 12 = 1.5 (left: 1.5 18)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n18 * 12 = 216 (left: 216)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\nInput: 3 3 3 3\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\nPossible next steps:\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 * 3 = 9 (left: 3 9 3 3)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n16 - 2 = 14 (left: 14 12)\n14 + 12 = 26 (left: 26)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n16 - 2 = 14 (left: 14 12)\n14 - 12 = 2 (left: 2)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n16 - 2 = 14 (left: 14 12)\n14 / 12 = 1 (left: 1)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n16 - 2 = 14 (left: 14 12)\n14 * 12 = 168 (left: 168)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 * 16 = 32 (left: 12 32)\n12 + 32 = 44 (left: 44)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 * 16 = 32 (left: 12 32)\n12 * 32 = 384 (left: 384)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 * 16 = 32 (left: 12 32)\n32 - 12 = 20 (left: 20)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 * 16 = 32 (left: 12 32)\n32 / 12 = 2.67 (left: 2.67)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 * 16 = 32 (left: 12 32)\n\n",
                    "4 + 12 = 16 (left: 2 16 12)\n16 / 2 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n16 / 2 = 8 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n16 / 2 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n16 / 2 = 8 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n10 * 12 = 120 (left: 120)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n12 / 10 = 1.2 (left: 1.2)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n12 - 10 = 2 (left: 2)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\nInput: 3 3 3 3\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\nPossible next steps:\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\nInput: 5 5 5 5\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\nPossible next steps:\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n5 / 5 = 1 (left: 1 5 5 5)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n5 * 5 = 25 (left: 5 5 25 5)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n5 - 5 = 0 (left: 0 5 5 5)\n"
                ],
                "values": [
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 / 3 = 1 (left: 1 3 3 3)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 12 12",
                "ys": [
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 / 3 = 1 (left: 1 3 3 3)\n"
                ],
                "new_ys": [
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n18 / 6 = 3 (left: 3 18)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n18 * 6 = 108 (left: 108)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nInput: 4 5 6 7\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nPossible next steps:\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n5 + 6 = 11 (left: 4 7 11)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n6 + 7 = 13 (left: 4 5 13)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n4 * 5 = 20 (left: 6 7 20)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n5 * 6 = 30 (left: 4 7 30)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n6 * 7 = 42 (left: 4 5 42)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n4 - 5 = -1 (left: -1 5 6)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n5 - 6 = -1 (left: 4 -1 7)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n6 - 7 = -1 (left: 4 5 -1)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n7 - 4 = 3 (left: 3 5 6)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n6 / 4 = 1 (left: 1 5 7)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n7 / 4 = 1 (left: 1 5 6)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n7 / 6 = 1 (left: 4 1 5)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 / 3 = 1 (left: 1 3 3 3)\n3 - 1 = 2 (left: 2 3 3)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 / 3 = 1 (left: 1 3 3 3)\n3 / 1 = 3 (left: 3 3 3)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    0,
                    50,
                    100,
                    100,
                    50,
                    0,
                    50,
                    100,
                    50,
                    0,
                    100,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 3 9)\n"
                ]
            }
        ],
        "idx": 888,
        "ys": [
            "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
            "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
            "4 + 12 = 16 (left: 2 16 12)\n2 + 16 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 9 3)\n",
            "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
            "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 3 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 21631,
            "prompt_tokens": 66992,
            "cost": 0.14375000000000002
        },
        "time_spent": 28.41746711730957
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 9 11 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 9 = 13 (left: 11 12 13)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n",
                    "12 - 9 = 3 (left: 3 11 12)\n",
                    "12 - 4 = 8 (left: 8 11 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 9 = 13 (left: 11 12 13)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n",
                    "12 - 9 = 3 (left: 3 11 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 9 11 12",
                "ys": [
                    "4 + 9 = 13 (left: 11 12 13)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n",
                    "12 - 9 = 3 (left: 3 11 12)\n"
                ],
                "new_ys": [
                    "4 + 9 = 13 (left: 11 12 13)\n11 + 12 = 23 (left: 13 23)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n12 - 11 = 1 (left: 1 13)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n11 * 12 = 132 (left: 13 132)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n12 / 11 = 1 (left: 1 13)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n12 + 13 = 25 (left: 11 25)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 13)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 / 11 = 1 (left: 1 13)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n11 + 12 = 23 (left: 23 36)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n11 * 12 = 132 (left: 36 132)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n12 * 11 = 132 (left: 36 132)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n11 + 36 = 47 (left: 12 47)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n11 * 36 = 396 (left: 12 396)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n12 * 36 = 432 (left: 11 432)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n36 - 11 = 25 (left: 12 25)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n36 / 12 = 3 (left: 3 11 36)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n5 + 11 = 16 (left: 12 16)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n11 + 5 = 16 (left: 12 16)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n11 - 5 = 6 (left: 6 12)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n11 * 5 = 55 (left: 12 55)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n11 / 5 = 2.2 (left: 2.2 12)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n5 - 11 = -6 (left: -6 12)\n",
                    "9 - 4 = 5 (left: 5 11 12)\nInput: 3 6 12 24\n",
                    "9 - 4 = 5 (left: 5 11 12)\nPossible next steps:\n",
                    "9 - 4 = 5 (left: 5 11 12)\n3 + 6 = 9 (left: 9 12 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n6 + 3 = 9 (left: 9 12 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n6 * 3 = 18 (left: 12 18 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n3 * 6 = 18 (left: 12 18 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n3 / 6 = 0.5 (left: 0.5 12 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n6 - 3 = 3 (left: 3 12 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 12 = 0.5 (left: 0.5 12 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n12 + 3 = 15 (left: 15 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n12 - 6 = 6 (left: 6 12 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n12 / 6 = 2 (left: 2 12 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n24 - 12 = 12 (left: 12 12)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n24 / 12 = 2 (left: 2 12 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n24 - 6 = 18 (left: 12 18 24)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n7 + 9 = 16 (left: 9 12 16)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n7 * 9 = 63 (left: 12 63)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 / 7 = 1 (left: 1 12)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n12 - 7 = 5 (left: 5 12)\n",
                    "12 - 9 = 3 (left: 3 11 12)\n3 + 11 = 14 (left: 12 14)\n",
                    "12 - 9 = 3 (left: 3 11 12)\n11 + 3 = 14 (left: 12 14)\n",
                    "12 - 9 = 3 (left: 3 11 12)\n3 * 11 = 33 (left: 12 33)\n",
                    "12 - 9 = 3 (left: 3 11 12)\n11 * 3 = 33 (left: 12 33)\n",
                    "12 - 9 = 3 (left: 3 11 12)\n11 - 3 = 8 (left: 8 12)\n",
                    "12 - 9 = 3 (left: 3 11 12)\n3 - 11 = -8 (left: -8 12)\n",
                    "12 - 9 = 3 (left: 3 11 12)\n11 / 3 = 3 (left: 3 12)\n",
                    "12 - 9 = 3 (left: 3 11 12)\n3 / 11 = 0.27 (left: 0.27 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    100,
                    100,
                    100,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n12 / 6 = 2 (left: 2 12 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n24 - 12 = 12 (left: 12 12)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n24 / 12 = 2 (left: 2 12 24)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 9 11 12",
                "ys": [
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n12 / 6 = 2 (left: 2 12 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n24 - 12 = 12 (left: 12 12)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n24 / 12 = 2 (left: 2 12 24)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n"
                ],
                "new_ys": [
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n12 / 2 = 6 (left: 6 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n24 / 2 = 12 (left: 12 12)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n12 * 2 = 24 (left: 24 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n12 / 6 = 2 (left: 2 12 24)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n24 - 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n24 - 12 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n24 - 12 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0 12)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n24 / 12 = 2 (left: 2 12 24)\n12 + 2 = 14 (left: 14 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n24 / 12 = 2 (left: 2 12 24)\n12 * 2 = 24 (left: 24 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n24 / 12 = 2 (left: 2 12 24)\n24 / 2 = 12 (left: 12 24)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ],
                "values": [
                    100,
                    50,
                    100,
                    0,
                    100,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n24 / 2 = 12 (left: 12 12)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n12 / 6 = 2 (left: 2 12 24)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n24 - 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 9 11 12",
                "ys": [
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n24 / 2 = 12 (left: 12 12)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n12 / 6 = 2 (left: 2 12 24)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n24 - 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 4) * (6 / 3) * 12 = 24\n",
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n24 / 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n24 / 2 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n24 / 2 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n24 / 2 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n12 / 6 = 2 (left: 2 12 24)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 4) * (12 / 6) = 24\n",
                    "9 - 4 = 5 (left: 5 11 12)\n24 - 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (9 - 4) * (24 - 12) = 24\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (11 - 4) * (9 - 7) * 12 = 24\n"
                ],
                "values": [
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n24 / 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 4) * (6 / 3) * 12 = 24\n",
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n24 / 2 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n24 / 2 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n24 / 2 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n"
                ]
            }
        ],
        "idx": 889,
        "ys": [
            "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n24 / 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
            "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 4) * (6 / 3) * 12 = 24\n",
            "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n24 / 2 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
            "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n24 / 2 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
            "9 - 4 = 5 (left: 5 11 12)\n6 / 3 = 2 (left: 2 12 24)\n24 / 2 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 22814,
            "prompt_tokens": 71968,
            "cost": 0.15358
        },
        "time_spent": 30.18688201904297
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 8 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 + 8 = 15 (left: 9 13 15)\n",
                    "7 / 8 = 0 (left: 0 8 9)\n",
                    "13 + 7 = 20 (left: 8 9 20)\n",
                    "7 * 8 = 56 (left: 9 13 56)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "7 + 8 = 15 (left: 9 13 15)\n",
                    "7 / 8 = 0 (left: 0 8 9)\n",
                    "13 + 7 = 20 (left: 8 9 20)\n",
                    "7 * 8 = 56 (left: 9 13 56)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 8 9 13",
                "ys": [
                    "7 + 8 = 15 (left: 9 13 15)\n",
                    "7 / 8 = 0 (left: 0 8 9)\n",
                    "13 + 7 = 20 (left: 8 9 20)\n",
                    "7 * 8 = 56 (left: 9 13 56)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n"
                ],
                "new_ys": [
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 * 13 = 117 (left: 15 117)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 9 = 22 (left: 15 22)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "7 / 8 = 0 (left: 0 8 9)\n0 + 8 = 8 (left: 8 9)\n",
                    "7 / 8 = 0 (left: 0 8 9)\n0 * 8 = 0 (left: 8 9)\n",
                    "7 / 8 = 0 (left: 0 8 9)\n8 - 0 = 8 (left: 8 9)\n",
                    "7 / 8 = 0 (left: 0 8 9)\n8 / 0 is undefined\n",
                    "7 / 8 = 0 (left: 0 8 9)\n8 + 9 = 17 (left: 0 17)\n",
                    "7 / 8 = 0 (left: 0 8 9)\n8 * 9 = 72 (left: 0 72)\n",
                    "7 / 8 = 0 (left: 0 8 9)\n9 - 8 = 1 (left: 0 1)\n",
                    "7 / 8 = 0 (left: 0 8 9)\n9 / 8 = 1 (left: 0 1)\n",
                    "13 + 7 = 20 (left: 8 9 20)\n8 + 9 = 17 (left: 17 20)\n",
                    "13 + 7 = 20 (left: 8 9 20)\n9 * 8 = 72 (left: 72 20)\n",
                    "13 + 7 = 20 (left: 8 9 20)\n9 - 8 = 1 (left: 1 9 20)\n",
                    "13 + 7 = 20 (left: 8 9 20)\n9 / 8 = 1 (left: 1 9 20)\n",
                    "7 * 8 = 56 (left: 9 13 56)\n9 * 13 = 117 (left: 56 117)\n",
                    "7 * 8 = 56 (left: 9 13 56)\n13 - 9 = 4 (left: 4 56)\n",
                    "7 * 8 = 56 (left: 9 13 56)\n13 / 9 = 1 (left: 1 56)\n",
                    "7 * 8 = 56 (left: 9 13 56)\n56 - 9 = 47 (left: 9 47)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n1 + 8 = 9 (left: 9 9)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n8 + 1 = 9 (left: 9 9)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n9 - 1 = 8 (left: 8 9)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n9 - 8 = 1 (left: 1 9)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n9 / 1 = 9 (left: 8 9)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n9 / 9 = 1 (left: 1 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\nInput: 4 5 6 7\n",
                    "8 - 7 = 1 (left: 1 8 9)\nPossible next steps:\n",
                    "8 - 7 = 1 (left: 1 8 9)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n5 / 4 = 1 (left: 1 6 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 - 4 = 3 (left: 3 6 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 - 5 = 2 (left: 2 6 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 - 4 = 2 (left: 2 5 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 / 4 = 1 (left: 1 5 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 - 6 = 1 (left: 1 5 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n4 * 5 = 20 (left: 6 7 20)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n5 - 4 = 1 (left: 1 6 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n5 + 4 = 9 (left: 6 7 9)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 - 6 = 1 (left: 1 6 9)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 * 4 = 24 (left: 7 7 24)\n",
                    "8 - 7 = 1 (left: 1 8 9)\nInput: 3 7 9 12\n",
                    "8 - 7 = 1 (left: 1 8 9)\nPossible next steps:\n",
                    "8 - 7 = 1 (left: 1 8 9)\n3 * 7 = 21 (left: 9 12 21)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 - 3 = 4 (left: 4 9 12)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n9 - 3 = 6 (left: 6 7 12)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n12 - 3 = 9 (left: 7 9 9)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 - 3 = 4 (left: 4 9 12)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n9 - 3 = 6 (left: 6 7 12)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n12 - 3 = 9 (left: 7 9 12)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    0,
                    0,
                    100,
                    100,
                    50,
                    50,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 * 4 = 24 (left: 7 7 24)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n3 * 7 = 21 (left: 9 12 21)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 - 3 = 4 (left: 4 9 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "7 8 9 13",
                "ys": [
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 * 4 = 24 (left: 7 7 24)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n3 * 7 = 21 (left: 9 12 21)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 - 3 = 4 (left: 4 9 12)\n"
                ],
                "new_ys": [
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n7 * 10 = 70 (left: 7 70)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n10 - 7 = 3 (left: 3 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n7 / 10 = 0.7 (left: 0.7 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\nInput: 2 3 5 8\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\nPossible next steps:\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n2 * 3 = 6 (left: 5 6 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 + 5 = 8 (left: 2 8 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n5 + 3 = 8 (left: 2 8 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n8 - 2 = 6 (left: 6 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n8 - 5 = 3 (left: 2 3 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n8 / 2 = 4 (left: 4 3 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n8 / 5 = 1.6 (left: 1.6 3 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n5 * 3 = 15 (left: 2 8 15)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\nInput: 3 3 6 12\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\nPossible next steps:\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 + 3 = 6 (left: 6 6 12)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 * 6 = 18 (left: 12 18)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 * 3 = 9 (left: 6 9 12)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n6 + 3 = 9 (left: 3 9 12)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n6 / 3 = 2 (left: 2 3 12)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n12 / 3 = 4 (left: 4 3 6)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\n6 * 7 = 42 (left: 42 28)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\n7 * 6 = 42 (left: 42 28)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\n7 + 6 = 13 (left: 13 28)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\n7 - 6 = 1 (left: 1 28)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\n7 / 6 = 1 (left: 1 28)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\n6 + 7 = 13 (left: 13 28)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\nInput: 2 3 5 7\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\nPossible next steps:\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\n2 + 5 = 7 (left: 3 7 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\n5 - 2 = 3 (left: 3 3 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\n7 - 2 = 5 (left: 3 5 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\n7 - 3 = 4 (left: 2 4 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\n7 - 5 = 2 (left: 2 2 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\n5 + 2 = 7 (left: 3 5 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\n7 / 2 = 3 (left: 3 3 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 * 4 = 28 (left: 6 7 28)\n7 / 3 = 2 (left: 2 2 7)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 * 4 = 24 (left: 7 7 24)\n7 + 7 = 14 (left: 14 24)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 * 4 = 24 (left: 7 7 24)\n7 * 7 = 49 (left: 24 49)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 * 4 = 24 (left: 7 7 24)\n7 / 7 = 1 (left: 1 24)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 * 4 = 24 (left: 7 7 24)\n7 - 7 = 0 (left: 0 24)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 * 4 = 24 (left: 7 7 24)\nInput: 3 3 8 8\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 * 4 = 24 (left: 7 7 24)\nPossible next steps:\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 * 4 = 24 (left: 7 7 24)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 * 4 = 24 (left: 7 7 24)\n3 * 3 = 9 (left: 8 9 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 * 4 = 24 (left: 7 7 24)\n3 / 3 = 1 (left: 1 8 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 * 4 = 24 (left: 7 7 24)\n3 - 3 = 0 (left: 0 8 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n3 * 7 = 21 (left: 9 12 21)\n9 + 12 = 21 (left: 21)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n3 * 7 = 21 (left: 9 12 21)\n12 - 9 = 3 (left: 3 21)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n3 * 7 = 21 (left: 9 12 21)\n21 - 9 = 12 (left: 12 21)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n3 * 7 = 21 (left: 9 12 21)\n9 * 12 = 108 (left: 108 21)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n3 * 7 = 21 (left: 9 12 21)\n12 / 9 = 1 (left: 1 21)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 - 3 = 4 (left: 4 9 12)\n4 + 9 = 13 (left: 9 12 13)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 - 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 12 36)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n7 - 3 = 4 (left: 4 9 12)\n9 - 4 = 5 (left: 5 9 12)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    100,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 + 5 = 8 (left: 2 8 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n5 + 3 = 8 (left: 2 8 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 + 3 = 6 (left: 6 6 12)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n6 + 3 = 9 (left: 3 9 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "7 8 9 13",
                "ys": [
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 + 5 = 8 (left: 2 8 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n5 + 3 = 8 (left: 2 8 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 + 3 = 6 (left: 6 6 12)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n6 + 3 = 9 (left: 3 9 12)\n"
                ],
                "new_ys": [
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n17 / 7 = 2 (left: 2 17)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n17 * 7 = 119 (left: 119)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n7 / 17 = 0.41 (left: 0.41 17)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 + 5 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 + 5 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 + 5 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n5 + 3 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n5 + 3 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n5 + 3 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 + 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 6 12)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 + 3 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 + 3 = 6 (left: 6 6 12)\n6 / 6 = 1 (left: 1 6)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 + 3 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 6)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n6 + 3 = 9 (left: 3 9 12)\n3 + 9 = 12 (left: 9 12)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n6 + 3 = 9 (left: 3 9 12)\n9 / 3 = 3 (left: 3 12)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n6 + 3 = 9 (left: 3 9 12)\n12 - 3 = 9 (left: 9 9)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n6 + 3 = 9 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n17 / 7 = 2 (left: 2 17)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 + 5 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 + 5 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n"
                ]
            }
        ],
        "idx": 890,
        "ys": [
            "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
            "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n",
            "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n7 + 10 = 17 (left: 7 17)\n17 / 7 = 2 (left: 2 17)\n",
            "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 + 5 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
            "8 - 7 = 1 (left: 1 8 9)\n6 + 4 = 10 (left: 7 10 7)\n3 + 5 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 24840,
            "prompt_tokens": 75696,
            "cost": 0.163224
        },
        "time_spent": 41.290400981903076
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 6 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 * 2 = 12 (left: 12 12 12)  \n",
                    "12 / 2 = 6 (left: 6 12 12)  \n",
                    "12 - 2 = 10 (left: 10 12 12)  \n",
                    "12 - 6 = 6 (left: 6 12 12)  \n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    100
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 6 12 12)  \n",
                    "12 - 6 = 6 (left: 6 12 12)  \n",
                    "6 * 2 = 12 (left: 12 12 12)  \n",
                    "12 - 2 = 10 (left: 10 12 12)  \n"
                ]
            },
            {
                "step": 1,
                "x": "2 6 12 12",
                "ys": [
                    "12 / 2 = 6 (left: 6 12 12)  \n",
                    "12 - 6 = 6 (left: 6 12 12)  \n",
                    "6 * 2 = 12 (left: 12 12 12)  \n",
                    "12 - 2 = 10 (left: 10 12 12)  \n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n12 - 6 = 6 (left: 6 12)\n",
                    "12 - 6 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n",
                    "12 - 6 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n",
                    "12 - 6 = 6 (left: 6 12 12)  \n12 * 6 = 72 (left: 12 72)\n",
                    "12 - 6 = 6 (left: 6 12 12)  \n12 - 6 = 6 (left: 6 12)\n",
                    "6 * 2 = 12 (left: 12 12 12)  \n12 + 12 = 24 (left: 12 24)\n",
                    "6 * 2 = 12 (left: 12 12 12)  \n12 * 12 = 144 (left: 12 144)\n",
                    "6 * 2 = 12 (left: 12 12 12)  \n12 - 12 = 0 (left: 0 12)\n",
                    "6 * 2 = 12 (left: 12 12 12)  \n12 / 12 = 1 (left: 1 12)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n10 + 12 = 22 (left: 12 22)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n12 / 10 = 1.2 (left: 1.2 12)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n12 - 10 = 2 (left: 2 12)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n12 * 10 = 120 (left: 12 120)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \nInput: 3 3 3 3\n",
                    "12 - 2 = 10 (left: 10 12 12)  \nPossible next steps:\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n3 + 3 = 6 (left: 3 6 3)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n3 / 3 = 1 (left: 1 3 3)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n3 - 3 = 0 (left: 0 3 3)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n3 * 3 = 9 (left: 3 9 3)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    100
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n",
                    "12 - 6 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n12 - 10 = 2 (left: 2 12)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n3 * 3 = 9 (left: 3 9 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 6 12 12",
                "ys": [
                    "12 / 2 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n",
                    "12 - 6 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n12 - 10 = 2 (left: 2 12)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n3 * 3 = 9 (left: 3 9 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 12 14)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "12 - 6 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 6 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "12 - 6 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n12 + 2 = 14 (left: 2 14)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n12 - 10 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n12 - 10 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n12 - 10 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n3 * 3 = 9 (left: 3 9 3)\n9 / 3 = 3 (left: 3 3)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 3 6)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n18 / 12 = 1.5 (left: 1.5 18)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    50,
                    50,
                    100,
                    0
                ],
                "select_new_ys": [
                    "12 - 6 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 12 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 6 12 12",
                "ys": [
                    "12 - 6 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 12 14)\n"
                ],
                "new_ys": [
                    "12 - 6 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 - 6) * (12 / 6) = 24\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n12 - 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 - 2) * (12 - 10) = 24\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n3 * 27 = 81 (left: 27 81)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n18 * 6 = 108 (left: 108)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n18 / 6 = 3 (left: 3 18)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 12 14)\n12 + 14 = 26 (left: 26)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 12 14)\n12 * 14 = 168 (left: 168)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 12 14)\n14 - 12 = 2 (left: 2)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 12 14)\n14 / 12 = 1 (left: 1)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "12 - 2 = 10 (left: 10 12 12)  \n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n18 / 6 = 3 (left: 3 18)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n",
                    "12 / 2 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 12 14)\n12 + 14 = 26 (left: 26)\n"
                ]
            }
        ],
        "idx": 891,
        "ys": [
            "12 / 2 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
            "12 - 2 = 10 (left: 10 12 12)  \n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9 27)\n",
            "12 / 2 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n18 / 6 = 3 (left: 3 18)\n",
            "12 / 2 = 6 (left: 6 12 12)  \n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n18 - 6 = 12 (left: 12 18)\n",
            "12 / 2 = 6 (left: 6 12 12)  \n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 12 14)\n12 + 14 = 26 (left: 26)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 25645,
            "prompt_tokens": 79805,
            "cost": 0.17099750000000002
        },
        "time_spent": 24.651641130447388
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 5 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n",
                    "5 + 6 = 11 (left: 3 4 11)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n",
                    "4 * 5 = 20 (left: 3 6 20)\n",
                    "5 * 6 = 30 (left: 3 4 30)\n",
                    "3 + 5 = 8 (left: 4 6 8)\n",
                    "4 + 6 = 10 (left: 3 5 10)\n",
                    "3 * 5 = 15 (left: 4 6 15)\n",
                    "4 * 6 = 24 (left: 3 5 24)\n",
                    "3 + 6 = 9 (left: 4 5 9)\n",
                    "3 * 6 = 18 (left: 4 5 18)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n",
                    "5 + 6 = 11 (left: 3 4 11)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n",
                    "4 * 5 = 20 (left: 3 6 20)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 5 6",
                "ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n",
                    "5 + 6 = 11 (left: 3 4 11)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n",
                    "4 * 5 = 20 (left: 3 6 20)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 - 5 = 1 (left: 1 7)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 / 5 = 1.2 (left: 1.2 7)\n",
                    "3 + 4 = 7 (left: 5 6 7)\nInput: 1 2 3 4\n",
                    "3 + 4 = 7 (left: 5 6 7)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 + 3 = 5 (left: 5 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 * 3 = 6 (left: 6 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n3 + 4 = 7 (left: 4 7)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n3 * 4 = 12 (left: 12 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 + 3 = 4 (left: 4 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 3 = 3 (left: 3 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 + 4 = 5 (left: 5 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 4 = 4 (left: 4 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 + 4 = 6 (left: 6 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 * 4 = 8 (left: 8 4)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n9 * 3 = 27 (left: 6 27)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n9 / 3 = 3 (left: 6 3)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "5 + 6 = 11 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "5 + 6 = 11 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n",
                    "5 + 6 = 11 (left: 3 4 11)\n11 - 3 = 8 (left: 8 11)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n5 * 6 = 30 (left: 30 12)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n6 * 12 = 72 (left: 5 72)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n6 / 5 = 1.2 (left: 1.2 12)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 7 12)\n",
                    "4 * 5 = 20 (left: 3 6 20)\n3 * 6 = 18 (left: 18 20)\n",
                    "4 * 5 = 20 (left: 3 6 20)\n6 * 3 = 18 (left: 18 20)\n",
                    "4 * 5 = 20 (left: 3 6 20)\n20 - 3 = 17 (left: 3 17)\n",
                    "4 * 5 = 20 (left: 3 6 20)\n20 - 6 = 14 (left: 14 20)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 * 3 = 6 (left: 6 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 + 4 = 6 (left: 6 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 5 6",
                "ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 * 3 = 6 (left: 6 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 + 4 = 6 (left: 6 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n3 - 2 = 1 (left: 1 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n4 - 3 = 1 (left: 2 1)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n4 / 3 = 1 (left: 2 1)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 * 3 = 6 (left: 6 4)\n6 + 4 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 * 3 = 6 (left: 6 4)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 * 3 = 6 (left: 6 4)\n6 - 4 = 2 (left: 2)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 + 4 = 6 (left: 6 4)\n6 + 4 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 + 4 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 + 4 = 6 (left: 6 4)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 + 4 = 6 (left: 6 4)\n6 - 4 = 2 (left: 2)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n11 - 7 = 4 (left: 4 11)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n11 / 7 = 1.57 (left: 1.57 11)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 - 11 = -4 (left: -4 11)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n7 * 4 = 28 (left: 28 30)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n30 - 7 = 23 (left: 7 23)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    100,
                    0,
                    0,
                    0,
                    50,
                    100,
                    0,
                    0,
                    50,
                    100,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 + 4 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 5 6",
                "ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 + 4 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5 6)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 3 + 4 * 6 = 24\n",
                    "3 + 4 = 7 (left: 5 6 7)\n2 + 4 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (3 + 4) * (2 + 4) = 24\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n5 - 4 = 1 (left: 1 5)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 * 5 = 20 (left: 5 20)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n5 / 4 = 1.25 (left: 1.25 5)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    50,
                    100,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n"
                ]
            }
        ],
        "idx": 892,
        "ys": [
            "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
            "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
            "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
            "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n",
            "3 + 4 = 7 (left: 5 6 7)\n1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 26863,
            "prompt_tokens": 84145,
            "cost": 0.1799435
        },
        "time_spent": 30.216864109039307
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 10 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 * 10 = 60 (left: 12 12 60)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n",
                    "12 + 6 = 18 (left: 12 12 18)\n",
                    "12 / 6 = 2 (left: 10 12 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 * 10 = 60 (left: 12 12 60)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n",
                    "12 + 6 = 18 (left: 12 12 18)\n",
                    "12 / 6 = 2 (left: 10 12 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 10 12 12",
                "ys": [
                    "6 * 10 = 60 (left: 12 12 60)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n",
                    "12 + 6 = 18 (left: 12 12 18)\n",
                    "12 / 6 = 2 (left: 10 12 12)\n"
                ],
                "new_ys": [
                    "6 * 10 = 60 (left: 12 12 60)\n12 + 12 = 24 (left: 24 60)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n12 * 12 = 144 (left: 60 144)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n12 / 12 = 1 (left: 1 60)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 / 12 = 5 (left: 5 60)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 12)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n12 * 16 = 192 (left: 12 192)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n16 / 12 = 1.3333333333333333 (left: 1.3333333333333333 12)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n16 + 12 = 28 (left: 12 28)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n12 - 16 = -4 (left: -4 12)\n",
                    "10 + 6 = 16 (left: 12 16 12)\nInput: 5 5 5 5\n",
                    "10 + 6 = 16 (left: 12 16 12)\nPossible next steps:\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 + 5 = 10 (left: 5 10 5)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 * 5 = 25 (left: 5 25)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 - 5 = 0 (left: 0 5)\n",
                    "10 + 6 = 16 (left: 12 16 12)\nInput: 3 3 3 3\n",
                    "10 + 6 = 16 (left: 12 16 12)\nPossible next steps:\n",
                    "10 + 6 = 16 (left: 12 16 12)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n3 * 3 = 9 (left: 3 9)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n3 - 3 = 0 (left: 0 3)\n",
                    "12 + 6 = 18 (left: 12 12 18)\n12 + 12 = 24 (left: 18)\n",
                    "12 + 6 = 18 (left: 12 12 18)\n12 * 12 = 144 (left: 18)\n",
                    "12 + 6 = 18 (left: 12 12 18)\n12 / 12 = 1 (left: 1 18)\n",
                    "12 + 6 = 18 (left: 12 12 18)\n12 - 12 = 0 (left: 0 18)\n",
                    "12 + 6 = 18 (left: 12 12 18)\n18 + 12 = 30 (left: 12)\n",
                    "12 + 6 = 18 (left: 12 12 18)\n18 * 12 = 216 (left: 12)\n",
                    "12 + 6 = 18 (left: 12 12 18)\n18 / 12 = 1.5 (left: 1.5 12)\n",
                    "12 + 6 = 18 (left: 12 12 18)\n18 - 12 = 6 (left: 6 12)\n",
                    "12 / 6 = 2 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)\n",
                    "12 / 6 = 2 (left: 10 12 12)\n10 * 12 = 120 (left: 12 12 120)\n",
                    "12 / 6 = 2 (left: 10 12 12)\n12 / 10 = 1.2 (left: 1.2 12 12)\n",
                    "12 / 6 = 2 (left: 10 12 12)\n12 - 10 = 2 (left: 2 12 12)\n",
                    "12 / 6 = 2 (left: 10 12 12)\n12 - 2 = 10 (left: 10 12 12)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "12 / 6 = 2 (left: 10 12 12)\n10 * 12 = 120 (left: 12 12 120)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n12 + 12 = 24 (left: 24 60)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 / 12 = 5 (left: 5 60)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 10 12 12",
                "ys": [
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "12 / 6 = 2 (left: 10 12 12)\n10 * 12 = 120 (left: 12 12 120)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n12 + 12 = 24 (left: 24 60)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 / 12 = 5 (left: 5 60)\n"
                ],
                "new_ys": [
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 + 1 = 6 (left: 5 6)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 / 1 = 5 (left: 5 5)\n",
                    "12 / 6 = 2 (left: 10 12 12)\n10 * 12 = 120 (left: 12 12 120)\n12 * 12 = 144 (left: 120 144)\n",
                    "12 / 6 = 2 (left: 10 12 12)\n10 * 12 = 120 (left: 12 12 120)\n12 + 12 = 24 (left: 24 120)\n",
                    "12 / 6 = 2 (left: 10 12 12)\n10 * 12 = 120 (left: 12 12 120)\n12 / 12 = 1 (left: 1 12 120)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n12 + 12 = 24 (left: 24 60)\n24 * 2 = 48 (left: 48 60)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n12 + 12 = 24 (left: 24 60)\n24 + 60 = 84 (left: 24 84)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n12 * 2 = 24 (left: 24 48)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n12 + 48 = 60 (left: 60)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n48 - 12 = 36 (left: 36 12)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 / 12 = 5 (left: 5 60)\n5 * 5 = 25 (left: 25 60)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 / 12 = 5 (left: 5 60)\n60 / 5 = 12 (left: 12 60)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    0,
                    100,
                    0,
                    100,
                    50,
                    0
                ],
                "select_new_ys": [
                    "12 / 6 = 2 (left: 10 12 12)\n10 * 12 = 120 (left: 12 12 120)\n12 * 12 = 144 (left: 120 144)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n12 * 2 = 24 (left: 24 48)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n48 - 12 = 36 (left: 36 12)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 + 1 = 6 (left: 5 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 10 12 12",
                "ys": [
                    "12 / 6 = 2 (left: 10 12 12)\n10 * 12 = 120 (left: 12 12 120)\n12 * 12 = 144 (left: 120 144)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n12 * 2 = 24 (left: 24 48)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n48 - 12 = 36 (left: 36 12)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 + 1 = 6 (left: 5 6)\n"
                ],
                "new_ys": [
                    "12 / 6 = 2 (left: 10 12 12)\n10 * 12 = 120 (left: 12 12 120)\n12 * 12 = 144 (left: 120 144)\n120 + 144 = 264 (left: 264)\n",
                    "12 / 6 = 2 (left: 10 12 12)\n10 * 12 = 120 (left: 12 12 120)\n12 * 12 = 144 (left: 120 144)\n120 - 144 = -24 (left: -24)\n",
                    "12 / 6 = 2 (left: 10 12 12)\n10 * 12 = 120 (left: 12 12 120)\n12 * 12 = 144 (left: 120 144)\n120 * 144 = 17280 (left: 17280)\n",
                    "12 / 6 = 2 (left: 10 12 12)\n10 * 12 = 120 (left: 12 12 120)\n12 * 12 = 144 (left: 120 144)\n120 / 144 = 0.8333333333333334 (left: 0.8333333333333334)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n12 * 2 = 24 (left: 24 48)\n24 / 48 = 0.5 (left: 0.5)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n12 * 2 = 24 (left: 24 48)\n24 + 48 = 72 (left: 72)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n12 * 2 = 24 (left: 24 48)\n24 - 48 = -24 (left: -24)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n12 * 2 = 24 (left: 24 48)\n24 * 48 = 1152 (left: 1152)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n48 - 12 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n48 - 12 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n48 - 12 = 36 (left: 36 12)\n36 * 12 = 432 (left: 432)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n48 - 12 = 36 (left: 36 12)\n36 + 12 = 48 (left: 48)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 * 5 = 20 (left: 5 20)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n5 - 4 = 1 (left: 1 5)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n5 / 4 = 1.25 (left: 1.25 5)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 + 1 = 6 (left: 5 6)\n5 + 6 = 11 (left: 6 11)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 + 1 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 + 1 = 6 (left: 5 6)\n6 - 5 = 1 (left: 1 6)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 + 1 = 6 (left: 5 6)\n6 / 5 = 1.2 (left: 1.2 6)\n"
                ],
                "values": [
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    100,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n48 - 12 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 10 12 12)\n10 * 12 = 120 (left: 12 12 120)\n12 * 12 = 144 (left: 120 144)\n120 - 144 = -24 (left: -24)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n12 * 2 = 24 (left: 24 48)\n24 - 48 = -24 (left: -24)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n",
                    "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 * 5 = 20 (left: 5 20)\n"
                ]
            }
        ],
        "idx": 893,
        "ys": [
            "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n48 - 12 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\n",
            "12 / 6 = 2 (left: 10 12 12)\n10 * 12 = 120 (left: 12 12 120)\n12 * 12 = 144 (left: 120 144)\n120 - 144 = -24 (left: -24)\n",
            "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48)\n12 * 2 = 24 (left: 24 48)\n24 - 48 = -24 (left: -24)\n",
            "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n",
            "10 + 6 = 16 (left: 12 16 12)\n5 / 5 = 1 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 * 5 = 20 (left: 5 20)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 27987,
            "prompt_tokens": 87626,
            "cost": 0.187413
        },
        "time_spent": 26.165604829788208
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 5 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n",
                    "5 / 5 = 1 (left: 1 5 9)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n",
                    "5 * 5 = 25 (left: 5 9 25)\n",
                    "9 - 5 = 4 (left: 4 5 9)\n",
                    "9 / 5 = 1.8 (left: 1.8 5 9)\n",
                    "9 - 5 = 4 (left: 4 5 9)\n"
                ],
                "values": [
                    100,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n",
                    "5 / 5 = 1 (left: 1 5 9)\n",
                    "5 * 5 = 25 (left: 5 9 25)\n",
                    "9 - 5 = 4 (left: 4 5 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 5 5 9",
                "ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n",
                    "5 / 5 = 1 (left: 1 5 9)\n",
                    "5 * 5 = 25 (left: 5 9 25)\n",
                    "9 - 5 = 4 (left: 4 5 9)\n"
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 / 5 = 2 (left: 2 9)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 * 10 = 50 (left: 9 50)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n9 + 5 = 14 (left: 10 14)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n9 / 5 = 1 (left: 1 9)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 + 5 = 10 (left: 10 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 * 5 = 25 (left: 25 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 - 5 = 0 (left: 0 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 / 5 = 1 (left: 1 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 * 5 = 70 (left: 70)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 - 5 = 9 (left: 9 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 / 5 = 2 (left: 2 14)\n",
                    "5 / 5 = 1 (left: 1 5 9)\n5 + 9 = 14 (left: 1 14)\n",
                    "5 / 5 = 1 (left: 1 5 9)\n5 * 9 = 45 (left: 1 45)\n",
                    "5 / 5 = 1 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n",
                    "5 * 5 = 25 (left: 5 9 25)\n5 + 9 = 14 (left: 14 25)\n",
                    "5 * 5 = 25 (left: 5 9 25)\n9 * 5 = 45 (left: 25 45)\n",
                    "5 * 5 = 25 (left: 5 9 25)\n9 - 5 = 4 (left: 4 25)\n",
                    "5 * 5 = 25 (left: 5 9 25)\n25 + 5 = 30 (left: 9 30)\n",
                    "5 * 5 = 25 (left: 5 9 25)\n25 - 9 = 16 (left: 5 16)\n",
                    "9 - 5 = 4 (left: 4 5 9)\n4 + 5 = 9 (left: 5 9)\n",
                    "9 - 5 = 4 (left: 4 5 9)\n5 - 4 = 1 (left: 1 9)\n",
                    "9 - 5 = 4 (left: 4 5 9)\n4 * 5 = 20 (left: 9 20)\n",
                    "9 - 5 = 4 (left: 4 5 9)\n5 / 4 = 1.25 (left: 1.25 9)\n",
                    "9 - 5 = 4 (left: 4 5 9)\nInput: 1 1 1 1\n",
                    "9 - 5 = 4 (left: 4 5 9)\nPossible next steps:\n",
                    "9 - 5 = 4 (left: 4 5 9)\n1 + 1 = 2 (left: 1 1 2 1)\n",
                    "9 - 5 = 4 (left: 4 5 9)\n1 * 1 = 1 (left: 1 1 1 1)\n",
                    "9 - 5 = 4 (left: 4 5 9)\n1 / 1 = 1 (left: 1 1 1 1)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    0,
                    100,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n9 + 5 = 14 (left: 10 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 + 5 = 10 (left: 10 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 5 5 9",
                "ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n9 + 5 = 14 (left: 10 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 + 5 = 10 (left: 10 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n"
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 * 9 = 135 (left: 135)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n9 - 15 = -6 (left: -6 9)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 / 9 = 1.67 (left: 1.67 9)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 + 5 = 10 (left: 10 14)\n10 + 14 = 24 (left: 10 14 24)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 + 5 = 10 (left: 10 14)\n10 * 14 = 140 (left: 14 140)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 + 5 = 10 (left: 10 14)\n14 / 10 = 1.4 (left: 1.4 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 + 5 = 10 (left: 10 14)\n14 - 10 = 4 (left: 4 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 + 5 = 10 (left: 10 14)\n10 / 14 = 0.7142857142857143 (left: 0.7142857142857143 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n5 + 19 = 24 (left: 5 19)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14 5)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n5 + 9 = 14 (left: 9 14)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n9 - 5 = 4 (left: 4 9)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n5 + 19 = 24 (left: 5 19)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 5 5 9",
                "ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n5 + 19 = 24 (left: 5 19)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n"
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((5 + 5) + 5) + 9 = 24\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((5 + 5) + 5) + 9 = 24\n",
                    "5 + 5 = 10 (left: 5 10 9)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((5 + 5) + 5) + 9 = 24\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n5 + 19 = 24 (left: 5 19)\n5 + 19 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n5 + 19 = 24 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n5 + 19 = 24 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n5 + 19 = 24 (left: 5 19)\n19 / 5 = 3 (left: 3)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n6 + 15 = 21 (left: 15 21)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n15 - 6 = 9 (left: 9 15)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 15 = 90 (left: 15 90)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n15 / 6 = 2.5 (left: 2.5 15)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    100,
                    100,
                    50,
                    0,
                    50,
                    100,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((5 + 5) + 5) + 9 = 24\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((5 + 5) + 5) + 9 = 24\n",
                    "5 + 5 = 10 (left: 5 10 9)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((5 + 5) + 5) + 9 = 24\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n5 + 19 = 24 (left: 5 19)\n5 + 19 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n5 + 19 = 24 (left: 5 19)\n19 + 5 = 24 (left: 24)\n"
                ]
            }
        ],
        "idx": 894,
        "ys": [
            "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((5 + 5) + 5) + 9 = 24\n",
            "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((5 + 5) + 5) + 9 = 24\n",
            "5 + 5 = 10 (left: 5 10 9)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((5 + 5) + 5) + 9 = 24\n",
            "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n5 + 19 = 24 (left: 5 19)\n5 + 19 = 24 (left: 24)\n",
            "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n5 + 19 = 24 (left: 5 19)\n19 + 5 = 24 (left: 24)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 29000,
            "prompt_tokens": 92278,
            "cost": 0.196417
        },
        "time_spent": 27.36482882499695
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 5 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 6 10 11)  \n",
                    "5 + 6 = 11 (left: 5 11 11)  \n",
                    "5 * 5 = 25 (left: 6 11 25)  \n",
                    "6 - 5 = 1 (left: 1 5 11)  \n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 6 10 11)  \n",
                    "5 + 6 = 11 (left: 5 11 11)  \n",
                    "5 * 5 = 25 (left: 6 11 25)  \n",
                    "6 - 5 = 1 (left: 1 5 11)  \n"
                ]
            },
            {
                "step": 1,
                "x": "5 5 6 11",
                "ys": [
                    "5 + 5 = 10 (left: 6 10 11)  \n",
                    "5 + 6 = 11 (left: 5 11 11)  \n",
                    "5 * 5 = 25 (left: 6 11 25)  \n",
                    "6 - 5 = 1 (left: 1 5 11)  \n"
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 6 10 11)  \n6 + 10 = 16 (left: 11 16)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n6 * 10 = 60 (left: 11 60)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 - 6 = 4 (left: 4 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n11 - 6 = 5 (left: 5 11)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n5 + 11 = 16 (left: 11 16)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n11 - 5 = 6 (left: 6 11)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n11 + 5 = 16 (left: 11 16)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n11 / 5 = 2 (left: 2 11)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \nInput: 3 3 3 3\n",
                    "5 + 6 = 11 (left: 5 11 11)  \nPossible next steps:\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 + 3 = 6 (left: 3 6 3)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 / 3 = 1 (left: 1 3 3)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 - 3 = 0 (left: 0 3 3)\n",
                    "5 * 5 = 25 (left: 6 11 25)  \n6 + 11 = 17 (left: 17 25)\n",
                    "5 * 5 = 25 (left: 6 11 25)  \n11 * 6 = 66 (left: 66 25)\n",
                    "5 * 5 = 25 (left: 6 11 25)  \n25 - 6 = 19 (left: 19 11)\n",
                    "5 * 5 = 25 (left: 6 11 25)  \n25 / 6 = 4 (left: 4 11 25)\n",
                    "6 - 5 = 1 (left: 1 5 11)  \n1 + 5 = 6 (left: 6 11)\n",
                    "6 - 5 = 1 (left: 1 5 11)  \n5 + 1 = 6 (left: 6 11)\n",
                    "6 - 5 = 1 (left: 1 5 11)  \n1 * 5 = 5 (left: 5 11)\n",
                    "6 - 5 = 1 (left: 1 5 11)  \n5 * 1 = 5 (left: 5 11)\n",
                    "6 - 5 = 1 (left: 1 5 11)  \n5 - 1 = 4 (left: 4 11)\n",
                    "6 - 5 = 1 (left: 1 5 11)  \n11 - 5 = 6 (left: 1 6)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n6 + 10 = 16 (left: 11 16)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 - 6 = 4 (left: 4 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n11 - 6 = 5 (left: 5 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 5 6 11",
                "ys": [
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n6 + 10 = 16 (left: 11 16)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 - 6 = 4 (left: 4 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n11 - 6 = 5 (left: 5 11)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n3 / 3 = 1 (left: 1 9)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n9 / 3 = 3 (left: 3 3)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\nInput: 1 4 6 8\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n1 + 4 = 5 (left: 5 6 8)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n1 * 4 = 4 (left: 4 6 8)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n4 / 1 = 4 (left: 4 6 8)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n6 + 1 = 7 (left: 4 7 8)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n1 + 6 = 7 (left: 4 7 8)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n8 - 4 = 4 (left: 1 4 8)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n8 - 6 = 2 (left: 1 2 8)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n6 - 4 = 2 (left: 1 2 8)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n6 + 10 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n6 + 10 = 16 (left: 11 16)\n11 * 16 = 176 (left: 176)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n6 + 10 = 16 (left: 11 16)\n16 - 11 = 5 (left: 5)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n6 + 10 = 16 (left: 11 16)\n16 / 11 = 1.45 (left: 1.45)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n6 + 21 = 27 (left: 27)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n21 - 6 = 15 (left: 15)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n6 * 21 = 126 (left: 126)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n21 / 6 = 3 (left: 3)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\nInput: 4 5 6 7\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\nPossible next steps:\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n5 + 6 = 11 (left: 4 7 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n6 + 7 = 13 (left: 4 5 13)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 * 5 = 20 (left: 6 7 20)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n5 * 6 = 30 (left: 4 7 30)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n6 * 7 = 42 (left: 4 5 42)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 / 5 = 0.8 (left: 0.8 5 6 7)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n5 / 6 = 0.8333333333333334 (left: 4 0.8333333333333334 6 7)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n6 / 7 = 0.8571428571428571 (left: 4 5 0.8571428571428571 7)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n7 / 4 = 1.75 (left: 1.75 5 6 7)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n7 - 4 = 3 (left: 3 5 6 7)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\nInput: 1 2 3 4\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\nPossible next steps:\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n2 + 3 = 5 (left: 1 5 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n3 + 4 = 7 (left: 1 2 7)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n2 * 3 = 6 (left: 1 6 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n3 * 4 = 12 (left: 1 2 12)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n1 / 2 = 0.5 (left: 0.5 2 3 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n2 / 3 = 0.6666666666666666 (left: 1 0.6666666666666666 3 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n3 / 4 = 0.75 (left: 1 2 0.75 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 / 1 = 4 (left: 4 2 3 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 - 1 = 3 (left: 3 2 3 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 - 6 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 - 6 = 4 (left: 4 11)\n11 - 4 = 7 (left: 7)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 - 6 = 4 (left: 4 11)\n4 * 11 = 44 (left: 44)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 - 6 = 4 (left: 4 11)\n11 / 4 = 2.75 (left: 2.75)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n11 - 6 = 5 (left: 5 11)\n11 / 5 = 2 (left: 2)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n11 - 6 = 5 (left: 5 11)\n5 * 11 = 55 (left: 55)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    100,
                    100,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n2 * 3 = 6 (left: 1 6 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n3 * 4 = 12 (left: 1 2 12)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 / 1 = 4 (left: 4 2 3 4)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 5 6 11",
                "ys": [
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n2 * 3 = 6 (left: 1 6 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n3 * 4 = 12 (left: 1 2 12)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 / 1 = 4 (left: 4 2 3 4)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n"
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n1 * 2 = 2 (left: 2 3 4)\n3 - 2 = 1 (left: 1 3 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n1 * 2 = 2 (left: 2 3 4)\n3 + 2 = 5 (left: 5 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n1 * 2 = 2 (left: 2 3 4)\n3 / 2 = 1.5 (left: 1.5 3 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n2 * 3 = 6 (left: 1 6 4)\n1 + 6 = 7 (left: 4 7)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 4 6)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n2 * 3 = 6 (left: 1 6 4)\n6 - 1 = 5 (left: 4 5)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n3 * 4 = 12 (left: 1 2 12)\n2 * 2 = 4 (left: 4 12)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n3 * 4 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n3 * 4 = 12 (left: 1 2 12)\n2 + 1 = 3 (left: 3 12)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n3 * 4 = 12 (left: 1 2 12)\n12 - 1 = 11 (left: 1 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n3 * 4 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n3 * 4 = 12 (left: 1 2 12)\n12 - 2 = 10 (left: 2 10)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 / 1 = 4 (left: 4 2 3 4)\n4 + 2 = 6 (left: 3 4 6)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 / 1 = 4 (left: 4 2 3 4)\n4 - 2 = 2 (left: 2 3 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 / 1 = 4 (left: 4 2 3 4)\n4 / 2 = 2 (left: 2 3 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 / 1 = 4 (left: 4 2 3 4)\n4 * 2 = 8 (left: 3 4 8)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 / 1 = 4 (left: 4 2 3 4)\n3 + 2 = 5 (left: 4 4 5)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 / 1 = 4 (left: 4 2 3 4)\n3 - 2 = 1 (left: 1 3 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 / 1 = 4 (left: 4 2 3 4)\n3 / 2 = 1 (left: 1 3 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 / 1 = 4 (left: 4 2 3 4)\n3 * 2 = 6 (left: 4 4 6)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 * 9 = 54 (left: 9 54)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "5 + 6 = 11 (left: 5 11 11)  \n3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    0,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    100,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 4 6)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 / 1 = 4 (left: 4 2 3 4)\n4 - 2 = 2 (left: 2 3 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 / 1 = 4 (left: 4 2 3 4)\n4 / 2 = 2 (left: 2 3 4)\n"
                ]
            }
        ],
        "idx": 895,
        "ys": [
            "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
            "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 4 6)\n",
            "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n",
            "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 / 1 = 4 (left: 4 2 3 4)\n4 - 2 = 2 (left: 2 3 4)\n",
            "5 + 5 = 10 (left: 6 10 11)  \n10 + 11 = 21 (left: 6 21)\n4 / 1 = 4 (left: 4 2 3 4)\n4 / 2 = 2 (left: 2 3 4)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 30784,
            "prompt_tokens": 95767,
            "cost": 0.20521849999999997
        },
        "time_spent": 40.326674938201904
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 8 9 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 9 9 14)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n",
                    "9 - 6 = 3 (left: 3 9 9)\n",
                    "9 / 6 = 1.5 (left: 1.5 9 9)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n",
                    "9 / 8 = 1.125 (left: 1.125 9 9)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 8 = 14 (left: 9 9 14)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n",
                    "9 - 6 = 3 (left: 3 9 9)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 8 9 9",
                "ys": [
                    "6 + 8 = 14 (left: 9 9 14)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n",
                    "9 - 6 = 3 (left: 3 9 9)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n"
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 - 9 = 0 (left: 0 14)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 * 9 = 81 (left: 14 81)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 / 9 = 1 (left: 1 14)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 * 9 = 81 (left: 48 81)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 + 9 = 18 (left: 18 48)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n48 / 9 = 5 (left: 5 9 48)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n48 - 9 = 39 (left: 9 39 48)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 - 2 = 7 (left: 2 7 9)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 - 2 = 7 (left: 2 9 7)\n",
                    "9 - 6 = 3 (left: 3 9 9)\n3 * 3 = 9 (left: 9 9 9)\n",
                    "9 - 6 = 3 (left: 3 9 9)\n9 + 3 = 12 (left: 9 9 12)\n",
                    "9 - 6 = 3 (left: 3 9 9)\n3 * 9 = 27 (left: 9 9 27)\n",
                    "9 - 6 = 3 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9 9)\n",
                    "9 - 6 = 3 (left: 3 9 9)\n9 - 3 = 6 (left: 3 6 9)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 / 1 = 9 (left: 9 9)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 - 1 = 8 (left: 8 9)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 - 9 = 0 (left: 0 14)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 / 9 = 1 (left: 1 14)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 * 9 = 81 (left: 48 81)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 + 9 = 18 (left: 18 48)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 8 9 9",
                "ys": [
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 - 9 = 0 (left: 0 14)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 / 9 = 1 (left: 1 14)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 * 9 = 81 (left: 48 81)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 + 9 = 18 (left: 18 48)\n"
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n14 + 18 = 32 (left: 32)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 - 14 = 4 (left: 4 18)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n14 * 18 = 252 (left: 252)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 / 14 = 1 (left: 1 18)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\nInput: 4 4 6\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n4 + 4 = 8 (left: 6 8)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n4 * 4 = 16 (left: 6 16)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n6 + 4 = 10 (left: 4 10)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n6 * 4 = 24 (left: 4 24)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n6 / 4 = 1 (left: 1 4)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n4 / 4 = 1 (left: 1 6)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 - 9 = 0 (left: 0 14)\n0 + 14 = 14 (left: 14)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 - 9 = 0 (left: 0 14)\n14 - 0 = 14 (left: 14)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 - 9 = 0 (left: 0 14)\n14 / 0 = undefined (left: 0 14)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 / 9 = 1 (left: 1 14)\n1 + 14 = 15 (left: 14 15)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 / 9 = 1 (left: 1 14)\n14 - 1 = 13 (left: 1 13)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 * 9 = 81 (left: 48 81)\n48 + 81 = 129 (left: 129)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 * 9 = 81 (left: 48 81)\n48 * 81 = 3888 (left: 3888)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 * 9 = 81 (left: 48 81)\n81 / 48 = 1 (left: 1 81)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 * 9 = 81 (left: 48 81)\n81 - 48 = 33 (left: 33)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 * 9 = 81 (left: 48 81)\n48 / 81 = 0 (left: 0 48)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 * 9 = 81 (left: 48 81)\n81 - 48 = 33 (left: 33)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 + 9 = 18 (left: 18 48)\n18 + 48 = 66 (left: 66)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 + 9 = 18 (left: 18 48)\n18 * 48 = 864 (left: 864)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 + 9 = 18 (left: 18 48)\n48 - 18 = 30 (left: 30)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 + 9 = 18 (left: 18 48)\n48 / 18 = 2.67 (left: 2.67)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n14 + 18 = 32 (left: 32)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 - 14 = 4 (left: 4 18)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 / 14 = 1 (left: 1 18)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n4 + 4 = 8 (left: 6 8)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n4 * 4 = 16 (left: 6 16)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 8 9 9",
                "ys": [
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n14 + 18 = 32 (left: 32)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 - 14 = 4 (left: 4 18)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 / 14 = 1 (left: 1 18)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n4 + 4 = 8 (left: 6 8)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n4 * 4 = 16 (left: 6 16)\n"
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n14 + 18 = 32 (left: 32)\n2 + 2 = 4 (left: 4)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n14 + 18 = 32 (left: 32)\n2 * 2 = 4 (left: 4)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n14 + 18 = 32 (left: 32)\n2 ^ 2 = 4 (left: 4)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 - 14 = 4 (left: 4 18)\n4 * 18 = 72 (left: 72)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 / 14 = 1 (left: 1 18)\n1 + 18 = 19 (left: 19)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 / 14 = 1 (left: 1 18)\n18 - 1 = 17 (left: 17)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 / 14 = 1 (left: 1 18)\n18 / 1 = 18 (left: 18)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 / 14 = 1 (left: 1 18)\n1 * 18 = 18 (left: 18)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n4 + 4 = 8 (left: 6 8)\n6 + 8 = 14 (left: 8 14)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n4 + 4 = 8 (left: 6 8)\n8 - 6 = 2 (left: 2 8)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n4 + 4 = 8 (left: 6 8)\n6 * 8 = 48 (left: 8 48)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n4 * 4 = 16 (left: 6 16)\n6 + 16 = 22 (left: 22)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n4 * 4 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n4 * 4 = 16 (left: 6 16)\n6 * 16 = 96 (left: 96)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n4 * 4 = 16 (left: 6 16)\n16 / 6 = 2.67 (left: 2.67)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n4 * 4 = 16 (left: 6 16)\n6 - 16 = -10 (left: -10)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n4 * 4 = 16 (left: 6 16)\n16 + 6 = 22 (left: 22)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 / 14 = 1 (left: 1 18)\n1 + 18 = 19 (left: 19)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 / 14 = 1 (left: 1 18)\n18 - 1 = 17 (left: 17)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 / 14 = 1 (left: 1 18)\n18 / 1 = 18 (left: 18)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 / 14 = 1 (left: 1 18)\n1 * 18 = 18 (left: 18)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n4 + 4 = 8 (left: 6 8)\n6 + 8 = 14 (left: 8 14)\n"
                ]
            }
        ],
        "idx": 896,
        "ys": [
            "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 / 14 = 1 (left: 1 18)\n1 + 18 = 19 (left: 19)\n",
            "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 / 14 = 1 (left: 1 18)\n18 - 1 = 17 (left: 17)\n",
            "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 / 14 = 1 (left: 1 18)\n18 / 1 = 18 (left: 18)\n",
            "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n18 / 14 = 1 (left: 1 18)\n1 * 18 = 18 (left: 18)\n",
            "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n4 + 4 = 8 (left: 6 8)\n6 + 8 = 14 (left: 8 14)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 31816,
            "prompt_tokens": 99475,
            "cost": 0.2128445
        },
        "time_spent": 24.40289306640625
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 6 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 13)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n"
                ],
                "values": [
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 6 13",
                "ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n"
                ],
                "new_ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 7 10)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 / 6 = 1 (left: 1 13)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n13 + 6 = 19 (left: 6 19)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n6 + 9 = 15 (left: 9 13 15)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n6 * 9 = 54 (left: 13 54)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n9 / 6 = 1.5 (left: 1.5 13)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 6 = 7 (left: 7 13)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 13)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 7 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 6 13",
                "ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 7 10)\n"
                ],
                "new_ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 * 10 = 90 (left: 90)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n10 / 9 = 1.11 (left: 1.11 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n10 - 3 = 7 (left: 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n10 / 3 = 3.33 (left: 3 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 10 28)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 - 10 = 8 (left: 8 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 * 10 = 180 (left: 10 180)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 / 10 = 1.8 (left: 1.8 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 10 20)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n10 / 2 = 5 (left: 5 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 7 10)\n7 * 10 = 70 (left: 70)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 7 10)\n10 / 7 = 1.43 (left: 1.43 10)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 10 28)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 6 13",
                "ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 10 28)\n"
                ],
                "new_ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n10 + 19 = 29 (left: 29)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n19 - 10 = 9 (left: 9 19)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n10 * 19 = 190 (left: 190)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n19 / 10 = 1.9 (left: 1.9 19)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n10 / 1 = 10 (left: 1 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\nInput: 1 3 5 7\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\nPossible next steps:\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n1 + 3 = 4 (left: 4 5 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n3 + 5 = 8 (left: 1 8 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n5 + 7 = 12 (left: 1 3 12)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n1 * 3 = 3 (left: 3 5 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n3 * 5 = 15 (left: 1 15 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n5 * 7 = 35 (left: 1 3 35)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n1 - 3 = -2 (left: -2 5 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n3 - 5 = -2 (left: 1 -2 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n5 - 7 = -2 (left: 1 3 -2)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\nInput: 1 4 6 7\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\nPossible next steps:\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n1 + 4 = 5 (left: 5 6 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 + 1 = 7 (left: 4 7 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n1 * 4 = 4 (left: 4 6 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n4 + 6 = 10 (left: 1 7 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 - 1 = 5 (left: 4 5 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n7 - 4 = 3 (left: 1 3 6)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n7 - 1 = 6 (left: 4 6 6)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 10 28)\n10 + 28 = 38 (left: 38)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 10 28)\n10 * 28 = 280 (left: 280)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 10 28)\n28 / 10 = 2.8 (left: 2.8)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 10 28)\n28 - 10 = 18 (left: 18)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n10 + 19 = 29 (left: 29)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n19 - 10 = 9 (left: 9 19)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n10 / 1 = 10 (left: 1 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n"
                ]
            }
        ],
        "idx": 897,
        "ys": [
            "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n10 + 19 = 29 (left: 29)\n",
            "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 10 19)\n19 - 10 = 9 (left: 9 19)\n",
            "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
            "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n10 / 1 = 10 (left: 1 10)\n",
            "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 32856,
            "prompt_tokens": 102715,
            "cost": 0.2197845
        },
        "time_spent": 29.615965843200684
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 8 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n",
                    "6 / 8 = 0.75 (left: 0.75 8 9)\n",
                    "6 - 8 = -2 (left: -2 8 9)\n",
                    "8 + 9 = 17 (left: 6 11 17)\n",
                    "8 * 9 = 72 (left: 6 11 72)\n",
                    "8 / 9 = 0.89 (left: 0.89 9 11)\n",
                    "8 - 9 = -1 (left: 6 -1 11)\n",
                    "9 + 11 = 20 (left: 6 8 20)\n",
                    "9 * 11 = 99 (left: 6 8 99)\n",
                    "9 / 11 = 0.82 (left: 0.82 8 11)\n",
                    "9 - 11 = -2 (left: 6 8 -2)\n",
                    "11 + 6 = 17 (left: 8 9 17)\n",
                    "11 * 6 = 66 (left: 8 9 66)\n",
                    "11 / 6 = 1.83 (left: 1.83 8 9)\n",
                    "11 - 6 = 5 (left: 5 8 9)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n",
                    "6 - 8 = -2 (left: -2 8 9)\n",
                    "8 + 9 = 17 (left: 6 11 17)\n",
                    "8 * 9 = 72 (left: 6 11 72)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 8 9 11",
                "ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n",
                    "6 - 8 = -2 (left: -2 8 9)\n",
                    "8 + 9 = 17 (left: 6 11 17)\n",
                    "8 * 9 = 72 (left: 6 11 72)\n"
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 9 14 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 * 9 = 99 (left: 14 99)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 11 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 11 14)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n9 * 11 = 99 (left: 48 99)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n48 / 9 = 5 (left: 5 11)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 + 9 = 20 (left: 20 48)\n",
                    "6 - 8 = -2 (left: -2 8 9)\n-2 + 8 = 6 (left: 6 9)\n",
                    "6 - 8 = -2 (left: -2 8 9)\n8 - (-2) = 10 (left: 10 9)\n",
                    "6 - 8 = -2 (left: -2 8 9)\n9 - (-2) = 11 (left: 8 11)\n",
                    "8 + 9 = 17 (left: 6 11 17)\n6 + 11 = 17 (left: 11 17)\n",
                    "8 + 9 = 17 (left: 6 11 17)\n11 * 6 = 66 (left: 17 66)\n",
                    "8 + 9 = 17 (left: 6 11 17)\n11 - 6 = 5 (left: 5 11 17)\n",
                    "8 * 9 = 72 (left: 6 11 72)\n6 * 11 = 66 (left: 66 72)\n",
                    "8 * 9 = 72 (left: 6 11 72)\n11 + 6 = 17 (left: 17 72)\n",
                    "8 * 9 = 72 (left: 6 11 72)\n11 * 6 = 66 (left: 66 72)\n",
                    "8 * 9 = 72 (left: 6 11 72)\n72 / 6 = 12 (left: 12 72)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 9 14 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 11 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 8 9 11",
                "ys": [
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 9 14 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 11 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n"
                ],
                "new_ys": [
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n2 * 48 = 96 (left: 48 96)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 - 2 = 46 (left: 2 46)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n11 + 14 = 25 (left: 20 25)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n11 * 14 = 154 (left: 20 154)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 / 11 = 1 (left: 1 14 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n20 + 11 = 31 (left: 11 31)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n20 - 11 = 9 (left: 9 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n20 / 11 = 1 (left: 1 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\nInput: 3 3 3 3\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 9 14 20)\n9 + 14 = 23 (left: 20 23)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 9 14 20)\n9 * 14 = 126 (left: 20 126)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 9 14 20)\n14 - 9 = 5 (left: 5 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 9 14 20)\n14 / 9 = 1.5555555555555556 (left: 1.5555555555555556 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 9 14 20)\n20 - 9 = 11 (left: 11 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 9 14 20)\n20 / 9 = 2.2222222222222223 (left: 2.2222222222222223 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 11 14)\n2 + 11 = 13 (left: 13 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 11 14)\n11 + 2 = 13 (left: 2 13 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 11 14)\n11 * 2 = 22 (left: 22 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 11 14)\n11 - 2 = 9 (left: 9 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 11 14)\n11 / 2 = 5 (left: 5 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 11 14)\n14 - 11 = 3 (left: 2 3 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n5 + 11 = 16 (left: 11 14 16)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n5 * 11 = 55 (left: 14 55)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n11 + 5 = 16 (left: 16 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n11 - 5 = 6 (left: 6 11 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n14 - 5 = 9 (left: 9 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n14 / 5 = 2 (left: 2 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\nInput: 3 3 3 3\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n3 / 3 = 1 (left: 1 3 3)\n"
                ],
                "values": [
                    0,
                    100,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    100,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    100,
                    0,
                    50
                ],
                "select_new_ys": [
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 - 2 = 46 (left: 2 46)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 8 9 11",
                "ys": [
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 - 2 = 46 (left: 2 46)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\n"
                ],
                "new_ys": [
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n24 + 48 = 72 (left: 72)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n24 * 48 = 1152 (left: 1152)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n48 / 24 = 2 (left: 2 48)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n48 - 24 = 24 (left: 24)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\nInput: 3 6 12 24\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\nPossible next steps:\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n3 * 6 = 18 (left: 12 18 24)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n6 * 2 = 12 (left: 3 12 24)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n12 * 2 = 24 (left: 3 6 24)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n3 + 6 = 9 (left: 9 12 24)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n6 + 3 = 9 (left: 9 12 24)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n12 / 3 = 4 (left: 4 6 24)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n24 / 3 = 8 (left: 6 8 12)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n24 / 6 = 4 (left: 3 4 12)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n24 - 12 = 12 (left: 3 6 12)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n12 * 2 = 24 (left: 3 6 24)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n3 * 3 = 9 (left: 3 9 3)\n3 * 3 = 9 (left: 9 3)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n3 * 3 = 9 (left: 3 9 3)\n9 / 3 = 3 (left: 3 3)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n3 * 3 = 9 (left: 3 9 3)\n9 - 3 = 6 (left: 6 3)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n3 * 3 = 9 (left: 3 9 3)\n9 + 3 = 12 (left: 3 12)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n3 * 3 = 9 (left: 3 9 3)\n3 + 9 = 12 (left: 3 12)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n3 * 3 = 9 (left: 3 9 3)\n9 / 3 = 3 (left: 3 3)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n3 * 3 = 9 (left: 3 9 3)\n9 + 3 = 12 (left: 3 12)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 - 2 = 46 (left: 2 46)\n2 * 46 = 92 (left: 46 92)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 - 2 = 46 (left: 2 46)\n46 / 2 = 23 (left: 2 23)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\n3 * 14 = 42 (left: 20 42)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\n14 - 3 = 11 (left: 11 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\n20 + 3 = 23 (left: 14 23)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\n14 / 3 = 4 (left: 4 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\nInput: 5 5 7 10\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\n5 + 5 = 10 (left: 7 10 10)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\n7 + 5 = 12 (left: 10 12 10)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\n7 - 5 = 2 (left: 2 10 10)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\n10 - 5 = 5 (left: 5 7 10)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\n7 / 5 = 1 (left: 1 5 10)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\n10 + 5 = 15 (left: 7 10 15)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\n7 * 5 = 35 (left: 10 35)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\n7 - 5 = 2 (left: 2 10 10)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\n5 * 5 = 25 (left: 7 10 25)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 11 14 20)\n14 - 11 = 3 (left: 3 14 20)\n5 - 5 = 0 (left: 0 7 10)\n"
                ],
                "values": [
                    0,
                    0,
                    100,
                    100,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n48 / 24 = 2 (left: 2 48)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n48 - 24 = 24 (left: 24)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n24 / 6 = 4 (left: 3 4 12)\n",
                    "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n24 - 12 = 12 (left: 3 6 12)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n"
                ]
            }
        ],
        "idx": 898,
        "ys": [
            "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n48 / 24 = 2 (left: 2 48)\n",
            "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n48 - 24 = 24 (left: 24)\n",
            "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n24 / 6 = 4 (left: 3 4 12)\n",
            "6 * 8 = 48 (left: 9 11 48)\n11 - 9 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24 48)\n24 - 12 = 12 (left: 3 6 12)\n",
            "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n3 * 3 = 9 (left: 3 9 3)\n3 * 9 = 27 (left: 3 27)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 34719,
            "prompt_tokens": 106439,
            "cost": 0.22909649999999998
        },
        "time_spent": 40.802335023880005
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 3 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 3 4 11)\n",
                    "3 + 3 = 6 (left: 1 6 11)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n",
                    "3 + 3 = 6 (left: 1 6 11)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 3 11",
                "ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n",
                    "3 + 3 = 6 (left: 1 6 11)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n"
                ],
                "new_ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 4)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 7 11)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n",
                    "3 + 3 = 6 (left: 1 6 11)\n6 + 11 = 17 (left: 1 17)\n",
                    "3 + 3 = 6 (left: 1 6 11)\n11 - 6 = 5 (left: 1 5)\n",
                    "3 + 3 = 6 (left: 1 6 11)\n6 * 11 = 66 (left: 1 66)\n",
                    "3 + 3 = 6 (left: 1 6 11)\n11 / 6 = 1 (left: 1 1)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n9 + 1 = 10 (left: 10 11)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n9 - 1 = 8 (left: 8 11)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n9 * 1 = 9 (left: 9 11)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n11 - 1 = 10 (left: 9 10)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n11 / 1 = 11 (left: 11 11)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 3 11",
                "ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n"
                ],
                "new_ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)\n7 + 8 = 15 (left: 8 15)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)\n8 - 7 = 1 (left: 1 8)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 11 18)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 - 11 = -4 (left: -4 11)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 * 11 = 77 (left: 11 77)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 / 11 = 0.64 (left: 0.64 11)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 + 11 = 23 (left: 11 23)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1 12)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 * 11 = 132 (left: 11 132)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 / 11 = 1 (left: 1 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)\n7 + 8 = 15 (left: 8 15)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 3 3 11",
                "ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)\n7 + 8 = 15 (left: 8 15)\n"
                ],
                "new_ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n11 - 8 = 3 (left: 3)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 * 11 = 88 (left: 88)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n11 / 8 = 1.375 (left: 1.375)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 13)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n8 - 5 = 3 (left: 3)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n8 / 5 = 1.6 (left: 1.6)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)\n7 + 8 = 15 (left: 8 15)\n8 + 15 = 23 (left: 23)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)\n7 + 8 = 15 (left: 8 15)\n15 - 8 = 7 (left: 7)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 13)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n2 + 8 = 10 (left: 8 10)\n"
                ]
            }
        ],
        "idx": 899,
        "ys": [
            "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n",
            "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 + 8 = 13 (left: 13)\n",
            "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
            "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
            "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n2 + 8 = 10 (left: 8 10)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 35495,
            "prompt_tokens": 109916,
            "cost": 0.235864
        },
        "time_spent": 24.318740844726562
    }
]