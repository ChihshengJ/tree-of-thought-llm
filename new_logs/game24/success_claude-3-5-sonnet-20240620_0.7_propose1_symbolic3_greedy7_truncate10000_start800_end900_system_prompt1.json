[
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 9 11)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n",
                    "11 - 9 = 2 (left: 1 2 5)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n",
                    "9 + 1 = 10 (left: 5 10 11)\n",
                    "5 * 1 = 5 (left: 5 9 11)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n",
                    "1 + 5 = 6 (left: 6 9 11)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n",
                    "11 - 9 = 2 (left: 1 2 5)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n",
                    "9 + 1 = 10 (left: 5 10 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 9 11",
                "ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n",
                    "1 + 5 = 6 (left: 6 9 11)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n",
                    "11 - 9 = 2 (left: 1 2 5)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n",
                    "9 + 1 = 10 (left: 5 10 11)\n"
                ],
                "new_ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 9 = 2 (left: 2 4)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 - 9 = 1 (left: 1 5)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n",
                    "1 + 5 = 6 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n",
                    "1 + 5 = 6 (left: 6 9 11)\n11 - 6 = 5 (left: 5 9)\n",
                    "1 + 5 = 6 (left: 6 9 11)\n11 - 9 = 2 (left: 2 6)\n",
                    "1 + 5 = 6 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n",
                    "1 + 5 = 6 (left: 6 9 11)\n6 * 9 = 54 (left: 11 54)\n",
                    "1 + 5 = 6 (left: 6 9 11)\n11 + 9 = 20 (left: 6 20)\n",
                    "1 + 5 = 6 (left: 6 9 11)\n11 + 6 = 17 (left: 9 17)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n1 + 4 = 5 (left: 5 11)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n4 + 11 = 15 (left: 1 15)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n11 - 4 = 7 (left: 1 7)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n11 - 1 = 10 (left: 4 10)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n4 - 1 = 3 (left: 3 11)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n11 * 1 = 11 (left: 4 11)\n",
                    "9 - 5 = 4 (left: 1 4 11)\n4 * 1 = 4 (left: 4 11)\n",
                    "11 - 9 = 2 (left: 1 2 5)\n1 + 2 = 3 (left: 3 5)\n",
                    "11 - 9 = 2 (left: 1 2 5)\n2 + 5 = 7 (left: 1 7)\n",
                    "11 - 9 = 2 (left: 1 2 5)\n5 - 2 = 3 (left: 1 3)\n",
                    "11 - 9 = 2 (left: 1 2 5)\n5 - 1 = 4 (left: 2 4)\n",
                    "11 - 9 = 2 (left: 1 2 5)\n2 - 1 = 1 (left: 1 5)\n",
                    "11 - 9 = 2 (left: 1 2 5)\n5 / 1 = 5 (left: 2 5)\n",
                    "11 - 9 = 2 (left: 1 2 5)\n2 * 1 = 2 (left: 2 5)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n1 + 6 = 7 (left: 7 9)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n9 - 6 = 3 (left: 1 3)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n6 - 1 = 5 (left: 5 9)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n9 - 1 = 8 (left: 6 8)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 6 9)\n",
                    "11 - 5 = 6 (left: 1 6 9)\n9 / 1 = 9 (left: 6 9)\n",
                    "9 + 1 = 10 (left: 5 10 11)\n5 + 10 = 15 (left: 11 15)\n",
                    "9 + 1 = 10 (left: 5 10 11)\n11 + 5 = 16 (left: 10 16)\n",
                    "9 + 1 = 10 (left: 5 10 11)\n11 - 5 = 6 (left: 6 10)\n",
                    "9 + 1 = 10 (left: 5 10 11)\n10 + 5 = 15 (left: 11 15)\n",
                    "9 + 1 = 10 (left: 5 10 11)\n11 - 10 = 1 (left: 1 5)\n",
                    "9 + 1 = 10 (left: 5 10 11)\n10 * 5 = 50 (left: 11 50)\n",
                    "9 + 1 = 10 (left: 5 10 11)\n10 / 5 = 2 (left: 2 11)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    0,
                    50,
                    100,
                    50,
                    0,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 9 11",
                "ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n"
                ],
                "new_ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n5 * 19 = 95 (left: 95)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 / 5 = 3.8 (left: 3.8)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n9 - 7 = 2 (left: 2)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    0,
                    100,
                    0,
                    0,
                    100,
                    50,
                    100,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 9 11",
                "ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\n"
                ],
                "new_ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: 11 + ((5 - 1) + 9) = 24\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (11 + (5 - 1)) = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (11 - 1) + (5 + 9) = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (11 - 1) + 5 = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (11 - 1 + 9) + 5 = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nNo valid operations possible with a single number.\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\nInput: 16\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\nPossible next steps:\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\n16 + 8 = 24 (left: 8 24)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\n16 / 8 = 2 (left: 2 8)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: 11 + ((5 - 1) + 9) = 24\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (11 + (5 - 1)) = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (11 - 1) + (5 + 9) = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (11 - 1) + 5 = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (11 - 1 + 9) + 5 = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14\n",
                    "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 800,
        "ys": [
            "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: 11 + ((5 - 1) + 9) = 24\n",
            "5 - 1 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (11 + (5 - 1)) = 24\n",
            "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (11 - 1) + (5 + 9) = 24\n",
            "11 - 1 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (11 - 1) + 5 = 24\n",
            "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (11 - 1 + 9) + 5 = 24\n",
            "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14\n",
            "11 - 1 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 1588,
            "prompt_tokens": 7771,
            "cost": 0.32841
        },
        "time_spent": 35.58009219169617
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 10 11 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 10 = 12 (left: 11 11 12)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n",
                    "11 + 10 = 21 (left: 2 11 21)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n",
                    "10 * 2 = 20 (left: 11 11 20)\n",
                    "11 / 11 = 1 (left: 1 2 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 10 = 12 (left: 11 11 12)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n",
                    "11 + 10 = 21 (left: 2 11 21)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n",
                    "10 * 2 = 20 (left: 11 11 20)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 10 11 11",
                "ys": [
                    "2 + 10 = 12 (left: 11 11 12)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n",
                    "11 + 10 = 21 (left: 2 11 21)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n",
                    "10 * 2 = 20 (left: 11 11 20)\n"
                ],
                "new_ys": [
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n9 + 10 = 19 (left: 11 19)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n11 - 9 = 2 (left: 2 10)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n11 - 10 = 1 (left: 1 9)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n10 - 9 = 1 (left: 1 11)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n9 * 10 = 90 (left: 11 90)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n11 + 10 = 21 (left: 9 21)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n11 + 9 = 20 (left: 10 20)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n13 - 10 = 3 (left: 3 11)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n13 + 10 = 23 (left: 11 23)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n1 + 2 = 3 (left: 3 11)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 - 1 = 10 (left: 2 10)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n2 + 1 = 3 (left: 3 11)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 / 1 = 11 (left: 2 11)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n2 * 1 = 2 (left: 2 11)\n",
                    "11 + 10 = 21 (left: 2 11 21)\n2 + 11 = 13 (left: 13 21)\n",
                    "11 + 10 = 21 (left: 2 11 21)\n21 + 2 = 23 (left: 11 23)\n",
                    "11 + 10 = 21 (left: 2 11 21)\n21 - 11 = 10 (left: 2 10)\n",
                    "11 + 10 = 21 (left: 2 11 21)\n21 - 2 = 19 (left: 11 19)\n",
                    "11 + 10 = 21 (left: 2 11 21)\n11 - 2 = 9 (left: 9 21)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n11 + 11 = 22 (left: 8 22)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n11 - 8 = 3 (left: 3 11)\n",
                    "10 * 2 = 20 (left: 11 11 20)\n11 + 11 = 22 (left: 20 22)\n",
                    "10 * 2 = 20 (left: 11 11 20)\n20 + 11 = 31 (left: 11 31)\n",
                    "10 * 2 = 20 (left: 11 11 20)\n20 - 11 = 9 (left: 9 11)\n",
                    "10 * 2 = 20 (left: 11 11 20)\n11 * 11 = 121 (left: 20 121)\n",
                    "10 * 2 = 20 (left: 11 11 20)\n20 / 11 \u2248 1.82 (left: 1.82 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n9 + 10 = 19 (left: 11 19)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n11 - 9 = 2 (left: 2 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 10 11 11",
                "ys": [
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n9 + 10 = 19 (left: 11 19)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n11 - 9 = 2 (left: 2 10)\n"
                ],
                "new_ys": [
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n22 - 12 = 10 (left: 10)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 * 22 = 264 (left: 264)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n22 / 12 \u2248 1.83 (left: 1.83)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n23 - 11 = 12 (left: 12)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11)\nInput: 1 11\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11)\nPossible next steps:\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n12 + 121 = 133 (left: 133)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n121 - 12 = 109 (left: 109)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n121 / 12 = 10 (left: 10 1)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n12 * 12 = 144 (left: 144 1)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n9 + 10 = 19 (left: 11 19)\n11 + 19 = 30 (left: 30)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n9 + 10 = 19 (left: 11 19)\n19 - 11 = 8 (left: 8)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n11 - 9 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n11 - 9 = 2 (left: 2 10)\n10 - 2 = 8 (left: 8)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n11 - 9 = 2 (left: 2 10)\n10 / 2 = 5 (left: 5)\n",
                    "11 - 2 = 9 (left: 9 10 11)\n11 - 9 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n22 - 12 = 10 (left: 10)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n23 - 11 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 10 11 11",
                "ys": [
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n22 - 12 = 10 (left: 10)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n23 - 11 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * ((11 - 10) + 11) = 24\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nThere are no possible next steps with only one number.\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 * 8 = 80 (left: 8 14 80)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\nInput: 34\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\nPossible next steps:\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\nNone (target reached)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n22 - 12 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n22 - 12 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n22 - 12 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\nInput: 34\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\nPossible next steps:\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n(No possible steps)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n23 - 11 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n23 - 11 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n23 - 11 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n23 - 11 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "2 + 10 = 12 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n23 - 11 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * ((11 - 10) + 11) = 24\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nThere are no possible next steps with only one number.\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
                ]
            }
        ],
        "idx": 801,
        "ys": [
            "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * ((11 - 10) + 11) = 24\n",
            "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
            "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
            "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nThere are no possible next steps with only one number.\n",
            "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
            "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
            "11 - 10 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 3278,
            "prompt_tokens": 13922,
            "cost": 0.61434
        },
        "time_spent": 34.627610206604004
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 12 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 + 12 = 19 (left: 12 13 19)\n",
                    "12 + 13 = 25 (left: 7 12 25)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n",
                    "13 - 12 = 1 (left: 1 7 12)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n",
                    "12 * 7 = 84 (left: 12 13 84)\n",
                    "13 + 7 = 20 (left: 12 12 20)\n",
                    "12 / 12 = 1 (left: 1 7 13)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 6 12 12)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n",
                    "12 + 13 = 25 (left: 7 12 25)\n",
                    "13 - 12 = 1 (left: 1 7 12)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n",
                    "12 * 7 = 84 (left: 12 13 84)\n",
                    "13 + 7 = 20 (left: 12 12 20)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 12 12 13",
                "ys": [
                    "13 - 7 = 6 (left: 6 12 12)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n",
                    "12 + 13 = 25 (left: 7 12 25)\n",
                    "13 - 12 = 1 (left: 1 7 12)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n",
                    "12 * 7 = 84 (left: 12 13 84)\n",
                    "13 + 7 = 20 (left: 12 12 20)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 * 6 = 72 (left: 12 72)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 12 = 0 (left: 0 6)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n12 + 13 = 25 (left: 19 25)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 + 13 = 32 (left: 12 32)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 13 = 6 (left: 6 12)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 13)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n13 - 12 = 1 (left: 1 19)\n",
                    "12 + 13 = 25 (left: 7 12 25)\n7 + 12 = 19 (left: 19 25)\n",
                    "12 + 13 = 25 (left: 7 12 25)\n25 - 12 = 13 (left: 7 13)\n",
                    "12 + 13 = 25 (left: 7 12 25)\n25 - 7 = 18 (left: 12 18)\n",
                    "12 + 13 = 25 (left: 7 12 25)\n12 + 7 = 19 (left: 19 25)\n",
                    "12 + 13 = 25 (left: 7 12 25)\n25 / 7 = 3 (left: 3 12)\n",
                    "12 + 13 = 25 (left: 7 12 25)\n12 * 7 = 84 (left: 25 84)\n",
                    "12 + 13 = 25 (left: 7 12 25)\n25 + 7 = 32 (left: 12 32)\n",
                    "12 + 13 = 25 (left: 7 12 25)\n25 + 12 = 37 (left: 7 37)\n",
                    "13 - 12 = 1 (left: 1 7 12)\n1 + 7 = 8 (left: 8 12)\n",
                    "13 - 12 = 1 (left: 1 7 12)\n12 + 1 = 13 (left: 7 13)\n",
                    "13 - 12 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 1 5)\n",
                    "13 - 12 = 1 (left: 1 7 12)\n7 - 1 = 6 (left: 6 12)\n",
                    "13 - 12 = 1 (left: 1 7 12)\n12 / 1 = 12 (left: 7 12)\n",
                    "13 - 12 = 1 (left: 1 7 12)\n12 - 1 = 11 (left: 7 11)\n",
                    "13 - 12 = 1 (left: 1 7 12)\n7 * 1 = 7 (left: 7 12)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n5 + 12 = 17 (left: 13 17)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n13 + 12 = 25 (left: 5 25)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n13 - 5 = 8 (left: 8 12)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n13 - 12 = 1 (left: 1 5)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n12 - 5 = 7 (left: 7 13)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n13 * 5 = 65 (left: 12 65)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n12 / 5 = 2 (left: 2 13)\n",
                    "12 * 7 = 84 (left: 12 13 84)\n12 + 13 = 25 (left: 25 84)\n",
                    "12 * 7 = 84 (left: 12 13 84)\n84 / 12 = 7 (left: 7 13)\n",
                    "12 * 7 = 84 (left: 12 13 84)\n84 - 13 = 71 (left: 12 71)\n",
                    "12 * 7 = 84 (left: 12 13 84)\n84 - 12 = 72 (left: 13 72)\n",
                    "12 * 7 = 84 (left: 12 13 84)\n13 - 12 = 1 (left: 1 84)\n",
                    "13 + 7 = 20 (left: 12 12 20)\n12 + 12 = 24 (left: 20 24)\n",
                    "13 + 7 = 20 (left: 12 12 20)\n20 - 12 = 8 (left: 8 12)\n",
                    "13 + 7 = 20 (left: 12 12 20)\n20 + 12 = 32 (left: 12 32)\n",
                    "13 + 7 = 20 (left: 12 12 20)\n12 * 2 = 24 (left: 20 24)\n",
                    "13 + 7 = 20 (left: 12 12 20)\n20 / 2 = 10 (left: 10 12)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 + 13 = 32 (left: 12 32)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 13 = 6 (left: 6 12)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "7 12 12 13",
                "ys": [
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 + 13 = 32 (left: 12 32)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 13 = 6 (left: 6 12)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 13)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\nInput: 2 12\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 * 18 = 216 (left: 216)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 / 12 = 1.5 (left: 1.5)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 / 6 = 4 (left: 4)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 * 24 = 144 (left: 144)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 + 13 = 32 (left: 12 32)\n12 + 32 = 44 (left: 44)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 + 13 = 32 (left: 12 32)\n32 - 12 = 20 (left: 20)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 + 13 = 32 (left: 12 32)\n32 / 12 = 2 (left: 2)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 + 13 = 32 (left: 12 32)\n12 * 32 = 384 (left: 384)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 13 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 13 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 13 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 13 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 13)\n7 + 13 = 20 (left: 20)\n",
                    "7 + 12 = 19 (left: 12 13 19)\n19 - 12 = 7 (left: 7 13)\n13 - 7 = 6 (left: 6)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\n"
                ]
            },
            {
                "step": 3,
                "x": "7 12 12 13",
                "ys": [
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / (13 - 7)) * 12 = 24\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNo valid operations possible with a single number.\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 14 = 24 (left: 8 8)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nInput: 30\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nNone\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\nInput: 18\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n8 * 8 = 64 (left: 12 64)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\nInput: 30\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\nNone (solution found)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / (13 - 7)) * 12 = 24\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNo valid operations possible with a single number.\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 14 = 24 (left: 8 8)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n"
                ]
            }
        ],
        "idx": 802,
        "ys": [
            "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / (13 - 7)) * 12 = 24\n",
            "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
            "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
            "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNo valid operations possible with a single number.\n",
            "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
            "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 14 = 24 (left: 8 8)\n",
            "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 5076,
            "prompt_tokens": 20073,
            "cost": 0.90675
        },
        "time_spent": 37.6067430973053
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 10 10 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 10 = 15 (left: 10 12 15)\n",
                    "10 + 10 = 20 (left: 5 12 20)\n",
                    "12 + 5 = 17 (left: 10 10 17)\n",
                    "10 * 5 = 50 (left: 10 12 50)\n",
                    "12 - 5 = 7 (left: 7 10 10)\n",
                    "12 - 10 = 2 (left: 2 5 10)\n",
                    "12 / 2 = 6 (left: 5 6 10)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n",
                    "10 + 10 = 20 (left: 5 12 20)\n",
                    "12 + 5 = 17 (left: 10 10 17)\n",
                    "10 * 5 = 50 (left: 10 12 50)\n",
                    "12 - 5 = 7 (left: 7 10 10)\n",
                    "12 - 10 = 2 (left: 2 5 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 10 10 12",
                "ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n",
                    "10 + 10 = 20 (left: 5 12 20)\n",
                    "12 + 5 = 17 (left: 10 10 17)\n",
                    "10 * 5 = 50 (left: 10 12 50)\n",
                    "12 - 5 = 7 (left: 7 10 10)\n",
                    "12 - 10 = 2 (left: 2 5 10)\n"
                ],
                "new_ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 10 = 2 (left: 2 2)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n10 + 12 = 22 (left: 15 22)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n15 - 10 = 5 (left: 5 12)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n15 - 12 = 3 (left: 3 10)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n12 - 10 = 2 (left: 2 15)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n15 + 10 = 25 (left: 12 25)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n15 + 12 = 27 (left: 10 27)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n12 * 2 = 24 (left: 10 15 24)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n15 * 2 = 30 (left: 10 12 30)\n",
                    "10 + 10 = 20 (left: 5 12 20)\n5 + 12 = 17 (left: 17 20)\n",
                    "10 + 10 = 20 (left: 5 12 20)\n20 - 12 = 8 (left: 5 8)\n",
                    "10 + 10 = 20 (left: 5 12 20)\n20 - 5 = 15 (left: 12 15)\n",
                    "10 + 10 = 20 (left: 5 12 20)\n12 + 5 = 17 (left: 17 20)\n",
                    "10 + 10 = 20 (left: 5 12 20)\n20 / 5 = 4 (left: 4 12)\n",
                    "10 + 10 = 20 (left: 5 12 20)\n12 * 5 = 60 (left: 20 60)\n",
                    "10 + 10 = 20 (left: 5 12 20)\n20 + 5 = 25 (left: 12 25)\n",
                    "10 + 10 = 20 (left: 5 12 20)\n20 + 12 = 32 (left: 5 32)\n",
                    "12 + 5 = 17 (left: 10 10 17)\n10 + 10 = 20 (left: 17 20)\n",
                    "12 + 5 = 17 (left: 10 10 17)\n17 - 10 = 7 (left: 7 10)\n",
                    "12 + 5 = 17 (left: 10 10 17)\n17 + 10 = 27 (left: 10 27)\n",
                    "12 + 5 = 17 (left: 10 10 17)\n10 * 10 = 100 (left: 17 100)\n",
                    "10 * 5 = 50 (left: 10 12 50)\n10 + 12 = 22 (left: 22 50)\n",
                    "10 * 5 = 50 (left: 10 12 50)\n50 - 12 = 38 (left: 10 38)\n",
                    "10 * 5 = 50 (left: 10 12 50)\n50 - 10 = 40 (left: 12 40)\n",
                    "10 * 5 = 50 (left: 10 12 50)\n12 - 10 = 2 (left: 2 50)\n",
                    "10 * 5 = 50 (left: 10 12 50)\n50 / 10 = 5 (left: 5 12)\n",
                    "10 * 5 = 50 (left: 10 12 50)\n12 * 10 = 120 (left: 50 120)\n",
                    "10 * 5 = 50 (left: 10 12 50)\n50 + 10 = 60 (left: 12 60)\n",
                    "10 * 5 = 50 (left: 10 12 50)\n50 + 12 = 62 (left: 10 62)\n",
                    "12 - 5 = 7 (left: 7 10 10)\n7 + 10 = 17 (left: 10 17)\n",
                    "12 - 5 = 7 (left: 7 10 10)\n10 + 10 = 20 (left: 7 20)\n",
                    "12 - 5 = 7 (left: 7 10 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "12 - 5 = 7 (left: 7 10 10)\n10 / 10 = 1 (left: 1 7)\n",
                    "12 - 5 = 7 (left: 7 10 10)\n10 * 7 = 70 (left: 10 70)\n",
                    "12 - 10 = 2 (left: 2 5 10)\n2 + 5 = 7 (left: 7 10)\n",
                    "12 - 10 = 2 (left: 2 5 10)\n10 + 2 = 12 (left: 5 12)\n",
                    "12 - 10 = 2 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n",
                    "12 - 10 = 2 (left: 2 5 10)\n10 / 2 = 5 (left: 5 5)\n",
                    "12 - 10 = 2 (left: 2 5 10)\n5 - 2 = 3 (left: 3 10)\n",
                    "12 - 10 = 2 (left: 2 5 10)\n10 - 2 = 8 (left: 5 8)\n",
                    "12 - 10 = 2 (left: 2 5 10)\n5 * 2 = 10 (left: 10 10)\n"
                ],
                "values": [
                    100,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n10 + 12 = 22 (left: 15 22)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n15 - 10 = 5 (left: 5 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 10 10 12",
                "ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n10 + 12 = 22 (left: 15 22)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n15 - 10 = 5 (left: 5 12)\n"
                ],
                "new_ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 - 10 = 0 (left: 0)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 * 10 = 100 (left: 100)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 / 10 = 1 (left: 1)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n10 / 2 = 5 (left: 5 6)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)\n5 + 12 = 17 (left: 17)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)\n12 - 5 = 7 (left: 7)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)\n12 / 5 = 2.4 (invalid)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)\n5 * 12 = 60 (left: 60)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n10 + 12 = 22 (left: 15 22)\n15 + 22 = 37 (left: 37)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n10 + 12 = 22 (left: 15 22)\n22 - 15 = 7 (left: 7)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n10 + 12 = 22 (left: 15 22)\n15 * 22 = 330 (left: 330)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n10 + 12 = 22 (left: 15 22)\n22 / 15 \u2248 1.47 (left: 1.47)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n15 - 10 = 5 (left: 5 12)\n5 + 12 = 17 (left: 17)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n15 - 10 = 5 (left: 5 12)\n12 - 5 = 7 (left: 7)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n15 - 10 = 5 (left: 5 12)\n12 / 5 = 2.4 (left: 2.4)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n15 - 10 = 5 (left: 5 12)\n5 * 12 = 60 (left: 60)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)\n5 + 12 = 17 (left: 17)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n10 + 12 = 22 (left: 15 22)\n15 + 22 = 37 (left: 37)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n15 - 10 = 5 (left: 5 12)\n5 + 12 = 17 (left: 17)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 10 10 12",
                "ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)\n5 + 12 = 17 (left: 17)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n10 + 12 = 22 (left: 15 22)\n15 + 22 = 37 (left: 37)\n",
                    "5 + 10 = 15 (left: 10 12 15)\n15 - 10 = 5 (left: 5 12)\n5 + 12 = 17 (left: 17)\n"
                ],
                "new_ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (10 / 5 + 10) + 12 = 24\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (10 / 5 + 10) + 12 = 24\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nInput: 20\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nPossible next steps:\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nNone (target reached)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\nInput: 16\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\nPossible next steps:\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 - 8 = 8 (left: 8 8 16)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 / 8 = 2 (left: 2 8 16)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)\n5 + 12 = 17 (left: 17)\nInput: 17\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)\n5 + 12 = 17 (left: 17)\nPossible next steps:\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)\n5 + 12 = 17 (left: 17)\nNone\n",
                    "5 + 10 = 15 (left: 10 12 15)\n10 + 12 = 22 (left: 15 22)\n15 + 22 = 37 (left: 37)\nInput: 37\n",
                    "5 + 10 = 15 (left: 10 12 15)\n10 + 12 = 22 (left: 15 22)\n15 + 22 = 37 (left: 37)\nPossible next steps:\n",
                    "5 + 10 = 15 (left: 10 12 15)\n10 + 12 = 22 (left: 15 22)\n15 + 22 = 37 (left: 37)\nNone\n",
                    "5 + 10 = 15 (left: 10 12 15)\n15 - 10 = 5 (left: 5 12)\n5 + 12 = 17 (left: 17)\nInput: 17\n",
                    "5 + 10 = 15 (left: 10 12 15)\n15 - 10 = 5 (left: 5 12)\n5 + 12 = 17 (left: 17)\nPossible next steps:\n",
                    "5 + 10 = 15 (left: 10 12 15)\n15 - 10 = 5 (left: 5 12)\n5 + 12 = 17 (left: 17)\nNone\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (10 / 5 + 10) + 12 = 24\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (10 / 5 + 10) + 12 = 24\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nInput: 20\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nPossible next steps:\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nNone (target reached)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\nInput: 16\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 803,
        "ys": [
            "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (10 / 5 + 10) + 12 = 24\n",
            "10 / 5 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (10 / 5 + 10) + 12 = 24\n",
            "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nInput: 20\n",
            "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nPossible next steps:\n",
            "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nNone (target reached)\n",
            "10 / 5 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\nInput: 16\n",
            "10 / 5 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 6822,
            "prompt_tokens": 26629,
            "cost": 1.2081899999999999
        },
        "time_spent": 37.16250228881836
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 6 8)\n",
                    "6 + 1 = 7 (left: 5 7 8)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n",
                    "5 + 1 = 6 (left: 6 6 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n",
                    "6 - 1 = 5 (left: 5 5 8)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n",
                    "6 - 5 = 1 (left: 1 1 8)\n",
                    "5 * 1 = 5 (left: 5 6 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 6 6 8)\n",
                    "6 + 1 = 7 (left: 5 7 8)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n",
                    "5 + 1 = 6 (left: 6 6 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n",
                    "6 - 1 = 5 (left: 5 5 8)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 6 8",
                "ys": [
                    "1 + 5 = 6 (left: 6 6 8)\n",
                    "6 + 1 = 7 (left: 5 7 8)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n",
                    "5 + 1 = 6 (left: 6 6 8)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n",
                    "6 - 1 = 5 (left: 5 5 8)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 + 6 = 14 (left: 6 14)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n",
                    "6 + 1 = 7 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n",
                    "6 + 1 = 7 (left: 5 7 8)\n8 + 5 = 13 (left: 7 13)\n",
                    "6 + 1 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 7)\n",
                    "6 + 1 = 7 (left: 5 7 8)\n8 - 7 = 1 (left: 1 5)\n",
                    "6 + 1 = 7 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n",
                    "6 + 1 = 7 (left: 5 7 8)\n8 * 7 = 56 (left: 5 56)\n",
                    "6 + 1 = 7 (left: 5 7 8)\n7 * 5 = 35 (left: 8 35)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n9 - 6 = 3 (left: 3 5)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n6 - 5 = 1 (left: 1 9)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n5 * 6 = 30 (left: 9 30)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n9 + 5 = 14 (left: 6 14)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n9 + 6 = 15 (left: 5 15)\n",
                    "5 + 1 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n",
                    "5 + 1 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n",
                    "5 + 1 = 6 (left: 6 6 8)\n8 + 6 = 14 (left: 6 14)\n",
                    "5 + 1 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n7 - 5 = 2 (left: 2 6)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n7 - 6 = 1 (left: 1 5)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n6 * 7 = 42 (left: 5 42)\n",
                    "8 - 1 = 7 (left: 5 6 7)\n7 / 5 = 1.4 (left: 1.4 6)\n",
                    "6 - 1 = 5 (left: 5 5 8)\n5 + 5 = 10 (left: 8 10)\n",
                    "6 - 1 = 5 (left: 5 5 8)\n5 * 5 = 25 (left: 8 25)\n",
                    "6 - 1 = 5 (left: 5 5 8)\n8 + 5 = 13 (left: 5 13)\n",
                    "6 - 1 = 5 (left: 5 5 8)\n8 - 5 = 3 (left: 3 5)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n3 + 6 = 9 (left: 1 9)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n6 - 3 = 3 (left: 1 3)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n6 - 1 = 5 (left: 3 5)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n3 - 1 = 2 (left: 2 6)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n6 / 3 = 2 (left: 1 2)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n3 * 1 = 3 (left: 3 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 + 6 = 14 (left: 6 14)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 6 8",
                "ys": [
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 + 6 = 14 (left: 6 14)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 + 6 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 + 6 = 14 (left: 6 14)\n14 - 6 = 8 (left: 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 + 6 = 14 (left: 6 14)\n14 / 2 = 7 (left: 6 7)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 + 6 = 14 (left: 6 14)\n6 * 2 = 12 (left: 12 14)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n2 + 6 = 8 (left: 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n6 - 2 = 4 (left: 4)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n6 / 2 = 3 (left: 3)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 + 36 = 44 (left: 44)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n36 - 8 = 28 (left: 28)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n36 / 8 = 4.5 (left: 4.5)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 * 36 = 288 (left: 288)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 6 8",
                "ys": [
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 / 2) * (1 + 5) = 24\n",
                    "8 + 1 = 9 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((8 + 1) - 5) * 6 = 24\n",
                    "8 - 5 = 3 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + (8 - 5)) * 6 = 24\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nInput: 10\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "8 + 1 = 9 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "8 - 5 = 3 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 8 24)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\nInput: 20\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\nNone (goal reached)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 / 2) * (1 + 5) = 24\n",
                    "8 + 1 = 9 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((8 + 1) - 5) * 6 = 24\n",
                    "8 - 5 = 3 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + (8 - 5)) * 6 = 24\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nInput: 10\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
                ]
            }
        ],
        "idx": 804,
        "ys": [
            "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 / 2) * (1 + 5) = 24\n",
            "8 + 1 = 9 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((8 + 1) - 5) * 6 = 24\n",
            "8 - 5 = 3 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + (8 - 5)) * 6 = 24\n",
            "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nInput: 10\n",
            "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nPossible next steps:\n",
            "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n",
            "1 + 5 = 6 (left: 6 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 8593,
            "prompt_tokens": 33590,
            "cost": 1.52328
        },
        "time_spent": 37.37741208076477
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 3 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n",
                    "11 + 2 = 13 (left: 2 3 13)\n",
                    "2 * 2 = 4 (left: 3 4 11)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n",
                    "11 - 3 = 8 (left: 2 2 8)\n",
                    "11 / 11 = 1 (left: 1 2 2 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n",
                    "11 + 2 = 13 (left: 2 3 13)\n",
                    "2 * 2 = 4 (left: 3 4 11)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n",
                    "11 - 3 = 8 (left: 2 2 8)\n",
                    "11 / 11 = 1 (left: 1 2 2 3)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 3 11",
                "ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n",
                    "11 + 2 = 13 (left: 2 3 13)\n",
                    "2 * 2 = 4 (left: 3 4 11)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n",
                    "11 - 3 = 8 (left: 2 2 8)\n",
                    "11 / 11 = 1 (left: 1 2 2 3)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 4 8)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 11 12)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 / 3 = 3 (left: 3 4) (remainder 2)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n2 + 5 = 7 (left: 7 11)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n11 + 2 = 13 (left: 5 13)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n11 - 5 = 6 (left: 2 6)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n11 - 2 = 9 (left: 5 9)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n5 - 2 = 3 (left: 3 11)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n",
                    "11 + 2 = 13 (left: 2 3 13)\n2 + 3 = 5 (left: 5 13)\n",
                    "11 + 2 = 13 (left: 2 3 13)\n13 + 2 = 15 (left: 3 15)\n",
                    "11 + 2 = 13 (left: 2 3 13)\n13 + 3 = 16 (left: 2 16)\n",
                    "11 + 2 = 13 (left: 2 3 13)\n13 - 3 = 10 (left: 2 10)\n",
                    "11 + 2 = 13 (left: 2 3 13)\n13 - 2 = 11 (left: 3 11)\n",
                    "11 + 2 = 13 (left: 2 3 13)\n3 - 2 = 1 (left: 1 13)\n",
                    "11 + 2 = 13 (left: 2 3 13)\n3 * 2 = 6 (left: 6 13)\n",
                    "11 + 2 = 13 (left: 2 3 13)\n13 / 1 = 13 (left: 2 3)\n",
                    "2 * 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "2 * 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n",
                    "2 * 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n",
                    "2 * 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 4 8)\n",
                    "2 * 2 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 11 12)\n",
                    "2 * 2 = 4 (left: 3 4 11)\n11 + 3 = 14 (left: 4 14)\n",
                    "2 * 2 = 4 (left: 3 4 11)\n11 / 11 = 1 (left: 1 3 4)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n1 + 2 = 3 (left: 3 11)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n2 - 1 = 1 (left: 1 11)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 - 1 = 10 (left: 2 10)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 / 1 = 11 (left: 2 11)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 * 2 = 22 (left: 1 22)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n",
                    "11 - 3 = 8 (left: 2 2 8)\n2 + 2 = 4 (left: 4 8)\n",
                    "11 - 3 = 8 (left: 2 2 8)\n2 * 2 = 4 (left: 4 8)\n",
                    "11 - 3 = 8 (left: 2 2 8)\n8 + 2 = 10 (left: 2 10)\n",
                    "11 - 3 = 8 (left: 2 2 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "11 - 3 = 8 (left: 2 2 8)\n8 / 2 = 4 (left: 2 4)\n",
                    "11 / 11 = 1 (left: 1 2 2 3)\n1 + 2 = 3 (left: 2 3 3)\n",
                    "11 / 11 = 1 (left: 1 2 2 3)\n2 + 2 = 4 (left: 1 3 4)\n",
                    "11 / 11 = 1 (left: 1 2 2 3)\n3 + 2 = 5 (left: 1 2 5)\n",
                    "11 / 11 = 1 (left: 1 2 2 3)\n2 - 1 = 1 (left: 1 2 3)\n",
                    "11 / 11 = 1 (left: 1 2 2 3)\n3 - 2 = 1 (left: 1 1 2)\n",
                    "11 / 11 = 1 (left: 1 2 2 3)\n3 - 1 = 2 (left: 2 2 2)\n",
                    "11 / 11 = 1 (left: 1 2 2 3)\n2 * 2 = 4 (left: 1 3 4)\n",
                    "11 / 11 = 1 (left: 1 2 2 3)\n3 * 2 = 6 (left: 1 2 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 4 8)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 11 12)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n2 + 5 = 7 (left: 7 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 3 11",
                "ys": [
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 4 8)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 11 12)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n2 + 5 = 7 (left: 7 11)\n"
                ],
                "new_ys": [
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n11 - 7 = 4 (left: 4)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 * 11 = 77 (left: 77)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n11 / 7 = 1.57 (invalid)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n3 + 15 = 18 (left: 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n15 - 3 = 12 (left: 12)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n15 / 3 = 5 (left: 5)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n3 * 15 = 45 (left: 45)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\nInput: 3 7\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n3 + 7 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n7 - 3 = 4 (left: 4)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n3 * 7 = 21 (left: 21)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 4 8)\n4 + 8 = 12 (left: 12)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 4 8)\n8 - 4 = 4 (left: 4)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 4 8)\n4 * 8 = 32 (left: 32)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 4 8)\n8 / 4 = 2 (left: 2)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 11 12)\n12 - 11 = 1 (left: 1)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n2 + 5 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n2 + 5 = 7 (left: 7 11)\n11 - 7 = 4 (left: 4)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n2 + 5 = 7 (left: 7 11)\n7 * 11 = 77 (left: 77)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n2 + 5 = 7 (left: 7 11)\n11 / 7 = 1.57 (invalid)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n3 + 15 = 18 (left: 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n15 - 3 = 12 (left: 12)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n3 + 7 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 3 11",
                "ys": [
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n3 + 15 = 18 (left: 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n15 - 3 = 12 (left: 12)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n3 + 7 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * ((3 - 2) + 11) = 24\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n(There are no possible next steps with only one number.)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 10\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\nPossible next steps:\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\nInput: 18\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n3 + 15 = 18 (left: 18)\nInput: 18\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n3 + 15 = 18 (left: 18)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n3 + 15 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n3 + 15 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n3 + 15 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n15 - 3 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n15 - 3 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n3 + 7 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n3 + 7 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n3 + 7 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n3 + 7 = 10 (left: 10)\n10 * 8 = 80 (left: 14 80)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * ((3 - 2) + 11) = 24\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n(There are no possible next steps with only one number.)\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 10\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\nPossible next steps:\n",
                    "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n"
                ]
            }
        ],
        "idx": 805,
        "ys": [
            "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * ((3 - 2) + 11) = 24\n",
            "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
            "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
            "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n(There are no possible next steps with only one number.)\n",
            "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 10\n",
            "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\nPossible next steps:\n",
            "3 - 2 = 1 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 10607,
            "prompt_tokens": 39743,
            "cost": 1.82871
        },
        "time_spent": 38.471681118011475
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 5 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 5 11)\n",
                    "5 + 2 = 7 (left: 2 7 11)\n",
                    "11 + 2 = 13 (left: 2 5 13)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n",
                    "5 - 2 = 3 (left: 2 3 11)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n",
                    "11 / 2 = 5.5 (left: 2 5 5.5)\n",
                    "5 * 2 = 10 (left: 2 10 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    50
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 2 2 6)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n",
                    "5 + 2 = 7 (left: 2 7 11)\n",
                    "11 + 2 = 13 (left: 2 5 13)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n",
                    "5 - 2 = 3 (left: 2 3 11)\n",
                    "5 * 2 = 10 (left: 2 10 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 5 11",
                "ys": [
                    "11 - 5 = 6 (left: 2 2 6)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n",
                    "5 + 2 = 7 (left: 2 7 11)\n",
                    "11 + 2 = 13 (left: 2 5 13)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n",
                    "5 - 2 = 3 (left: 2 3 11)\n",
                    "5 * 2 = 10 (left: 2 10 11)\n"
                ],
                "new_ys": [
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n6 + 2 = 8 (left: 2 8)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n6 - 2 = 4 (left: 2 4)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n6 / 2 = 3 (left: 2 3)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 + 5 = 16 (left: 4 16)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 + 4 = 15 (left: 5 15)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 * 4 = 20 (left: 11 20)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 / 11 = 1 (left: 1 4 5)\n",
                    "5 + 2 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n",
                    "5 + 2 = 7 (left: 2 7 11)\n11 - 7 = 4 (left: 2 4)\n",
                    "5 + 2 = 7 (left: 2 7 11)\n11 - 2 = 9 (left: 7 9)\n",
                    "5 + 2 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n",
                    "5 + 2 = 7 (left: 2 7 11)\n11 + 2 = 13 (left: 7 13)\n",
                    "5 + 2 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n",
                    "5 + 2 = 7 (left: 2 7 11)\n11 / 11 = 1 (left: 1 2 7)\n",
                    "11 + 2 = 13 (left: 2 5 13)\n2 + 5 = 7 (left: 7 13)\n",
                    "11 + 2 = 13 (left: 2 5 13)\n13 + 2 = 15 (left: 5 15)\n",
                    "11 + 2 = 13 (left: 2 5 13)\n13 - 5 = 8 (left: 2 8)\n",
                    "11 + 2 = 13 (left: 2 5 13)\n13 - 2 = 11 (left: 5 11)\n",
                    "11 + 2 = 13 (left: 2 5 13)\n5 - 2 = 3 (left: 3 13)\n",
                    "11 + 2 = 13 (left: 2 5 13)\n5 * 2 = 10 (left: 10 13)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 11 = 16 (left: 4 16)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 11 20)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 * 11 = 55 (left: 4 55)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 / 11 = 1 (left: 1 4 5)\n",
                    "5 - 2 = 3 (left: 2 3 11)\n2 + 3 = 5 (left: 5 11)\n",
                    "5 - 2 = 3 (left: 2 3 11)\n3 + 11 = 14 (left: 2 14)\n",
                    "5 - 2 = 3 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n",
                    "5 - 2 = 3 (left: 2 3 11)\n11 - 2 = 9 (left: 3 9)\n",
                    "5 - 2 = 3 (left: 2 3 11)\n3 - 2 = 1 (left: 1 11)\n",
                    "5 - 2 = 3 (left: 2 3 11)\n2 * 3 = 6 (left: 6 11)\n",
                    "5 - 2 = 3 (left: 2 3 11)\n11 / 3 = 3.67 (left: 2 3.67)\n",
                    "5 * 2 = 10 (left: 2 10 11)\n2 + 10 = 12 (left: 11 12)\n",
                    "5 * 2 = 10 (left: 2 10 11)\n11 + 2 = 13 (left: 10 13)\n",
                    "5 * 2 = 10 (left: 2 10 11)\n11 - 2 = 9 (left: 9 10)\n",
                    "5 * 2 = 10 (left: 2 10 11)\n10 + 2 = 12 (left: 11 12)\n",
                    "5 * 2 = 10 (left: 2 10 11)\n10 - 2 = 8 (left: 8 11)\n",
                    "5 * 2 = 10 (left: 2 10 11)\n11 - 10 = 1 (left: 1 2)\n",
                    "5 * 2 = 10 (left: 2 10 11)\n10 / 2 = 5 (left: 5 11)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    0,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n6 + 2 = 8 (left: 2 8)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 5 11",
                "ys": [
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n6 + 2 = 8 (left: 2 8)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7)\n"
                ],
                "new_ys": [
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n6 + 2 = 8 (left: 2 8)\n2 + 8 = 10 (left: 10)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n6 + 2 = 8 (left: 2 8)\n8 - 2 = 6 (left: 6)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n6 + 2 = 8 (left: 2 8)\n2 * 8 = 16 (left: 16)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n6 + 2 = 8 (left: 2 8)\n8 / 2 = 4 (left: 4)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n11 - 9 = 2 (left: 2)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7)\nInput: 5 7\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7)\n5 + 7 = 12 (left: 12)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7)\n7 - 5 = 2 (left: 2)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7)\n5 * 7 = 35 (left: 35)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 5 11",
                "ys": [
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 + 2) * (11 - 5) = 24\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 2) * (11 - 5) = 24\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 + 2) * (11 - 5) = 24\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 2) * (11 - 5) = 24\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 8 24)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 + 2) * (11 - 5) = 24\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 2) * (11 - 5) = 24\n",
                    "2 + 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 + 2) * (11 - 5) = 24\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 2) * (11 - 5) = 24\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n"
                ]
            }
        ],
        "idx": 806,
        "ys": [
            "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 + 2) * (11 - 5) = 24\n",
            "11 - 5 = 6 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 2) * (11 - 5) = 24\n",
            "2 + 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 + 2) * (11 - 5) = 24\n",
            "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 2) * (11 - 5) = 24\n",
            "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
            "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
            "11 - 5 = 6 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 12441,
            "prompt_tokens": 47109,
            "cost": 2.15973
        },
        "time_spent": 37.193604707717896
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 5 = 7 (left: 7 8 9)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n",
                    "8 + 2 = 10 (left: 5 9 10)\n",
                    "9 + 2 = 11 (left: 5 8 11)\n",
                    "5 + 8 = 13 (left: 2 9 13)\n",
                    "9 + 5 = 14 (left: 2 8 14)\n",
                    "8 + 9 = 17 (left: 2 5 17)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n",
                    "8 - 2 = 6 (left: 5 6 9)\n",
                    "9 - 5 = 4 (left: 2 4 8)\n",
                    "8 - 5 = 3 (left: 2 3 9)\n"
                ],
                "values": [
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 5 = 7 (left: 7 8 9)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n",
                    "8 + 2 = 10 (left: 5 9 10)\n",
                    "9 + 2 = 11 (left: 5 8 11)\n",
                    "5 + 8 = 13 (left: 2 9 13)\n",
                    "9 + 5 = 14 (left: 2 8 14)\n",
                    "8 + 9 = 17 (left: 2 5 17)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 8 9",
                "ys": [
                    "2 + 5 = 7 (left: 7 8 9)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n",
                    "8 + 2 = 10 (left: 5 9 10)\n",
                    "9 + 2 = 11 (left: 5 8 11)\n",
                    "5 + 8 = 13 (left: 2 9 13)\n",
                    "9 + 5 = 14 (left: 2 8 14)\n",
                    "8 + 9 = 17 (left: 2 5 17)\n"
                ],
                "new_ys": [
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n9 - 8 = 1 (left: 1 7)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 * 8 = 56 (left: 9 56)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n9 - 8 = 1 (left: 1 7)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 * 8 = 56 (left: 9 56)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n",
                    "8 + 2 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "8 + 2 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "8 + 2 = 10 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)\n",
                    "8 + 2 = 10 (left: 5 9 10)\n10 - 9 = 1 (left: 1 5)\n",
                    "8 + 2 = 10 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n",
                    "8 + 2 = 10 (left: 5 9 10)\n10 / 5 = 2 (left: 2 9)\n",
                    "8 + 2 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n",
                    "9 + 2 = 11 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n",
                    "9 + 2 = 11 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n",
                    "9 + 2 = 11 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5)\n",
                    "9 + 2 = 11 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n",
                    "9 + 2 = 11 (left: 5 8 11)\n8 + 5 = 13 (left: 11 13)\n",
                    "9 + 2 = 11 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n",
                    "9 + 2 = 11 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n",
                    "5 + 8 = 13 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n",
                    "5 + 8 = 13 (left: 2 9 13)\n13 + 2 = 15 (left: 9 15)\n",
                    "5 + 8 = 13 (left: 2 9 13)\n13 - 9 = 4 (left: 2 4)\n",
                    "5 + 8 = 13 (left: 2 9 13)\n13 - 2 = 11 (left: 9 11)\n",
                    "5 + 8 = 13 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n",
                    "9 + 5 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 10 14)\n",
                    "9 + 5 = 14 (left: 2 8 14)\n8 + 14 = 22 (left: 2 22)\n",
                    "9 + 5 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6)\n",
                    "9 + 5 = 14 (left: 2 8 14)\n14 - 2 = 12 (left: 8 12)\n",
                    "9 + 5 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8)\n",
                    "9 + 5 = 14 (left: 2 8 14)\n8 / 2 = 4 (left: 4 14)\n",
                    "9 + 5 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 14)\n",
                    "9 + 5 = 14 (left: 2 8 14)\n14 * 2 = 28 (left: 8 28)\n",
                    "8 + 9 = 17 (left: 2 5 17)\n2 + 5 = 7 (left: 7 17)\n",
                    "8 + 9 = 17 (left: 2 5 17)\n17 + 2 = 19 (left: 5 19)\n",
                    "8 + 9 = 17 (left: 2 5 17)\n17 - 5 = 12 (left: 2 12)\n",
                    "8 + 9 = 17 (left: 2 5 17)\n17 - 2 = 15 (left: 5 15)\n",
                    "8 + 9 = 17 (left: 2 5 17)\n5 - 2 = 3 (left: 3 17)\n",
                    "8 + 9 = 17 (left: 2 5 17)\n17 / 2 = 8.5 (left: 5 8.5)\n",
                    "8 + 9 = 17 (left: 2 5 17)\n5 * 2 = 10 (left: 10 17)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    0,
                    0,
                    100,
                    100,
                    100,
                    50,
                    50,
                    0,
                    0,
                    100,
                    100,
                    100,
                    100,
                    50,
                    0,
                    50,
                    50,
                    100,
                    100,
                    100,
                    50,
                    50,
                    100,
                    100,
                    50,
                    100,
                    100,
                    0,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    100,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n",
                    "8 + 2 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 8 9",
                "ys": [
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n",
                    "8 + 2 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n"
                ],
                "new_ys": [
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 * 2 = 16 (left: 16 16)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 * 2 = 16 (left: 16 16)\n",
                    "8 + 2 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "8 + 2 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    50,
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    100,
                    50,
                    100,
                    0,
                    0,
                    0,
                    100,
                    0
                ],
                "select_new_ys": [
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "8 + 2 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 5 8 9",
                "ys": [
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "8 + 2 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (2 + 5 + 8) + 9 = 24\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (2 + 5) + (8 + 9) = 24\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (2 + 5 + 9) + 8 = 24\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + ((5 + 2) + 8) = 24\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (5 + 2) + (8 + 9) = 24\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: 8 + ((5 + 2) + 9) = 24\n",
                    "8 + 2 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (8 + 2) + (5 + 9) = 24\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    1000
                ],
                "select_new_ys": [
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (2 + 5 + 8) + 9 = 24\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (2 + 5) + (8 + 9) = 24\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (2 + 5 + 9) + 8 = 24\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + ((5 + 2) + 8) = 24\n",
                    "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (5 + 2) + (8 + 9) = 24\n",
                    "5 + 2 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: 8 + ((5 + 2) + 9) = 24\n",
                    "8 + 2 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (8 + 2) + (5 + 9) = 24\n"
                ]
            }
        ],
        "idx": 807,
        "ys": [
            "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (2 + 5 + 8) + 9 = 24\n",
            "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (2 + 5) + (8 + 9) = 24\n",
            "2 + 5 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (2 + 5 + 9) + 8 = 24\n",
            "5 + 2 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + ((5 + 2) + 8) = 24\n",
            "5 + 2 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (5 + 2) + (8 + 9) = 24\n",
            "5 + 2 = 7 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: 8 + ((5 + 2) + 9) = 24\n",
            "8 + 2 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (8 + 2) + (5 + 9) = 24\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 14112,
            "prompt_tokens": 55690,
            "cost": 2.51742
        },
        "time_spent": 35.933316230773926
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 4 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 4 5 11)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n",
                    "11 + 2 = 13 (left: 3 4 13)\n",
                    "2 * 3 = 6 (left: 4 6 11)\n",
                    "4 - 2 = 2 (left: 2 3 11)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n",
                    "11 - 4 = 7 (left: 2 3 7)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "11 / 11 = 1 (left: 1 2 3 4)\n",
                    "2 + 3 = 5 (left: 4 5 11)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n",
                    "11 + 2 = 13 (left: 3 4 13)\n",
                    "2 * 3 = 6 (left: 4 6 11)\n",
                    "4 - 2 = 2 (left: 2 3 11)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 4 11",
                "ys": [
                    "11 / 11 = 1 (left: 1 2 3 4)\n",
                    "2 + 3 = 5 (left: 4 5 11)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n",
                    "11 + 2 = 13 (left: 3 4 13)\n",
                    "2 * 3 = 6 (left: 4 6 11)\n",
                    "4 - 2 = 2 (left: 2 3 11)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n"
                ],
                "new_ys": [
                    "11 / 11 = 1 (left: 1 2 3 4)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 + 1 = 4 (left: 2 4 4)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 + 1 = 5 (left: 2 3 5)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n2 + 1 = 3 (left: 3 3 4)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 + 2 = 5 (left: 1 4 5)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 + 2 = 6 (left: 1 3 6)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 + 1 = 4 (left: 2 4 4)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 + 3 = 7 (left: 1 2 7)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 - 1 = 3 (left: 2 3 3)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 - 2 = 2 (left: 1 2 3)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 - 1 = 2 (left: 2 2 4)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 - 3 = 1 (left: 1 1 2)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n2 * 1 = 2 (left: 2 3 4)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 1 = 3 (left: 2 3 4)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 1 = 4 (left: 1 2 4)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n2 * 2 = 4 (left: 1 3 4)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 3 = 9 (left: 1 4 9)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 3 = 12 (left: 1 2 12)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 / 2 = 2 (left: 1 2 3)\n",
                    "2 + 3 = 5 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "2 + 3 = 5 (left: 4 5 11)\n5 + 11 = 16 (left: 4 16)\n",
                    "2 + 3 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "2 + 3 = 5 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7)\n",
                    "2 + 3 = 5 (left: 4 5 11)\n4 * 5 = 20 (left: 11 20)\n",
                    "2 + 3 = 5 (left: 4 5 11)\n11 + 4 = 15 (left: 5 15)\n",
                    "2 + 3 = 5 (left: 4 5 11)\n11 + 5 = 16 (left: 4 16)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 - 7 = 4 (left: 2 4)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 - 2 = 9 (left: 7 9)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 + 2 = 13 (left: 7 13)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n",
                    "11 + 2 = 13 (left: 3 4 13)\n3 + 4 = 7 (left: 7 13)\n",
                    "11 + 2 = 13 (left: 3 4 13)\n13 + 3 = 16 (left: 4 16)\n",
                    "11 + 2 = 13 (left: 3 4 13)\n13 - 3 = 10 (left: 4 10)\n",
                    "11 + 2 = 13 (left: 3 4 13)\n4 * 3 = 12 (left: 12 13)\n",
                    "11 + 2 = 13 (left: 3 4 13)\n13 - 4 = 9 (left: 3 9)\n",
                    "11 + 2 = 13 (left: 3 4 13)\n13 / 4 = 3.25 (left: 3 3.25)\n",
                    "2 * 3 = 6 (left: 4 6 11)\n4 + 6 = 10 (left: 10 11)\n",
                    "2 * 3 = 6 (left: 4 6 11)\n6 - 4 = 2 (left: 2 11)\n",
                    "2 * 3 = 6 (left: 4 6 11)\n11 - 6 = 5 (left: 4 5)\n",
                    "2 * 3 = 6 (left: 4 6 11)\n11 - 4 = 7 (left: 6 7)\n",
                    "2 * 3 = 6 (left: 4 6 11)\n4 * 6 = 24 (left: 11 24)\n",
                    "2 * 3 = 6 (left: 4 6 11)\n11 + 4 = 15 (left: 6 15)\n",
                    "2 * 3 = 6 (left: 4 6 11)\n11 + 6 = 17 (left: 4 17)\n",
                    "4 - 2 = 2 (left: 2 3 11)\n2 + 3 = 5 (left: 5 11)\n",
                    "4 - 2 = 2 (left: 2 3 11)\n3 + 11 = 14 (left: 2 14)\n",
                    "4 - 2 = 2 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n",
                    "4 - 2 = 2 (left: 2 3 11)\n11 - 2 = 9 (left: 3 9)\n",
                    "4 - 2 = 2 (left: 2 3 11)\n2 * 3 = 6 (left: 6 11)\n",
                    "4 - 2 = 2 (left: 2 3 11)\n3 * 11 = 33 (left: 2 33)\n",
                    "4 - 2 = 2 (left: 2 3 11)\n11 / 11 = 1 (left: 1 2 3)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n2 + 4 = 6 (left: 6 8)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n4 + 8 = 12 (left: 2 12)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n8 - 4 = 4 (left: 2 4)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n8 / 2 = 4 (left: 4 4)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n4 - 2 = 2 (left: 2 8)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n2 * 4 = 8 (left: 8 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    100,
                    100,
                    0,
                    50,
                    100,
                    100,
                    50,
                    100,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    0,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "11 / 11 = 1 (left: 1 2 3 4)\n2 * 1 = 2 (left: 2 3 4)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 1 = 3 (left: 2 3 4)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 3 = 12 (left: 1 2 12)\n",
                    "2 + 3 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n4 + 8 = 12 (left: 2 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 4 11",
                "ys": [
                    "11 / 11 = 1 (left: 1 2 3 4)\n2 * 1 = 2 (left: 2 3 4)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 1 = 3 (left: 2 3 4)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 3 = 12 (left: 1 2 12)\n",
                    "2 + 3 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n4 + 8 = 12 (left: 2 12)\n"
                ],
                "new_ys": [
                    "11 / 11 = 1 (left: 1 2 3 4)\n2 * 1 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n2 * 1 = 2 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n2 * 1 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n2 * 1 = 2 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n2 * 1 = 2 (left: 2 3 4)\n4 - 3 = 1 (left: 1 2)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n2 * 1 = 2 (left: 2 3 4)\n4 / 2 = 2 (left: 2 3)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 1 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 1 = 3 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 1 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 1 = 3 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 1 = 3 (left: 2 3 4)\n4 - 3 = 1 (left: 1 2)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 1 = 3 (left: 2 3 4)\n4 / 2 = 2 (left: 2 3)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n6 - 4 = 2 (left: 1 2)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n6 - 1 = 5 (left: 4 5)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n4 - 1 = 3 (left: 3 6)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n6 / 2 = 3 (left: 1 3)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n3 - 1 = 2 (left: 2 8)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 3 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 3 = 12 (left: 1 2 12)\n12 + 1 = 13 (left: 2 13)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 3 = 12 (left: 1 2 12)\n12 + 2 = 14 (left: 1 14)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 3 = 12 (left: 1 2 12)\n12 - 1 = 11 (left: 2 11)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 3 = 12 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 3 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 3 = 12 (left: 1 2 12)\n2 - 1 = 1 (left: 1 12)\n",
                    "2 + 3 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 + 3 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "2 + 3 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n4 + 8 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n4 + 8 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n4 + 8 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n4 + 8 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    100
                ],
                "select_new_ys": [
                    "11 / 11 = 1 (left: 1 2 3 4)\n2 * 1 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 1 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "2 + 3 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n4 + 8 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 4 11",
                "ys": [
                    "11 / 11 = 1 (left: 1 2 3 4)\n2 * 1 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 1 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "2 + 3 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 2 4 8)\n4 + 8 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "11 / 11 = 1 (left: 1 2 3 4)\n2 * 1 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n2 * 1 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n2 * 1 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n2 * 1 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 1 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 1 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 1 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 1 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 / 4 = 1.5 (invalid)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\nInput: 1 24\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\nPossible next steps:\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "2 + 3 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (11 - (2 + 3)) = 24\n",
                    "11 - 3 = 8 (left: 2 4 8)\n4 + 8 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (4 + (11 - 3)) = 24\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    100,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    1000,
                    1000
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (11 - (2 + 3)) = 24\n",
                    "11 - 3 = 8 (left: 2 4 8)\n4 + 8 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (4 + (11 - 3)) = 24\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n2 * 1 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 1 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ]
            }
        ],
        "idx": 808,
        "ys": [
            "2 + 3 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (11 - (2 + 3)) = 24\n",
            "11 - 3 = 8 (left: 2 4 8)\n4 + 8 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (4 + (11 - 3)) = 24\n",
            "11 / 11 = 1 (left: 1 2 3 4)\n2 * 1 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
            "11 / 11 = 1 (left: 1 2 3 4)\n3 * 1 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
            "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\n",
            "11 / 11 = 1 (left: 1 2 3 4)\n3 * 2 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
            "11 / 11 = 1 (left: 1 2 3 4)\n4 * 2 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 16710,
            "prompt_tokens": 62268,
            "cost": 2.87064
        },
        "time_spent": 44.255109786987305
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 6 10)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n",
                    "6 + 2 = 8 (left: 3 8 10)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n",
                    "6 * 2 = 12 (left: 3 10 12)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n",
                    "10 - 3 = 7 (left: 2 6 7)\n",
                    "10 - 2 = 8 (left: 3 6 8)\n",
                    "6 - 3 = 3 (left: 2 3 10)\n",
                    "6 - 2 = 4 (left: 3 4 10)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 + 2 = 12 (left: 3 6 12)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n",
                    "6 + 2 = 8 (left: 3 8 10)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n",
                    "6 * 2 = 12 (left: 3 10 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 10",
                "ys": [
                    "10 + 2 = 12 (left: 3 6 12)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n",
                    "6 + 2 = 8 (left: 3 8 10)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n",
                    "6 * 2 = 12 (left: 3 10 12)\n"
                ],
                "new_ys": [
                    "10 + 2 = 12 (left: 3 6 12)\n3 + 6 = 9 (left: 9 12)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 - 3 = 9 (left: 6 9)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n3 * 6 = 18 (left: 12 18)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 + 6 = 18 (left: 3 18)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 + 3 = 15 (left: 6 15)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 2)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n4 / 2 = 2 (left: 2 3)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n5 + 6 = 11 (left: 10 11)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n10 + 6 = 16 (left: 5 16)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n10 - 6 = 4 (left: 4 5)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n6 - 5 = 1 (left: 1 10)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n10 / 5 = 2 (left: 2 6)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n10 / 2 = 5 (left: 5 6)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n5 + 6 = 11 (left: 10 11)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n10 + 5 = 15 (left: 6 15)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n10 - 6 = 4 (left: 4 5)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n6 - 5 = 1 (left: 1 10)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n10 / 5 = 2 (left: 2 6)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n10 / 2 = 5 (left: 5 6)\n",
                    "6 + 2 = 8 (left: 3 8 10)\n3 + 8 = 11 (left: 10 11)\n",
                    "6 + 2 = 8 (left: 3 8 10)\n10 + 3 = 13 (left: 8 13)\n",
                    "6 + 2 = 8 (left: 3 8 10)\n10 - 3 = 7 (left: 7 8)\n",
                    "6 + 2 = 8 (left: 3 8 10)\n8 + 3 = 11 (left: 10 11)\n",
                    "6 + 2 = 8 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n",
                    "6 + 2 = 8 (left: 3 8 10)\n8 - 3 = 5 (left: 5 10)\n",
                    "6 + 2 = 8 (left: 3 8 10)\n3 * 8 = 24 (left: 10 24)\n",
                    "6 + 2 = 8 (left: 3 8 10)\n10 / 2 = 5 (left: 3 5 8)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 / 2 = 5 (left: 5 6 6)\n",
                    "6 * 2 = 12 (left: 3 10 12)\n3 + 10 = 13 (left: 12 13)\n",
                    "6 * 2 = 12 (left: 3 10 12)\n12 + 3 = 15 (left: 10 15)\n",
                    "6 * 2 = 12 (left: 3 10 12)\n12 - 3 = 9 (left: 9 10)\n",
                    "6 * 2 = 12 (left: 3 10 12)\n12 - 10 = 2 (left: 2 3)\n",
                    "6 * 2 = 12 (left: 3 10 12)\n10 + 3 = 13 (left: 12 13)\n",
                    "6 * 2 = 12 (left: 3 10 12)\n12 / 3 = 4 (left: 4 10)\n",
                    "6 * 2 = 12 (left: 3 10 12)\n10 - 3 = 7 (left: 7 12)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n3 + 6 = 9 (left: 9 12)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 - 3 = 9 (left: 6 9)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n3 * 6 = 18 (left: 12 18)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 6 10",
                "ys": [
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n3 + 6 = 9 (left: 9 12)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 - 3 = 9 (left: 6 9)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n3 * 6 = 18 (left: 12 18)\n"
                ],
                "new_ys": [
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n3 + 6 = 9 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n3 + 6 = 9 (left: 9 12)\n12 - 9 = 3 (left: 3)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n3 + 6 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n3 + 6 = 9 (left: 9 12)\n12 / 9 = 1.33 (left: 1.33)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n3 + 6 = 9 (left: 9)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n6 - 3 = 3 (left: 3)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n6 / 3 = 2 (left: 2)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 - 3 = 9 (left: 6 9)\n6 + 9 = 15 (left: 15)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 - 3 = 9 (left: 6 9)\n9 - 6 = 3 (left: 3)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 - 3 = 9 (left: 6 9)\n6 * 9 = 54 (left: 54)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 - 3 = 9 (left: 6 9)\n9 / 3 = 3 (left: 3)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n3 * 6 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n3 * 6 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n3 * 6 = 18 (left: 12 18)\n12 * 18 = 216 (left: 216)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n3 * 6 = 18 (left: 12 18)\n18 / 12 = 1.5 (left: 1.5)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n3 + 6 = 9 (left: 9 12)\n9 + 12 = 21 (left: 21)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 6 10",
                "ys": [
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n3 + 6 = 9 (left: 9 12)\n9 + 12 = 21 (left: 21)\n"
                ],
                "new_ys": [
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((10 + 2) / 3) * 6 = 24\n",
                    "10 - 6 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (2 * 3) = 24\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 * 2) * (10 - 6) = 24\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 14 = 24 (left: 8 24)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 8 = 80 (left: 8 14 80)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 8 = 80 (left: 8 14 80)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n3 + 6 = 9 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 21\n",
                    "10 + 2 = 12 (left: 3 6 12)\n3 + 6 = 9 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
                    "10 + 2 = 12 (left: 3 6 12)\n3 + 6 = 9 (left: 9 12)\n9 + 12 = 21 (left: 21)\nNone (solution found)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((10 + 2) / 3) * 6 = 24\n",
                    "10 - 6 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (2 * 3) = 24\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 * 2) * (10 - 6) = 24\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 14 = 24 (left: 8 24)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n"
                ]
            }
        ],
        "idx": 809,
        "ys": [
            "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((10 + 2) / 3) * 6 = 24\n",
            "10 - 6 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (2 * 3) = 24\n",
            "3 * 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 * 2) * (10 - 6) = 24\n",
            "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
            "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 14 = 24 (left: 8 24)\n",
            "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
            "10 + 2 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 18720,
            "prompt_tokens": 69229,
            "cost": 3.20007
        },
        "time_spent": 38.4043550491333
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 5 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n",
                    "3 + 5 = 8 (left: 1 7 8)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n",
                    "7 - 5 = 2 (left: 1 2 3)\n",
                    "7 - 3 = 4 (left: 1 4 5)\n",
                    "7 - 1 = 6 (left: 3 5 6)\n",
                    "5 - 3 = 2 (left: 1 2 7)\n",
                    "5 - 1 = 4 (left: 3 4 7)\n",
                    "3 - 1 = 2 (left: 2 5 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n",
                    "3 + 5 = 8 (left: 1 7 8)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n",
                    "7 - 3 = 4 (left: 1 4 5)\n",
                    "7 - 1 = 6 (left: 3 5 6)\n",
                    "5 - 3 = 2 (left: 1 2 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 5 7",
                "ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n",
                    "3 + 5 = 8 (left: 1 7 8)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n",
                    "7 - 3 = 4 (left: 1 4 5)\n",
                    "7 - 1 = 6 (left: 3 5 6)\n",
                    "5 - 3 = 2 (left: 1 2 7)\n"
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 5 = 2 (left: 2 4)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35)\n",
                    "3 + 5 = 8 (left: 1 7 8)\n1 + 7 = 8 (left: 8 8)\n",
                    "3 + 5 = 8 (left: 1 7 8)\n8 - 1 = 7 (left: 7 7)\n",
                    "3 + 5 = 8 (left: 1 7 8)\n8 - 7 = 1 (left: 1 1)\n",
                    "3 + 5 = 8 (left: 1 7 8)\n7 - 1 = 6 (left: 6 8)\n",
                    "3 + 5 = 8 (left: 1 7 8)\n8 * 1 = 8 (left: 7 8)\n",
                    "3 + 5 = 8 (left: 1 7 8)\n7 * 1 = 7 (left: 7 8)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n1 + 3 = 4 (left: 4 12)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 + 12 = 15 (left: 1 15)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n12 - 1 = 11 (left: 3 11)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n3 + 5 = 8 (left: 7 8)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n5 + 7 = 12 (left: 3 12)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n7 - 5 = 2 (left: 2 3)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n3 * 5 = 15 (left: 7 15)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n5 * 7 = 35 (left: 3 35)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n7 / 3 = 2 (left: 2 5)\n",
                    "1 * 3 = 3 (left: 3 5 7)\nInput: 1 3 4 6\n",
                    "7 - 3 = 4 (left: 1 4 5)\n1 + 4 = 5 (left: 5 5)\n",
                    "7 - 3 = 4 (left: 1 4 5)\n5 - 1 = 4 (left: 4 4)\n",
                    "7 - 3 = 4 (left: 1 4 5)\n5 - 4 = 1 (left: 1 1)\n",
                    "7 - 3 = 4 (left: 1 4 5)\n4 * 1 = 4 (left: 4 5)\n",
                    "7 - 3 = 4 (left: 1 4 5)\n5 / 1 = 5 (left: 4 5)\n",
                    "7 - 3 = 4 (left: 1 4 5)\n4 + 1 = 5 (left: 5 5)\n",
                    "7 - 1 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n",
                    "7 - 1 = 6 (left: 3 5 6)\n3 + 6 = 9 (left: 5 9)\n",
                    "7 - 1 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n",
                    "7 - 1 = 6 (left: 3 5 6)\n6 - 3 = 3 (left: 3 5)\n",
                    "7 - 1 = 6 (left: 3 5 6)\n6 - 5 = 1 (left: 1 3)\n",
                    "7 - 1 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n",
                    "7 - 1 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n",
                    "7 - 1 = 6 (left: 3 5 6)\n3 * 6 = 18 (left: 5 18)\n",
                    "7 - 1 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n",
                    "5 - 3 = 2 (left: 1 2 7)\n1 + 2 = 3 (left: 3 7)\n",
                    "5 - 3 = 2 (left: 1 2 7)\n2 + 7 = 9 (left: 1 9)\n",
                    "5 - 3 = 2 (left: 1 2 7)\n7 - 2 = 5 (left: 1 5)\n",
                    "5 - 3 = 2 (left: 1 2 7)\n7 - 1 = 6 (left: 2 6)\n",
                    "5 - 3 = 2 (left: 1 2 7)\n2 - 1 = 1 (left: 1 7)\n",
                    "5 - 3 = 2 (left: 1 2 7)\n7 * 2 = 14 (left: 1 14)\n",
                    "5 - 3 = 2 (left: 1 2 7)\n7 * 1 = 7 (left: 2 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35)\n",
                    "3 + 5 = 8 (left: 1 7 8)\n1 + 7 = 8 (left: 8 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 5 7",
                "ys": [
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35)\n",
                    "3 + 5 = 8 (left: 1 7 8)\n1 + 7 = 8 (left: 8 8)\n"
                ],
                "new_ys": [
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n9 - 7 = 2 (left: 2)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 * 9 = 63 (left: 63)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n4 + 12 = 16 (left: 16)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n12 - 4 = 8 (left: 8)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n12 / 4 = 3 (left: 3)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n4 * 12 = 48 (left: 48)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5)\n3 + 5 = 8 (left: 8)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5)\n5 - 3 = 2 (left: 2)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5)\n3 * 5 = 15 (left: 15)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 + 20 = 27 (left: 27)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n20 - 7 = 13 (left: 13)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n20 / 7 \u2248 2.86 (left: 2.86)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 * 20 = 140 (left: 140)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35)\n4 + 35 = 39 (left: 39)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35)\n35 - 4 = 31 (left: 31)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35)\n35 / 4 = 8.75 (left: 8.75)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35)\n4 * 35 = 140 (left: 140)\n",
                    "3 + 5 = 8 (left: 1 7 8)\n1 + 7 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n",
                    "3 + 5 = 8 (left: 1 7 8)\n1 + 7 = 8 (left: 8 8)\n8 - 8 = 0 (left: 0)\n",
                    "3 + 5 = 8 (left: 1 7 8)\n1 + 7 = 8 (left: 8 8)\n8 * 8 = 64 (left: 64)\n",
                    "3 + 5 = 8 (left: 1 7 8)\n1 + 7 = 8 (left: 8 8)\n8 / 8 = 1 (left: 1)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n4 + 12 = 16 (left: 16)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5)\n3 * 5 = 15 (left: 15)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 + 20 = 27 (left: 27)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 3 5 7",
                "ys": [
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n4 + 12 = 16 (left: 16)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5)\n3 * 5 = 15 (left: 15)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 + 20 = 27 (left: 27)\n"
                ],
                "new_ys": [
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 - 1) * (5 + 7) = 24\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n(No possible next steps)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\nInput: 16\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\nPossible next steps:\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n16 - 8 = 8 (left: 8 8 16)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n16 / 8 = 2 (left: 2 8 16)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n4 + 12 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n4 + 12 = 16 (left: 16)\n16 - 8 = 8 (left: 8 16)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n4 + 12 = 16 (left: 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n4 + 12 = 16 (left: 16)\n16 * 1 = 16 (left: 16 16)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5)\n3 * 5 = 15 (left: 15)\nInput: 15\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5)\n3 * 5 = 15 (left: 15)\nPossible next steps:\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5)\n3 * 5 = 15 (left: 15)\nNone\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 + 20 = 27 (left: 27)\nInput: 27\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 + 20 = 27 (left: 27)\nPossible next steps:\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 + 20 = 27 (left: 27)\nNone (target reached)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 - 1) * (5 + 7) = 24\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n(No possible next steps)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
                ]
            }
        ],
        "idx": 810,
        "ys": [
            "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 - 1) * (5 + 7) = 24\n",
            "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
            "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
            "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n(No possible next steps)\n",
            "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
            "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
            "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 20627,
            "prompt_tokens": 75380,
            "cost": 3.49902
        },
        "time_spent": 37.02931308746338
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 10 13)\n",
                    "5 - 1 = 4 (left: 4 10 13)\n",
                    "10 + 1 = 11 (left: 5 11 13)\n",
                    "13 + 1 = 14 (left: 5 10 14)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n",
                    "13 - 5 = 8 (left: 1 8 10)\n",
                    "13 - 10 = 3 (left: 1 3 5)\n",
                    "10 * 1 = 10 (left: 5 10 13)\n",
                    "13 / 1 = 13 (left: 5 10 13)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 6 10 13)\n",
                    "5 - 1 = 4 (left: 4 10 13)\n",
                    "10 + 1 = 11 (left: 5 11 13)\n",
                    "13 + 1 = 14 (left: 5 10 14)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n",
                    "13 - 5 = 8 (left: 1 8 10)\n",
                    "13 - 10 = 3 (left: 1 3 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 10 13",
                "ys": [
                    "1 + 5 = 6 (left: 6 10 13)\n",
                    "5 - 1 = 4 (left: 4 10 13)\n",
                    "10 + 1 = 11 (left: 5 11 13)\n",
                    "13 + 1 = 14 (left: 5 10 14)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n",
                    "13 - 5 = 8 (left: 1 8 10)\n",
                    "13 - 10 = 3 (left: 1 3 5)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 10 13)\n6 + 10 = 16 (left: 13 16)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 - 6 = 4 (left: 4 13)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 6 = 19 (left: 10 19)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 10 = 23 (left: 6 23)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 + 6 = 16 (left: 13 16)\n",
                    "5 - 1 = 4 (left: 4 10 13)\n4 + 10 = 14 (left: 13 14)\n",
                    "5 - 1 = 4 (left: 4 10 13)\n13 + 4 = 17 (left: 10 17)\n",
                    "5 - 1 = 4 (left: 4 10 13)\n13 - 4 = 9 (left: 9 10)\n",
                    "5 - 1 = 4 (left: 4 10 13)\n13 - 10 = 3 (left: 3 4)\n",
                    "5 - 1 = 4 (left: 4 10 13)\n10 - 4 = 6 (left: 6 13)\n",
                    "5 - 1 = 4 (left: 4 10 13)\n13 * 4 = 52 (left: 10 52)\n",
                    "5 - 1 = 4 (left: 4 10 13)\n10 + 13 = 23 (left: 4 23)\n",
                    "10 + 1 = 11 (left: 5 11 13)\n5 + 11 = 16 (left: 13 16)\n",
                    "10 + 1 = 11 (left: 5 11 13)\n13 + 11 = 24 (left: 5 24)\n",
                    "10 + 1 = 11 (left: 5 11 13)\n13 - 11 = 2 (left: 2 5)\n",
                    "10 + 1 = 11 (left: 5 11 13)\n13 - 5 = 8 (left: 8 11)\n",
                    "10 + 1 = 11 (left: 5 11 13)\n11 - 5 = 6 (left: 6 13)\n",
                    "13 + 1 = 14 (left: 5 10 14)\n5 + 10 = 15 (left: 14 15)\n",
                    "13 + 1 = 14 (left: 5 10 14)\n14 + 5 = 19 (left: 10 19)\n",
                    "13 + 1 = 14 (left: 5 10 14)\n14 - 5 = 9 (left: 9 10)\n",
                    "13 + 1 = 14 (left: 5 10 14)\n14 - 10 = 4 (left: 4 5)\n",
                    "13 + 1 = 14 (left: 5 10 14)\n10 + 5 = 15 (left: 14 15)\n",
                    "13 + 1 = 14 (left: 5 10 14)\n10 * 5 = 50 (left: 14 50)\n",
                    "13 + 1 = 14 (left: 5 10 14)\n14 + 10 = 24 (left: 5 24)\n",
                    "13 + 1 = 14 (left: 5 10 14)\n10 / 5 = 2 (left: 2 14)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n1 + 13 = 14 (left: 14 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n15 - 13 = 2 (left: 1 2)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n15 - 1 = 14 (left: 13 14)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 - 1 = 12 (left: 12 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n15 * 1 = 15 (left: 13 15)\n",
                    "5 + 10 = 15 (left: 1 13 15)\n13 * 1 = 13 (left: 13 15)\n",
                    "13 - 5 = 8 (left: 1 8 10)\n1 + 8 = 9 (left: 9 10)\n",
                    "13 - 5 = 8 (left: 1 8 10)\n10 - 8 = 2 (left: 1 2)\n",
                    "13 - 5 = 8 (left: 1 8 10)\n10 - 1 = 9 (left: 8 9)\n",
                    "13 - 5 = 8 (left: 1 8 10)\n8 - 1 = 7 (left: 7 10)\n",
                    "13 - 5 = 8 (left: 1 8 10)\n10 / 2 = 5 (left: 1 5 8)\n",
                    "13 - 5 = 8 (left: 1 8 10)\n8 * 1 = 8 (left: 8 10)\n",
                    "13 - 10 = 3 (left: 1 3 5)\n1 + 3 = 4 (left: 4 5)\n",
                    "13 - 10 = 3 (left: 1 3 5)\n3 + 5 = 8 (left: 1 8)\n",
                    "13 - 10 = 3 (left: 1 3 5)\n5 - 3 = 2 (left: 1 2)\n",
                    "13 - 10 = 3 (left: 1 3 5)\n5 - 1 = 4 (left: 3 4)\n",
                    "13 - 10 = 3 (left: 1 3 5)\n3 - 1 = 2 (left: 2 5)\n",
                    "13 - 10 = 3 (left: 1 3 5)\n5 * 3 = 15 (left: 1 15)\n",
                    "13 - 10 = 3 (left: 1 3 5)\n3 * 1 = 3 (left: 3 5)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 6 10 13)\n6 + 10 = 16 (left: 13 16)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 - 6 = 4 (left: 4 13)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 6 = 19 (left: 10 19)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 10 = 23 (left: 6 23)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 + 6 = 16 (left: 13 16)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 10 13",
                "ys": [
                    "1 + 5 = 6 (left: 6 10 13)\n6 + 10 = 16 (left: 13 16)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 - 6 = 4 (left: 4 13)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 6 = 19 (left: 10 19)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 10 = 23 (left: 6 23)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 + 6 = 16 (left: 13 16)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 10 13)\n6 + 10 = 16 (left: 13 16)\n13 + 16 = 29 (left: 29)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n6 + 10 = 16 (left: 13 16)\n16 - 13 = 3 (left: 3)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n7 * 10 = 70 (left: 70)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n10 / 7 \u2248 1.43 (left: 1.43)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n3 + 6 = 9 (left: 9)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n6 - 3 = 3 (left: 3)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n6 / 3 = 2 (left: 2)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 - 6 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 - 6 = 4 (left: 4 13)\n13 - 4 = 9 (left: 9)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 - 6 = 4 (left: 4 13)\n13 / 4 = 3.25 (left: 3.25)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 - 6 = 4 (left: 4 13)\n4 * 13 = 52 (left: 52)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 6 = 19 (left: 10 19)\n10 + 19 = 29 (left: 29)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 6 = 19 (left: 10 19)\n19 - 10 = 9 (left: 9)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 6 = 19 (left: 10 19)\n19 / 10 = 1.9 (invalid)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 6 = 19 (left: 10 19)\n10 * 19 = 190 (left: 190)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 10 = 23 (left: 6 23)\n6 + 23 = 29 (left: 29)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 10 = 23 (left: 6 23)\n23 - 6 = 17 (left: 17)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 10 = 23 (left: 6 23)\n23 / 6 \u2248 3.83 (left: 3.83)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 10 = 23 (left: 6 23)\n6 * 23 = 138 (left: 138)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 + 6 = 16 (left: 13 16)\n13 + 16 = 29 (left: 29)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 + 6 = 16 (left: 13 16)\n16 - 13 = 3 (left: 3)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 + 6 = 16 (left: 13 16)\n13 * 16 = 208 (left: 208)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 + 6 = 16 (left: 13 16)\n16 / 13 \u2248 1.23 (left: 1.23)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 6 10 13)\n6 + 10 = 16 (left: 13 16)\n13 + 16 = 29 (left: 29)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 - 6 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 6 = 19 (left: 10 19)\n10 + 19 = 29 (left: 29)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 10 = 23 (left: 6 23)\n6 + 23 = 29 (left: 29)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 10 = 23 (left: 6 23)\n23 - 6 = 17 (left: 17)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 10 13",
                "ys": [
                    "1 + 5 = 6 (left: 6 10 13)\n6 + 10 = 16 (left: 13 16)\n13 + 16 = 29 (left: 29)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 - 6 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 6 = 19 (left: 10 19)\n10 + 19 = 29 (left: 29)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 10 = 23 (left: 6 23)\n6 + 23 = 29 (left: 29)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 10 = 23 (left: 6 23)\n23 - 6 = 17 (left: 17)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 10 13)\n6 + 10 = 16 (left: 13 16)\n13 + 16 = 29 (left: 29)\nInput: 29\n",
                    "1 + 5 = 6 (left: 6 10 13)\n6 + 10 = 16 (left: 13 16)\n13 + 16 = 29 (left: 29)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 6 10 13)\n6 + 10 = 16 (left: 13 16)\n13 + 16 = 29 (left: 29)\nNone\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\nInput: 17\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\nNone\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\nInput: 18\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 - 6 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\nInput: 17\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 - 6 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 6 10 13)\n10 - 6 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\nNone\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 6 = 19 (left: 10 19)\n10 + 19 = 29 (left: 29)\nInput: 29\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 6 = 19 (left: 10 19)\n10 + 19 = 29 (left: 29)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 6 = 19 (left: 10 19)\n10 + 19 = 29 (left: 29)\nNone\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 10 = 23 (left: 6 23)\n6 + 23 = 29 (left: 29)\nInput: 29\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 10 = 23 (left: 6 23)\n6 + 23 = 29 (left: 29)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 10 = 23 (left: 6 23)\n6 + 23 = 29 (left: 29)\nNone\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 10 = 23 (left: 6 23)\n23 - 6 = 17 (left: 17)\nInput: 17\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 10 = 23 (left: 6 23)\n23 - 6 = 17 (left: 17)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 + 10 = 23 (left: 6 23)\n23 - 6 = 17 (left: 17)\nNone\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 6 10 13)\n6 + 10 = 16 (left: 13 16)\n13 + 16 = 29 (left: 29)\nInput: 29\n",
                    "1 + 5 = 6 (left: 6 10 13)\n6 + 10 = 16 (left: 13 16)\n13 + 16 = 29 (left: 29)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 6 10 13)\n6 + 10 = 16 (left: 13 16)\n13 + 16 = 29 (left: 29)\nNone\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\nInput: 17\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\nNone\n",
                    "1 + 5 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\nInput: 18\n"
                ]
            }
        ],
        "idx": 811,
        "ys": [
            "1 + 5 = 6 (left: 6 10 13)\n6 + 10 = 16 (left: 13 16)\n13 + 16 = 29 (left: 29)\nInput: 29\n",
            "1 + 5 = 6 (left: 6 10 13)\n6 + 10 = 16 (left: 13 16)\n13 + 16 = 29 (left: 29)\nPossible next steps:\n",
            "1 + 5 = 6 (left: 6 10 13)\n6 + 10 = 16 (left: 13 16)\n13 + 16 = 29 (left: 29)\nNone\n",
            "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\nInput: 17\n",
            "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\nPossible next steps:\n",
            "1 + 5 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\nNone\n",
            "1 + 5 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\nInput: 18\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 22362,
            "prompt_tokens": 81126,
            "cost": 3.7755
        },
        "time_spent": 36.49530601501465
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 7 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n",
                    "8 + 5 = 13 (left: 7 9 13)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n",
                    "8 - 5 = 3 (left: 3 7 9)\n",
                    "9 - 8 = 1 (left: 1 5 7)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n",
                    "8 + 7 = 15 (left: 5 9 15)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n",
                    "8 + 5 = 13 (left: 7 9 13)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n",
                    "8 - 5 = 3 (left: 3 7 9)\n",
                    "9 - 8 = 1 (left: 1 5 7)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 7 8 9",
                "ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n",
                    "8 + 5 = 13 (left: 7 9 13)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n",
                    "8 - 5 = 3 (left: 3 7 9)\n",
                    "9 - 8 = 1 (left: 1 5 7)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n"
                ],
                "new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 9)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 / 3 = 4 (left: 4 9)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 * 8 = 72 (left: 12 72)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n4 + 7 = 11 (left: 8 11)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n8 - 4 = 4 (left: 4 7)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n8 - 7 = 1 (left: 1 4)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n4 * 7 = 28 (left: 8 28)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n8 / 4 = 2 (left: 2 7)\n",
                    "8 + 5 = 13 (left: 7 9 13)\n7 + 9 = 16 (left: 13 16)\n",
                    "8 + 5 = 13 (left: 7 9 13)\n13 + 7 = 20 (left: 9 20)\n",
                    "8 + 5 = 13 (left: 7 9 13)\n13 - 7 = 6 (left: 6 9)\n",
                    "8 + 5 = 13 (left: 7 9 13)\n13 - 9 = 4 (left: 4 7)\n",
                    "8 + 5 = 13 (left: 7 9 13)\n9 - 7 = 2 (left: 2 13)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n2 + 5 = 7 (left: 7 8)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n5 + 8 = 13 (left: 2 13)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n8 - 5 = 3 (left: 2 3)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n8 - 2 = 6 (left: 5 6)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n8 / 2 = 4 (left: 4 5)\n",
                    "8 - 5 = 3 (left: 3 7 9)\n3 + 7 = 10 (left: 9 10)\n",
                    "8 - 5 = 3 (left: 3 7 9)\n9 + 3 = 12 (left: 7 12)\n",
                    "8 - 5 = 3 (left: 3 7 9)\n9 - 3 = 6 (left: 6 7)\n",
                    "8 - 5 = 3 (left: 3 7 9)\n7 + 3 = 10 (left: 9 10)\n",
                    "8 - 5 = 3 (left: 3 7 9)\n9 - 7 = 2 (left: 2 3)\n",
                    "8 - 5 = 3 (left: 3 7 9)\n9 / 3 = 3 (left: 3 7)\n",
                    "8 - 5 = 3 (left: 3 7 9)\n7 - 3 = 4 (left: 4 9)\n",
                    "9 - 8 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n",
                    "9 - 8 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n",
                    "9 - 8 = 1 (left: 1 5 7)\n7 - 5 = 2 (left: 1 2)\n",
                    "9 - 8 = 1 (left: 1 5 7)\n7 - 1 = 6 (left: 5 6)\n",
                    "9 - 8 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\n",
                    "9 - 8 = 1 (left: 1 5 7)\n7 * 1 = 7 (left: 5 7)\n",
                    "9 - 8 = 1 (left: 1 5 7)\n5 * 1 = 5 (left: 5 7)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 9)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n8 * 9 = 72 (left: 12 72)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n12 / 3 = 4 (left: 4 9)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 9)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 7 8 9",
                "ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 9)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n"
                ],
                "new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\nInput: 3 8\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\nPossible next steps:\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\nInput: 3 8\n",
                    "7 + 5 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\nPossible next steps:\n",
                    "7 + 5 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 - 12 = 5 (left: 5)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 9)\n4 + 9 = 13 (left: 13)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 9)\n9 - 4 = 5 (left: 5)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n1 + 12 = 13 (left: 13)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n12 / 1 = 12 (left: 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 7 8 9",
                "ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 - 7 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((5 + 7) - 9) * 8 = 24\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - (9 - 5)) * 8 = 24\n",
                    "9 - 7 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (5 - (9 - 7)) * 8 = 24\n",
                    "7 + 5 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 + 5 - 9) * 8 = 24\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "9 - 7 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "9 - 7 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((5 + 7) - 9) * 8 = 24\n",
                    "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - (9 - 5)) * 8 = 24\n",
                    "9 - 7 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (5 - (9 - 7)) * 8 = 24\n",
                    "7 + 5 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 + 5 - 9) * 8 = 24\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n"
                ]
            }
        ],
        "idx": 812,
        "ys": [
            "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((5 + 7) - 9) * 8 = 24\n",
            "9 - 5 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - (9 - 5)) * 8 = 24\n",
            "9 - 7 = 2 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (5 - (9 - 7)) * 8 = 24\n",
            "7 + 5 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 + 5 - 9) * 8 = 24\n",
            "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
            "5 + 7 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 24019,
            "prompt_tokens": 88492,
            "cost": 4.0959
        },
        "time_spent": 37.85034704208374
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 11 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 11 = 16 (left: 12 12 16)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n",
                    "12 + 5 = 17 (left: 11 12 17)\n",
                    "12 / 12 = 1 (left: 1 5 11)\n",
                    "12 - 11 = 1 (left: 1 5 12)\n",
                    "12 + 11 = 23 (left: 5 12 23)\n",
                    "12 * 5 = 60 (left: 11 12 60)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 6 12 12)\n",
                    "5 + 11 = 16 (left: 12 12 16)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n",
                    "12 + 5 = 17 (left: 11 12 17)\n",
                    "12 / 12 = 1 (left: 1 5 11)\n",
                    "12 - 11 = 1 (left: 1 5 12)\n",
                    "12 + 11 = 23 (left: 5 12 23)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 11 12 12",
                "ys": [
                    "11 - 5 = 6 (left: 6 12 12)\n",
                    "5 + 11 = 16 (left: 12 12 16)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n",
                    "12 + 5 = 17 (left: 11 12 17)\n",
                    "12 / 12 = 1 (left: 1 5 11)\n",
                    "12 - 11 = 1 (left: 1 5 12)\n",
                    "12 + 11 = 23 (left: 5 12 23)\n"
                ],
                "new_ys": [
                    "11 - 5 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 * 2 = 24 (left: 6 24)\n",
                    "5 + 11 = 16 (left: 12 12 16)\n12 + 12 = 24 (left: 16 24)\n",
                    "5 + 11 = 16 (left: 12 12 16)\n16 - 12 = 4 (left: 4 12)\n",
                    "5 + 11 = 16 (left: 12 12 16)\n12 * 2 = 24 (left: 12 24)\n",
                    "5 + 11 = 16 (left: 12 12 16)\n16 / 4 = 4 (left: 4 12)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n7 + 11 = 18 (left: 12 18)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n12 + 11 = 23 (left: 7 23)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n12 - 7 = 5 (left: 5 11)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n11 - 7 = 4 (left: 4 12)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n12 - 11 = 1 (left: 1 7)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n7 * 11 = 77 (left: 12 77)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n12 / 7 \u2248 1.71 (left: 1.71 11)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n12 / 11 \u2248 1.09 (left: 1.09 7)\n",
                    "12 + 5 = 17 (left: 11 12 17)\n11 + 12 = 23 (left: 17 23)\n",
                    "12 + 5 = 17 (left: 11 12 17)\n17 + 12 = 29 (left: 11 29)\n",
                    "12 + 5 = 17 (left: 11 12 17)\n17 - 11 = 6 (left: 6 12)\n",
                    "12 + 5 = 17 (left: 11 12 17)\n17 - 12 = 5 (left: 5 11)\n",
                    "12 + 5 = 17 (left: 11 12 17)\n12 - 11 = 1 (left: 1 17)\n",
                    "12 / 12 = 1 (left: 1 5 11)\n1 + 5 = 6 (left: 6 11)\n",
                    "12 / 12 = 1 (left: 1 5 11)\n5 + 11 = 16 (left: 1 16)\n",
                    "12 / 12 = 1 (left: 1 5 11)\n11 - 5 = 6 (left: 1 6)\n",
                    "12 / 12 = 1 (left: 1 5 11)\n11 - 1 = 10 (left: 5 10)\n",
                    "12 / 12 = 1 (left: 1 5 11)\n5 - 1 = 4 (left: 4 11)\n",
                    "12 / 12 = 1 (left: 1 5 11)\n11 * 1 = 11 (left: 5 11)\n",
                    "12 / 12 = 1 (left: 1 5 11)\n5 * 1 = 5 (left: 5 11)\n",
                    "12 - 11 = 1 (left: 1 5 12)\n1 + 5 = 6 (left: 6 12)\n",
                    "12 - 11 = 1 (left: 1 5 12)\n5 + 1 = 6 (left: 6 12)\n",
                    "12 - 11 = 1 (left: 1 5 12)\n12 + 1 = 13 (left: 5 13)\n",
                    "12 - 11 = 1 (left: 1 5 12)\n12 - 5 = 7 (left: 1 7)\n",
                    "12 - 11 = 1 (left: 1 5 12)\n12 - 1 = 11 (left: 5 11)\n",
                    "12 - 11 = 1 (left: 1 5 12)\n12 / 1 = 12 (left: 5 12)\n",
                    "12 - 11 = 1 (left: 1 5 12)\n5 * 1 = 5 (left: 5 12)\n",
                    "12 + 11 = 23 (left: 5 12 23)\n5 + 12 = 17 (left: 17 23)\n",
                    "12 + 11 = 23 (left: 5 12 23)\n23 - 12 = 11 (left: 5 11)\n",
                    "12 + 11 = 23 (left: 5 12 23)\n23 - 5 = 18 (left: 12 18)\n",
                    "12 + 11 = 23 (left: 5 12 23)\n12 + 5 = 17 (left: 17 23)\n",
                    "12 + 11 = 23 (left: 5 12 23)\n23 + 5 = 28 (left: 12 28)\n",
                    "12 + 11 = 23 (left: 5 12 23)\n12 * 2 = 24 (left: 5 24)\n",
                    "12 + 11 = 23 (left: 5 12 23)\n23 + 12 = 35 (left: 5 35)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 * 2 = 24 (left: 6 24)\n",
                    "5 + 11 = 16 (left: 12 12 16)\n12 + 12 = 24 (left: 16 24)\n",
                    "5 + 11 = 16 (left: 12 12 16)\n16 - 12 = 4 (left: 4 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 11 12 12",
                "ys": [
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 * 2 = 24 (left: 6 24)\n",
                    "5 + 11 = 16 (left: 12 12 16)\n12 + 12 = 24 (left: 16 24)\n",
                    "5 + 11 = 16 (left: 12 12 16)\n16 - 12 = 4 (left: 4 12)\n"
                ],
                "new_ys": [
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 * 18 = 216 (left: 216)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 / 12 = 1.5 (left: 1.5)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 / 6 = 4 (left: 4)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 * 24 = 144 (left: 144)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 * 2 = 24 (left: 6 24)\n6 * 24 = 144 (left: 144)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 * 2 = 24 (left: 6 24)\n24 / 6 = 4 (left: 4)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 * 2 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 * 2 = 24 (left: 6 24)\n24 + 6 = 30 (left: 30)\n",
                    "5 + 11 = 16 (left: 12 12 16)\n12 + 12 = 24 (left: 16 24)\n24 - 16 = 8 (left: 8)\n",
                    "5 + 11 = 16 (left: 12 12 16)\n12 + 12 = 24 (left: 16 24)\n16 + 24 = 40 (left: 40)\n",
                    "5 + 11 = 16 (left: 12 12 16)\n12 + 12 = 24 (left: 16 24)\n24 / 16 = 1.5 (left: 1.5)\n",
                    "5 + 11 = 16 (left: 12 12 16)\n12 + 12 = 24 (left: 16 24)\n16 * 24 = 384 (left: 384)\n",
                    "5 + 11 = 16 (left: 12 12 16)\n16 - 12 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\n",
                    "5 + 11 = 16 (left: 12 12 16)\n16 - 12 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8)\n",
                    "5 + 11 = 16 (left: 12 12 16)\n16 - 12 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3)\n",
                    "5 + 11 = 16 (left: 12 12 16)\n16 - 12 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 11 12 12",
                "ys": [
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n"
                ],
                "new_ys": [
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / (11 - 5)) * 12 = 24\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nThere are no possible next steps with only one number.\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nInput: 30\n",
                    "11 - 5 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nPossible next steps:\n",
                    "11 - 5 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nNone (Solution found)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\nInput: 30\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\nPossible next steps:\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\nNone (target reached)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\nInput: 18\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\nPossible next steps:\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n18 + 8 = 26 (left: 8 26)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n18 * 2 = 36 (left: 8 36)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / (11 - 5)) * 12 = 24\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nThere are no possible next steps with only one number.\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
                ]
            }
        ],
        "idx": 813,
        "ys": [
            "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / (11 - 5)) * 12 = 24\n",
            "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
            "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
            "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nThere are no possible next steps with only one number.\n",
            "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
            "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
            "11 - 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 25847,
            "prompt_tokens": 94643,
            "cost": 4.39011
        },
        "time_spent": 36.433879137039185
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "8 8 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 8 13 16)\n",
                    "13 - 8 = 5 (left: 5 8 8)\n",
                    "8 * 8 = 64 (left: 8 13 64)\n",
                    "13 + 8 = 21 (left: 8 8 21)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 + 8 = 16 (left: 8 13 16)\n",
                    "13 - 8 = 5 (left: 5 8 8)\n",
                    "8 * 8 = 64 (left: 8 13 64)\n",
                    "13 + 8 = 21 (left: 8 8 21)\n"
                ]
            },
            {
                "step": 1,
                "x": "8 8 8 13",
                "ys": [
                    "8 + 8 = 16 (left: 8 13 16)\n",
                    "13 - 8 = 5 (left: 5 8 8)\n",
                    "8 * 8 = 64 (left: 8 13 64)\n",
                    "13 + 8 = 21 (left: 8 8 21)\n"
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 8 13 16)\n8 + 13 = 21 (left: 16 21)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 8 = 8 (left: 8 13)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 + 16 = 29 (left: 8 29)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 / 8 = 2 (left: 2 13)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 - 8 = 5 (left: 5 16)\n",
                    "13 - 8 = 5 (left: 5 8 8)\n5 + 8 = 13 (left: 8 13)\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 + 8 = 16 (left: 5 16)\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 * 5 = 40 (left: 8 40)\n",
                    "8 * 8 = 64 (left: 8 13 64)\n8 + 13 = 21 (left: 21 64)\n",
                    "8 * 8 = 64 (left: 8 13 64)\n64 + 13 = 77 (left: 8 77)\n",
                    "8 * 8 = 64 (left: 8 13 64)\n64 - 13 = 51 (left: 8 51)\n",
                    "8 * 8 = 64 (left: 8 13 64)\n64 / 8 = 8 (left: 8 13)\n",
                    "8 * 8 = 64 (left: 8 13 64)\n13 - 8 = 5 (left: 5 64)\n",
                    "8 * 8 = 64 (left: 8 13 64)\n64 - 8 = 56 (left: 13 56)\n",
                    "13 + 8 = 21 (left: 8 8 21)\n8 + 8 = 16 (left: 16 21)\n",
                    "13 + 8 = 21 (left: 8 8 21)\n21 - 8 = 13 (left: 8 13)\n",
                    "13 + 8 = 21 (left: 8 8 21)\n21 / 3 = 7 (left: 7 8 8)\n",
                    "13 + 8 = 21 (left: 8 8 21)\n8 * 8 = 64 (left: 21 64)\n",
                    "13 + 8 = 21 (left: 8 8 21)\n21 + 8 = 29 (left: 8 29)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n8 + 13 = 21 (left: 16 21)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 8 = 8 (left: 8 13)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 + 16 = 29 (left: 8 29)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 / 8 = 2 (left: 2 13)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 - 8 = 5 (left: 5 16)\n"
                ]
            },
            {
                "step": 2,
                "x": "8 8 8 13",
                "ys": [
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n8 + 13 = 21 (left: 16 21)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 8 = 8 (left: 8 13)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 + 16 = 29 (left: 8 29)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 / 8 = 2 (left: 2 13)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 - 8 = 5 (left: 5 16)\n"
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\nInput: 3 8\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\nPossible next steps:\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\nInput: 3 8\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\nPossible next steps:\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n8 + 13 = 21 (left: 16 21)\n16 + 21 = 37 (left: 37)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n8 + 13 = 21 (left: 16 21)\n21 - 16 = 5 (left: 5)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 8 = 8 (left: 8 13)\n13 - 8 = 5 (left: 5)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 + 16 = 29 (left: 8 29)\n8 + 29 = 37 (left: 37)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 + 16 = 29 (left: 8 29)\n29 - 8 = 21 (left: 21)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 + 16 = 29 (left: 8 29)\n29 / 8 = 3 (left: 3)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 + 16 = 29 (left: 8 29)\n8 * 29 = 232 (left: 232)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 / 8 = 2 (left: 2 13)\n2 + 13 = 15 (left: 15)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 / 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 / 8 = 2 (left: 2 13)\n13 / 2 = 6.5 (invalid)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 - 8 = 5 (left: 5 16)\n5 + 16 = 21 (left: 21)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 - 8 = 5 (left: 5 16)\n16 - 5 = 11 (left: 11)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 - 8 = 5 (left: 5 16)\n16 / 5 = 3 (left: 3)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 - 8 = 5 (left: 5 16)\n5 * 16 = 80 (left: 80)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n8 + 13 = 21 (left: 16 21)\n16 + 21 = 37 (left: 37)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 + 16 = 29 (left: 8 29)\n8 + 29 = 37 (left: 37)\n"
                ]
            },
            {
                "step": 3,
                "x": "8 8 8 13",
                "ys": [
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n8 + 13 = 21 (left: 16 21)\n16 + 21 = 37 (left: 37)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 + 16 = 29 (left: 8 29)\n8 + 29 = 37 (left: 37)\n"
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((8 + 8) - 13) * 8 = 24\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (8 - (13 - 8)) * 8 = 24\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n(No possible operations with a single number)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n8 + 13 = 21 (left: 16 21)\n16 + 21 = 37 (left: 37)\nInput: 37\n",
                    "8 + 8 = 16 (left: 8 13 16)\n8 + 13 = 21 (left: 16 21)\n16 + 21 = 37 (left: 37)\nPossible next steps:\n",
                    "8 + 8 = 16 (left: 8 13 16)\n8 + 13 = 21 (left: 16 21)\n16 + 21 = 37 (left: 37)\n3 + 7 = 10 (left: 10)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n8 + 13 = 21 (left: 16 21)\n16 + 21 = 37 (left: 37)\n7 - 3 = 4 (left: 4)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n8 + 13 = 21 (left: 16 21)\n16 + 21 = 37 (left: 37)\n3 * 7 = 21 (left: 21)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\nInput: 21\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\nPossible next steps:\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\nNone\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 + 16 = 29 (left: 8 29)\n8 + 29 = 37 (left: 37)\nInput: 37\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 + 16 = 29 (left: 8 29)\n8 + 29 = 37 (left: 37)\nPossible next steps:\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 + 16 = 29 (left: 8 29)\n8 + 29 = 37 (left: 37)\nNo valid operations possible.\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((8 + 8) - 13) * 8 = 24\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (8 - (13 - 8)) * 8 = 24\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 814,
        "ys": [
            "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((8 + 8) - 13) * 8 = 24\n",
            "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (8 - (13 - 8)) * 8 = 24\n",
            "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
            "8 + 8 = 16 (left: 8 13 16)\n16 - 13 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
            "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "13 - 8 = 5 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 26972,
            "prompt_tokens": 100410,
            "cost": 4.6306199999999995
        },
        "time_spent": 25.726184844970703
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n",
                    "11 + 3 = 14 (left: 3 6 14)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n",
                    "6 - 3 = 3 (left: 3 3 11)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n",
                    "11 - 6 = 5 (left: 3 3 5)\n",
                    "6 / 3 = 2 (left: 2 3 11)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 3 = 9 (left: 3 9 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n",
                    "11 + 3 = 14 (left: 3 6 14)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n",
                    "6 - 3 = 3 (left: 3 3 11)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n",
                    "11 - 6 = 5 (left: 3 3 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 6 11",
                "ys": [
                    "6 + 3 = 9 (left: 3 9 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n",
                    "11 + 3 = 14 (left: 3 6 14)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n",
                    "6 - 3 = 3 (left: 3 3 11)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n",
                    "11 - 6 = 5 (left: 3 3 5)\n"
                ],
                "new_ys": [
                    "6 + 3 = 9 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n11 + 3 = 14 (left: 9 14)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n11 - 9 = 2 (left: 2 3)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n11 - 3 = 8 (left: 8 9)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 + 6 = 17 (left: 6 17)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 / 11 = 1 (left: 1 6 6)\n",
                    "11 + 3 = 14 (left: 3 6 14)\n3 + 6 = 9 (left: 9 14)\n",
                    "11 + 3 = 14 (left: 3 6 14)\n14 + 3 = 17 (left: 6 17)\n",
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n",
                    "11 + 3 = 14 (left: 3 6 14)\n6 * 3 = 18 (left: 14 18)\n",
                    "11 + 3 = 14 (left: 3 6 14)\n14 / 2 = 7 (left: 3 6 7)\n",
                    "11 + 3 = 14 (left: 3 6 14)\n6 - 3 = 3 (left: 3 14)\n",
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 3 = 11 (left: 6 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 - 6 = 5 (left: 5 9)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 - 9 = 2 (left: 2 6)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 * 9 = 54 (left: 11 54)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 + 9 = 20 (left: 6 20)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 + 6 = 17 (left: 9 17)\n",
                    "6 - 3 = 3 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)\n",
                    "6 - 3 = 3 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)\n",
                    "6 - 3 = 3 (left: 3 3 11)\n11 + 3 = 14 (left: 3 14)\n",
                    "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n3 + 6 = 9 (left: 8 9)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n6 + 8 = 14 (left: 3 14)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n8 - 3 = 5 (left: 5 6)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n8 - 6 = 2 (left: 2 3)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n3 * 6 = 18 (left: 8 18)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n3 * 8 = 24 (left: 6 24)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n6 + 3 = 9 (left: 8 9)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n8 + 3 = 11 (left: 6 11)\n",
                    "11 - 6 = 5 (left: 3 3 5)\n3 + 3 = 6 (left: 5 6)\n",
                    "11 - 6 = 5 (left: 3 3 5)\n3 * 3 = 9 (left: 5 9)\n",
                    "11 - 6 = 5 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n",
                    "11 - 6 = 5 (left: 3 3 5)\n5 - 3 = 2 (left: 2 3)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0
                ],
                "select_new_ys": [
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n",
                    "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "11 - 6 = 5 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n11 + 3 = 14 (left: 9 14)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n11 - 3 = 8 (left: 8 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 6 11",
                "ys": [
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n",
                    "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "11 - 6 = 5 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n11 + 3 = 14 (left: 9 14)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n11 - 3 = 8 (left: 8 9)\n"
                ],
                "new_ys": [
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "11 - 6 = 5 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 - 6 = 5 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "11 - 6 = 5 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n12 - 11 = 1 (left: 1)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 * 12 = 132 (left: 132)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n12 / 11 \u2248 1.09 (left: 1.09)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n11 + 3 = 14 (left: 9 14)\n9 + 14 = 23 (left: 23)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n11 + 3 = 14 (left: 9 14)\n14 - 9 = 5 (left: 5)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n27 + 11 = 38 (left: 38)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n27 - 11 = 16 (left: 16)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n11 * 27 = 297 (left: 297)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n11 - 3 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n11 - 3 = 8 (left: 8 9)\n9 - 8 = 1 (left: 1)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n11 - 3 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 - 6 = 5 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 6 11",
                "ys": [
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 - 6 = 5 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "6 + 3 = 9 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n"
                ],
                "new_ys": [
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((11 + 3) - 6) = 24\n",
                    "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (11 - (6 - 3)) = 24\n",
                    "11 - 6 = 5 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((11 - 6) + 3) = 24\n",
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNo valid operations possible with a single number.\n",
                    "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNo valid operations possible with a single number.\n",
                    "11 - 6 = 5 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "11 - 6 = 5 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "11 - 6 = 5 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNo valid operations possible with a single number.\n",
                    "6 + 3 = 9 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nInput: 23\n",
                    "6 + 3 = 9 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nPossible next steps:\n",
                    "6 + 3 = 9 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nNone\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((11 + 3) - 6) = 24\n",
                    "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (11 - (6 - 3)) = 24\n",
                    "11 - 6 = 5 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((11 - 6) + 3) = 24\n",
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNo valid operations possible with a single number.\n",
                    "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n"
                ]
            }
        ],
        "idx": 815,
        "ys": [
            "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((11 + 3) - 6) = 24\n",
            "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (11 - (6 - 3)) = 24\n",
            "11 - 6 = 5 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((11 - 6) + 3) = 24\n",
            "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
            "11 + 3 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNo valid operations possible with a single number.\n",
            "6 - 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 28557,
            "prompt_tokens": 107371,
            "cost": 4.93455
        },
        "time_spent": 33.86315703392029
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 7 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n",
                    "9 + 3 = 12 (left: 7 8 12)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n",
                    "8 - 3 = 5 (left: 5 7 9)\n",
                    "9 - 3 = 6 (left: 6 7 8)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n",
                    "9 - 7 = 2 (left: 2 3 8)\n",
                    "8 - 7 = 1 (left: 1 3 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n",
                    "9 + 3 = 12 (left: 7 8 12)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n",
                    "8 - 3 = 5 (left: 5 7 9)\n",
                    "9 - 3 = 6 (left: 6 7 8)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 7 8 9",
                "ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n",
                    "9 + 3 = 12 (left: 7 8 12)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n",
                    "8 - 3 = 5 (left: 5 7 9)\n",
                    "9 - 3 = 6 (left: 6 7 8)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 9 = 1 (left: 1 8)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 + 9 = 19 (left: 8 19)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 * 9 = 72 (left: 10 72)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n7 + 9 = 16 (left: 11 16)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n11 - 7 = 4 (left: 4 9)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n11 - 9 = 2 (left: 2 7)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n9 - 7 = 2 (left: 2 11)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n7 * 9 = 63 (left: 11 63)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n11 + 9 = 20 (left: 7 20)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n11 + 7 = 18 (left: 9 18)\n",
                    "9 + 3 = 12 (left: 7 8 12)\n7 + 8 = 15 (left: 12 15)\n",
                    "9 + 3 = 12 (left: 7 8 12)\n12 + 8 = 20 (left: 7 20)\n",
                    "9 + 3 = 12 (left: 7 8 12)\n12 - 7 = 5 (left: 5 8)\n",
                    "9 + 3 = 12 (left: 7 8 12)\n12 - 8 = 4 (left: 4 7)\n",
                    "9 + 3 = 12 (left: 7 8 12)\n8 - 7 = 1 (left: 1 12)\n",
                    "9 + 3 = 12 (left: 7 8 12)\n12 / 4 = 3 (left: 3 7)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n10 - 9 = 1 (left: 1 8)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n10 + 9 = 19 (left: 8 19)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 * 9 = 72 (left: 10 72)\n",
                    "8 - 3 = 5 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "8 - 3 = 5 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n",
                    "8 - 3 = 5 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n",
                    "8 - 3 = 5 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n",
                    "8 - 3 = 5 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n",
                    "8 - 3 = 5 (left: 5 7 9)\n9 + 7 = 16 (left: 5 16)\n",
                    "8 - 3 = 5 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n",
                    "9 - 3 = 6 (left: 6 7 8)\n6 + 7 = 13 (left: 8 13)\n",
                    "9 - 3 = 6 (left: 6 7 8)\n8 - 6 = 2 (left: 2 7)\n",
                    "9 - 3 = 6 (left: 6 7 8)\n8 - 7 = 1 (left: 1 6)\n",
                    "9 - 3 = 6 (left: 6 7 8)\n7 - 6 = 1 (left: 1 8)\n",
                    "9 - 3 = 6 (left: 6 7 8)\n6 * 7 = 42 (left: 8 42)\n",
                    "9 - 3 = 6 (left: 6 7 8)\n8 + 7 = 15 (left: 6 15)\n",
                    "9 - 3 = 6 (left: 6 7 8)\n8 + 6 = 14 (left: 7 14)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n21 - 9 = 12 (left: 8 12)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n21 - 8 = 13 (left: 9 13)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n9 - 8 = 1 (left: 1 21)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n21 / 3 = 7 (left: 7 8 9)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 + 9 = 19 (left: 8 19)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n7 + 9 = 16 (left: 11 16)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n11 - 7 = 4 (left: 4 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 7 8 9",
                "ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 + 9 = 19 (left: 8 19)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n7 + 9 = 16 (left: 11 16)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n11 - 7 = 4 (left: 4 9)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\nInput: 2 9\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n9 - 2 = 7 (left: 7)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n9 / 2 = 4.5 (left: 4.5)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n9 + 18 = 27 (left: 27)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n18 - 9 = 9 (left: 9)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n18 / 9 = 2 (left: 2)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 + 9 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 + 9 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n7 + 9 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n7 + 9 = 16 (left: 11 16)\n16 - 11 = 5 (left: 5)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n11 - 7 = 4 (left: 4 9)\nInput: 4 9\n",
                    "8 + 3 = 11 (left: 7 9 11)\n11 - 7 = 4 (left: 4 9)\nPossible next steps:\n",
                    "8 + 3 = 11 (left: 7 9 11)\n11 - 7 = 4 (left: 4 9)\n4 + 9 = 13 (left: 13)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n11 - 7 = 4 (left: 4 9)\n9 - 4 = 5 (left: 5)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n11 - 7 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n",
                    "8 + 3 = 11 (left: 7 9 11)\n11 - 7 = 4 (left: 4 9)\n9 / 4 = 2.25 (invalid)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n9 + 18 = 27 (left: 27)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 7 8 9",
                "ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n9 + 18 = 27 (left: 27)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nInput: 27\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nNone\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nInput: 11\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nNone\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\nInput: 18\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n8 + 18 = 26 (left: 8 12 26)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10 12)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 / 6 = 3 (left: 3 8 12)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n12 + 18 = 30 (left: 8 8 30)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 - 12 = 6 (left: 6 8 8)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nInput: 11\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nNone\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n9 + 18 = 27 (left: 27)\nInput: 27\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n9 + 18 = 27 (left: 27)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n9 + 18 = 27 (left: 27)\nNone\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nInput: 27\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nNone\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nInput: 11\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nNone\n",
                    "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\nInput: 18\n"
                ]
            }
        ],
        "idx": 816,
        "ys": [
            "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nInput: 27\n",
            "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nPossible next steps:\n",
            "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nNone\n",
            "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nInput: 11\n",
            "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nPossible next steps:\n",
            "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nNone\n",
            "3 + 7 = 10 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\nInput: 18\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 30374,
            "prompt_tokens": 113117,
            "cost": 5.215949999999999
        },
        "time_spent": 35.61889123916626
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 8 8 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 8 = 10 (left: 8 10 10)\n",
                    "8 / 2 = 4 (left: 4 8 10)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n",
                    "10 - 8 = 2 (left: 2 2 8)\n",
                    "10 / 2 = 5 (left: 5 8 8)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n",
                    "2 + 8 = 10 (left: 8 10 10)\n",
                    "8 / 2 = 4 (left: 4 8 10)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n",
                    "10 - 8 = 2 (left: 2 2 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 8 8 10",
                "ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n",
                    "2 + 8 = 10 (left: 8 10 10)\n",
                    "8 / 2 = 4 (left: 4 8 10)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n",
                    "10 - 8 = 2 (left: 2 2 8)\n"
                ],
                "new_ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 - 6 = 4 (left: 4 8)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 - 8 = 2 (left: 2 6)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 + 6 = 14 (left: 10 14)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 6 = 16 (left: 8 16)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 8 64)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n",
                    "2 + 8 = 10 (left: 8 10 10)\n8 + 10 = 18 (left: 10 18)\n",
                    "2 + 8 = 10 (left: 8 10 10)\n10 + 10 = 20 (left: 8 20)\n",
                    "2 + 8 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n",
                    "2 + 8 = 10 (left: 8 10 10)\n10 * 10 = 100 (left: 8 100)\n",
                    "2 + 8 = 10 (left: 8 10 10)\n10 / 10 = 1 (left: 1 8)\n",
                    "8 / 2 = 4 (left: 4 8 10)\n4 + 8 = 12 (left: 10 12)\n",
                    "8 / 2 = 4 (left: 4 8 10)\n10 - 4 = 6 (left: 6 8)\n",
                    "8 / 2 = 4 (left: 4 8 10)\n10 - 8 = 2 (left: 2 4)\n",
                    "8 / 2 = 4 (left: 4 8 10)\n8 - 4 = 4 (left: 4 10)\n",
                    "8 / 2 = 4 (left: 4 8 10)\n10 + 4 = 14 (left: 8 14)\n",
                    "8 / 2 = 4 (left: 4 8 10)\n8 + 4 = 12 (left: 10 12)\n",
                    "8 / 2 = 4 (left: 4 8 10)\n10 / 2 = 5 (left: 4 5 8)\n",
                    "8 / 2 = 4 (left: 4 8 10)\n8 * 4 = 32 (left: 10 32)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 12 64)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n12 / 8 = 1.5 (left: 1.5 8)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n8 + 10 = 18 (left: 16 18)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n16 - 10 = 6 (left: 6 8)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n16 - 8 = 8 (left: 8 10)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n16 + 8 = 24 (left: 10 24)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n10 + 8 = 18 (left: 16 18)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n16 / 8 = 2 (left: 2 10)\n",
                    "10 - 8 = 2 (left: 2 2 8)\n2 + 2 = 4 (left: 4 8)\n",
                    "10 - 8 = 2 (left: 2 2 8)\n2 * 2 = 4 (left: 4 8)\n",
                    "10 - 8 = 2 (left: 2 2 8)\n8 + 2 = 10 (left: 2 10)\n",
                    "10 - 8 = 2 (left: 2 2 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "10 - 8 = 2 (left: 2 2 8)\n8 / 2 = 4 (left: 2 4)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    100,
                    100,
                    100,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 + 6 = 14 (left: 10 14)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 6 = 16 (left: 8 16)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 - 6 = 4 (left: 4 8)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 - 8 = 2 (left: 2 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 8 8 10",
                "ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 + 6 = 14 (left: 10 14)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 6 = 16 (left: 8 16)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 - 6 = 4 (left: 4 8)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 - 8 = 2 (left: 2 6)\n"
                ],
                "new_ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 + 6 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 + 6 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 6 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 6 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 6 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 6 = 16 (left: 8 16)\n8 * 2 = 16 (left: 16 16)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 * 2 = 16 (left: 16)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 - 6 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 - 6 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 - 6 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 - 6 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 - 8 = 2 (left: 2 6)\n2 + 6 = 8 (left: 8)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 - 8 = 2 (left: 2 6)\n6 - 2 = 4 (left: 4)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 - 8 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 - 8 = 2 (left: 2 6)\n6 / 2 = 3 (left: 3)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    0,
                    100,
                    0,
                    0,
                    0,
                    100,
                    50,
                    0,
                    50,
                    100,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 + 6 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 6 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 8 8 10",
                "ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 + 6 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 6 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n"
                ],
                "new_ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (8 - 2 + 8) + 10 = 24\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 + 6 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (8 - 2 + 8) + 10 = 24\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 6 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: 8 + (10 + (8 - 2)) = 24\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (8 - 2) + (10 + 8) = 24\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: 8 + 8 + (10 - 2) = 24\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\nInput: 18\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\nPossible next steps:\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n18 + 8 = 26 (left: 2 26)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (8 - 2 + 8) + 10 = 24\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 + 6 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (8 - 2 + 8) + 10 = 24\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 6 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: 8 + (10 + (8 - 2)) = 24\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (8 - 2) + (10 + 8) = 24\n",
                    "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: 8 + 8 + (10 - 2) = 24\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n"
                ]
            }
        ],
        "idx": 817,
        "ys": [
            "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (8 - 2 + 8) + 10 = 24\n",
            "8 - 2 = 6 (left: 6 8 10)\n8 + 6 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (8 - 2 + 8) + 10 = 24\n",
            "8 - 2 = 6 (left: 6 8 10)\n10 + 6 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: 8 + (10 + (8 - 2)) = 24\n",
            "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (8 - 2) + (10 + 8) = 24\n",
            "10 - 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: 8 + 8 + (10 - 2) = 24\n",
            "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
            "8 - 2 = 6 (left: 6 8 10)\n10 + 8 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 32069,
            "prompt_tokens": 120888,
            "cost": 5.5507800000000005
        },
        "time_spent": 36.04571080207825
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 7 7 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 7 11 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n",
                    "11 + 4 = 15 (left: 7 7 15)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n",
                    "11 - 7 = 4 (left: 4 4 7)\n",
                    "11 - 4 = 7 (left: 7 7 7)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 * 7 = 28 (left: 7 11 28)\n",
                    "11 - 7 = 4 (left: 4 4 7)\n",
                    "4 + 7 = 11 (left: 7 11 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n",
                    "11 + 4 = 15 (left: 7 7 15)\n",
                    "11 - 4 = 7 (left: 7 7 7)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 7 7 11",
                "ys": [
                    "4 * 7 = 28 (left: 7 11 28)\n",
                    "11 - 7 = 4 (left: 4 4 7)\n",
                    "4 + 7 = 11 (left: 7 11 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n",
                    "11 + 4 = 15 (left: 7 7 15)\n",
                    "11 - 4 = 7 (left: 7 7 7)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n"
                ],
                "new_ys": [
                    "4 * 7 = 28 (left: 7 11 28)\n7 + 11 = 18 (left: 18 28)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 7 = 21 (left: 11 21)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 / 7 = 4 (left: 4 11)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n11 - 7 = 4 (left: 4 28)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 / 4 = 7 (left: 7 11)\n",
                    "11 - 7 = 4 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n",
                    "11 - 7 = 4 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n",
                    "11 - 7 = 4 (left: 4 4 7)\n7 + 4 = 11 (left: 4 11)\n",
                    "11 - 7 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n",
                    "4 + 7 = 11 (left: 7 11 11)\n7 + 11 = 18 (left: 11 18)\n",
                    "4 + 7 = 11 (left: 7 11 11)\n11 - 7 = 4 (left: 4 11)\n",
                    "4 + 7 = 11 (left: 7 11 11)\n11 * 7 = 77 (left: 11 77)\n",
                    "4 + 7 = 11 (left: 7 11 11)\n11 / 7 \u2248 1.57 (left: 1.57 11)\n",
                    "4 + 7 = 11 (left: 7 11 11)\n11 + 11 = 22 (left: 7 22)\n",
                    "4 + 7 = 11 (left: 7 11 11)\n11 - 11 = 0 (left: 0 7)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n3 + 7 = 10 (left: 10 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n11 - 7 = 4 (left: 3 4)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n11 - 3 = 8 (left: 7 8)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n7 - 3 = 4 (left: 4 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n3 * 7 = 21 (left: 11 21)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n11 + 3 = 14 (left: 7 14)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n11 + 7 = 18 (left: 3 18)\n",
                    "11 + 4 = 15 (left: 7 7 15)\n7 + 7 = 14 (left: 14 15)\n",
                    "11 + 4 = 15 (left: 7 7 15)\n15 - 7 = 8 (left: 7 8)\n",
                    "11 + 4 = 15 (left: 7 7 15)\n15 + 7 = 22 (left: 7 22)\n",
                    "11 + 4 = 15 (left: 7 7 15)\n7 * 7 = 49 (left: 15 49)\n",
                    "11 + 4 = 15 (left: 7 7 15)\n15 / 7 = 2 (left: 2 7)\n",
                    "11 - 4 = 7 (left: 7 7 7)\n7 + 7 = 14 (left: 7 14)\n",
                    "11 - 4 = 7 (left: 7 7 7)\n7 * 7 = 49 (left: 7 49)\n",
                    "11 - 4 = 7 (left: 7 7 7)\n7 - 7 = 0 (left: 0 7)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n1 + 4 = 5 (left: 5 7)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n4 + 7 = 11 (left: 1 11)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n7 - 4 = 3 (left: 1 3)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n4 - 1 = 3 (left: 3 7)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n7 * 1 = 7 (left: 4 7)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n4 * 1 = 4 (left: 4 7)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n11 - 7 = 4 (left: 4 28)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n7 + 11 = 18 (left: 18 28)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 7 = 21 (left: 11 21)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 / 7 = 4 (left: 4 11)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 / 4 = 7 (left: 7 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 7 7 11",
                "ys": [
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n11 - 7 = 4 (left: 4 28)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n7 + 11 = 18 (left: 18 28)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 7 = 21 (left: 11 21)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 / 7 = 4 (left: 4 11)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 / 4 = 7 (left: 7 11)\n"
                ],
                "new_ys": [
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n17 * 7 = 119 (left: 119)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n17 / 7 \u2248 2.43 (left: 2.43)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n11 - 7 = 4 (left: 4 28)\n4 + 28 = 32 (left: 32)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n11 - 7 = 4 (left: 4 28)\n28 - 4 = 24 (left: 24)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n11 - 7 = 4 (left: 4 28)\n28 / 4 = 7 (left: 7)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n11 - 7 = 4 (left: 4 28)\n4 * 28 = 112 (left: 112)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n7 + 11 = 18 (left: 18 28)\n28 - 18 = 10 (left: 10)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n7 + 11 = 18 (left: 18 28)\n18 + 28 = 46 (left: 46)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n7 + 11 = 18 (left: 18 28)\n28 / 18 = 1 (left: 1)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n7 + 11 = 18 (left: 18 28)\n28 * 18 = 504 (left: 504)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 7 = 21 (left: 11 21)\n11 + 21 = 32 (left: 32)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 7 = 21 (left: 11 21)\n21 - 11 = 10 (left: 10)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 7 = 21 (left: 11 21)\n11 * 21 = 231 (left: 231)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 7 = 21 (left: 11 21)\n21 / 11 = 1.909090909 (left: 1.909090909)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 / 7 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 / 7 = 4 (left: 4 11)\n11 - 4 = 7 (left: 7)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 / 7 = 4 (left: 4 11)\n11 / 4 = 2.75 (left: 2.75)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 / 7 = 4 (left: 4 11)\n4 * 11 = 44 (left: 44)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 / 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 / 4 = 7 (left: 7 11)\n11 - 7 = 4 (left: 4)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 / 4 = 7 (left: 7 11)\n7 * 11 = 77 (left: 77)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 / 4 = 7 (left: 7 11)\n11 / 7 = 1.57 (invalid)\n"
                ],
                "values": [
                    100,
                    50,
                    0,
                    0,
                    50,
                    100,
                    0,
                    0,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n11 - 7 = 4 (left: 4 28)\n28 - 4 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n11 - 7 = 4 (left: 4 28)\n4 + 28 = 32 (left: 32)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n7 + 11 = 18 (left: 18 28)\n28 - 18 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 7 7 11",
                "ys": [
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n11 - 7 = 4 (left: 4 28)\n28 - 4 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n11 - 7 = 4 (left: 4 28)\n4 + 28 = 32 (left: 32)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n7 + 11 = 18 (left: 18 28)\n28 - 18 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: 7 + (4 * 7 - 11) = 24\n",
                    "4 * 7 = 28 (left: 7 11 28)\n11 - 7 = 4 (left: 4 28)\n28 - 4 = 24 (left: 24)\nAnswer: (4 * 7) - (11 - 7) = 24\n",
                    "11 / 11 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (7 - 11 / 11) = 24\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n10 * 8 = 80 (left: 14 80)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n11 - 7 = 4 (left: 4 28)\n4 + 28 = 32 (left: 32)\nInput: 32\n",
                    "4 * 7 = 28 (left: 7 11 28)\n11 - 7 = 4 (left: 4 28)\n4 + 28 = 32 (left: 32)\nPossible next steps:\n",
                    "4 * 7 = 28 (left: 7 11 28)\n11 - 7 = 4 (left: 4 28)\n4 + 28 = 32 (left: 32)\nNone (target reached)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "11 / 11 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n7 + 11 = 18 (left: 18 28)\n28 - 18 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n7 + 11 = 18 (left: 18 28)\n28 - 18 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n7 + 11 = 18 (left: 18 28)\n28 - 18 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n7 + 11 = 18 (left: 18 28)\n28 - 18 = 10 (left: 10)\n14 + 10 = 24 (left: 8 8 24)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: 7 + (4 * 7 - 11) = 24\n",
                    "4 * 7 = 28 (left: 7 11 28)\n11 - 7 = 4 (left: 4 28)\n28 - 4 = 24 (left: 24)\nAnswer: (4 * 7) - (11 - 7) = 24\n",
                    "11 / 11 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (7 - 11 / 11) = 24\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n10 * 8 = 80 (left: 14 80)\n"
                ]
            }
        ],
        "idx": 818,
        "ys": [
            "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: 7 + (4 * 7 - 11) = 24\n",
            "4 * 7 = 28 (left: 7 11 28)\n11 - 7 = 4 (left: 4 28)\n28 - 4 = 24 (left: 24)\nAnswer: (4 * 7) - (11 - 7) = 24\n",
            "11 / 11 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (7 - 11 / 11) = 24\n",
            "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
            "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
            "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
            "4 * 7 = 28 (left: 7 11 28)\n28 - 11 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n10 * 8 = 80 (left: 14 80)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 33818,
            "prompt_tokens": 127849,
            "cost": 5.8645499999999995
        },
        "time_spent": 36.64441800117493
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 8 12)\n",
                    "3 + 8 = 11 (left: 2 11 12)\n",
                    "8 + 12 = 20 (left: 2 3 20)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n",
                    "12 / 3 = 4 (left: 2 4 8)\n",
                    "12 - 3 = 9 (left: 2 8 9)\n",
                    "12 - 2 = 10 (left: 3 8 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 2 3 4)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n",
                    "3 + 8 = 11 (left: 2 11 12)\n",
                    "8 + 12 = 20 (left: 2 3 20)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n",
                    "12 / 3 = 4 (left: 2 4 8)\n",
                    "12 - 3 = 9 (left: 2 8 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 8 12",
                "ys": [
                    "12 - 8 = 4 (left: 2 3 4)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n",
                    "3 + 8 = 11 (left: 2 11 12)\n",
                    "8 + 12 = 20 (left: 2 3 20)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n",
                    "12 / 3 = 4 (left: 2 4 8)\n",
                    "12 - 3 = 9 (left: 2 8 9)\n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 2)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n4 / 2 = 2 (left: 2 3)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n12 + 5 = 17 (left: 8 17)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n12 - 5 = 7 (left: 7 8)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n12 - 8 = 4 (left: 4 5)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n8 - 5 = 3 (left: 3 12)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n12 / 4 = 3 (left: 3 5)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n8 + 5 = 13 (left: 12 13)\n",
                    "3 + 8 = 11 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)\n",
                    "3 + 8 = 11 (left: 2 11 12)\n12 + 11 = 23 (left: 2 23)\n",
                    "3 + 8 = 11 (left: 2 11 12)\n12 - 11 = 1 (left: 1 2)\n",
                    "3 + 8 = 11 (left: 2 11 12)\n12 - 2 = 10 (left: 10 11)\n",
                    "3 + 8 = 11 (left: 2 11 12)\n11 - 2 = 9 (left: 9 12)\n",
                    "3 + 8 = 11 (left: 2 11 12)\n12 / 2 = 6 (left: 6 11)\n",
                    "3 + 8 = 11 (left: 2 11 12)\n11 * 2 = 22 (left: 12 22)\n",
                    "8 + 12 = 20 (left: 2 3 20)\n2 + 3 = 5 (left: 5 20)\n",
                    "8 + 12 = 20 (left: 2 3 20)\n3 + 2 = 5 (left: 5 20)\n",
                    "8 + 12 = 20 (left: 2 3 20)\n20 + 2 = 22 (left: 3 22)\n",
                    "8 + 12 = 20 (left: 2 3 20)\n20 + 3 = 23 (left: 2 23)\n",
                    "8 + 12 = 20 (left: 2 3 20)\n20 - 2 = 18 (left: 3 18)\n",
                    "8 + 12 = 20 (left: 2 3 20)\n20 - 3 = 17 (left: 2 17)\n",
                    "8 + 12 = 20 (left: 2 3 20)\n20 / 2 = 10 (left: 3 10)\n",
                    "8 + 12 = 20 (left: 2 3 20)\n3 * 2 = 6 (left: 6 20)\n",
                    "8 + 12 = 20 (left: 2 3 20)\n2 * 3 = 6 (left: 6 20)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 12 14)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 + 6 = 18 (left: 8 18)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 8)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 / 2 = 6 (left: 6 8)\n",
                    "12 / 3 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 6 8)\n",
                    "12 / 3 = 4 (left: 2 4 8)\n8 - 4 = 4 (left: 2 4)\n",
                    "12 / 3 = 4 (left: 2 4 8)\n4 * 2 = 8 (left: 8 8)\n",
                    "12 / 3 = 4 (left: 2 4 8)\n8 / 2 = 4 (left: 4 4)\n",
                    "12 / 3 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n",
                    "12 - 3 = 9 (left: 2 8 9)\n2 + 8 = 10 (left: 9 10)\n",
                    "12 - 3 = 9 (left: 2 8 9)\n9 + 2 = 11 (left: 8 11)\n",
                    "12 - 3 = 9 (left: 2 8 9)\n8 + 2 = 10 (left: 9 10)\n",
                    "12 - 3 = 9 (left: 2 8 9)\n9 - 2 = 7 (left: 7 8)\n",
                    "12 - 3 = 9 (left: 2 8 9)\n8 - 2 = 6 (left: 6 9)\n",
                    "12 - 3 = 9 (left: 2 8 9)\n9 - 8 = 1 (left: 1 2)\n",
                    "12 - 3 = 9 (left: 2 8 9)\n8 / 2 = 4 (left: 4 9)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "12 / 3 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 8 12",
                "ys": [
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "12 / 3 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\nInput: 4 6\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\nPossible next steps:\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 / 3 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\nInput: 4 6\n",
                    "12 / 3 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\nPossible next steps:\n",
                    "12 / 3 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "12 / 3 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "12 / 3 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 / 3 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n6 / 4 = 1.5 (invalid)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\nInput: 4 5\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\nPossible next steps:\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 + 5 = 9 (left: 9)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n5 - 4 = 1 (left: 1)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\nInput: 2 7\n",
                    "12 - 8 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\nPossible next steps:\n",
                    "12 - 8 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n2 + 7 = 9 (left: 9)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n7 - 2 = 5 (left: 5)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n2 * 7 = 14 (left: 14)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n7 / 2 = 3.5 (left: 3.5)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n13 - 12 = 1 (left: 1)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n12 * 13 = 156 (left: 156)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n13 / 12 \u2248 1.08 (left: 1.08)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    50,
                    0,
                    100,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 / 3 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 8 12",
                "ys": [
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 / 3 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 - 8) * (2 * 3) = 24\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 3) * (12 - 8) = 24\n",
                    "2 * 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - (2 * 3)) * 12 = 24\n",
                    "12 / 3 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (8 - 2) = 24\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 14 = 24 (left: 8 24)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "2 * 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "2 * 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "2 * 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNone\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 - 8) * (2 * 3) = 24\n",
                    "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 3) * (12 - 8) = 24\n",
                    "2 * 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - (2 * 3)) * 12 = 24\n",
                    "12 / 3 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (8 - 2) = 24\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 14 = 24 (left: 8 24)\n",
                    "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n"
                ]
            }
        ],
        "idx": 819,
        "ys": [
            "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 - 8) * (2 * 3) = 24\n",
            "2 * 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 3) * (12 - 8) = 24\n",
            "2 * 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - (2 * 3)) * 12 = 24\n",
            "12 / 3 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 / 3) * (8 - 2) = 24\n",
            "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
            "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 14 = 24 (left: 8 24)\n",
            "12 - 8 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 35698,
            "prompt_tokens": 135215,
            "cost": 6.19833
        },
        "time_spent": 38.041367053985596
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 5 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n",
                    "5 + 5 = 10 (left: 3 9 10)\n",
                    "9 + 3 = 12 (left: 5 5 12)\n",
                    "3 * 5 = 15 (left: 5 9 15)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n",
                    "9 - 5 = 4 (left: 3 4 5)\n",
                    "9 / 3 = 3 (left: 3 5 5)\n",
                    "9 - 3 = 6 (left: 5 5 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n",
                    "5 + 5 = 10 (left: 3 9 10)\n",
                    "9 + 3 = 12 (left: 5 5 12)\n",
                    "3 * 5 = 15 (left: 5 9 15)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n",
                    "9 - 5 = 4 (left: 3 4 5)\n",
                    "9 / 3 = 3 (left: 3 5 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 5 5 9",
                "ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n",
                    "5 + 5 = 10 (left: 3 9 10)\n",
                    "9 + 3 = 12 (left: 5 5 12)\n",
                    "3 * 5 = 15 (left: 5 9 15)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n",
                    "9 - 5 = 4 (left: 3 4 5)\n",
                    "9 / 3 = 3 (left: 3 5 5)\n"
                ],
                "new_ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 8 = 1 (left: 1 5)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 + 9 = 17 (left: 5 17)\n",
                    "5 + 5 = 10 (left: 3 9 10)\n3 + 9 = 12 (left: 10 12)\n",
                    "5 + 5 = 10 (left: 3 9 10)\n10 + 3 = 13 (left: 9 13)\n",
                    "5 + 5 = 10 (left: 3 9 10)\n10 - 3 = 7 (left: 7 9)\n",
                    "5 + 5 = 10 (left: 3 9 10)\n9 - 3 = 6 (left: 6 10)\n",
                    "5 + 5 = 10 (left: 3 9 10)\n10 - 9 = 1 (left: 1 3)\n",
                    "5 + 5 = 10 (left: 3 9 10)\n9 / 3 = 3 (left: 3 10)\n",
                    "5 + 5 = 10 (left: 3 9 10)\n3 * 3 = 9 (left: 9 10)\n",
                    "9 + 3 = 12 (left: 5 5 12)\n5 + 5 = 10 (left: 10 12)\n",
                    "9 + 3 = 12 (left: 5 5 12)\n12 + 5 = 17 (left: 5 17)\n",
                    "9 + 3 = 12 (left: 5 5 12)\n12 - 5 = 7 (left: 5 7)\n",
                    "9 + 3 = 12 (left: 5 5 12)\n5 * 5 = 25 (left: 12 25)\n",
                    "9 + 3 = 12 (left: 5 5 12)\n12 / 5 = 2 (left: 2 5)\n",
                    "3 * 5 = 15 (left: 5 9 15)\n5 + 9 = 14 (left: 14 15)\n",
                    "3 * 5 = 15 (left: 5 9 15)\n15 - 9 = 6 (left: 5 6)\n",
                    "3 * 5 = 15 (left: 5 9 15)\n15 - 5 = 10 (left: 9 10)\n",
                    "3 * 5 = 15 (left: 5 9 15)\n9 - 5 = 4 (left: 4 15)\n",
                    "3 * 5 = 15 (left: 5 9 15)\n15 + 5 = 20 (left: 9 20)\n",
                    "3 * 5 = 15 (left: 5 9 15)\n15 + 9 = 24 (left: 5 24)\n",
                    "3 * 5 = 15 (left: 5 9 15)\n5 * 3 = 15 (left: 9 15)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n2 + 5 = 7 (left: 7 9)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n9 - 5 = 4 (left: 2 4)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n9 - 2 = 7 (left: 5 7)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 + 2 = 7 (left: 7 9)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n9 / 3 = 3 (left: 2 3)\n",
                    "5 - 3 = 2 (left: 2 5 9)\n5 * 2 = 10 (left: 9 10)\n",
                    "9 - 5 = 4 (left: 3 4 5)\n3 + 4 = 7 (left: 5 7)\n",
                    "9 - 5 = 4 (left: 3 4 5)\n3 + 5 = 8 (left: 4 8)\n",
                    "9 - 5 = 4 (left: 3 4 5)\n4 + 5 = 9 (left: 3 9)\n",
                    "9 - 5 = 4 (left: 3 4 5)\n5 - 3 = 2 (left: 2 4)\n",
                    "9 - 5 = 4 (left: 3 4 5)\n5 - 4 = 1 (left: 1 3)\n",
                    "9 - 5 = 4 (left: 3 4 5)\n4 - 3 = 1 (left: 1 5)\n",
                    "9 - 5 = 4 (left: 3 4 5)\n3 * 4 = 12 (left: 5 12)\n",
                    "9 - 5 = 4 (left: 3 4 5)\n3 * 5 = 15 (left: 4 15)\n",
                    "9 - 5 = 4 (left: 3 4 5)\n4 * 5 = 20 (left: 3 20)\n",
                    "9 / 3 = 3 (left: 3 5 5)\n3 + 5 = 8 (left: 5 8)\n",
                    "9 / 3 = 3 (left: 3 5 5)\n5 + 5 = 10 (left: 3 10)\n",
                    "9 / 3 = 3 (left: 3 5 5)\n5 - 3 = 2 (left: 2 5)\n",
                    "9 / 3 = 3 (left: 3 5 5)\n5 * 3 = 15 (left: 5 15)\n",
                    "9 / 3 = 3 (left: 3 5 5)\n5 / 5 = 1 (left: 1 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 * 5 = 15 (left: 5 9 15)\n5 * 3 = 15 (left: 9 15)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 + 9 = 17 (left: 5 17)\n",
                    "5 + 5 = 10 (left: 3 9 10)\n3 + 9 = 12 (left: 10 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 5 5 9",
                "ys": [
                    "3 * 5 = 15 (left: 5 9 15)\n5 * 3 = 15 (left: 9 15)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 + 9 = 17 (left: 5 17)\n",
                    "5 + 5 = 10 (left: 3 9 10)\n3 + 9 = 12 (left: 10 12)\n"
                ],
                "new_ys": [
                    "3 * 5 = 15 (left: 5 9 15)\n5 * 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 5 = 15 (left: 5 9 15)\n5 * 3 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\nInput: 4 8\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\nPossible next steps:\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n9 - 3 = 6 (left: 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n9 / 3 = 3 (left: 3)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n40 + 9 = 49 (left: 49)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n40 - 9 = 31 (left: 31)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n40 / 9 = 4 (left: 4)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n9 * 4 = 36 (left: 36)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 + 9 = 17 (left: 5 17)\n5 + 17 = 22 (left: 22)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 + 9 = 17 (left: 5 17)\n17 - 5 = 12 (left: 12)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 + 9 = 17 (left: 5 17)\n17 / 5 = 3 (left: 3)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 + 9 = 17 (left: 5 17)\n5 * 17 = 85 (left: 85)\n",
                    "5 + 5 = 10 (left: 3 9 10)\n3 + 9 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "5 + 5 = 10 (left: 3 9 10)\n3 + 9 = 12 (left: 10 12)\n12 - 10 = 2 (left: 2)\n",
                    "5 + 5 = 10 (left: 3 9 10)\n3 + 9 = 12 (left: 10 12)\n10 * 12 = 120 (left: 120)\n",
                    "5 + 5 = 10 (left: 3 9 10)\n3 + 9 = 12 (left: 10 12)\n12 / 10 = 1.2 (left: 1.2)\n"
                ],
                "values": [
                    100,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 5 = 15 (left: 5 9 15)\n5 * 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n40 - 9 = 31 (left: 31)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 5 5 9",
                "ys": [
                    "3 * 5 = 15 (left: 5 9 15)\n5 * 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n40 - 9 = 31 (left: 31)\n"
                ],
                "new_ys": [
                    "3 * 5 = 15 (left: 5 9 15)\n5 * 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (3 * 5) = 24\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\nInput: 22\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\nPossible next steps:\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\nNone\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\nInput: 32\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\nPossible next steps:\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\nNone (solution found)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\nInput: 27\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\nPossible next steps:\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n40 - 9 = 31 (left: 31)\nInput: 31\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n40 - 9 = 31 (left: 31)\nPossible next steps:\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n40 - 9 = 31 (left: 31)\nNone\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 5 = 15 (left: 5 9 15)\n5 * 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (3 * 5) = 24\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\nInput: 22\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\nPossible next steps:\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\nNone\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n"
                ]
            }
        ],
        "idx": 820,
        "ys": [
            "3 * 5 = 15 (left: 5 9 15)\n5 * 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (3 * 5) = 24\n",
            "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\nInput: 22\n",
            "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\nPossible next steps:\n",
            "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\nNone\n",
            "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
            "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
            "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 37467,
            "prompt_tokens": 141366,
            "cost": 6.489000000000001
        },
        "time_spent": 36.80536484718323
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 7 11 12)\n",
                    "6 + 7 = 13 (left: 5 12 13)\n",
                    "12 + 5 = 17 (left: 6 7 17)\n",
                    "12 - 7 = 5 (left: 5 5 6)\n",
                    "12 - 6 = 6 (left: 5 6 7)\n",
                    "12 - 5 = 7 (left: 6 7 7)\n",
                    "12 / 6 = 2 (left: 2 5 7)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n",
                    "6 + 7 = 13 (left: 5 12 13)\n",
                    "12 + 5 = 17 (left: 6 7 17)\n",
                    "12 - 7 = 5 (left: 5 5 6)\n",
                    "12 - 6 = 6 (left: 5 6 7)\n",
                    "12 - 5 = 7 (left: 6 7 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 7 12",
                "ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n",
                    "6 + 7 = 13 (left: 5 12 13)\n",
                    "12 + 5 = 17 (left: 6 7 17)\n",
                    "12 - 7 = 5 (left: 5 5 6)\n",
                    "12 - 6 = 6 (left: 5 6 7)\n",
                    "12 - 5 = 7 (left: 6 7 7)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 / 2 = 3 (left: 3 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 6 = 2 (left: 2 2)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 12 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n12 + 11 = 23 (left: 7 23)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n12 - 7 = 5 (left: 5 11)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n12 - 11 = 1 (left: 1 7)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 12)\n",
                    "6 + 7 = 13 (left: 5 12 13)\n5 + 12 = 17 (left: 13 17)\n",
                    "6 + 7 = 13 (left: 5 12 13)\n13 + 12 = 25 (left: 5 25)\n",
                    "6 + 7 = 13 (left: 5 12 13)\n13 - 5 = 8 (left: 8 12)\n",
                    "6 + 7 = 13 (left: 5 12 13)\n13 - 12 = 1 (left: 1 5)\n",
                    "6 + 7 = 13 (left: 5 12 13)\n12 - 5 = 7 (left: 7 13)\n",
                    "6 + 7 = 13 (left: 5 12 13)\n13 * 5 = 65 (left: 12 65)\n",
                    "6 + 7 = 13 (left: 5 12 13)\n12 / 3 = 4 (left: 4 5 13)\n",
                    "12 + 5 = 17 (left: 6 7 17)\n6 + 7 = 13 (left: 13 17)\n",
                    "12 + 5 = 17 (left: 6 7 17)\n17 - 7 = 10 (left: 6 10)\n",
                    "12 + 5 = 17 (left: 6 7 17)\n17 - 6 = 11 (left: 7 11)\n",
                    "12 + 5 = 17 (left: 6 7 17)\n7 + 6 = 13 (left: 13 17)\n",
                    "12 + 5 = 17 (left: 6 7 17)\n17 + 7 = 24 (left: 6 24)\n",
                    "12 + 5 = 17 (left: 6 7 17)\n17 + 6 = 23 (left: 7 23)\n",
                    "12 - 7 = 5 (left: 5 5 6)\n5 + 5 = 10 (left: 6 10)\n",
                    "12 - 7 = 5 (left: 5 5 6)\n5 * 5 = 25 (left: 6 25)\n",
                    "12 - 7 = 5 (left: 5 5 6)\n6 + 5 = 11 (left: 5 11)\n",
                    "12 - 7 = 5 (left: 5 5 6)\n6 - 5 = 1 (left: 1 5)\n",
                    "12 - 6 = 6 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n",
                    "12 - 6 = 6 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n",
                    "12 - 6 = 6 (left: 5 6 7)\n7 - 5 = 2 (left: 2 6)\n",
                    "12 - 6 = 6 (left: 5 6 7)\n7 - 6 = 1 (left: 1 5)\n",
                    "12 - 6 = 6 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n",
                    "12 - 6 = 6 (left: 5 6 7)\n6 * 7 = 42 (left: 5 42)\n",
                    "12 - 6 = 6 (left: 5 6 7)\n7 / 5 = 1.4 (left: 1.4 6)\n",
                    "12 - 5 = 7 (left: 6 7 7)\n6 + 7 = 13 (left: 7 13)\n",
                    "12 - 5 = 7 (left: 6 7 7)\n7 + 7 = 14 (left: 6 14)\n",
                    "12 - 5 = 7 (left: 6 7 7)\n7 - 6 = 1 (left: 1 7)\n",
                    "12 - 5 = 7 (left: 6 7 7)\n7 * 6 = 42 (left: 7 42)\n",
                    "12 - 5 = 7 (left: 6 7 7)\n6 * 7 = 42 (left: 7 42)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 / 2 = 3 (left: 3 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 7 12",
                "ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 / 2 = 3 (left: 3 12)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n12 - 8 = 4 (left: 4)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n14 - 6 = 8 (left: 8)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n14 / 2 = 7 (left: 6 7)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 * 2 = 12 (left: 12 14)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 + 6 = 8 (left: 8)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n6 - 2 = 4 (left: 4)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n6 / 2 = 3 (left: 3)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n10 - 6 = 4 (left: 4)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n10 / 2 = 5 (left: 5 6)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n6 * 10 = 60 (left: 60)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 / 2 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 / 2 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 / 2 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 / 2 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 6 7 12",
                "ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\nInput: 20\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\nPossible next steps:\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\nNone\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\nInput: 20\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\nPossible next steps:\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\nNone (goal reached)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 * 2 = 24 (left: 8 24)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nInput: 36\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nPossible next steps:\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nNone (Target reached)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n6 + 10 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 - 8 = 8 (left: 8 16)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 * 1 = 16 (left: 16 16)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\nInput: 16\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\nPossible next steps:\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\n16 / 8 = 2 (left: 2 8)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\nInput: 20\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\nPossible next steps:\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\nNone\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\nInput: 20\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\nPossible next steps:\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\nNone (goal reached)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n"
                ]
            }
        ],
        "idx": 821,
        "ys": [
            "7 - 5 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\nInput: 20\n",
            "7 - 5 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\nPossible next steps:\n",
            "7 - 5 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\nNone\n",
            "7 - 5 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\nInput: 20\n",
            "7 - 5 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\nPossible next steps:\n",
            "7 - 5 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\nNone (goal reached)\n",
            "7 - 5 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 39368,
            "prompt_tokens": 147112,
            "cost": 6.77544
        },
        "time_spent": 38.89502310752869
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 4 4",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 4 4 5)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n",
                    "4 / 2 = 2 (left: 2 3 4)\n",
                    "4 + 4 = 8 (left: 2 3 8)\n",
                    "4 * 2 = 8 (left: 3 4 8)\n",
                    "4 - 3 = 1 (left: 1 2 4)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n",
                    "4 + 3 = 7 (left: 2 4 7)\n",
                    "4 + 2 = 6 (left: 3 4 6)\n"
                ],
                "values": [
                    100,
                    100,
                    100,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 4 4 5)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n",
                    "4 / 2 = 2 (left: 2 3 4)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n",
                    "4 + 4 = 8 (left: 2 3 8)\n",
                    "4 * 2 = 8 (left: 3 4 8)\n",
                    "4 + 3 = 7 (left: 2 4 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 4 4",
                "ys": [
                    "2 + 3 = 5 (left: 4 4 5)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n",
                    "4 / 2 = 2 (left: 2 3 4)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n",
                    "4 + 4 = 8 (left: 2 3 8)\n",
                    "4 * 2 = 8 (left: 3 4 8)\n",
                    "4 + 3 = 7 (left: 2 4 7)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n5 - 4 = 1 (left: 1 4)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n4 - 3 = 1 (left: 1 2)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n4 / 2 = 2 (left: 2 3)\n",
                    "4 / 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "4 / 2 = 2 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "4 / 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "4 / 2 = 2 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "4 / 2 = 2 (left: 2 3 4)\n4 - 3 = 1 (left: 1 2)\n",
                    "4 / 2 = 2 (left: 2 3 4)\n4 / 2 = 2 (left: 2 3)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n4 + 12 = 16 (left: 2 16)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n12 - 4 = 8 (left: 2 8)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n12 / 4 = 3 (left: 2 3)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n12 - 2 = 10 (left: 4 10)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n4 - 2 = 2 (left: 2 12)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "4 + 4 = 8 (left: 2 3 8)\n2 + 3 = 5 (left: 5 8)\n",
                    "4 + 4 = 8 (left: 2 3 8)\n3 + 8 = 11 (left: 2 11)\n",
                    "4 + 4 = 8 (left: 2 3 8)\n2 * 3 = 6 (left: 6 8)\n",
                    "4 + 4 = 8 (left: 2 3 8)\n8 - 3 = 5 (left: 2 5)\n",
                    "4 + 4 = 8 (left: 2 3 8)\n8 - 2 = 6 (left: 3 6)\n",
                    "4 + 4 = 8 (left: 2 3 8)\n8 / 2 = 4 (left: 3 4)\n",
                    "4 * 2 = 8 (left: 3 4 8)\n3 + 4 = 7 (left: 7 8)\n",
                    "4 * 2 = 8 (left: 3 4 8)\n4 + 8 = 12 (left: 3 12)\n",
                    "4 * 2 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n",
                    "4 * 2 = 8 (left: 3 4 8)\n8 - 4 = 4 (left: 3 4)\n",
                    "4 * 2 = 8 (left: 3 4 8)\n8 - 3 = 5 (left: 4 5)\n",
                    "4 * 2 = 8 (left: 3 4 8)\n8 / 4 = 2 (left: 2 3)\n",
                    "4 + 3 = 7 (left: 2 4 7)\n2 + 4 = 6 (left: 6 7)\n",
                    "4 + 3 = 7 (left: 2 4 7)\n4 + 7 = 11 (left: 2 11)\n",
                    "4 + 3 = 7 (left: 2 4 7)\n7 - 4 = 3 (left: 2 3)\n",
                    "4 + 3 = 7 (left: 2 4 7)\n7 - 2 = 5 (left: 4 5)\n",
                    "4 + 3 = 7 (left: 2 4 7)\n4 - 2 = 2 (left: 2 7)\n",
                    "4 + 3 = 7 (left: 2 4 7)\n7 / 2 = 3.5 (invalid)\n",
                    "4 + 3 = 7 (left: 2 4 7)\n2 * 4 = 8 (left: 7 8)\n",
                    "4 + 3 = 7 (left: 2 4 7)\n4 * 7 = 28 (left: 2 28)\n",
                    "4 + 3 = 7 (left: 2 4 7)\n2 * 7 = 14 (left: 4 14)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    100,
                    100,
                    0,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n",
                    "4 / 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n4 - 2 = 2 (left: 2 12)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 4 4",
                "ys": [
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n",
                    "4 / 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n4 - 2 = 2 (left: 2 12)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n"
                ],
                "new_ys": [
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 / 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 / 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "4 / 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 / 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n4 - 2 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n4 - 2 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n4 - 2 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n4 - 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n8 - 5 = 3 (left: 3)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n8 / 5 = 1.6 (left: 1.6)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 + 16 = 21 (left: 21)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n16 - 5 = 11 (left: 11)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n16 / 5 = 3 (left: 3)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 * 16 = 80 (left: 80)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 / 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n4 - 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 4 4",
                "ys": [
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 / 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n4 - 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 * 3 = 12 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n"
                ],
                "new_ys": [
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (3 * (4 - 2)) = 24\n",
                    "4 - 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 - 2) * (3 * 4) = 24\n",
                    "4 / 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (2 * 3) = 24\n",
                    "4 * 3 = 12 (left: 2 4 12)\n4 - 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 - 2) * (4 * 3) = 24\n",
                    "4 * 3 = 12 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((4 * 3) / 2) = 24\n",
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "4 - 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "4 - 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNone\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (3 * (4 - 2)) = 24\n",
                    "4 - 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 - 2) * (3 * 4) = 24\n",
                    "4 / 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (2 * 3) = 24\n",
                    "4 * 3 = 12 (left: 2 4 12)\n4 - 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 - 2) * (4 * 3) = 24\n",
                    "4 * 3 = 12 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((4 * 3) / 2) = 24\n",
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n"
                ]
            }
        ],
        "idx": 822,
        "ys": [
            "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (3 * (4 - 2)) = 24\n",
            "4 - 2 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 - 2) * (3 * 4) = 24\n",
            "4 / 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (2 * 3) = 24\n",
            "4 * 3 = 12 (left: 2 4 12)\n4 - 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 - 2) * (4 * 3) = 24\n",
            "4 * 3 = 12 (left: 2 4 12)\n12 / 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((4 * 3) / 2) = 24\n",
            "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
            "4 - 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 41149,
            "prompt_tokens": 154883,
            "cost": 7.11543
        },
        "time_spent": 36.69652819633484
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 3 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n",
                    "3 * 3 = 9 (left: 3 9 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n",
                    "9 - 3 = 6 (left: 3 3 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n",
                    "3 * 3 = 9 (left: 3 9 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n",
                    "9 - 3 = 6 (left: 3 3 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 3 9",
                "ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n",
                    "3 * 3 = 9 (left: 3 9 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n",
                    "9 - 3 = 6 (left: 3 3 6)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 6 = 3 (left: 3 3)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n",
                    "3 * 3 = 9 (left: 3 9 9)\n3 + 9 = 12 (left: 9 12)\n",
                    "3 * 3 = 9 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18)\n",
                    "3 * 3 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "3 * 3 = 9 (left: 3 9 9)\n9 * 3 = 27 (left: 9 27)\n",
                    "3 * 3 = 9 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 + 3 = 6 (left: 3 6)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 9)\n",
                    "9 / 3 = 3 (left: 3 3 3)\n3 - 3 = 0 (left: 0 3)\n",
                    "9 - 3 = 6 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n",
                    "9 - 3 = 6 (left: 3 3 6)\n3 * 3 = 9 (left: 6 9)\n",
                    "9 - 3 = 6 (left: 3 3 6)\n6 - 3 = 3 (left: 3 3)\n",
                    "9 - 3 = 6 (left: 3 3 6)\n6 / 3 = 2 (left: 2 3)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n",
                    "3 * 3 = 9 (left: 3 9 9)\n3 + 9 = 12 (left: 9 12)\n",
                    "3 * 3 = 9 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 3 9",
                "ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n",
                    "3 * 3 = 9 (left: 3 9 9)\n3 + 9 = 12 (left: 9 12)\n",
                    "3 * 3 = 9 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\nInput: 9 9\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 - 9 = 0 (left: 0)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n9 + 18 = 27 (left: 27)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n18 - 9 = 9 (left: 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n18 / 9 = 2 (left: 2)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n3 + 6 = 9 (left: 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n6 - 3 = 3 (left: 3)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n6 / 3 = 2 (left: 2)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n9 - 2 = 7 (left: 7)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n9 / 2 = 4.5 (left: 4.5)\n",
                    "3 * 3 = 9 (left: 3 9 9)\n3 + 9 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "3 * 3 = 9 (left: 3 9 9)\n3 + 9 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3)\n",
                    "3 * 3 = 9 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18)\n3 + 18 = 21 (left: 21)\n",
                    "3 * 3 = 9 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18)\n18 - 3 = 15 (left: 15)\n",
                    "3 * 3 = 9 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18)\n18 / 3 = 6 (left: 6)\n",
                    "3 * 3 = 9 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18)\n3 * 18 = 54 (left: 54)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n9 + 18 = 27 (left: 27)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 3 9",
                "ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n9 + 18 = 27 (left: 27)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\nInput: 18\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nInput: 36\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nNone (Target reached)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n9 + 18 = 27 (left: 27)\nInput: 27\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n9 + 18 = 27 (left: 27)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n9 + 18 = 27 (left: 27)\nNone\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\nInput: 18\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n18 + 8 = 26 (left: 8 26)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\nInput: 18\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nInput: 11\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n(There are no possible next steps with a single number)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\nInput: 18\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n"
                ]
            }
        ],
        "idx": 823,
        "ys": [
            "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\nInput: 18\n",
            "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\nPossible next steps:\n",
            "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
            "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
            "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
            "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
            "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 42420,
            "prompt_tokens": 159840,
            "cost": 7.340400000000001
        },
        "time_spent": 28.20009970664978
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 7 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 3 7 9)\n",
                    "2 + 7 = 9 (left: 1 9 9)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n",
                    "9 - 7 = 2 (left: 1 2 2)\n",
                    "9 - 2 = 7 (left: 1 7 7)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n",
                    "7 - 2 = 5 (left: 1 5 9)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    100,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 + 1 = 10 (left: 2 7 10)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n",
                    "2 + 7 = 9 (left: 1 9 9)\n",
                    "9 - 2 = 7 (left: 1 7 7)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n",
                    "7 - 2 = 5 (left: 1 5 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 7 9",
                "ys": [
                    "9 + 1 = 10 (left: 2 7 10)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n",
                    "2 + 7 = 9 (left: 1 9 9)\n",
                    "9 - 2 = 7 (left: 1 7 7)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n",
                    "7 - 2 = 5 (left: 1 5 9)\n"
                ],
                "new_ys": [
                    "9 + 1 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 / 2 = 5 (left: 5 7)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 10 14)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n1 + 9 = 10 (left: 10 14)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n14 - 9 = 5 (left: 1 5)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n14 - 1 = 13 (left: 9 13)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n14 + 1 = 15 (left: 9 15)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n9 - 1 = 8 (left: 8 14)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n14 / 2 = 7 (left: 1 7 9)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n9 * 1 = 9 (left: 9 14)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n3 + 7 = 10 (left: 9 10)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n9 - 3 = 6 (left: 6 7)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n9 - 7 = 2 (left: 2 3)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n3 * 7 = 21 (left: 9 21)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n9 + 3 = 12 (left: 7 12)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n9 + 7 = 16 (left: 3 16)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n7 - 3 = 4 (left: 4 9)\n",
                    "2 + 7 = 9 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n",
                    "2 + 7 = 9 (left: 1 9 9)\n9 + 9 = 18 (left: 1 18)\n",
                    "2 + 7 = 9 (left: 1 9 9)\n9 - 1 = 8 (left: 8 9)\n",
                    "2 + 7 = 9 (left: 1 9 9)\n9 * 1 = 9 (left: 9 9)\n",
                    "9 - 2 = 7 (left: 1 7 7)\n1 + 7 = 8 (left: 7 8)\n",
                    "9 - 2 = 7 (left: 1 7 7)\n7 - 1 = 6 (left: 6 7)\n",
                    "9 - 2 = 7 (left: 1 7 7)\n7 * 1 = 7 (left: 7 7)\n",
                    "9 - 2 = 7 (left: 1 7 7)\n7 / 1 = 7 (left: 7 7)\n",
                    "9 - 2 = 7 (left: 1 7 7)\n7 + 7 = 14 (left: 1 14)\n",
                    "9 - 2 = 7 (left: 1 7 7)\n7 - 7 = 0 (left: 0 1)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 8 9)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n8 - 2 = 6 (left: 6 7)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n8 - 7 = 1 (left: 1 2)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n2 * 7 = 14 (left: 8 14)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n8 / 2 = 4 (left: 4 7)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 - 2 = 5 (left: 5 8)\n",
                    "7 - 2 = 5 (left: 1 5 9)\n1 + 5 = 6 (left: 6 9)\n",
                    "7 - 2 = 5 (left: 1 5 9)\n5 + 9 = 14 (left: 1 14)\n",
                    "7 - 2 = 5 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n",
                    "7 - 2 = 5 (left: 1 5 9)\n9 - 1 = 8 (left: 5 8)\n",
                    "7 - 2 = 5 (left: 1 5 9)\n5 - 1 = 4 (left: 4 9)\n",
                    "7 - 2 = 5 (left: 1 5 9)\n5 * 1 = 5 (left: 5 9)\n",
                    "7 - 2 = 5 (left: 1 5 9)\n9 * 1 = 9 (left: 5 9)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    100,
                    0,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 + 1 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 10 14)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n1 + 9 = 10 (left: 10 14)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n14 + 1 = 15 (left: 9 15)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 / 2 = 5 (left: 5 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 7 9",
                "ys": [
                    "9 + 1 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 10 14)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n1 + 9 = 10 (left: 10 14)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n14 + 1 = 15 (left: 9 15)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 / 2 = 5 (left: 5 7)\n"
                ],
                "new_ys": [
                    "9 + 1 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n1 + 9 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n1 + 9 = 10 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n14 + 1 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n14 + 1 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n8 - 7 = 1 (left: 1)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n8 / 7 \u2248 1.14 (left: 1.14)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n10 - 5 = 5 (left: 5)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n10 / 5 = 2 (left: 2)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 / 2 = 5 (left: 5 7)\n5 + 7 = 12 (left: 12)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 / 2 = 5 (left: 5 7)\n7 - 5 = 2 (left: 2)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 / 2 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    0,
                    100,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "9 + 1 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n1 + 9 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n14 + 1 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 / 2 = 5 (left: 5 7)\n5 + 7 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 2 7 9",
                "ys": [
                    "9 + 1 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n1 + 9 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "2 * 7 = 14 (left: 1 9 14)\n14 + 1 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 / 2 = 5 (left: 5 7)\n5 + 7 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "9 + 1 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (9 + 1) + (7 * 2) = 24\n",
                    "2 * 7 = 14 (left: 1 9 14)\n1 + 9 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 7) + (1 + 9) = 24\n",
                    "2 * 7 = 14 (left: 1 9 14)\n14 + 1 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (2 * 7 + 1) = 24\n",
                    "9 + 1 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 19\n",
                    "9 + 1 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
                    "9 + 1 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nNone\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\nInput: 15\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\nPossible next steps:\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\nNone\n",
                    "9 + 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\nInput: 15\n",
                    "9 + 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\nPossible next steps:\n",
                    "9 + 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\nNone\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 / 2 = 5 (left: 5 7)\n5 + 7 = 12 (left: 12)\nPossible next steps:\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 / 2 = 5 (left: 5 7)\n5 + 7 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 / 2 = 5 (left: 5 7)\n5 + 7 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 / 2 = 5 (left: 5 7)\n5 + 7 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 / 2 = 5 (left: 5 7)\n5 + 7 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 + 1 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (9 + 1) + (7 * 2) = 24\n",
                    "2 * 7 = 14 (left: 1 9 14)\n1 + 9 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 7) + (1 + 9) = 24\n",
                    "2 * 7 = 14 (left: 1 9 14)\n14 + 1 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (2 * 7 + 1) = 24\n",
                    "9 + 1 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 19\n",
                    "9 + 1 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
                    "9 + 1 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nNone\n",
                    "9 + 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\nInput: 15\n"
                ]
            }
        ],
        "idx": 824,
        "ys": [
            "9 + 1 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (9 + 1) + (7 * 2) = 24\n",
            "2 * 7 = 14 (left: 1 9 14)\n1 + 9 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 7) + (1 + 9) = 24\n",
            "2 * 7 = 14 (left: 1 9 14)\n14 + 1 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (2 * 7 + 1) = 24\n",
            "9 + 1 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 19\n",
            "9 + 1 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
            "9 + 1 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nNone\n",
            "9 + 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\nInput: 15\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 43979,
            "prompt_tokens": 166801,
            "cost": 7.642769999999999
        },
        "time_spent": 33.14579200744629
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 9 11 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n",
                    "11 - 1 = 10 (left: 9 10 13)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n",
                    "13 - 9 = 4 (left: 1 4 11)\n",
                    "13 - 11 = 2 (left: 1 2 9)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n",
                    "13 + 1 = 14 (left: 9 11 14)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n",
                    "11 - 1 = 10 (left: 9 10 13)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n",
                    "13 - 9 = 4 (left: 1 4 11)\n",
                    "13 - 11 = 2 (left: 1 2 9)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 9 11 13",
                "ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n",
                    "11 - 1 = 10 (left: 9 10 13)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n",
                    "13 - 9 = 4 (left: 1 4 11)\n",
                    "13 - 11 = 2 (left: 1 2 9)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n"
                ],
                "new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 10 = 3 (left: 3 11)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n",
                    "11 - 1 = 10 (left: 9 10 13)\n9 + 10 = 19 (left: 13 19)\n",
                    "11 - 1 = 10 (left: 9 10 13)\n13 - 9 = 4 (left: 4 10)\n",
                    "11 - 1 = 10 (left: 9 10 13)\n13 - 10 = 3 (left: 3 9)\n",
                    "11 - 1 = 10 (left: 9 10 13)\n13 + 10 = 23 (left: 9 23)\n",
                    "11 - 1 = 10 (left: 9 10 13)\n13 + 9 = 22 (left: 10 22)\n",
                    "11 - 1 = 10 (left: 9 10 13)\n10 - 9 = 1 (left: 1 13)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n12 - 9 = 3 (left: 3 11)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n12 - 11 = 1 (left: 1 9)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n9 * 11 = 99 (left: 12 99)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n12 + 11 = 23 (left: 9 23)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n12 + 9 = 21 (left: 11 21)\n",
                    "13 - 9 = 4 (left: 1 4 11)\n1 + 4 = 5 (left: 5 11)\n",
                    "13 - 9 = 4 (left: 1 4 11)\n4 + 11 = 15 (left: 1 15)\n",
                    "13 - 9 = 4 (left: 1 4 11)\n11 - 4 = 7 (left: 1 7)\n",
                    "13 - 9 = 4 (left: 1 4 11)\n11 - 1 = 10 (left: 4 10)\n",
                    "13 - 9 = 4 (left: 1 4 11)\n4 - 1 = 3 (left: 3 11)\n",
                    "13 - 9 = 4 (left: 1 4 11)\n11 / 1 = 11 (left: 4 11)\n",
                    "13 - 9 = 4 (left: 1 4 11)\n4 * 1 = 4 (left: 4 11)\n",
                    "13 - 11 = 2 (left: 1 2 9)\n1 + 2 = 3 (left: 3 9)\n",
                    "13 - 11 = 2 (left: 1 2 9)\n2 + 9 = 11 (left: 1 11)\n",
                    "13 - 11 = 2 (left: 1 2 9)\n9 - 2 = 7 (left: 1 7)\n",
                    "13 - 11 = 2 (left: 1 2 9)\n9 - 1 = 8 (left: 2 8)\n",
                    "13 - 11 = 2 (left: 1 2 9)\n2 - 1 = 1 (left: 1 9)\n",
                    "13 - 11 = 2 (left: 1 2 9)\n9 / 1 = 9 (left: 2 9)\n",
                    "13 - 11 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 2 9)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n13 - 9 = 4 (left: 4 12)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n13 - 12 = 1 (left: 1 9)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n12 - 9 = 3 (left: 3 13)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n9 * 12 = 108 (left: 13 108)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n13 + 12 = 25 (left: 9 25)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n13 + 9 = 22 (left: 12 22)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n13 + 11 = 24 (left: 8 24)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n13 - 11 = 2 (left: 2 8)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n13 - 8 = 5 (left: 5 11)\n",
                    "9 - 1 = 8 (left: 8 11 13)\n11 - 8 = 3 (left: 3 13)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 10 = 3 (left: 3 11)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n",
                    "11 - 1 = 10 (left: 9 10 13)\n9 + 10 = 19 (left: 13 19)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 9 11 13",
                "ys": [
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 10 = 3 (left: 3 11)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n",
                    "11 - 1 = 10 (left: 9 10 13)\n9 + 10 = 19 (left: 13 19)\n"
                ],
                "new_ys": [
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n21 - 13 = 8 (left: 8)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 * 21 = 273 (left: 273)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n21 / 13 \u2248 1.62 (left: 1.62)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n24 - 10 = 14 (left: 14)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n24 / 10 = 2.4 (left: 2.4)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n10 * 24 = 240 (left: 240)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n10 - 2 = 8 (left: 8)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n10 / 2 = 5 (left: 5)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 10 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 10 = 3 (left: 3 11)\n11 - 3 = 8 (left: 8)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 10 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 10 = 3 (left: 3 11)\n11 / 3 = 3.67 (left: 3.67)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n13 * 1 = 13 (left: 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n13 / 1 = 13 (left: 13)\n",
                    "11 - 1 = 10 (left: 9 10 13)\n9 + 10 = 19 (left: 13 19)\n13 + 19 = 32 (left: 32)\n",
                    "11 - 1 = 10 (left: 9 10 13)\n9 + 10 = 19 (left: 13 19)\n19 - 13 = 6 (left: 6)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n24 - 10 = 14 (left: 14)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 9 11 13",
                "ys": [
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n24 - 10 = 14 (left: 14)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (11 - 9) * (13 - 1) = 24\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNo valid operations possible with a single number.\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 10\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nPossible next steps:\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 + 10 = 24 (left: 8 8 24)\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\nInput: 34\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\nPossible next steps:\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n3 + 4 = 7 (left: 7)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n3 * 4 = 12 (left: 12)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n4 - 3 = 1 (left: 1)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\nInput: 34\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\nPossible next steps:\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\n3 + 4 = 7 (left: 7)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\n3 * 4 = 12 (left: 12)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\n4 - 3 = 1 (left: 1)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n24 - 10 = 14 (left: 14)\nInput: 14\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n24 - 10 = 14 (left: 14)\nPossible next steps:\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 + 11 = 24 (left: 10 24)\n24 - 10 = 14 (left: 14)\nThere are no possible next steps with only one number.\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\nPossible next steps:\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (11 - 9) * (13 - 1) = 24\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNo valid operations possible with a single number.\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 10\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nPossible next steps:\n",
                    "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n"
                ]
            }
        ],
        "idx": 825,
        "ys": [
            "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (11 - 9) * (13 - 1) = 24\n",
            "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
            "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
            "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNo valid operations possible with a single number.\n",
            "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 10\n",
            "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nPossible next steps:\n",
            "13 - 1 = 12 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 45843,
            "prompt_tokens": 172952,
            "cost": 7.93914
        },
        "time_spent": 38.46007013320923
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 6 8)\n",
                    "6 + 2 = 8 (left: 2 8 8)\n",
                    "8 + 2 = 10 (left: 2 6 10)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n",
                    "8 / 2 = 4 (left: 2 4 6)\n",
                    "6 / 2 = 3 (left: 2 3 8)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 2 = 8 (left: 2 8 8)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n",
                    "8 + 2 = 10 (left: 2 6 10)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n",
                    "8 / 2 = 4 (left: 2 4 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 6 8",
                "ys": [
                    "6 + 2 = 8 (left: 2 8 8)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n",
                    "8 + 2 = 10 (left: 2 6 10)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n",
                    "8 / 2 = 4 (left: 2 4 6)\n"
                ],
                "new_ys": [
                    "6 + 2 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "6 + 2 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "6 + 2 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n",
                    "6 + 2 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n8 - 6 = 2 (left: 2 4)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n8 + 4 = 12 (left: 6 12)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n8 + 6 = 14 (left: 4 14)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "8 + 2 = 10 (left: 2 6 10)\n2 + 6 = 8 (left: 8 10)\n",
                    "8 + 2 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)\n",
                    "8 + 2 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 6 8)\n",
                    "8 + 2 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 10 12)\n",
                    "8 + 2 = 10 (left: 2 6 10)\n10 / 2 = 5 (left: 5 6)\n",
                    "8 + 2 = 10 (left: 2 6 10)\n6 - 2 = 4 (left: 4 10)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n8 - 6 = 2 (left: 2 4)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n8 + 6 = 14 (left: 4 14)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n8 + 4 = 12 (left: 6 12)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n2 + 6 = 8 (left: 6 8)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 / 2 = 3 (left: 3 6)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 * 2 = 12 (left: 6 12)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 - 6 = 0 (left: 0 2)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 + 4 = 6 (left: 6 8)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n2 * 4 = 8 (left: 8 8)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n8 - 4 = 4 (left: 2 4)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n8 / 2 = 4 (left: 4 4)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n4 - 2 = 2 (left: 2 8)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n",
                    "8 / 2 = 4 (left: 2 4 6)\n2 + 4 = 6 (left: 6 6)\n",
                    "8 / 2 = 4 (left: 2 4 6)\n6 - 2 = 4 (left: 4 4)\n",
                    "8 / 2 = 4 (left: 2 4 6)\n6 - 4 = 2 (left: 2 2)\n",
                    "8 / 2 = 4 (left: 2 4 6)\n4 + 2 = 6 (left: 6 6)\n",
                    "8 / 2 = 4 (left: 2 4 6)\n4 * 2 = 8 (left: 6 8)\n",
                    "8 / 2 = 4 (left: 2 4 6)\n6 / 2 = 3 (left: 3 4)\n",
                    "8 / 2 = 4 (left: 2 4 6)\n4 / 2 = 2 (left: 2 6)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 2 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 6 8",
                "ys": [
                    "6 + 2 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n"
                ],
                "new_ys": [
                    "6 + 2 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "6 + 2 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "6 + 2 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 8)\n",
                    "6 + 2 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 2 = 16 (left: 16 16)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100
                ],
                "select_new_ys": [
                    "6 + 2 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 6 8",
                "ys": [
                    "6 + 2 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 - 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "6 + 2 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: 8 + (2 * (6 + 2)) = 24\n",
                    "2 + 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - (2 + 2)) * 6 = 24\n",
                    "2 + 2 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 2) * (8 - 6 / 2) = 24\n",
                    "2 * 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 2 * 2) * 6 = 24\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 2) * (6 - 2) = 24\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * ((8 - 2) + 6) = 24\n",
                    "6 - 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 2) * (6 - 2) = 24\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    1000,
                    1000,
                    1000,
                    1000
                ],
                "select_new_ys": [
                    "6 + 2 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: 8 + (2 * (6 + 2)) = 24\n",
                    "2 + 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - (2 + 2)) * 6 = 24\n",
                    "2 * 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 2 * 2) * 6 = 24\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 2) * (6 - 2) = 24\n",
                    "8 - 2 = 6 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * ((8 - 2) + 6) = 24\n",
                    "6 - 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 2) * (6 - 2) = 24\n",
                    "2 + 2 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 2) * (8 - 6 / 2) = 24\n"
                ]
            }
        ],
        "idx": 826,
        "ys": [
            "6 + 2 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: 8 + (2 * (6 + 2)) = 24\n",
            "2 + 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - (2 + 2)) * 6 = 24\n",
            "2 * 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 2 * 2) * 6 = 24\n",
            "8 - 2 = 6 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 2) * (6 - 2) = 24\n",
            "8 - 2 = 6 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * ((8 - 2) + 6) = 24\n",
            "6 - 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 2) * (6 - 2) = 24\n",
            "2 + 2 = 4 (left: 4 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 2) * (8 - 6 / 2) = 24\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 47458,
            "prompt_tokens": 181533,
            "cost": 8.29347
        },
        "time_spent": 35.00590395927429
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 8 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 8 = 13 (left: 9 12 13)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n",
                    "12 - 8 = 4 (left: 4 5 9)\n",
                    "12 - 9 = 3 (left: 3 5 8)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n",
                    "12 + 5 = 17 (left: 8 9 17)\n",
                    "12 / 3 = 4 (left: 4 5 8)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 4 8 12)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n",
                    "12 - 8 = 4 (left: 4 5 9)\n",
                    "12 - 9 = 3 (left: 3 5 8)\n",
                    "12 + 5 = 17 (left: 8 9 17)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 8 9 12",
                "ys": [
                    "9 - 5 = 4 (left: 4 8 12)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n",
                    "12 - 8 = 4 (left: 4 5 9)\n",
                    "12 - 9 = 3 (left: 3 5 8)\n",
                    "12 + 5 = 17 (left: 8 9 17)\n"
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n12 - 8 = 4 (left: 4 4)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n12 - 4 = 8 (left: 8 8)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 + 4 = 12 (left: 12 12)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 8 = 1 (left: 1 7)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 * 8 = 56 (left: 9 56)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n5 + 12 = 17 (left: 17 17)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n17 - 12 = 5 (left: 5 5)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n17 - 5 = 12 (left: 12 12)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n12 + 5 = 17 (left: 17 17)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n17 / 17 = 1 (left: 1 5 12)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n12 - 5 = 7 (left: 7 17)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n17 + 5 = 22 (left: 12 22)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n12 * 5 = 60 (left: 17 60)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 + 12 = 25 (left: 9 25)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 12)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 9)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n12 - 9 = 3 (left: 3 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 * 9 = 117 (left: 12 117)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n12 * 9 = 108 (left: 13 108)\n",
                    "12 - 8 = 4 (left: 4 5 9)\n4 + 5 = 9 (left: 9 9)\n",
                    "12 - 8 = 4 (left: 4 5 9)\n9 - 5 = 4 (left: 4 4)\n",
                    "12 - 8 = 4 (left: 4 5 9)\n9 - 4 = 5 (left: 5 5)\n",
                    "12 - 8 = 4 (left: 4 5 9)\n5 * 4 = 20 (left: 9 20)\n",
                    "12 - 8 = 4 (left: 4 5 9)\n9 + 5 = 14 (left: 4 14)\n",
                    "12 - 8 = 4 (left: 4 5 9)\n9 + 4 = 13 (left: 5 13)\n",
                    "12 - 9 = 3 (left: 3 5 8)\n3 + 5 = 8 (left: 8 8)\n",
                    "12 - 9 = 3 (left: 3 5 8)\n8 + 3 = 11 (left: 5 11)\n",
                    "12 - 9 = 3 (left: 3 5 8)\n8 - 3 = 5 (left: 5 5)\n",
                    "12 - 9 = 3 (left: 3 5 8)\n8 - 5 = 3 (left: 3 3)\n",
                    "12 - 9 = 3 (left: 3 5 8)\n3 * 5 = 15 (left: 8 15)\n",
                    "12 - 9 = 3 (left: 3 5 8)\n8 / 2 = 4 (left: 3 4 5)\n",
                    "12 + 5 = 17 (left: 8 9 17)\n8 + 9 = 17 (left: 17 17)\n",
                    "12 + 5 = 17 (left: 8 9 17)\n17 - 9 = 8 (left: 8 8)\n",
                    "12 + 5 = 17 (left: 8 9 17)\n17 - 8 = 9 (left: 9 9)\n",
                    "12 + 5 = 17 (left: 8 9 17)\n9 - 8 = 1 (left: 1 17)\n",
                    "12 + 5 = 17 (left: 8 9 17)\n17 + 8 = 25 (left: 9 25)\n",
                    "12 + 5 = 17 (left: 8 9 17)\n17 + 9 = 26 (left: 8 26)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    100,
                    100,
                    100,
                    100,
                    50,
                    0,
                    50,
                    0,
                    100,
                    50,
                    50,
                    100,
                    50,
                    0,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 + 4 = 12 (left: 12 12)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n17 - 5 = 12 (left: 12 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 8 9 12",
                "ys": [
                    "9 - 5 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 + 4 = 12 (left: 12 12)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n17 - 5 = 12 (left: 12 12)\n"
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 + 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 + 4 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 + 4 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 + 4 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n12 / 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n12 / 4 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n12 / 4 = 3 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n17 - 5 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n17 - 5 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n17 - 5 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n17 - 5 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    50,
                    0,
                    100,
                    100,
                    0,
                    100,
                    50,
                    100,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 + 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n17 - 5 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 8 9 12",
                "ys": [
                    "9 - 5 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 + 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "8 + 9 = 17 (left: 5 12 17)\n17 - 5 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (9 - 5 + 8) + 12 = 24\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 + 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (9 - 5 + 8) + 12 = 24\n",
                    "9 - 5 = 4 (left: 4 8 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (12 / (9 - 5)) * 8 = 24\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 5) * (12 / (8 / 4)) = 24\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (12 - 5) + 8 = 24\n",
                    "12 - 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (12 - 5) + (8 + 9) = 24\n",
                    "8 + 9 = 17 (left: 5 12 17)\n17 - 5 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (8 + 9 - 5) + 12 = 24\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    1000
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (9 - 5 + 8) + 12 = 24\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 + 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (9 - 5 + 8) + 12 = 24\n",
                    "9 - 5 = 4 (left: 4 8 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (12 / (9 - 5)) * 8 = 24\n",
                    "9 - 5 = 4 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 5) * (12 / (8 / 4)) = 24\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (12 - 5) + 8 = 24\n",
                    "12 - 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (12 - 5) + (8 + 9) = 24\n",
                    "8 + 9 = 17 (left: 5 12 17)\n17 - 5 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (8 + 9 - 5) + 12 = 24\n"
                ]
            }
        ],
        "idx": 827,
        "ys": [
            "9 - 5 = 4 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (9 - 5 + 8) + 12 = 24\n",
            "9 - 5 = 4 (left: 4 8 12)\n8 + 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (9 - 5 + 8) + 12 = 24\n",
            "9 - 5 = 4 (left: 4 8 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (12 / (9 - 5)) * 8 = 24\n",
            "9 - 5 = 4 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 5) * (12 / (8 / 4)) = 24\n",
            "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (12 - 5) + 8 = 24\n",
            "12 - 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (12 - 5) + (8 + 9) = 24\n",
            "8 + 9 = 17 (left: 5 12 17)\n17 - 5 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (8 + 9 - 5) + 12 = 24\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 49110,
            "prompt_tokens": 190114,
            "cost": 8.65002
        },
        "time_spent": 35.73237609863281
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 1 4 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n",
                    "4 + 1 = 5 (left: 1 5 10)\n",
                    "10 + 1 = 11 (left: 1 4 11)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n",
                    "4 - 1 = 3 (left: 1 3 10)\n",
                    "10 - 4 = 6 (left: 1 1 6)\n",
                    "10 - 1 = 9 (left: 1 4 9)\n",
                    "10 / 1 = 10 (left: 1 4 10)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n",
                    "4 + 1 = 5 (left: 1 5 10)\n",
                    "10 + 1 = 11 (left: 1 4 11)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n",
                    "4 - 1 = 3 (left: 1 3 10)\n",
                    "10 - 1 = 9 (left: 1 4 9)\n",
                    "10 / 1 = 10 (left: 1 4 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 1 4 10",
                "ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n",
                    "4 + 1 = 5 (left: 1 5 10)\n",
                    "10 + 1 = 11 (left: 1 4 11)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n",
                    "4 - 1 = 3 (left: 1 3 10)\n",
                    "10 - 1 = 9 (left: 1 4 9)\n",
                    "10 / 1 = 10 (left: 1 4 10)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 - 2 = 2 (left: 2 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 * 4 = 8 (left: 8 10)\n",
                    "4 + 1 = 5 (left: 1 5 10)\n1 + 5 = 6 (left: 6 10)\n",
                    "4 + 1 = 5 (left: 1 5 10)\n5 + 1 = 6 (left: 6 10)\n",
                    "4 + 1 = 5 (left: 1 5 10)\n10 + 1 = 11 (left: 5 11)\n",
                    "4 + 1 = 5 (left: 1 5 10)\n10 - 5 = 5 (left: 1 5)\n",
                    "4 + 1 = 5 (left: 1 5 10)\n10 - 1 = 9 (left: 5 9)\n",
                    "4 + 1 = 5 (left: 1 5 10)\n5 - 1 = 4 (left: 4 10)\n",
                    "4 + 1 = 5 (left: 1 5 10)\n10 / 5 = 2 (left: 1 2)\n",
                    "4 + 1 = 5 (left: 1 5 10)\n5 * 1 = 5 (left: 5 10)\n",
                    "10 + 1 = 11 (left: 1 4 11)\n1 + 4 = 5 (left: 5 11)\n",
                    "10 + 1 = 11 (left: 1 4 11)\n4 + 11 = 15 (left: 1 15)\n",
                    "10 + 1 = 11 (left: 1 4 11)\n11 - 4 = 7 (left: 1 7)\n",
                    "10 + 1 = 11 (left: 1 4 11)\n11 - 1 = 10 (left: 4 10)\n",
                    "10 + 1 = 11 (left: 1 4 11)\n4 - 1 = 3 (left: 3 11)\n",
                    "10 + 1 = 11 (left: 1 4 11)\n11 / 1 = 11 (left: 4 11)\n",
                    "10 + 1 = 11 (left: 1 4 11)\n4 * 1 = 4 (left: 4 11)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n4 + 10 = 14 (left: 1 14)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 - 4 = 6 (left: 1 6)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 - 1 = 9 (left: 4 9)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n4 - 1 = 3 (left: 3 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 / 2 = 5 (left: 1 5)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n4 * 1 = 4 (left: 4 10)\n",
                    "4 - 1 = 3 (left: 1 3 10)\n1 + 3 = 4 (left: 4 10)\n",
                    "4 - 1 = 3 (left: 1 3 10)\n3 + 1 = 4 (left: 4 10)\n",
                    "4 - 1 = 3 (left: 1 3 10)\n10 + 1 = 11 (left: 3 11)\n",
                    "4 - 1 = 3 (left: 1 3 10)\n10 - 1 = 9 (left: 3 9)\n",
                    "4 - 1 = 3 (left: 1 3 10)\n10 - 3 = 7 (left: 1 7)\n",
                    "4 - 1 = 3 (left: 1 3 10)\n10 / 2 = 5 (left: 1 3 5)\n",
                    "4 - 1 = 3 (left: 1 3 10)\n3 - 1 = 2 (left: 2 10)\n",
                    "4 - 1 = 3 (left: 1 3 10)\n10 * 1 = 10 (left: 3 10)\n",
                    "4 - 1 = 3 (left: 1 3 10)\n3 * 1 = 3 (left: 3 10)\n",
                    "10 - 1 = 9 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)\n",
                    "10 - 1 = 9 (left: 1 4 9)\n4 + 9 = 13 (left: 1 13)\n",
                    "10 - 1 = 9 (left: 1 4 9)\n9 - 4 = 5 (left: 1 5)\n",
                    "10 - 1 = 9 (left: 1 4 9)\n4 - 1 = 3 (left: 3 9)\n",
                    "10 - 1 = 9 (left: 1 4 9)\n9 - 1 = 8 (left: 4 8)\n",
                    "10 - 1 = 9 (left: 1 4 9)\n4 * 1 = 4 (left: 4 9)\n",
                    "10 - 1 = 9 (left: 1 4 9)\n9 / 1 = 9 (left: 4 9)\n",
                    "10 / 1 = 10 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n",
                    "10 / 1 = 10 (left: 1 4 10)\n4 + 10 = 14 (left: 1 14)\n",
                    "10 / 1 = 10 (left: 1 4 10)\n10 - 4 = 6 (left: 1 6)\n",
                    "10 / 1 = 10 (left: 1 4 10)\n10 - 1 = 9 (left: 4 9)\n",
                    "10 / 1 = 10 (left: 1 4 10)\n4 - 1 = 3 (left: 3 10)\n",
                    "10 / 1 = 10 (left: 1 4 10)\n10 / 2 = 5 (left: 1 5)\n",
                    "10 / 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 4 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 - 2 = 2 (left: 2 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 * 4 = 8 (left: 8 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 1 4 10",
                "ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 - 2 = 2 (left: 2 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 * 4 = 8 (left: 8 10)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 / 6 \u2248 1.67 (left: 1.67)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 + 14 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n14 - 2 = 12 (left: 12)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n14 / 2 = 7 (left: 7)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 * 14 = 28 (left: 28)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n2 + 6 = 8 (left: 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n6 - 2 = 4 (left: 4)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n6 / 2 = 3 (left: 3)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n4 + 5 = 9 (left: 9)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n5 - 4 = 1 (left: 1)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 - 2 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 - 2 = 2 (left: 2 10)\n10 - 2 = 8 (left: 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 - 2 = 2 (left: 2 10)\n10 / 2 = 5 (left: 5)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 - 2 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n4 + 8 = 12 (left: 12)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n8 - 4 = 4 (left: 4)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n4 * 8 = 32 (left: 32)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n8 / 4 = 2 (left: 2)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 * 4 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 * 4 = 8 (left: 8 10)\n10 - 8 = 2 (left: 2)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 + 14 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n14 - 2 = 12 (left: 12)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 * 14 = 28 (left: 28)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 - 2 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 1 4 10",
                "ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 + 14 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n14 - 2 = 12 (left: 12)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 * 14 = 28 (left: 28)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 - 2 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\nInput: 16\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\nPossible next steps:\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 / 8 = 2 (left: 2 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 + 14 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 + 14 = 16 (left: 16)\n16 - 8 = 8 (left: 8 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 + 14 = 16 (left: 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n14 - 2 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n14 - 2 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n14 - 2 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n14 - 2 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n14 - 2 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 * 14 = 28 (left: 28)\nInput: 28\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 * 14 = 28 (left: 28)\nPossible next steps:\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 * 14 = 28 (left: 28)\n2 + 8 = 10 (left: 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 * 14 = 28 (left: 28)\n8 - 2 = 6 (left: 6)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 * 14 = 28 (left: 28)\n2 * 8 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 * 14 = 28 (left: 28)\n8 / 2 = 4 (left: 4)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\nInput: 20\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\nPossible next steps:\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\nNone (Target reached)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 - 2 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 - 2 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 - 2 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 - 2 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 - 2 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\nInput: 16\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\nPossible next steps:\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 / 8 = 2 (left: 2 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 + 14 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 + 14 = 16 (left: 16)\n16 - 8 = 8 (left: 8 16)\n"
                ]
            }
        ],
        "idx": 828,
        "ys": [
            "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\nInput: 16\n",
            "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\nPossible next steps:\n",
            "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
            "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 - 8 = 8 (left: 8 8)\n",
            "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 / 8 = 2 (left: 2 8)\n",
            "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 + 14 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
            "1 + 1 = 2 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 + 14 = 16 (left: 16)\n16 - 8 = 8 (left: 8 16)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 51269,
            "prompt_tokens": 195860,
            "cost": 8.95194
        },
        "time_spent": 40.53207778930664
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 9 10 13)\n",
                    "5 + 4 = 9 (left: 9 10 13)\n",
                    "10 + 4 = 14 (left: 5 13 14)\n",
                    "13 + 4 = 17 (left: 5 10 17)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n",
                    "13 - 5 = 8 (left: 4 8 10)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n",
                    "10 - 5 = 5 (left: 4 5 13)\n",
                    "13 - 10 = 3 (left: 3 4 5)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 5 9 10)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n",
                    "5 + 4 = 9 (left: 9 10 13)\n",
                    "10 + 4 = 14 (left: 5 13 14)\n",
                    "13 + 4 = 17 (left: 5 10 17)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 10 13",
                "ys": [
                    "13 - 4 = 9 (left: 5 9 10)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n",
                    "5 + 4 = 9 (left: 9 10 13)\n",
                    "10 + 4 = 14 (left: 5 13 14)\n",
                    "13 + 4 = 17 (left: 5 10 17)\n"
                ],
                "new_ys": [
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 - 9 = 1 (left: 1 5)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n4 + 13 = 17 (left: 15 17)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n15 + 4 = 19 (left: 13 19)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n15 - 13 = 2 (left: 2 4)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n13 - 4 = 9 (left: 9 15)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n15 - 4 = 11 (left: 11 13)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n13 * 4 = 52 (left: 15 52)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n15 / 3 = 5 (left: 4 5)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n4 + 10 = 14 (left: 14 18)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n18 - 10 = 8 (left: 4 8)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n18 / 2 = 9 (left: 4 9 10)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n10 * 4 = 40 (left: 18 40)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n9 + 10 = 19 (left: 13 19)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n13 - 9 = 4 (left: 4 10)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n13 - 10 = 3 (left: 3 9)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 + 13 = 23 (left: 9 23)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n9 * 10 = 90 (left: 13 90)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n13 + 9 = 22 (left: 10 22)\n",
                    "5 + 4 = 9 (left: 9 10 13)\n9 + 10 = 19 (left: 13 19)\n",
                    "5 + 4 = 9 (left: 9 10 13)\n13 + 10 = 23 (left: 9 23)\n",
                    "5 + 4 = 9 (left: 9 10 13)\n13 - 9 = 4 (left: 4 10)\n",
                    "5 + 4 = 9 (left: 9 10 13)\n13 - 10 = 3 (left: 3 9)\n",
                    "5 + 4 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 13)\n",
                    "10 + 4 = 14 (left: 5 13 14)\n5 + 13 = 18 (left: 14 18)\n",
                    "10 + 4 = 14 (left: 5 13 14)\n14 + 5 = 19 (left: 13 19)\n",
                    "10 + 4 = 14 (left: 5 13 14)\n14 - 5 = 9 (left: 9 13)\n",
                    "10 + 4 = 14 (left: 5 13 14)\n13 - 5 = 8 (left: 8 14)\n",
                    "10 + 4 = 14 (left: 5 13 14)\n14 - 13 = 1 (left: 1 5)\n",
                    "10 + 4 = 14 (left: 5 13 14)\n13 + 14 = 27 (left: 5 27)\n",
                    "10 + 4 = 14 (left: 5 13 14)\n5 * 13 = 65 (left: 14 65)\n",
                    "10 + 4 = 14 (left: 5 13 14)\n14 * 5 = 70 (left: 13 70)\n",
                    "13 + 4 = 17 (left: 5 10 17)\n5 + 10 = 15 (left: 15 17)\n",
                    "13 + 4 = 17 (left: 5 10 17)\n17 - 10 = 7 (left: 5 7)\n",
                    "13 + 4 = 17 (left: 5 10 17)\n17 - 5 = 12 (left: 10 12)\n",
                    "13 + 4 = 17 (left: 5 10 17)\n10 + 5 = 15 (left: 15 17)\n",
                    "13 + 4 = 17 (left: 5 10 17)\n17 + 5 = 22 (left: 10 22)\n",
                    "13 + 4 = 17 (left: 5 10 17)\n10 * 5 = 50 (left: 17 50)\n",
                    "13 + 4 = 17 (left: 5 10 17)\n17 + 10 = 27 (left: 5 27)\n",
                    "13 + 4 = 17 (left: 5 10 17)\n10 / 5 = 2 (left: 2 17)\n"
                ],
                "values": [
                    100,
                    50,
                    0,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    0,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n13 - 4 = 9 (left: 9 15)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n15 - 4 = 11 (left: 11 13)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 10 13",
                "ys": [
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n13 - 4 = 9 (left: 9 15)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n15 - 4 = 11 (left: 11 13)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n"
                ],
                "new_ys": [
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\nInput: 5 19\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\nPossible next steps:\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 / 5 = 3 (left: 3)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n5 * 19 = 95 (left: 95)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n13 - 4 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n13 - 4 = 9 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n15 - 4 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n15 - 4 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n18 - 6 = 12 (left: 12)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n18 / 6 = 3 (left: 3)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n6 * 3 = 18 (left: 18)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    100,
                    0,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    100,
                    100,
                    0,
                    100,
                    0,
                    100,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n13 - 4 = 9 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n15 - 4 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 10 13",
                "ys": [
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n13 - 4 = 9 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "10 + 5 = 15 (left: 4 13 15)\n15 - 4 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 + 5 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (5 + (13 - 4)) = 24\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (13 - 4) + (10 + 5) = 24\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\nAnswer: 5 + (10 + (13 - 4)) = 24\n",
                    "10 + 5 = 15 (left: 4 13 15)\n13 - 4 = 9 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (13 - 4) + (10 + 5) = 24\n",
                    "10 + 5 = 15 (left: 4 13 15)\n15 - 4 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (10 + 5) + 13 - 4 = 24\n",
                    "13 + 5 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + ((13 + 5) - 4) = 24\n",
                    "13 + 5 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (13 + 5) + (10 - 4) = 24\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    1000
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (5 + (13 - 4)) = 24\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (13 - 4) + (10 + 5) = 24\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\nAnswer: 5 + (10 + (13 - 4)) = 24\n",
                    "10 + 5 = 15 (left: 4 13 15)\n13 - 4 = 9 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (13 - 4) + (10 + 5) = 24\n",
                    "10 + 5 = 15 (left: 4 13 15)\n15 - 4 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (10 + 5) + 13 - 4 = 24\n",
                    "13 + 5 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + ((13 + 5) - 4) = 24\n",
                    "13 + 5 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (13 + 5) + (10 - 4) = 24\n"
                ]
            }
        ],
        "idx": 829,
        "ys": [
            "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (5 + (13 - 4)) = 24\n",
            "13 - 4 = 9 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (13 - 4) + (10 + 5) = 24\n",
            "13 - 4 = 9 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\nAnswer: 5 + (10 + (13 - 4)) = 24\n",
            "10 + 5 = 15 (left: 4 13 15)\n13 - 4 = 9 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (13 - 4) + (10 + 5) = 24\n",
            "10 + 5 = 15 (left: 4 13 15)\n15 - 4 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (10 + 5) + 13 - 4 = 24\n",
            "13 + 5 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + ((13 + 5) - 4) = 24\n",
            "13 + 5 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (13 + 5) + (10 - 4) = 24\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 52898,
            "prompt_tokens": 204441,
            "cost": 9.30711
        },
        "time_spent": 34.76430583000183
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 3 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n",
                    "9 + 3 = 12 (left: 2 3 12)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n",
                    "9 / 3 = 3 (left: 2 3 3)\n",
                    "9 - 2 = 7 (left: 3 3 7)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n",
                    "9 - 2 = 7 (left: 3 3 7)\n",
                    "9 + 3 = 12 (left: 2 3 12)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n",
                    "9 / 3 = 3 (left: 2 3 3)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 3 9",
                "ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n",
                    "9 - 2 = 7 (left: 3 3 7)\n",
                    "9 + 3 = 12 (left: 2 3 12)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n",
                    "9 / 3 = 3 (left: 2 3 3)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 + 3 = 12 (left: 5 12)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 / 3 = 3 (left: 3 5)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n6 + 9 = 15 (left: 2 15)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n9 - 6 = 3 (left: 2 3)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n6 - 2 = 4 (left: 4 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n",
                    "3 + 3 = 6 (left: 2 6 9)\n9 / 3 = 3 (left: 2 3)\n",
                    "9 - 2 = 7 (left: 3 3 7)\n3 + 3 = 6 (left: 6 7)\n",
                    "9 - 2 = 7 (left: 3 3 7)\n3 * 3 = 9 (left: 7 9)\n",
                    "9 - 2 = 7 (left: 3 3 7)\n7 + 3 = 10 (left: 3 10)\n",
                    "9 - 2 = 7 (left: 3 3 7)\n7 - 3 = 4 (left: 3 4)\n",
                    "9 + 3 = 12 (left: 2 3 12)\n2 + 3 = 5 (left: 5 12)\n",
                    "9 + 3 = 12 (left: 2 3 12)\n3 + 12 = 15 (left: 2 15)\n",
                    "9 + 3 = 12 (left: 2 3 12)\n12 - 3 = 9 (left: 2 9)\n",
                    "9 + 3 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n",
                    "9 + 3 = 12 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n",
                    "9 + 3 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 3 10)\n",
                    "9 + 3 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n9 + 9 = 18 (left: 2 18)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n9 / 9 = 1 (left: 1 2)\n",
                    "3 * 3 = 9 (left: 2 9 9)\n2 * 9 = 18 (left: 9 18)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n2 + 3 = 5 (left: 5 6)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n3 + 6 = 9 (left: 2 9)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n2 * 3 = 6 (left: 6 6)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n",
                    "9 / 3 = 3 (left: 2 3 3)\n2 + 3 = 5 (left: 3 5)\n",
                    "9 / 3 = 3 (left: 2 3 3)\n3 + 3 = 6 (left: 2 6)\n",
                    "9 / 3 = 3 (left: 2 3 3)\n3 - 2 = 1 (left: 1 3)\n",
                    "9 / 3 = 3 (left: 2 3 3)\n3 * 2 = 6 (left: 3 6)\n",
                    "9 / 3 = 3 (left: 2 3 3)\n3 / 3 = 1 (left: 1 2)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 + 3 = 12 (left: 5 12)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 / 3 = 3 (left: 3 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 3 9",
                "ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 + 3 = 12 (left: 5 12)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 / 3 = 3 (left: 3 5)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n9 - 8 = 1 (left: 1)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n9 - 8 = 1 (left: 1)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n9 / 8 = 1.125 (invalid)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 + 3 = 12 (left: 5 12)\n5 + 12 = 17 (left: 17)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 + 3 = 12 (left: 5 12)\n12 - 5 = 7 (left: 7)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 + 3 = 12 (left: 5 12)\n12 / 5 = 2.4 (left: 2.4)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 + 3 = 12 (left: 5 12)\n5 * 12 = 60 (left: 60)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n6 - 5 = 1 (left: 1)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 + 4 = 7 (left: 7)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n4 - 3 = 1 (left: 1)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 / 3 = 3 (left: 3 5)\n3 + 5 = 8 (left: 8)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 / 3 = 3 (left: 3 5)\n5 - 3 = 2 (left: 2)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 / 3 = 3 (left: 3 5)\n3 * 5 = 15 (left: 15)\n"
                ],
                "values": [
                    100,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 + 3 = 12 (left: 5 12)\n5 + 12 = 17 (left: 17)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 3 9",
                "ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 + 3 = 12 (left: 5 12)\n5 + 12 = 17 (left: 17)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (2 + 3) * 3 = 24\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNone\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNone (only one number left)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 + 3 = 12 (left: 5 12)\n5 + 12 = 17 (left: 17)\nInput: 17\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 + 3 = 12 (left: 5 12)\n5 + 12 = 17 (left: 17)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 + 3 = 12 (left: 5 12)\n5 + 12 = 17 (left: 17)\nNone\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nInput: 11\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nNone\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\nInput: 30\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\nNone\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (2 + 3) * 3 = 24\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNone\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNone (only one number left)\n"
                ]
            }
        ],
        "idx": 830,
        "ys": [
            "2 + 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (2 + 3) * 3 = 24\n",
            "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
            "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
            "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNone\n",
            "2 + 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
            "2 + 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
            "2 + 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNone (only one number left)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 54448,
            "prompt_tokens": 210592,
            "cost": 9.58464
        },
        "time_spent": 34.84639000892639
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 4 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n",
                    "4 + 3 = 7 (left: 3 7 9)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n",
                    "9 / 3 = 3 (left: 3 3 4)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n",
                    "9 - 4 = 5 (left: 3 3 5)\n",
                    "Input: 1 5 5 5\n",
                    "Possible next steps:\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 + 3 = 12 (left: 3 4 12)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n",
                    "4 + 3 = 7 (left: 3 7 9)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n",
                    "9 / 3 = 3 (left: 3 3 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 4 9",
                "ys": [
                    "9 + 3 = 12 (left: 3 4 12)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n",
                    "4 + 3 = 7 (left: 3 7 9)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n",
                    "9 / 3 = 3 (left: 3 3 4)\n"
                ],
                "new_ys": [
                    "9 + 3 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n4 + 12 = 16 (left: 3 16)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n12 / 3 = 4 (left: 4 4)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 - 9 = 3 (left: 3 3)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 - 3 = 9 (left: 9 9)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 / 3 = 4 (left: 4 9)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n9 / 3 = 3 (left: 3 12)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n9 * 3 = 27 (left: 12 27)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 - 4 = 5 (left: 5 6)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 - 6 = 3 (left: 3 4)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n6 - 4 = 2 (left: 2 9)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 * 6 = 24 (left: 9 24)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 6 = 15 (left: 4 15)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n6 * 4 = 24 (left: 9 24)\n",
                    "3 + 3 = 6 (left: 4 6 9)\nInput: 1 3 7 9\n",
                    "3 + 3 = 6 (left: 4 6 9)\nPossible next steps:\n",
                    "3 * 3 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 13)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n9 * 4 = 36 (left: 9 36)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 9)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n9 + 9 = 18 (left: 4 18)\n",
                    "4 + 3 = 7 (left: 3 7 9)\n3 + 7 = 10 (left: 9 10)\n",
                    "4 + 3 = 7 (left: 3 7 9)\n9 - 3 = 6 (left: 6 7)\n",
                    "4 + 3 = 7 (left: 3 7 9)\n9 - 7 = 2 (left: 2 3)\n",
                    "4 + 3 = 7 (left: 3 7 9)\n3 * 7 = 21 (left: 9 21)\n",
                    "4 + 3 = 7 (left: 3 7 9)\n9 + 3 = 12 (left: 7 12)\n",
                    "4 + 3 = 7 (left: 3 7 9)\n9 + 7 = 16 (left: 3 16)\n",
                    "4 + 3 = 7 (left: 3 7 9)\n7 - 3 = 4 (left: 4 9)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 6 7)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n4 + 6 = 10 (left: 3 10)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n6 - 3 = 3 (left: 3 4)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n3 * 4 = 12 (left: 6 12)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n",
                    "9 - 3 = 6 (left: 3 4 6)\n4 * 6 = 24 (left: 3 24)\n",
                    "9 / 3 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n",
                    "9 / 3 = 3 (left: 3 3 4)\n3 * 3 = 9 (left: 4 9)\n",
                    "9 / 3 = 3 (left: 3 3 4)\n4 + 3 = 7 (left: 3 7)\n",
                    "9 / 3 = 3 (left: 3 3 4)\n4 - 3 = 1 (left: 1 3)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    100,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    100,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n",
                    "9 / 3 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 4 9",
                "ys": [
                    "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n",
                    "9 / 3 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n"
                ],
                "new_ys": [
                    "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n3 + 21 = 24 (left: 24)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n21 - 3 = 18 (left: 18)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n21 / 3 = 7 (left: 7)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n3 * 21 = 63 (left: 63)\n",
                    "9 / 3 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 / 3 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "9 / 3 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n7 + 12 = 19 (left: 19)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n12 - 7 = 5 (left: 5)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n12 / 7 \u2248 1.71 (left: 1.71)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    100,
                    50,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n3 + 21 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 4 9",
                "ys": [
                    "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n3 + 21 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((9 + 3) - 4) = 24\n",
                    "9 + 3 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (9 + 3) + (3 * 4) = 24\n",
                    "4 * 3 = 12 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 * 3) + (3 + 9) = 24\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (4 * 3 + 3) = 24\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n3 + 21 = 24 (left: 24)\nAnswer: 3 + (4 * 3 + 9) = 24\n",
                    "9 / 3 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (3 + 9 / 3) = 24\n",
                    "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNo possible operations with a single number.\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((9 + 3) - 4) = 24\n",
                    "9 + 3 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (9 + 3) + (3 * 4) = 24\n",
                    "4 * 3 = 12 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 * 3) + (3 + 9) = 24\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (4 * 3 + 3) = 24\n",
                    "4 * 3 = 12 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n3 + 21 = 24 (left: 24)\nAnswer: 3 + (4 * 3 + 9) = 24\n",
                    "9 / 3 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (3 + 9 / 3) = 24\n",
                    "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n"
                ]
            }
        ],
        "idx": 831,
        "ys": [
            "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((9 + 3) - 4) = 24\n",
            "9 + 3 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (9 + 3) + (3 * 4) = 24\n",
            "4 * 3 = 12 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 * 3) + (3 + 9) = 24\n",
            "4 * 3 = 12 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (4 * 3 + 3) = 24\n",
            "4 * 3 = 12 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n3 + 21 = 24 (left: 24)\nAnswer: 3 + (4 * 3 + 9) = 24\n",
            "9 / 3 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (3 + 9 / 3) = 24\n",
            "9 + 3 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 56174,
            "prompt_tokens": 218768,
            "cost": 9.93348
        },
        "time_spent": 36.351481914520264
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n",
                    "4 + 6 = 10 (left: 3 10 10)\n",
                    "10 + 3 = 13 (left: 4 6 13)\n",
                    "3 * 4 = 12 (left: 6 10 12)\n",
                    "6 - 3 = 3 (left: 3 4 10)\n",
                    "10 - 6 = 4 (left: 3 4 4)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n",
                    "6 * 4 = 24 (left: 3 10 24)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n",
                    "4 + 6 = 10 (left: 3 10 10)\n",
                    "10 + 3 = 13 (left: 4 6 13)\n",
                    "3 * 4 = 12 (left: 6 10 12)\n",
                    "6 - 3 = 3 (left: 3 4 10)\n",
                    "10 - 6 = 4 (left: 3 4 4)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 6 10",
                "ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n",
                    "4 + 6 = 10 (left: 3 10 10)\n",
                    "10 + 3 = 13 (left: 4 6 13)\n",
                    "3 * 4 = 12 (left: 6 10 12)\n",
                    "6 - 3 = 3 (left: 3 4 10)\n",
                    "10 - 6 = 4 (left: 3 4 4)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 7 = 17 (left: 6 17)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 * 7 = 42 (left: 10 42)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 / 2 = 5 (left: 5 6 7)\n",
                    "4 + 6 = 10 (left: 3 10 10)\n3 + 10 = 13 (left: 10 13)\n",
                    "4 + 6 = 10 (left: 3 10 10)\n10 + 10 = 20 (left: 3 20)\n",
                    "4 + 6 = 10 (left: 3 10 10)\n10 - 3 = 7 (left: 7 10)\n",
                    "4 + 6 = 10 (left: 3 10 10)\n10 / 10 = 1 (left: 1 3)\n",
                    "4 + 6 = 10 (left: 3 10 10)\n10 * 3 = 30 (left: 10 30)\n",
                    "10 + 3 = 13 (left: 4 6 13)\n4 + 6 = 10 (left: 10 13)\n",
                    "10 + 3 = 13 (left: 4 6 13)\n13 + 4 = 17 (left: 6 17)\n",
                    "10 + 3 = 13 (left: 4 6 13)\n13 - 6 = 7 (left: 4 7)\n",
                    "10 + 3 = 13 (left: 4 6 13)\n13 - 4 = 9 (left: 6 9)\n",
                    "10 + 3 = 13 (left: 4 6 13)\n6 - 4 = 2 (left: 2 13)\n",
                    "10 + 3 = 13 (left: 4 6 13)\n13 / 4 = 3.25 (invalid)\n",
                    "10 + 3 = 13 (left: 4 6 13)\n6 * 4 = 24 (left: 13 24)\n",
                    "3 * 4 = 12 (left: 6 10 12)\n6 + 10 = 16 (left: 12 16)\n",
                    "3 * 4 = 12 (left: 6 10 12)\n12 - 6 = 6 (left: 6 10)\n",
                    "3 * 4 = 12 (left: 6 10 12)\n12 - 10 = 2 (left: 2 6)\n",
                    "3 * 4 = 12 (left: 6 10 12)\n10 + 6 = 16 (left: 12 16)\n",
                    "3 * 4 = 12 (left: 6 10 12)\n12 / 6 = 2 (left: 2 10)\n",
                    "3 * 4 = 12 (left: 6 10 12)\n12 / 2 = 6 (left: 6 10)\n",
                    "6 - 3 = 3 (left: 3 4 10)\n3 + 4 = 7 (left: 7 10)\n",
                    "6 - 3 = 3 (left: 3 4 10)\n4 + 10 = 14 (left: 3 14)\n",
                    "6 - 3 = 3 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n",
                    "6 - 3 = 3 (left: 3 4 10)\n10 - 3 = 7 (left: 4 7)\n",
                    "6 - 3 = 3 (left: 3 4 10)\n3 * 4 = 12 (left: 10 12)\n",
                    "6 - 3 = 3 (left: 3 4 10)\n10 / 2 = 5 (left: 3 4 5)\n",
                    "10 - 6 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 7)\n",
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n",
                    "10 - 6 = 4 (left: 3 4 4)\n4 - 3 = 1 (left: 1 4)\n",
                    "10 - 6 = 4 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "10 - 6 = 4 (left: 3 4 4)\n3 * 4 = 12 (left: 4 12)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n3 + 6 = 9 (left: 5 9)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n6 - 3 = 3 (left: 3 5)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n6 - 5 = 1 (left: 1 3)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n3 * 6 = 18 (left: 5 18)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 7 = 17 (left: 6 17)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 6 10",
                "ys": [
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 7 = 17 (left: 6 17)\n"
                ],
                "new_ys": [
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n13 - 10 = 3 (left: 3)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 + 6 = 9 (left: 9)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n6 - 3 = 3 (left: 3)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n6 / 3 = 2 (left: 2)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n7 - 4 = 3 (left: 3)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n7 / 4 = 1.75 (invalid)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\nInput: 1 10\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n7 + 16 = 23 (left: 23)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n16 - 7 = 9 (left: 9)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n16 / 7 \u2248 2.29 (left: 2.29)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n7 * 16 = 112 (left: 112)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 7 = 17 (left: 6 17)\n6 + 17 = 23 (left: 23)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 7 = 17 (left: 6 17)\n17 - 6 = 11 (left: 11)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 6 10",
                "ys": [
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((10 - 6) + 4) = 24\n",
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n(There are no possible next steps with only one number)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nInput: 23\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nNone\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\nInput: 18\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 8 = 26 (left: 2 26)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nInput: 11\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nNone\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\nInput: 28\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n2 + 8 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n8 - 2 = 6 (left: 6)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n2 * 8 = 16 (left: 16)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n8 / 2 = 4 (left: 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nInput: 11\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nNone\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((10 - 6) + 4) = 24\n",
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n(There are no possible next steps with only one number)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nInput: 23\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nNone\n"
                ]
            }
        ],
        "idx": 832,
        "ys": [
            "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((10 - 6) + 4) = 24\n",
            "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
            "10 - 6 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n(There are no possible next steps with only one number)\n",
            "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nInput: 23\n",
            "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nPossible next steps:\n",
            "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nNone\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 57958,
            "prompt_tokens": 224919,
            "cost": 10.22505
        },
        "time_spent": 36.73202991485596
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 6 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 6 7 12)\n",
                    "4 + 6 = 10 (left: 3 10 12)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n",
                    "12 / 3 = 4 (left: 4 4 6)\n",
                    "12 - 4 = 8 (left: 3 6 8)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "6 + 12 = 18 (left: 3 4 18)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n",
                    "3 + 4 = 7 (left: 6 7 12)\n",
                    "4 + 6 = 10 (left: 3 10 12)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n",
                    "12 / 3 = 4 (left: 4 4 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 6 12",
                "ys": [
                    "6 + 12 = 18 (left: 3 4 18)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n",
                    "3 + 4 = 7 (left: 6 7 12)\n",
                    "4 + 6 = 10 (left: 3 10 12)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n",
                    "12 / 3 = 4 (left: 4 4 6)\n"
                ],
                "new_ys": [
                    "6 + 12 = 18 (left: 3 4 18)\n3 + 4 = 7 (left: 7 18)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n4 + 3 = 7 (left: 7 18)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 + 3 = 21 (left: 4 21)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 + 4 = 22 (left: 3 22)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 - 3 = 15 (left: 4 15)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 - 4 = 14 (left: 3 14)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n3 * 4 = 12 (left: 12 18)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 * 2 = 24 (left: 6 24)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n4 + 3 = 7 (left: 7 12)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n12 + 3 = 15 (left: 4 15)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n12 + 4 = 16 (left: 3 16)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n12 / 3 = 4 (left: 4 4)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n12 / 4 = 3 (left: 3 3)\n",
                    "3 + 4 = 7 (left: 6 7 12)\n6 + 7 = 13 (left: 12 13)\n",
                    "3 + 4 = 7 (left: 6 7 12)\n12 - 6 = 6 (left: 6 7)\n",
                    "3 + 4 = 7 (left: 6 7 12)\n12 - 7 = 5 (left: 5 6)\n",
                    "3 + 4 = 7 (left: 6 7 12)\n12 + 6 = 18 (left: 7 18)\n",
                    "3 + 4 = 7 (left: 6 7 12)\n12 + 7 = 19 (left: 6 19)\n",
                    "3 + 4 = 7 (left: 6 7 12)\n12 / 6 = 2 (left: 2 7)\n",
                    "3 + 4 = 7 (left: 6 7 12)\n7 - 6 = 1 (left: 1 12)\n",
                    "4 + 6 = 10 (left: 3 10 12)\n3 + 10 = 13 (left: 12 13)\n",
                    "4 + 6 = 10 (left: 3 10 12)\n12 + 3 = 15 (left: 10 15)\n",
                    "4 + 6 = 10 (left: 3 10 12)\n12 - 3 = 9 (left: 9 10)\n",
                    "4 + 6 = 10 (left: 3 10 12)\n12 - 10 = 2 (left: 2 3)\n",
                    "4 + 6 = 10 (left: 3 10 12)\n10 + 3 = 13 (left: 12 13)\n",
                    "4 + 6 = 10 (left: 3 10 12)\n12 / 3 = 4 (left: 4 10)\n",
                    "4 + 6 = 10 (left: 3 10 12)\n10 - 3 = 7 (left: 7 12)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n3 + 4 = 7 (left: 6 7)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n4 + 6 = 10 (left: 3 10)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n6 - 3 = 3 (left: 3 4)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n3 * 4 = 12 (left: 6 12)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n4 * 6 = 24 (left: 3 24)\n",
                    "12 - 6 = 6 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n",
                    "12 / 3 = 4 (left: 4 4 6)\n4 + 4 = 8 (left: 6 8)\n",
                    "12 / 3 = 4 (left: 4 4 6)\n4 * 4 = 16 (left: 6 16)\n",
                    "12 / 3 = 4 (left: 4 4 6)\n6 + 4 = 10 (left: 4 10)\n",
                    "12 / 3 = 4 (left: 4 4 6)\n6 - 4 = 2 (left: 2 4)\n",
                    "12 / 3 = 4 (left: 4 4 6)\n6 / 2 = 3 (left: 3 4)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n3 + 4 = 7 (left: 7 18)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n4 + 3 = 7 (left: 7 18)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 + 3 = 21 (left: 4 21)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 6 12",
                "ys": [
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n3 + 4 = 7 (left: 7 18)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n4 + 3 = 7 (left: 7 18)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 + 3 = 21 (left: 4 21)\n"
                ],
                "new_ys": [
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\nInput: 3 8\n",
                    "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\nPossible next steps:\n",
                    "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n3 + 4 = 7 (left: 7 18)\n7 + 18 = 25 (left: 25)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n3 + 4 = 7 (left: 7 18)\n18 - 7 = 11 (left: 11)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n3 + 4 = 7 (left: 7 18)\n18 / 7 = 2 (left: 2)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n3 + 4 = 7 (left: 7 18)\n7 * 18 = 126 (left: 126)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n4 + 3 = 7 (left: 7 18)\n7 + 18 = 25 (left: 25)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n4 + 3 = 7 (left: 7 18)\n18 - 7 = 11 (left: 11)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n4 + 3 = 7 (left: 7 18)\n18 / 7 = 2 (left: 2)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n4 + 3 = 7 (left: 7 18)\n7 * 18 = 126 (left: 126)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 + 3 = 21 (left: 4 21)\n4 + 21 = 25 (left: 25)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 + 3 = 21 (left: 4 21)\n21 - 4 = 17 (left: 17)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 + 3 = 21 (left: 4 21)\n21 / 4 = 5.25 (invalid)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 + 3 = 21 (left: 4 21)\n4 * 21 = 84 (left: 84)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    100,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 6 12",
                "ys": [
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "6 - 3 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((6 + 12) / 3) = 24\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (12 / 6) = 24\n",
                    "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 - 3) * (12 - 4) = 24\n",
                    "6 - 3 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 - 3) * 4 + 12 = 24\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 8 = 80 (left: 14 80)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNone (target reached)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((6 + 12) / 3) = 24\n",
                    "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (12 / 6) = 24\n",
                    "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 - 3) * (12 - 4) = 24\n",
                    "6 - 3 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 - 3) * 4 + 12 = 24\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
                ]
            }
        ],
        "idx": 833,
        "ys": [
            "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((6 + 12) / 3) = 24\n",
            "3 * 4 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (12 / 6) = 24\n",
            "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 - 3) * (12 - 4) = 24\n",
            "6 - 3 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 - 3) * 4 + 12 = 24\n",
            "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
            "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
            "6 + 12 = 18 (left: 3 4 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 59819,
            "prompt_tokens": 232285,
            "cost": 10.55769
        },
        "time_spent": 37.06779861450195
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 7 7 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 7 10 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n",
                    "10 + 3 = 13 (left: 7 7 13)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n",
                    "10 - 7 = 3 (left: 3 3 7)\n",
                    "10 / 2 = 5 (left: 3 5 7)\n",
                    "10 - 3 = 7 (left: 7 7 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 * 7 = 21 (left: 7 10 21)\n",
                    "10 - 7 = 3 (left: 3 3 7)\n",
                    "3 + 7 = 10 (left: 7 10 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n",
                    "10 + 3 = 13 (left: 7 7 13)\n",
                    "10 / 2 = 5 (left: 3 5 7)\n",
                    "10 - 3 = 7 (left: 7 7 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 7 7 10",
                "ys": [
                    "3 * 7 = 21 (left: 7 10 21)\n",
                    "10 - 7 = 3 (left: 3 3 7)\n",
                    "3 + 7 = 10 (left: 7 10 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n",
                    "10 + 3 = 13 (left: 7 7 13)\n",
                    "10 / 2 = 5 (left: 3 5 7)\n",
                    "10 - 3 = 7 (left: 7 7 7)\n"
                ],
                "new_ys": [
                    "3 * 7 = 21 (left: 7 10 21)\n7 + 10 = 17 (left: 17 21)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 10 = 11 (left: 7 11)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 7 = 14 (left: 10 14)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 / 7 = 3 (left: 3 10)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 7 = 28 (left: 10 28)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 * 7 = 70 (left: 21 70)\n",
                    "10 - 7 = 3 (left: 3 3 7)\n3 + 3 = 6 (left: 6 7)\n",
                    "10 - 7 = 3 (left: 3 3 7)\n3 * 3 = 9 (left: 7 9)\n",
                    "10 - 7 = 3 (left: 3 3 7)\n7 + 3 = 10 (left: 3 10)\n",
                    "10 - 7 = 3 (left: 3 3 7)\n7 - 3 = 4 (left: 3 4)\n",
                    "3 + 7 = 10 (left: 7 10 10)\n7 + 10 = 17 (left: 10 17)\n",
                    "3 + 7 = 10 (left: 7 10 10)\n10 + 10 = 20 (left: 7 20)\n",
                    "3 + 7 = 10 (left: 7 10 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "3 + 7 = 10 (left: 7 10 10)\n10 * 7 = 70 (left: 10 70)\n",
                    "3 + 7 = 10 (left: 7 10 10)\n10 / 7 \u2248 1.43 (left: 1.43 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n4 + 7 = 11 (left: 10 11)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 7)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 7 = 3 (left: 3 4)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n7 - 4 = 3 (left: 3 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 + 4 = 14 (left: 7 14)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 + 7 = 17 (left: 4 17)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n7 * 4 = 28 (left: 10 28)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 / 2 = 5 (left: 4 5 7)\n",
                    "10 + 3 = 13 (left: 7 7 13)\n7 + 7 = 14 (left: 13 14)\n",
                    "10 + 3 = 13 (left: 7 7 13)\n13 + 7 = 20 (left: 7 20)\n",
                    "10 + 3 = 13 (left: 7 7 13)\n13 - 7 = 6 (left: 6 7)\n",
                    "10 + 3 = 13 (left: 7 7 13)\n7 * 7 = 49 (left: 13 49)\n",
                    "10 + 3 = 13 (left: 7 7 13)\n13 / 7 = 1 (left: 1 7)\n",
                    "10 / 2 = 5 (left: 3 5 7)\n3 + 5 = 8 (left: 7 8)\n",
                    "10 / 2 = 5 (left: 3 5 7)\n5 + 7 = 12 (left: 3 12)\n",
                    "10 / 2 = 5 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n",
                    "10 / 2 = 5 (left: 3 5 7)\n7 - 5 = 2 (left: 2 3)\n",
                    "10 / 2 = 5 (left: 3 5 7)\n3 * 5 = 15 (left: 7 15)\n",
                    "10 / 2 = 5 (left: 3 5 7)\n5 * 7 = 35 (left: 3 35)\n",
                    "10 / 2 = 5 (left: 3 5 7)\n7 / 3 = 2 (left: 2 5)\n",
                    "10 / 2 = 5 (left: 3 5 7)\nInput: 1 2 3 4\n",
                    "10 - 3 = 7 (left: 7 7 7)\n7 + 7 = 14 (left: 7 14)\n",
                    "10 - 3 = 7 (left: 7 7 7)\n7 * 7 = 49 (left: 7 49)\n",
                    "10 - 3 = 7 (left: 7 7 7)\n7 - 7 = 0 (left: 0 7)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    100,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 7 = 14 (left: 10 14)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n7 + 10 = 17 (left: 17 21)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 10 = 11 (left: 7 11)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 / 7 = 3 (left: 3 10)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 7 = 28 (left: 10 28)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 7 7 10",
                "ys": [
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 7 = 14 (left: 10 14)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n7 + 10 = 17 (left: 17 21)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 10 = 11 (left: 7 11)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 / 7 = 3 (left: 3 10)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 7 = 28 (left: 10 28)\n"
                ],
                "new_ys": [
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 7 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n3 + 21 = 24 (left: 24)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n21 / 3 = 7 (left: 7)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n7 + 31 = 38 (left: 38)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n31 - 7 = 24 (left: 24)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n31 / 7 = 4 (left: 4)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n7 * 31 = 217 (left: 217)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n7 + 10 = 17 (left: 17 21)\n21 - 17 = 4 (left: 4)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n7 + 10 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n7 + 10 = 17 (left: 17 21)\n21 / 17 = 1 (left: 1)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n7 + 10 = 17 (left: 17 21)\n17 * 21 = 357 (left: 357)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 10 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 10 = 11 (left: 7 11)\n11 - 7 = 4 (left: 4)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 10 = 11 (left: 7 11)\n7 * 11 = 77 (left: 77)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 10 = 11 (left: 7 11)\n11 / 7 = 1 (left: 1)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 / 7 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 / 7 = 3 (left: 3 10)\n10 - 3 = 7 (left: 7)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 / 7 = 3 (left: 3 10)\n10 / 3 \u2248 3.33 (left: 3.33)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 / 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 7 = 28 (left: 10 28)\n10 + 28 = 38 (left: 38)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 7 = 28 (left: 10 28)\n28 - 10 = 18 (left: 18)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 7 = 28 (left: 10 28)\n28 / 10 = 2.8 (left: 2.8)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 7 = 28 (left: 10 28)\n10 * 28 = 280 (left: 280)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    50,
                    0,
                    0,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n3 + 21 = 24 (left: 24)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n31 - 7 = 24 (left: 24)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n7 + 31 = 38 (left: 38)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n7 + 10 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 10 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 7 7 10",
                "ys": [
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n3 + 21 = 24 (left: 24)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n31 - 7 = 24 (left: 24)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n7 + 31 = 38 (left: 38)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n7 + 10 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 10 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n"
                ],
                "new_ys": [
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (3 * 7 - 7) = 24\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n3 + 21 = 24 (left: 24)\nAnswer: (3 * 7) + (10 - 7) = 24\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n31 - 7 = 24 (left: 24)\nAnswer: (3 * 7 + 10) - 7 = 24\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\nInput: 18\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\nPossible next steps:\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\n18 + 8 = 26 (left: 2 26)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n7 + 31 = 38 (left: 38)\nInput: 38\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n7 + 31 = 38 (left: 38)\nPossible next steps:\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n7 + 31 = 38 (left: 38)\n3 + 8 = 11 (left: 11)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n7 + 31 = 38 (left: 38)\n8 - 3 = 5 (left: 5)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n7 + 31 = 38 (left: 38)\n3 * 8 = 24 (left: 24)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n7 + 31 = 38 (left: 38)\n38 - 24 = 14 (left: 14 24)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n7 + 31 = 38 (left: 38)\n38 - 14 = 24 (left: 14 24)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n7 + 10 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\nInput: 38\n",
                    "3 * 7 = 21 (left: 7 10 21)\n7 + 10 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\nPossible next steps:\n",
                    "3 * 7 = 21 (left: 7 10 21)\n7 + 10 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\n3 + 8 = 11 (left: 11)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n7 + 10 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\n8 - 3 = 5 (left: 5)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n7 + 10 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\n3 * 8 = 24 (left: 24)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 10 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\nInput: 18\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 10 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\nPossible next steps:\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 10 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 10 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 10 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 7 = 21 (left: 7 10 21)\n21 - 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (3 * 7 - 7) = 24\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n3 + 21 = 24 (left: 24)\nAnswer: (3 * 7) + (10 - 7) = 24\n",
                    "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n31 - 7 = 24 (left: 24)\nAnswer: (3 * 7 + 10) - 7 = 24\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\nInput: 18\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\nPossible next steps:\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n"
                ]
            }
        ],
        "idx": 834,
        "ys": [
            "3 * 7 = 21 (left: 7 10 21)\n21 - 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (3 * 7 - 7) = 24\n",
            "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n3 + 21 = 24 (left: 24)\nAnswer: (3 * 7) + (10 - 7) = 24\n",
            "3 * 7 = 21 (left: 7 10 21)\n21 + 10 = 31 (left: 7 31)\n31 - 7 = 24 (left: 24)\nAnswer: (3 * 7 + 10) - 7 = 24\n",
            "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\nInput: 18\n",
            "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\nPossible next steps:\n",
            "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
            "3 * 7 = 21 (left: 7 10 21)\n10 - 7 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 61636,
            "prompt_tokens": 239246,
            "cost": 10.87554
        },
        "time_spent": 36.23920702934265
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 9 11 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 11 12 12)\n",
                    "12 - 9 = 3 (left: 3 3 11)\n",
                    "12 - 3 = 9 (left: 9 9 11)\n",
                    "11 + 3 = 14 (left: 9 12 14)\n",
                    "11 - 9 = 2 (left: 2 3 12)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n",
                    "12 - 11 = 1 (left: 1 3 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "12 / 3 = 4 (left: 4 9 11)\n",
                    "3 + 9 = 12 (left: 11 12 12)\n",
                    "12 - 9 = 3 (left: 3 3 11)\n",
                    "12 - 3 = 9 (left: 9 9 11)\n",
                    "11 + 3 = 14 (left: 9 12 14)\n",
                    "11 - 9 = 2 (left: 2 3 12)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 9 11 12",
                "ys": [
                    "12 / 3 = 4 (left: 4 9 11)\n",
                    "3 + 9 = 12 (left: 11 12 12)\n",
                    "12 - 9 = 3 (left: 3 3 11)\n",
                    "12 - 3 = 9 (left: 9 9 11)\n",
                    "11 + 3 = 14 (left: 9 12 14)\n",
                    "11 - 9 = 2 (left: 2 3 12)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n"
                ],
                "new_ys": [
                    "12 / 3 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 - 9 = 2 (left: 2 4)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n",
                    "3 + 9 = 12 (left: 11 12 12)\n11 + 12 = 23 (left: 12 23)\n",
                    "3 + 9 = 12 (left: 11 12 12)\n12 + 12 = 24 (left: 11 24)\n",
                    "3 + 9 = 12 (left: 11 12 12)\n12 - 11 = 1 (left: 1 12)\n",
                    "3 + 9 = 12 (left: 11 12 12)\n12 * 1 = 12 (left: 11 12)\n",
                    "3 + 9 = 12 (left: 11 12 12)\nInput: 1 3 7 8\n",
                    "12 - 9 = 3 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)\n",
                    "12 - 9 = 3 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)\n",
                    "12 - 9 = 3 (left: 3 3 11)\n11 + 3 = 14 (left: 3 14)\n",
                    "12 - 9 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "12 - 3 = 9 (left: 9 9 11)\n9 + 9 = 18 (left: 11 18)\n",
                    "12 - 3 = 9 (left: 9 9 11)\n11 - 9 = 2 (left: 2 9)\n",
                    "12 - 3 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n",
                    "12 - 3 = 9 (left: 9 9 11)\n9 * 9 = 81 (left: 11 81)\n",
                    "11 + 3 = 14 (left: 9 12 14)\n9 + 12 = 21 (left: 14 21)\n",
                    "11 + 3 = 14 (left: 9 12 14)\n14 + 12 = 26 (left: 9 26)\n",
                    "11 + 3 = 14 (left: 9 12 14)\n14 - 9 = 5 (left: 5 12)\n",
                    "11 + 3 = 14 (left: 9 12 14)\n14 - 12 = 2 (left: 2 9)\n",
                    "11 + 3 = 14 (left: 9 12 14)\n12 - 9 = 3 (left: 3 14)\n",
                    "11 - 9 = 2 (left: 2 3 12)\n2 + 3 = 5 (left: 5 12)\n",
                    "11 - 9 = 2 (left: 2 3 12)\n3 + 12 = 15 (left: 2 15)\n",
                    "11 - 9 = 2 (left: 2 3 12)\n12 - 3 = 9 (left: 2 9)\n",
                    "11 - 9 = 2 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n",
                    "11 - 9 = 2 (left: 2 3 12)\n12 - 2 = 10 (left: 3 10)\n",
                    "11 - 9 = 2 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n",
                    "11 - 9 = 2 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n3 + 11 = 14 (left: 12 14)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n12 + 3 = 15 (left: 11 15)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n12 - 3 = 9 (left: 9 11)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n12 - 11 = 1 (left: 1 3)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n11 - 3 = 8 (left: 8 12)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n12 / 3 = 4 (left: 4 11)\n"
                ],
                "values": [
                    100,
                    50,
                    0,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "12 / 3 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n",
                    "12 - 9 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 9 11 12",
                "ys": [
                    "12 / 3 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n",
                    "12 - 9 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)\n"
                ],
                "new_ys": [
                    "12 / 3 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 / 4 = 5 (left: 5)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 * 20 = 80 (left: 80)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "12 - 9 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "12 - 9 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "12 - 9 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n9 - 7 = 2 (left: 2)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 * 11 = 55 (left: 55)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)\n36 / 11 = 3 (left: 3)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)\n11 + 36 = 47 (left: 47)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)\n36 + 11 = 47 (left: 47)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    50,
                    0,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 3 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\n",
                    "12 - 9 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 9 11 12",
                "ys": [
                    "12 / 3 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\n",
                    "12 - 9 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\n"
                ],
                "new_ys": [
                    "12 / 3 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (12 / 3 + 9) + 11 = 24\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: (12 / 3) + (11 + 9) = 24\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (11 + 12 / 3) = 24\n",
                    "12 - 9 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (11 - (12 - 9)) = 24\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\nInput: 16\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\nPossible next steps:\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\n16 / 8 = 2 (left: 2 8)\n",
                    "12 - 9 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "12 - 9 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "12 - 9 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\n16 - 8 = 8 (left: 8 16)\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\n16 / 8 = 2 (left: 2 16)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 3 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (12 / 3 + 9) + 11 = 24\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: (12 / 3) + (11 + 9) = 24\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (11 + 12 / 3) = 24\n",
                    "12 - 9 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (11 - (12 - 9)) = 24\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\nInput: 16\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\nPossible next steps:\n",
                    "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n"
                ]
            }
        ],
        "idx": 835,
        "ys": [
            "12 / 3 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (12 / 3 + 9) + 11 = 24\n",
            "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: (12 / 3) + (11 + 9) = 24\n",
            "12 / 3 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (11 + 12 / 3) = 24\n",
            "12 - 9 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (11 - (12 - 9)) = 24\n",
            "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\nInput: 16\n",
            "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\nPossible next steps:\n",
            "12 / 3 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 63178,
            "prompt_tokens": 246612,
            "cost": 11.189039999999999
        },
        "time_spent": 33.80652713775635
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 4 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 4 6 7)\n",
                    "4 + 4 = 8 (left: 2 7 8)\n",
                    "7 + 2 = 9 (left: 4 4 9)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n",
                    "4 - 2 = 2 (left: 2 4 7)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100
                ],
                "select_new_ys": [
                    "7 - 4 = 3 (left: 2 3 4)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n",
                    "4 + 4 = 8 (left: 2 7 8)\n",
                    "7 + 2 = 9 (left: 4 4 9)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n",
                    "4 - 2 = 2 (left: 2 4 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 4 7",
                "ys": [
                    "7 - 4 = 3 (left: 2 3 4)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n",
                    "4 + 4 = 8 (left: 2 7 8)\n",
                    "7 + 2 = 9 (left: 4 4 9)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n",
                    "4 - 2 = 2 (left: 2 4 7)\n"
                ],
                "new_ys": [
                    "7 - 4 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n4 - 3 = 1 (left: 1 2)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n4 / 2 = 2 (left: 2 3)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n5 - 4 = 1 (left: 1 4)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 + 6 = 10 (left: 7 10)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n7 - 4 = 3 (left: 3 6)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n7 - 6 = 1 (left: 1 4)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 - 4 = 2 (left: 2 7)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n4 * 6 = 24 (left: 7 24)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n7 + 6 = 13 (left: 4 13)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n7 + 4 = 11 (left: 6 11)\n",
                    "2 + 4 = 6 (left: 4 6 7)\n6 / 2 = 3 (left: 3 7)\n",
                    "2 + 4 = 6 (left: 4 6 7)\nInput: 1 5 5 13\n",
                    "4 + 4 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 8 9)\n",
                    "4 + 4 = 8 (left: 2 7 8)\n8 - 2 = 6 (left: 6 7)\n",
                    "4 + 4 = 8 (left: 2 7 8)\n8 - 7 = 1 (left: 1 2)\n",
                    "4 + 4 = 8 (left: 2 7 8)\n2 * 7 = 14 (left: 8 14)\n",
                    "4 + 4 = 8 (left: 2 7 8)\n8 / 2 = 4 (left: 4 7)\n",
                    "4 + 4 = 8 (left: 2 7 8)\n7 - 2 = 5 (left: 5 8)\n",
                    "7 + 2 = 9 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n",
                    "7 + 2 = 9 (left: 4 4 9)\n4 * 4 = 16 (left: 9 16)\n",
                    "7 + 2 = 9 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)\n",
                    "7 + 2 = 9 (left: 4 4 9)\n9 + 4 = 13 (left: 4 13)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n4 + 7 = 11 (left: 8 11)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n8 - 4 = 4 (left: 4 7)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n8 - 7 = 1 (left: 1 4)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n4 * 7 = 28 (left: 8 28)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n8 / 4 = 2 (left: 2 7)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n",
                    "4 - 2 = 2 (left: 2 4 7)\n2 + 4 = 6 (left: 6 7)\n",
                    "4 - 2 = 2 (left: 2 4 7)\n4 + 7 = 11 (left: 2 11)\n",
                    "4 - 2 = 2 (left: 2 4 7)\n7 - 4 = 3 (left: 2 3)\n",
                    "4 - 2 = 2 (left: 2 4 7)\n7 - 2 = 5 (left: 4 5)\n",
                    "4 - 2 = 2 (left: 2 4 7)\n4 - 2 = 2 (left: 2 7)\n",
                    "4 - 2 = 2 (left: 2 4 7)\n4 * 2 = 8 (left: 7 8)\n",
                    "4 - 2 = 2 (left: 2 4 7)\n7 / 2 = 3.5 (left: 3.5 4)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 4 7",
                "ys": [
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n"
                ],
                "new_ys": [
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\nInput: 4 5\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\nPossible next steps:\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 + 5 = 9 (left: 9)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n5 - 4 = 1 (left: 1)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n2 + 7 = 9 (left: 9)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n7 - 2 = 5 (left: 5)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n2 * 7 = 14 (left: 14)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n8 - 5 = 3 (left: 3)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n8 / 5 = 1.6 (left: 1.6)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 + 16 = 21 (left: 21)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n16 - 5 = 11 (left: 11)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n16 / 5 = 3.2 (left: 3.2)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 * 16 = 80 (left: 80)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 + 9 = 13 (left: 13)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n9 - 4 = 5 (left: 5)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n9 / 4 = 2.25 (invalid)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n2 * 7 = 14 (left: 14)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 4 7",
                "ys": [
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n2 * 7 = 14 (left: 14)\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\n"
                ],
                "new_ys": [
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (2 * (7 - 4)) = 24\n",
                    "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 4) * (2 * 4) = 24\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 14 = 24 (left: 8 24)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNo valid operations possible with a single number.\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\nInput: 20\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\nPossible next steps:\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\nNone\n",
                    "7 - 4 = 3 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n2 * 7 = 14 (left: 14)\nInput: 14\n",
                    "7 - 4 = 3 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n2 * 7 = 14 (left: 14)\nPossible next steps:\n",
                    "7 - 4 = 3 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n2 * 7 = 14 (left: 14)\nNone\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\nInput: 13\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\nPossible next steps:\n",
                    "7 - 2 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\nNone\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (2 * (7 - 4)) = 24\n",
                    "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 4) * (2 * 4) = 24\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 14 = 24 (left: 8 24)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n"
                ]
            }
        ],
        "idx": 836,
        "ys": [
            "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (2 * (7 - 4)) = 24\n",
            "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 4) * (2 * 4) = 24\n",
            "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
            "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 14 = 24 (left: 8 24)\n",
            "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
            "7 - 4 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
            "2 * 4 = 8 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 64808,
            "prompt_tokens": 253168,
            "cost": 11.48352
        },
        "time_spent": 35.53256106376648
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n",
                    "4 + 5 = 9 (left: 3 9 9)\n",
                    "9 + 3 = 12 (left: 4 5 12)\n",
                    "3 * 4 = 12 (left: 5 9 12)\n",
                    "5 - 3 = 2 (left: 2 4 9)\n",
                    "9 - 5 = 4 (left: 3 4 4)\n",
                    "9 - 4 = 5 (left: 3 5 5)\n",
                    "9 - 3 = 6 (left: 4 5 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n",
                    "4 + 5 = 9 (left: 3 9 9)\n",
                    "9 + 3 = 12 (left: 4 5 12)\n",
                    "3 * 4 = 12 (left: 5 9 12)\n",
                    "5 - 3 = 2 (left: 2 4 9)\n",
                    "9 - 5 = 4 (left: 3 4 4)\n",
                    "9 - 4 = 5 (left: 3 5 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 5 9",
                "ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n",
                    "4 + 5 = 9 (left: 3 9 9)\n",
                    "9 + 3 = 12 (left: 4 5 12)\n",
                    "3 * 4 = 12 (left: 5 9 12)\n",
                    "5 - 3 = 2 (left: 2 4 9)\n",
                    "9 - 5 = 4 (left: 3 4 4)\n",
                    "9 - 4 = 5 (left: 3 5 5)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 + 7 = 16 (left: 5 16)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n",
                    "4 + 5 = 9 (left: 3 9 9)\n3 + 9 = 12 (left: 9 12)\n",
                    "4 + 5 = 9 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18)\n",
                    "4 + 5 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "4 + 5 = 9 (left: 3 9 9)\n9 * 3 = 27 (left: 9 27)\n",
                    "4 + 5 = 9 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "9 + 3 = 12 (left: 4 5 12)\n4 + 5 = 9 (left: 9 12)\n",
                    "9 + 3 = 12 (left: 4 5 12)\n5 + 12 = 17 (left: 4 17)\n",
                    "9 + 3 = 12 (left: 4 5 12)\n12 - 5 = 7 (left: 4 7)\n",
                    "9 + 3 = 12 (left: 4 5 12)\n12 - 4 = 8 (left: 5 8)\n",
                    "9 + 3 = 12 (left: 4 5 12)\n4 * 5 = 20 (left: 12 20)\n",
                    "9 + 3 = 12 (left: 4 5 12)\n12 / 4 = 3 (left: 3 5)\n",
                    "3 * 4 = 12 (left: 5 9 12)\n5 + 9 = 14 (left: 12 14)\n",
                    "3 * 4 = 12 (left: 5 9 12)\n12 - 5 = 7 (left: 7 9)\n",
                    "3 * 4 = 12 (left: 5 9 12)\n12 - 9 = 3 (left: 3 5)\n",
                    "3 * 4 = 12 (left: 5 9 12)\n9 - 5 = 4 (left: 4 12)\n",
                    "3 * 4 = 12 (left: 5 9 12)\n12 / 3 = 4 (left: 4 9)\n",
                    "3 * 4 = 12 (left: 5 9 12)\n5 * 9 = 45 (left: 12 45)\n",
                    "5 - 3 = 2 (left: 2 4 9)\n2 + 4 = 6 (left: 6 9)\n",
                    "5 - 3 = 2 (left: 2 4 9)\n4 + 9 = 13 (left: 2 13)\n",
                    "5 - 3 = 2 (left: 2 4 9)\n9 - 4 = 5 (left: 2 5)\n",
                    "5 - 3 = 2 (left: 2 4 9)\n4 - 2 = 2 (left: 2 9)\n",
                    "5 - 3 = 2 (left: 2 4 9)\n9 - 2 = 7 (left: 4 7)\n",
                    "5 - 3 = 2 (left: 2 4 9)\n4 * 2 = 8 (left: 8 9)\n",
                    "5 - 3 = 2 (left: 2 4 9)\n9 / 3 = 3 (left: 2 3)\n",
                    "9 - 5 = 4 (left: 3 4 4)\n3 + 4 = 7 (left: 4 7)\n",
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n",
                    "9 - 5 = 4 (left: 3 4 4)\n4 - 3 = 1 (left: 1 4)\n",
                    "9 - 5 = 4 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "9 - 5 = 4 (left: 3 4 4)\n4 / 4 = 1 (left: 1 3)\n",
                    "9 - 4 = 5 (left: 3 5 5)\n3 + 5 = 8 (left: 5 8)\n",
                    "9 - 4 = 5 (left: 3 5 5)\n5 + 5 = 10 (left: 3 10)\n",
                    "9 - 4 = 5 (left: 3 5 5)\n5 - 3 = 2 (left: 2 5)\n",
                    "9 - 4 = 5 (left: 3 5 5)\n5 * 3 = 15 (left: 5 15)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 + 7 = 16 (left: 5 16)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 5 9",
                "ys": [
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 + 7 = 16 (left: 5 16)\n"
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 * 12 = 108 (left: 108)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 / 9 = 1.33 (left: 1.33)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n7 - 4 = 3 (left: 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n2 + 5 = 7 (left: 7)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n5 - 2 = 3 (left: 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n5 / 2 = 2.5 (left: 2.5)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n9 - 2 = 7 (left: 7)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n9 / 2 = 4.5 (left: 4.5)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 + 9 = 44 (left: 44)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 - 9 = 26 (left: 26)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 / 9 = 3 (left: 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n9 * 35 = 315 (left: 315)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 + 7 = 16 (left: 5 16)\n5 + 16 = 21 (left: 21)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 + 7 = 16 (left: 5 16)\n16 - 5 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 + 7 = 16 (left: 5 16)\n16 / 5 = 3.2 (left: 3.2)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 + 7 = 16 (left: 5 16)\n5 * 16 = 80 (left: 80)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 5 9",
                "ys": [
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((9 - 5) + 4) = 24\n",
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 21\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nNone\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nInput: 11\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nNone\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\nInput: 28\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n2 + 8 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n8 - 2 = 6 (left: 6)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n2 * 8 = 16 (left: 16)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n8 / 2 = 4 (left: 4)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nInput: 11\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nNo possible steps (single number)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((9 - 5) + 4) = 24\n",
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 21\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nNone\n"
                ]
            }
        ],
        "idx": 837,
        "ys": [
            "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((9 - 5) + 4) = 24\n",
            "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
            "9 - 5 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
            "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 21\n",
            "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
            "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nNone\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 66512,
            "prompt_tokens": 259319,
            "cost": 11.770290000000001
        },
        "time_spent": 35.734251976013184
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n",
                    "5 + 7 = 12 (left: 4 12 12)\n",
                    "12 + 4 = 16 (left: 5 7 16)\n",
                    "12 - 7 = 5 (left: 4 5 5)\n",
                    "12 - 5 = 7 (left: 4 7 7)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n",
                    "7 - 4 = 3 (left: 3 5 12)\n",
                    "12 / 4 = 3 (left: 3 5 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n",
                    "5 + 7 = 12 (left: 4 12 12)\n",
                    "12 + 4 = 16 (left: 5 7 16)\n",
                    "12 - 7 = 5 (left: 4 5 5)\n",
                    "12 - 5 = 7 (left: 4 7 7)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n",
                    "7 - 4 = 3 (left: 3 5 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 7 12",
                "ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n",
                    "5 + 7 = 12 (left: 4 12 12)\n",
                    "12 + 4 = 16 (left: 5 7 16)\n",
                    "12 - 7 = 5 (left: 4 5 5)\n",
                    "12 - 5 = 7 (left: 4 7 7)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n",
                    "7 - 4 = 3 (left: 3 5 12)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 12 16)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 * 9 = 63 (left: 12 63)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 + 9 = 21 (left: 7 21)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 + 7 = 19 (left: 9 19)\n",
                    "5 + 7 = 12 (left: 4 12 12)\n4 + 12 = 16 (left: 12 16)\n",
                    "5 + 7 = 12 (left: 4 12 12)\n12 - 4 = 8 (left: 8 12)\n",
                    "5 + 7 = 12 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "5 + 7 = 12 (left: 4 12 12)\n12 * 4 = 48 (left: 12 48)\n",
                    "5 + 7 = 12 (left: 4 12 12)\n12 + 12 = 24 (left: 4 24)\n",
                    "5 + 7 = 12 (left: 4 12 12)\n12 - 12 = 0 (left: 0 4)\n",
                    "12 + 4 = 16 (left: 5 7 16)\n5 + 7 = 12 (left: 12 16)\n",
                    "12 + 4 = 16 (left: 5 7 16)\n16 - 7 = 9 (left: 5 9)\n",
                    "12 + 4 = 16 (left: 5 7 16)\n16 - 5 = 11 (left: 7 11)\n",
                    "12 + 4 = 16 (left: 5 7 16)\n7 - 5 = 2 (left: 2 16)\n",
                    "12 + 4 = 16 (left: 5 7 16)\n16 / 2 = 8 (left: 5 8)\n",
                    "12 + 4 = 16 (left: 5 7 16)\n5 * 7 = 35 (left: 16 35)\n",
                    "12 - 7 = 5 (left: 4 5 5)\n4 + 5 = 9 (left: 5 9)\n",
                    "12 - 7 = 5 (left: 4 5 5)\n5 + 5 = 10 (left: 4 10)\n",
                    "12 - 7 = 5 (left: 4 5 5)\n5 - 4 = 1 (left: 1 5)\n",
                    "12 - 7 = 5 (left: 4 5 5)\n5 * 4 = 20 (left: 5 20)\n",
                    "12 - 7 = 5 (left: 4 5 5)\n5 / 5 = 1 (left: 1 4)\n",
                    "12 - 5 = 7 (left: 4 7 7)\n4 + 7 = 11 (left: 7 11)\n",
                    "12 - 5 = 7 (left: 4 7 7)\n7 - 4 = 3 (left: 3 7)\n",
                    "12 - 5 = 7 (left: 4 7 7)\n7 * 4 = 28 (left: 7 28)\n",
                    "12 - 5 = 7 (left: 4 7 7)\n7 / 7 = 1 (left: 1 4)\n",
                    "12 - 5 = 7 (left: 4 7 7)\n7 + 7 = 14 (left: 4 14)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 7)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n8 - 7 = 1 (left: 1 5)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n8 + 7 = 15 (left: 5 15)\n",
                    "12 - 4 = 8 (left: 5 7 8)\n8 + 5 = 13 (left: 7 13)\n",
                    "7 - 4 = 3 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n",
                    "7 - 4 = 3 (left: 3 5 12)\n5 + 3 = 8 (left: 8 12)\n",
                    "7 - 4 = 3 (left: 3 5 12)\n12 + 3 = 15 (left: 5 15)\n",
                    "7 - 4 = 3 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n",
                    "7 - 4 = 3 (left: 3 5 12)\n12 - 3 = 9 (left: 5 9)\n",
                    "7 - 4 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 5)\n",
                    "7 - 4 = 3 (left: 3 5 12)\n5 * 3 = 15 (left: 12 15)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 12 16)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 + 9 = 21 (left: 7 21)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 + 7 = 19 (left: 9 19)\n",
                    "5 + 7 = 12 (left: 4 12 12)\n4 + 12 = 16 (left: 12 16)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 7 12",
                "ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 12 16)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 + 9 = 21 (left: 7 21)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 + 7 = 19 (left: 9 19)\n",
                    "5 + 7 = 12 (left: 4 12 12)\n4 + 12 = 16 (left: 12 16)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 12 16)\n12 + 16 = 28 (left: 28)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 12 16)\n16 - 12 = 4 (left: 4)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 12 16)\n16 / 12 = 1.33 (invalid)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 12 16)\n12 * 16 = 192 (left: 192)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n9 - 5 = 4 (left: 4)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n7 - 3 = 4 (left: 4)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n3 * 7 = 21 (left: 21)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 + 9 = 21 (left: 7 21)\n7 + 21 = 28 (left: 28)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 + 9 = 21 (left: 7 21)\n21 - 7 = 14 (left: 14)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 + 9 = 21 (left: 7 21)\n21 / 7 = 3 (left: 3)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 + 9 = 21 (left: 7 21)\n7 * 3 = 21 (left: 21)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 + 7 = 19 (left: 9 19)\n19 - 9 = 10 (left: 10)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 + 7 = 19 (left: 9 19)\n19 + 9 = 28 (left: 28)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 + 7 = 19 (left: 9 19)\n9 * 19 = 171 (left: 171)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 + 7 = 19 (left: 9 19)\n19 / 9 = 2.11 (left: 2.11)\n",
                    "5 + 7 = 12 (left: 4 12 12)\n4 + 12 = 16 (left: 12 16)\n12 + 16 = 28 (left: 28)\n",
                    "5 + 7 = 12 (left: 4 12 12)\n4 + 12 = 16 (left: 12 16)\n16 - 12 = 4 (left: 4)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 12 16)\n12 + 16 = 28 (left: 28)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n3 * 7 = 21 (left: 21)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 7 12",
                "ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 12 16)\n12 + 16 = 28 (left: 28)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n3 * 7 = 21 (left: 21)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((4 + 5) - 7) * 12 = 24\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nInput: 14\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nNone (only one number left)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 + 10 = 24 (left: 8 8 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 12 16)\n12 + 16 = 28 (left: 28)\nInput: 28\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 12 16)\n12 + 16 = 28 (left: 28)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 12 16)\n12 + 16 = 28 (left: 28)\n(No possible next steps)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\nInput: 14\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\nNo valid operations possible with a single number.\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n3 * 7 = 21 (left: 21)\nInput: 21\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n3 * 7 = 21 (left: 21)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n3 * 7 = 21 (left: 21)\nNone (21 is the target number)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((4 + 5) - 7) * 12 = 24\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nInput: 14\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nNone (only one number left)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 + 10 = 24 (left: 8 8 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n"
                ]
            }
        ],
        "idx": 838,
        "ys": [
            "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((4 + 5) - 7) * 12 = 24\n",
            "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nInput: 14\n",
            "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nPossible next steps:\n",
            "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nNone (only one number left)\n",
            "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
            "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 + 10 = 24 (left: 8 8 24)\n",
            "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 68212,
            "prompt_tokens": 265470,
            "cost": 12.05682
        },
        "time_spent": 36.7815260887146
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 7 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 7 = 9 (left: 9 9 13)\n",
                    "13 + 2 = 15 (left: 7 9 15)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n",
                    "9 + 2 = 11 (left: 7 11 13)\n",
                    "13 - 9 = 4 (left: 2 4 7)\n",
                    "7 - 2 = 5 (left: 5 9 13)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n",
                    "13 - 2 = 11 (left: 7 9 11)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n",
                    "2 + 7 = 9 (left: 9 9 13)\n",
                    "13 + 2 = 15 (left: 7 9 15)\n",
                    "9 + 2 = 11 (left: 7 11 13)\n",
                    "13 - 9 = 4 (left: 2 4 7)\n",
                    "7 - 2 = 5 (left: 5 9 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 7 9 13",
                "ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n",
                    "2 + 7 = 9 (left: 9 9 13)\n",
                    "13 + 2 = 15 (left: 7 9 15)\n",
                    "9 + 2 = 11 (left: 7 11 13)\n",
                    "13 - 9 = 4 (left: 2 4 7)\n",
                    "7 - 2 = 5 (left: 5 9 13)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 - 6 = 3 (left: 2 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 / 3 = 3 (left: 2 3)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n13 + 2 = 15 (left: 2 15)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n13 - 2 = 11 (left: 2 11)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n13 / 2 = 6.5 (left: 2 6.5)\n",
                    "2 + 7 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n",
                    "2 + 7 = 9 (left: 9 9 13)\n13 + 9 = 22 (left: 9 22)\n",
                    "2 + 7 = 9 (left: 9 9 13)\n13 - 9 = 4 (left: 4 9)\n",
                    "2 + 7 = 9 (left: 9 9 13)\n9 * 9 = 81 (left: 13 81)\n",
                    "13 + 2 = 15 (left: 7 9 15)\n7 + 9 = 16 (left: 15 16)\n",
                    "13 + 2 = 15 (left: 7 9 15)\n15 - 9 = 6 (left: 6 7)\n",
                    "13 + 2 = 15 (left: 7 9 15)\n15 - 7 = 8 (left: 8 9)\n",
                    "13 + 2 = 15 (left: 7 9 15)\n9 - 7 = 2 (left: 2 15)\n",
                    "13 + 2 = 15 (left: 7 9 15)\n15 + 9 = 24 (left: 7 24)\n",
                    "13 + 2 = 15 (left: 7 9 15)\n15 + 7 = 22 (left: 9 22)\n",
                    "9 + 2 = 11 (left: 7 11 13)\n7 + 11 = 18 (left: 13 18)\n",
                    "9 + 2 = 11 (left: 7 11 13)\n13 + 11 = 24 (left: 7 24)\n",
                    "9 + 2 = 11 (left: 7 11 13)\n13 - 11 = 2 (left: 2 7)\n",
                    "9 + 2 = 11 (left: 7 11 13)\n13 - 7 = 6 (left: 6 11)\n",
                    "9 + 2 = 11 (left: 7 11 13)\n11 - 7 = 4 (left: 4 13)\n",
                    "13 - 9 = 4 (left: 2 4 7)\n2 + 4 = 6 (left: 6 7)\n",
                    "13 - 9 = 4 (left: 2 4 7)\n4 + 7 = 11 (left: 2 11)\n",
                    "13 - 9 = 4 (left: 2 4 7)\n7 - 4 = 3 (left: 2 3)\n",
                    "13 - 9 = 4 (left: 2 4 7)\n7 - 2 = 5 (left: 4 5)\n",
                    "13 - 9 = 4 (left: 2 4 7)\n4 - 2 = 2 (left: 2 7)\n",
                    "13 - 9 = 4 (left: 2 4 7)\n4 * 2 = 8 (left: 7 8)\n",
                    "13 - 9 = 4 (left: 2 4 7)\n7 / 2 = 3.5 (left: 3.5 4)\n",
                    "7 - 2 = 5 (left: 5 9 13)\n5 + 9 = 14 (left: 13 14)\n",
                    "7 - 2 = 5 (left: 5 9 13)\n13 + 5 = 18 (left: 9 18)\n",
                    "7 - 2 = 5 (left: 5 9 13)\n13 - 5 = 8 (left: 8 9)\n",
                    "7 - 2 = 5 (left: 5 9 13)\n13 - 9 = 4 (left: 4 5)\n",
                    "7 - 2 = 5 (left: 5 9 13)\n9 - 5 = 4 (left: 4 13)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n13 + 2 = 15 (left: 2 15)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 7 9 13",
                "ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n13 + 2 = 15 (left: 2 15)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n9 - 8 = 1 (left: 1)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n7 - 6 = 1 (left: 1)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 * 7 = 42 (left: 42)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 * 12 = 108 (left: 108)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n12 / 9 = 1.33 (left: 1.33)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n9 - 8 = 1 (left: 1)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n13 - 4 = 9 (left: 9)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n13 / 4 = 3.25 (invalid)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n4 * 13 = 52 (left: 52)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n13 + 2 = 15 (left: 2 15)\n15 + 2 = 17 (left: 17)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n13 + 2 = 15 (left: 2 15)\n15 - 2 = 13 (left: 13)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n13 + 2 = 15 (left: 2 15)\n2 * 15 = 30 (left: 30)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n13 + 2 = 15 (left: 2 15)\n15 / 2 = 7.5 (left: 7.5)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n13 + 2 = 15 (left: 2 15)\n15 + 2 = 17 (left: 17)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 7 9 13",
                "ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "9 - 7 = 2 (left: 2 2 13)\n13 + 2 = 15 (left: 2 15)\n15 + 2 = 17 (left: 17)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
                    "13 - 7 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n(No possible next steps)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nInput: 13\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nNone\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 21\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n(No possible operations with a single number)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\nInput: 17\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\nNo valid operations possible with a single number.\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNo valid operations possible with a single number.\n",
                    "9 - 7 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\nInput: 17\n",
                    "9 - 7 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\nPossible next steps:\n",
                    "9 - 7 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\nNone\n",
                    "9 - 7 = 2 (left: 2 2 13)\n13 + 2 = 15 (left: 2 15)\n15 + 2 = 17 (left: 17)\nInput: 17\n",
                    "9 - 7 = 2 (left: 2 2 13)\n13 + 2 = 15 (left: 2 15)\n15 + 2 = 17 (left: 17)\nPossible next steps:\n",
                    "9 - 7 = 2 (left: 2 2 13)\n13 + 2 = 15 (left: 2 15)\n15 + 2 = 17 (left: 17)\nNone\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
                    "13 - 7 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n(No possible next steps)\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nInput: 13\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nNone\n",
                    "13 - 7 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 21\n"
                ]
            }
        ],
        "idx": 839,
        "ys": [
            "13 - 7 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
            "13 - 7 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
            "13 - 7 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n(No possible next steps)\n",
            "13 - 7 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nInput: 13\n",
            "13 - 7 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nPossible next steps:\n",
            "13 - 7 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nNone\n",
            "13 - 7 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 21\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 69706,
            "prompt_tokens": 271216,
            "cost": 12.318840000000002
        },
        "time_spent": 32.75785279273987
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 9 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 9 = 14 (left: 9 11 14)\n",
                    "9 + 9 = 18 (left: 5 11 18)\n",
                    "11 + 5 = 16 (left: 9 9 16)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n",
                    "11 - 9 = 2 (left: 2 5 9)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    100,
                    50,
                    100
                ],
                "select_new_ys": [
                    "9 + 9 = 18 (left: 5 11 18)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n",
                    "11 + 5 = 16 (left: 9 9 16)\n",
                    "11 - 9 = 2 (left: 2 5 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 9 9 11",
                "ys": [
                    "9 + 9 = 18 (left: 5 11 18)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n",
                    "11 + 5 = 16 (left: 9 9 16)\n",
                    "11 - 9 = 2 (left: 2 5 9)\n"
                ],
                "new_ys": [
                    "9 + 9 = 18 (left: 5 11 18)\n5 + 11 = 16 (left: 16 18)\n",
                    "9 + 9 = 18 (left: 5 11 18)\n18 - 11 = 7 (left: 5 7)\n",
                    "9 + 9 = 18 (left: 5 11 18)\n18 - 5 = 13 (left: 11 13)\n",
                    "9 + 9 = 18 (left: 5 11 18)\n11 + 5 = 16 (left: 16 18)\n",
                    "9 + 9 = 18 (left: 5 11 18)\n18 / 2 = 9 (left: 5 9 11)\n",
                    "9 + 9 = 18 (left: 5 11 18)\n11 - 5 = 6 (left: 6 18)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n9 * 6 = 54 (left: 9 54)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n9 / 3 = 3 (left: 3 6)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n",
                    "11 - 5 = 6 (left: 6 9 9)\nInput: 3 5 7 8\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 - 9 = 2 (left: 2 4)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 14)\n",
                    "11 + 5 = 16 (left: 9 9 16)\n9 + 9 = 18 (left: 16 18)\n",
                    "11 + 5 = 16 (left: 9 9 16)\n16 - 9 = 7 (left: 7 9)\n",
                    "11 + 5 = 16 (left: 9 9 16)\n16 + 9 = 25 (left: 9 25)\n",
                    "11 + 5 = 16 (left: 9 9 16)\n9 * 9 = 81 (left: 16 81)\n",
                    "11 - 9 = 2 (left: 2 5 9)\n2 + 5 = 7 (left: 7 9)\n",
                    "11 - 9 = 2 (left: 2 5 9)\n9 - 5 = 4 (left: 2 4)\n",
                    "11 - 9 = 2 (left: 2 5 9)\n9 - 2 = 7 (left: 5 7)\n",
                    "11 - 9 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 9)\n",
                    "11 - 9 = 2 (left: 2 5 9)\n2 * 5 = 10 (left: 9 10)\n",
                    "11 - 9 = 2 (left: 2 5 9)\n9 / 3 = 3 (left: 2 3)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    0,
                    100,
                    100,
                    50,
                    0,
                    50,
                    100,
                    0,
                    100,
                    50,
                    0,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "9 + 9 = 18 (left: 5 11 18)\n18 - 5 = 13 (left: 11 13)\n",
                    "9 + 9 = 18 (left: 5 11 18)\n11 - 5 = 6 (left: 6 18)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 9 9 11",
                "ys": [
                    "9 + 9 = 18 (left: 5 11 18)\n18 - 5 = 13 (left: 11 13)\n",
                    "9 + 9 = 18 (left: 5 11 18)\n11 - 5 = 6 (left: 6 18)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n"
                ],
                "new_ys": [
                    "9 + 9 = 18 (left: 5 11 18)\n18 - 5 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "9 + 9 = 18 (left: 5 11 18)\n18 - 5 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "9 + 9 = 18 (left: 5 11 18)\n11 - 5 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "9 + 9 = 18 (left: 5 11 18)\n11 - 5 = 6 (left: 6 18)\n18 - 6 = 12 (left: 12)\n",
                    "9 + 9 = 18 (left: 5 11 18)\n11 - 5 = 6 (left: 6 18)\n18 / 6 = 3 (left: 3)\n",
                    "9 + 9 = 18 (left: 5 11 18)\n11 - 5 = 6 (left: 6 18)\n6 * 3 = 18 (left: 18)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 / 4 = 5 (left: 5)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 * 20 = 80 (left: 80)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    50,
                    0,
                    50,
                    100,
                    0,
                    100,
                    50,
                    0,
                    50,
                    100,
                    0,
                    100,
                    0,
                    100,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 + 9 = 18 (left: 5 11 18)\n18 - 5 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "9 + 9 = 18 (left: 5 11 18)\n11 - 5 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 9 9 11",
                "ys": [
                    "9 + 9 = 18 (left: 5 11 18)\n18 - 5 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "9 + 9 = 18 (left: 5 11 18)\n11 - 5 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "9 + 9 = 18 (left: 5 11 18)\n18 - 5 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (9 + 9) + (11 - 5) = 24\n",
                    "9 + 9 = 18 (left: 5 11 18)\n11 - 5 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (11 - 5) + (9 + 9) = 24\n",
                    "11 - 5 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (9 + (11 - 5)) = 24\n",
                    "11 - 5 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (11 - 5) + (9 + 9) = 24\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (9 - 5 + 9) + 11 = 24\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (11 + (9 - 5)) = 24\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: (11 + 9) + (9 - 5) = 24\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    1000
                ],
                "select_new_ys": [
                    "9 + 9 = 18 (left: 5 11 18)\n18 - 5 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (9 + 9) + (11 - 5) = 24\n",
                    "9 + 9 = 18 (left: 5 11 18)\n11 - 5 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (11 - 5) + (9 + 9) = 24\n",
                    "11 - 5 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (9 + (11 - 5)) = 24\n",
                    "11 - 5 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (11 - 5) + (9 + 9) = 24\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (9 - 5 + 9) + 11 = 24\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (11 + (9 - 5)) = 24\n",
                    "9 - 5 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: (11 + 9) + (9 - 5) = 24\n"
                ]
            }
        ],
        "idx": 840,
        "ys": [
            "9 + 9 = 18 (left: 5 11 18)\n18 - 5 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (9 + 9) + (11 - 5) = 24\n",
            "9 + 9 = 18 (left: 5 11 18)\n11 - 5 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (11 - 5) + (9 + 9) = 24\n",
            "11 - 5 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (9 + (11 - 5)) = 24\n",
            "11 - 5 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (11 - 5) + (9 + 9) = 24\n",
            "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (9 - 5 + 9) + 11 = 24\n",
            "9 - 5 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (11 + (9 - 5)) = 24\n",
            "9 - 5 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: (11 + 9) + (9 - 5) = 24\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 71015,
            "prompt_tokens": 279534,
            "cost": 12.64692
        },
        "time_spent": 31.80441904067993
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 6 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n",
                    "6 * 6 = 36 (left: 6 8 36)\n",
                    "8 + 6 = 14 (left: 6 6 14)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n",
                    "6 * 6 = 36 (left: 6 8 36)\n",
                    "8 + 6 = 14 (left: 6 6 14)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 6 6 8",
                "ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n",
                    "6 * 6 = 36 (left: 6 8 36)\n",
                    "8 + 6 = 14 (left: 6 6 14)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n"
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n6 + 8 = 14 (left: 12 14)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 + 8 = 20 (left: 6 20)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 6 = 2 (left: 2 8)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 / 2 = 6 (left: 6 8)\n",
                    "6 * 6 = 36 (left: 6 8 36)\n6 + 8 = 14 (left: 14 36)\n",
                    "6 * 6 = 36 (left: 6 8 36)\n36 - 8 = 28 (left: 6 28)\n",
                    "6 * 6 = 36 (left: 6 8 36)\n36 / 6 = 6 (left: 6 8)\n",
                    "6 * 6 = 36 (left: 6 8 36)\n36 - 6 = 30 (left: 8 30)\n",
                    "6 * 6 = 36 (left: 6 8 36)\n8 - 6 = 2 (left: 2 36)\n",
                    "6 * 6 = 36 (left: 6 8 36)\n36 / 8 = 4.5 (left: 4.5 6)\n",
                    "6 * 6 = 36 (left: 6 8 36)\n6 * 8 = 48 (left: 36 48)\n",
                    "6 * 6 = 36 (left: 6 8 36)\nInput: 3 4 7 10\n",
                    "8 + 6 = 14 (left: 6 6 14)\n6 + 6 = 12 (left: 12 14)\n",
                    "8 + 6 = 14 (left: 6 6 14)\n14 - 6 = 8 (left: 6 8)\n",
                    "8 + 6 = 14 (left: 6 6 14)\n14 + 6 = 20 (left: 6 20)\n",
                    "8 + 6 = 14 (left: 6 6 14)\n6 * 6 = 36 (left: 14 36)\n",
                    "8 + 6 = 14 (left: 6 6 14)\n14 / 2 = 7 (left: 6 6 7)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n2 + 6 = 8 (left: 6 8)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 / 2 = 3 (left: 3 6)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 * 2 = 12 (left: 6 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 + 8 = 14 (left: 1 14)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n8 - 6 = 2 (left: 1 2)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n8 - 1 = 7 (left: 6 7)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 - 1 = 5 (left: 5 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n8 / 1 = 8 (left: 6 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 * 1 = 6 (left: 6 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n6 + 8 = 14 (left: 12 14)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 + 8 = 20 (left: 6 20)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 6 6 8",
                "ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n6 + 8 = 14 (left: 12 14)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 + 8 = 20 (left: 6 20)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8)\n"
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\nInput: 4 6\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\nPossible next steps:\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n6 + 8 = 14 (left: 12 14)\n12 + 14 = 26 (left: 26)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n6 + 8 = 14 (left: 12 14)\n14 - 12 = 2 (left: 2)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n6 + 8 = 14 (left: 12 14)\n12 * 14 = 168 (left: 168)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n6 + 8 = 14 (left: 12 14)\n14 / 12 = 1.1666... (left: 1.1666...)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 + 8 = 20 (left: 6 20)\n6 + 20 = 26 (left: 26)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 + 8 = 20 (left: 6 20)\n20 - 6 = 14 (left: 14)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 + 8 = 20 (left: 6 20)\n20 / 2 = 10 (left: 6 10)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 + 8 = 20 (left: 6 20)\n6 * 20 = 120 (left: 120)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8)\n8 - 6 = 2 (left: 2)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    100,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 6 6 8",
                "ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((6 + 6) - 8) * 6 = 24\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - 6) * (6 + 6) = 24\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (6 + 6) * (8 - 6) = 24\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - (8 - 6)) * 6 = 24\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 14 = 24 (left: 8 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n(No possible next steps with a single number)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((6 + 6) - 8) * 6 = 24\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - 6) * (6 + 6) = 24\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (6 + 6) * (8 - 6) = 24\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - (8 - 6)) * 6 = 24\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 14 = 24 (left: 8 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n"
                ]
            }
        ],
        "idx": 841,
        "ys": [
            "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((6 + 6) - 8) * 6 = 24\n",
            "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - 6) * (6 + 6) = 24\n",
            "8 - 6 = 2 (left: 2 6 6)\n6 + 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (6 + 6) * (8 - 6) = 24\n",
            "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - (8 - 6)) * 6 = 24\n",
            "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
            "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 14 = 24 (left: 8 24)\n",
            "6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 72473,
            "prompt_tokens": 286374,
            "cost": 12.939599999999999
        },
        "time_spent": 31.034430980682373
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 7 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 7 = 8 (left: 8 12 12)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n",
                    "12 + 1 = 13 (left: 7 12 13)\n",
                    "12 * 1 = 12 (left: 7 12 12)\n",
                    "12 / 1 = 12 (left: 7 12 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "7 - 1 = 6 (left: 6 12 12)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n",
                    "12 + 1 = 13 (left: 7 12 13)\n",
                    "12 * 1 = 12 (left: 7 12 12)\n",
                    "12 / 1 = 12 (left: 7 12 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 7 12 12",
                "ys": [
                    "7 - 1 = 6 (left: 6 12 12)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n",
                    "12 + 1 = 13 (left: 7 12 13)\n",
                    "12 * 1 = 12 (left: 7 12 12)\n",
                    "12 / 1 = 12 (left: 7 12 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n"
                ],
                "new_ys": [
                    "7 - 1 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 * 2 = 24 (left: 6 24)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n12 + 12 = 24 (left: 8 24)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n12 * 2 = 24 (left: 8 24)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n12 / 2 = 6 (left: 6 8)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n1 + 5 = 6 (left: 6 12)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n5 + 1 = 6 (left: 6 12)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n12 + 1 = 13 (left: 5 13)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n12 - 5 = 7 (left: 1 7)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n12 - 1 = 11 (left: 5 11)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n12 / 1 = 12 (left: 5 12)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n5 * 1 = 5 (left: 5 12)\n",
                    "12 + 1 = 13 (left: 7 12 13)\n7 + 12 = 19 (left: 13 19)\n",
                    "12 + 1 = 13 (left: 7 12 13)\n13 - 7 = 6 (left: 6 12)\n",
                    "12 + 1 = 13 (left: 7 12 13)\n13 - 12 = 1 (left: 1 7)\n",
                    "12 + 1 = 13 (left: 7 12 13)\n12 - 7 = 5 (left: 5 13)\n",
                    "12 + 1 = 13 (left: 7 12 13)\n7 * 12 = 84 (left: 13 84)\n",
                    "12 + 1 = 13 (left: 7 12 13)\n13 + 12 = 25 (left: 7 25)\n",
                    "12 + 1 = 13 (left: 7 12 13)\n13 + 7 = 20 (left: 12 20)\n",
                    "12 * 1 = 12 (left: 7 12 12)\n7 + 12 = 19 (left: 12 19)\n",
                    "12 * 1 = 12 (left: 7 12 12)\n12 + 12 = 24 (left: 7 24)\n",
                    "12 * 1 = 12 (left: 7 12 12)\n12 - 7 = 5 (left: 5 12)\n",
                    "12 * 1 = 12 (left: 7 12 12)\n12 * 7 = 84 (left: 12 84)\n",
                    "12 * 1 = 12 (left: 7 12 12)\n12 / 7 \u2248 1.71 (left: 1.71 12)\n",
                    "12 / 1 = 12 (left: 7 12 12)\n7 + 12 = 19 (left: 12 19)\n",
                    "12 / 1 = 12 (left: 7 12 12)\n12 + 12 = 24 (left: 7 24)\n",
                    "12 / 1 = 12 (left: 7 12 12)\n12 - 7 = 5 (left: 5 12)\n",
                    "12 / 1 = 12 (left: 7 12 12)\n12 / 12 = 1 (left: 1 7)\n",
                    "12 / 1 = 12 (left: 7 12 12)\n12 * 7 = 84 (left: 12 84)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 12 18)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 11 = 23 (left: 7 23)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 - 7 = 5 (left: 5 11)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 - 11 = 1 (left: 1 7)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 / 4 = 3 (left: 3 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 * 2 = 24 (left: 6 24)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n12 + 12 = 24 (left: 8 24)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 7 12 12",
                "ys": [
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 * 2 = 24 (left: 6 24)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n12 + 12 = 24 (left: 8 24)\n"
                ],
                "new_ys": [
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 * 18 = 216 (left: 216)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 / 12 = 1.5 (left: 1.5)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 / 6 = 4 (left: 4)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 * 24 = 144 (left: 144)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 * 2 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 * 2 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 * 2 = 24 (left: 6 24)\n24 / 6 = 4 (left: 4)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 * 2 = 24 (left: 6 24)\n6 * 24 = 144 (left: 144)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 / 12 = 1.666... (left: 1.666...)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n12 + 12 = 24 (left: 8 24)\n8 + 24 = 32 (left: 32)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n12 + 12 = 24 (left: 8 24)\n24 - 8 = 16 (left: 16)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n12 + 12 = 24 (left: 8 24)\n24 / 8 = 3 (left: 3)\n",
                    "1 + 7 = 8 (left: 8 12 12)\n12 + 12 = 24 (left: 8 24)\n8 * 24 = 192 (left: 192)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 7 12 12",
                "ys": [
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n"
                ],
                "new_ys": [
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / (7 - 1)) * 12 = 24\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNone\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nInput: 30\n",
                    "7 - 1 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nPossible next steps:\n",
                    "7 - 1 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nNone (Goal reached)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\nInput: 30\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\nPossible next steps:\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\nNone (target reached)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\nInput: 18\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\nPossible next steps:\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n18 - 2 = 16 (left: 8 16)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\nInput: 18\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\nPossible next steps:\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / (7 - 1)) * 12 = 24\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNone\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n"
                ]
            }
        ],
        "idx": 842,
        "ys": [
            "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / (7 - 1)) * 12 = 24\n",
            "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
            "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
            "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNone\n",
            "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
            "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
            "7 - 1 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 74229,
            "prompt_tokens": 292525,
            "cost": 13.229489999999998
        },
        "time_spent": 35.82016205787659
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 6 9 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 6 = 7 (left: 7 9 10)\n",
                    "10 - 6 = 4 (left: 1 4 9)\n",
                    "9 + 1 = 10 (left: 6 10 10)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n",
                    "10 + 1 = 11 (left: 6 9 11)\n",
                    "9 - 6 = 3 (left: 1 3 10)\n",
                    "10 / 2 = 5 (left: 1 5 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 - 1 = 9 (left: 6 9 9)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n",
                    "10 - 6 = 4 (left: 1 4 9)\n",
                    "9 + 1 = 10 (left: 6 10 10)\n",
                    "10 + 1 = 11 (left: 6 9 11)\n",
                    "9 - 6 = 3 (left: 1 3 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 6 9 10",
                "ys": [
                    "10 - 1 = 9 (left: 6 9 9)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n",
                    "10 - 6 = 4 (left: 1 4 9)\n",
                    "9 + 1 = 10 (left: 6 10 10)\n",
                    "10 + 1 = 11 (left: 6 9 11)\n",
                    "9 - 6 = 3 (left: 1 3 10)\n"
                ],
                "new_ys": [
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 * 6 = 54 (left: 9 54)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 3 6)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n",
                    "10 - 1 = 9 (left: 6 9 9)\nInput: 3 7 10 14\n",
                    "6 - 1 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 - 9 = 1 (left: 1 5)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n10 - 7 = 3 (left: 3 9)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n10 - 9 = 1 (left: 1 7)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 * 9 = 63 (left: 10 63)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n10 + 7 = 17 (left: 9 17)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n10 + 9 = 19 (left: 7 19)\n",
                    "10 - 6 = 4 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)\n",
                    "10 - 6 = 4 (left: 1 4 9)\n9 - 4 = 5 (left: 1 5)\n",
                    "10 - 6 = 4 (left: 1 4 9)\n4 - 1 = 3 (left: 3 9)\n",
                    "10 - 6 = 4 (left: 1 4 9)\n9 - 1 = 8 (left: 4 8)\n",
                    "10 - 6 = 4 (left: 1 4 9)\n4 * 1 = 4 (left: 4 9)\n",
                    "10 - 6 = 4 (left: 1 4 9)\n9 / 1 = 9 (left: 4 9)\n",
                    "9 + 1 = 10 (left: 6 10 10)\n6 + 10 = 16 (left: 10 16)\n",
                    "9 + 1 = 10 (left: 6 10 10)\n10 + 10 = 20 (left: 6 20)\n",
                    "9 + 1 = 10 (left: 6 10 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "9 + 1 = 10 (left: 6 10 10)\n10 / 2 = 5 (left: 5 6 10)\n",
                    "9 + 1 = 10 (left: 6 10 10)\n6 * 10 = 60 (left: 10 60)\n",
                    "10 + 1 = 11 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n",
                    "10 + 1 = 11 (left: 6 9 11)\n11 - 6 = 5 (left: 5 9)\n",
                    "10 + 1 = 11 (left: 6 9 11)\n11 - 9 = 2 (left: 2 6)\n",
                    "10 + 1 = 11 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n",
                    "10 + 1 = 11 (left: 6 9 11)\n6 * 9 = 54 (left: 11 54)\n",
                    "10 + 1 = 11 (left: 6 9 11)\n11 + 9 = 20 (left: 6 20)\n",
                    "10 + 1 = 11 (left: 6 9 11)\n11 + 6 = 17 (left: 9 17)\n",
                    "9 - 6 = 3 (left: 1 3 10)\n1 + 3 = 4 (left: 4 10)\n",
                    "9 - 6 = 3 (left: 1 3 10)\n3 + 10 = 13 (left: 1 13)\n",
                    "9 - 6 = 3 (left: 1 3 10)\n10 - 3 = 7 (left: 1 7)\n",
                    "9 - 6 = 3 (left: 1 3 10)\n10 - 1 = 9 (left: 3 9)\n",
                    "9 - 6 = 3 (left: 1 3 10)\n3 - 1 = 2 (left: 2 10)\n",
                    "9 - 6 = 3 (left: 1 3 10)\n10 / 2 = 5 (left: 1 5)\n",
                    "9 - 6 = 3 (left: 1 3 10)\n1 * 3 = 3 (left: 3 10)\n"
                ],
                "values": [
                    100,
                    50,
                    0,
                    50,
                    100,
                    0,
                    100,
                    50,
                    0,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 3 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 6 9 10",
                "ys": [
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 3 6)\n"
                ],
                "new_ys": [
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 / 5 = 3.8 (invalid)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 * 5 = 95 (invalid)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n5 - 19 = -14 (invalid)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n9 - 3 = 6 (left: 6)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n9 / 3 = 3 (left: 3)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 3 6)\n3 + 6 = 9 (left: 9)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 3 6)\n6 - 3 = 3 (left: 3)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 3 6)\n6 / 3 = 2 (left: 2)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    50,
                    0,
                    50,
                    100,
                    0,
                    0,
                    100,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 6 9 10",
                "ys": [
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n"
                ],
                "new_ys": [
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (6 + 9) + (10 - 1) = 24\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: 6 + (9 + (10 - 1)) = 24\n",
                    "6 - 1 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (9 + (6 - 1)) = 24\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (10 + (6 - 1)) = 24\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (10 + 9) + (6 - 1) = 24\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\nInput: 18\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\nPossible next steps:\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (6 + 9) + (10 - 1) = 24\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: 6 + (9 + (10 - 1)) = 24\n",
                    "6 - 1 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (9 + (6 - 1)) = 24\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (10 + (6 - 1)) = 24\n",
                    "6 - 1 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (10 + 9) + (6 - 1) = 24\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n"
                ]
            }
        ],
        "idx": 843,
        "ys": [
            "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (6 + 9) + (10 - 1) = 24\n",
            "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: 6 + (9 + (10 - 1)) = 24\n",
            "6 - 1 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (9 + (6 - 1)) = 24\n",
            "6 - 1 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (10 + (6 - 1)) = 24\n",
            "6 - 1 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (10 + 9) + (6 - 1) = 24\n",
            "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
            "10 - 1 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 75958,
            "prompt_tokens": 300296,
            "cost": 13.56636
        },
        "time_spent": 36.64797496795654
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 5 = 7 (left: 6 7 10)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n",
                    "10 + 2 = 12 (left: 5 6 12)\n",
                    "2 * 5 = 10 (left: 6 10 10)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n",
                    "10 - 6 = 4 (left: 2 4 5)\n",
                    "10 / 2 = 5 (left: 5 5 6)\n",
                    "10 - 5 = 5 (left: 2 5 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 5 = 7 (left: 6 7 10)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n",
                    "10 + 2 = 12 (left: 5 6 12)\n",
                    "2 * 5 = 10 (left: 6 10 10)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n",
                    "10 - 6 = 4 (left: 2 4 5)\n",
                    "10 / 2 = 5 (left: 5 5 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 6 10",
                "ys": [
                    "2 + 5 = 7 (left: 6 7 10)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n",
                    "10 + 2 = 12 (left: 5 6 12)\n",
                    "2 * 5 = 10 (left: 6 10 10)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n",
                    "10 - 6 = 4 (left: 2 4 5)\n",
                    "10 / 2 = 5 (left: 5 5 6)\n"
                ],
                "new_ys": [
                    "2 + 5 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 + 7 = 17 (left: 6 17)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 * 6 = 42 (left: 10 42)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 / 2 = 5 (left: 5 6 7)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n2 + 10 = 12 (left: 11 12)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n11 + 2 = 13 (left: 10 13)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n11 - 2 = 9 (left: 9 10)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 + 2 = 12 (left: 11 12)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 - 2 = 8 (left: 8 11)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n11 - 10 = 1 (left: 1 2)\n",
                    "5 + 6 = 11 (left: 2 10 11)\n10 / 2 = 5 (left: 5 11)\n",
                    "10 + 2 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n",
                    "10 + 2 = 12 (left: 5 6 12)\n12 - 6 = 6 (left: 5 6)\n",
                    "10 + 2 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 6 7)\n",
                    "10 + 2 = 12 (left: 5 6 12)\n6 + 5 = 11 (left: 11 12)\n",
                    "10 + 2 = 12 (left: 5 6 12)\n12 / 6 = 2 (left: 2 5)\n",
                    "10 + 2 = 12 (left: 5 6 12)\n6 * 2 = 12 (left: 5 12)\n",
                    "2 * 5 = 10 (left: 6 10 10)\n6 + 10 = 16 (left: 10 16)\n",
                    "2 * 5 = 10 (left: 6 10 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "2 * 5 = 10 (left: 6 10 10)\n10 / 2 = 5 (left: 5 6 10)\n",
                    "2 * 5 = 10 (left: 6 10 10)\n10 + 10 = 20 (left: 6 20)\n",
                    "2 * 5 = 10 (left: 6 10 10)\n10 - 10 = 0 (left: 0 6)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n5 + 10 = 15 (left: 4 15)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n10 - 5 = 5 (left: 4 5)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n10 - 4 = 6 (left: 5 6)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n10 / 5 = 2 (left: 2 4)\n",
                    "6 - 2 = 4 (left: 4 5 10)\n10 / 2 = 5 (left: 4 5)\n",
                    "10 - 6 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n",
                    "10 - 6 = 4 (left: 2 4 5)\n2 + 5 = 7 (left: 4 7)\n",
                    "10 - 6 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n",
                    "10 - 6 = 4 (left: 2 4 5)\n4 - 2 = 2 (left: 2 5)\n",
                    "10 - 6 = 4 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "10 - 6 = 4 (left: 2 4 5)\n5 - 4 = 1 (left: 1 2)\n",
                    "10 - 6 = 4 (left: 2 4 5)\n4 / 2 = 2 (left: 2 5)\n",
                    "10 - 6 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n",
                    "10 - 6 = 4 (left: 2 4 5)\n2 * 5 = 10 (left: 4 10)\n",
                    "10 - 6 = 4 (left: 2 4 5)\n4 * 5 = 20 (left: 2 20)\n",
                    "10 / 2 = 5 (left: 5 5 6)\n5 + 5 = 10 (left: 6 10)\n",
                    "10 / 2 = 5 (left: 5 5 6)\n5 * 5 = 25 (left: 6 25)\n",
                    "10 / 2 = 5 (left: 5 5 6)\n6 + 5 = 11 (left: 5 11)\n",
                    "10 / 2 = 5 (left: 5 5 6)\n6 - 5 = 1 (left: 1 5)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "2 + 5 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 + 7 = 17 (left: 6 17)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 * 6 = 42 (left: 10 42)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 6 10",
                "ys": [
                    "2 + 5 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 + 7 = 17 (left: 6 17)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 * 6 = 42 (left: 10 42)\n"
                ],
                "new_ys": [
                    "2 + 5 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n13 - 10 = 3 (left: 3)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 + 6 = 9 (left: 9)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n6 - 3 = 3 (left: 3)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n6 / 3 = 2 (left: 2)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n7 - 4 = 3 (left: 3)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n7 + 16 = 23 (left: 23)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n16 - 7 = 9 (left: 9)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n16 / 7 \u2248 2.29 (left: 2.29)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n7 * 16 = 112 (left: 112)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 + 7 = 17 (left: 6 17)\n6 + 17 = 23 (left: 23)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 + 7 = 17 (left: 6 17)\n17 - 6 = 11 (left: 11)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 * 6 = 42 (left: 10 42)\n10 + 42 = 52 (left: 52)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 * 6 = 42 (left: 10 42)\n42 - 10 = 32 (left: 32)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 * 6 = 42 (left: 10 42)\n42 / 10 = 4.2 (left: 4.2)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 * 6 = 42 (left: 10 42)\n10 * 42 = 420 (left: 420)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 5 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 5 6 10",
                "ys": [
                    "2 + 5 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "2 + 5 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nInput: 23\n",
                    "2 + 5 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nPossible next steps:\n",
                    "2 + 5 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nNo valid operations possible with a single number.\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\nInput: 18\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\nPossible next steps:\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nInput: 11\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nPossible next steps:\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nNone\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\nInput: 28\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\nPossible next steps:\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\nNo valid operations possible with a single number.\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nInput: 11\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nPossible next steps:\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nNone\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 5 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nInput: 23\n",
                    "2 + 5 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nPossible next steps:\n",
                    "2 + 5 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nNo valid operations possible with a single number.\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\nInput: 18\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\nPossible next steps:\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n"
                ]
            }
        ],
        "idx": 844,
        "ys": [
            "2 + 5 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nInput: 23\n",
            "2 + 5 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nPossible next steps:\n",
            "2 + 5 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nNo valid operations possible with a single number.\n",
            "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\nInput: 18\n",
            "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\nPossible next steps:\n",
            "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
            "2 + 5 = 7 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 77773,
            "prompt_tokens": 306042,
            "cost": 13.847639999999998
        },
        "time_spent": 36.73953199386597
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 8 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n",
                    "9 + 3 = 12 (left: 8 12 12)\n",
                    "12 + 3 = 15 (left: 8 9 15)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n",
                    "12 - 3 = 9 (left: 8 9 9)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n",
                    "12 / 3 = 4 (left: 4 8 9)\n",
                    "12 - 8 = 4 (left: 3 4 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n",
                    "9 + 3 = 12 (left: 8 12 12)\n",
                    "12 + 3 = 15 (left: 8 9 15)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n",
                    "12 - 3 = 9 (left: 8 9 9)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n",
                    "12 / 3 = 4 (left: 4 8 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 8 9 12",
                "ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n",
                    "9 + 3 = 12 (left: 8 12 12)\n",
                    "12 + 3 = 15 (left: 8 9 15)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n",
                    "12 - 3 = 9 (left: 8 9 9)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n",
                    "12 / 3 = 4 (left: 4 8 9)\n"
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 11)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n12 - 11 = 1 (left: 1 9)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n12 + 11 = 23 (left: 9 23)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n12 + 9 = 21 (left: 11 21)\n",
                    "9 + 3 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "9 + 3 = 12 (left: 8 12 12)\n12 + 12 = 24 (left: 8 24)\n",
                    "9 + 3 = 12 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "9 + 3 = 12 (left: 8 12 12)\n12 * 2 = 24 (left: 8 24)\n",
                    "9 + 3 = 12 (left: 8 12 12)\n12 / 2 = 6 (left: 6 8)\n",
                    "12 + 3 = 15 (left: 8 9 15)\n8 + 9 = 17 (left: 15 17)\n",
                    "12 + 3 = 15 (left: 8 9 15)\n15 + 9 = 24 (left: 8 24)\n",
                    "12 + 3 = 15 (left: 8 9 15)\n15 - 9 = 6 (left: 6 8)\n",
                    "12 + 3 = 15 (left: 8 9 15)\n15 - 8 = 7 (left: 7 9)\n",
                    "12 + 3 = 15 (left: 8 9 15)\n9 - 8 = 1 (left: 1 15)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n9 + 12 = 21 (left: 21 24)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 - 12 = 12 (left: 9 12)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 / 12 = 2 (left: 2 9)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 - 9 = 15 (left: 12 15)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n12 - 9 = 3 (left: 3 24)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 / 9 = 2 (left: 2 12)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n12 + 9 = 21 (left: 21 24)\n",
                    "12 - 3 = 9 (left: 8 9 9)\n8 + 9 = 17 (left: 9 17)\n",
                    "12 - 3 = 9 (left: 8 9 9)\n9 + 9 = 18 (left: 8 18)\n",
                    "12 - 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n",
                    "12 - 3 = 9 (left: 8 9 9)\n9 * 8 = 72 (left: 9 72)\n",
                    "12 - 3 = 9 (left: 8 9 9)\n8 * 9 = 72 (left: 9 72)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 12 14)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n12 + 8 = 20 (left: 6 20)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 8)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n12 / 2 = 6 (left: 6 8)\n",
                    "12 / 3 = 4 (left: 4 8 9)\n4 + 8 = 12 (left: 9 12)\n",
                    "12 / 3 = 4 (left: 4 8 9)\n8 + 9 = 17 (left: 4 17)\n",
                    "12 / 3 = 4 (left: 4 8 9)\n9 - 4 = 5 (left: 5 8)\n",
                    "12 / 3 = 4 (left: 4 8 9)\n8 - 4 = 4 (left: 4 9)\n",
                    "12 / 3 = 4 (left: 4 8 9)\n4 * 8 = 32 (left: 9 32)\n",
                    "12 / 3 = 4 (left: 4 8 9)\n9 - 8 = 1 (left: 1 4)\n",
                    "12 / 3 = 4 (left: 4 8 9)\n8 / 4 = 2 (left: 2 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 / 9 = 2 (left: 2 12)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 11)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n12 - 11 = 1 (left: 1 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 8 9 12",
                "ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 / 9 = 2 (left: 2 12)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 11)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n12 - 11 = 1 (left: 1 9)\n"
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 / 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 / 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 / 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 / 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n20 / 12 = 1.666... (left: 1.666...)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 11)\n11 - 3 = 8 (left: 8)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 11)\n11 / 3 = 3.67 (left: 3.67)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n12 - 11 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n12 - 11 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n12 - 11 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n12 - 11 = 1 (left: 1 9)\n9 / 1 = 9 (left: 9)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 / 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 / 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 8 9 12",
                "ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 / 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 / 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n"
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((3 + 8) - 9) * 12 = 24\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 / 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 8) * (24 / 9) = 24\n",
                    "9 - 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 3) * (12 - 8) = 24\n",
                    "9 - 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - (9 - 3)) * 12 = 24\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n(There are no possible next steps with only one number.)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 14 = 24 (left: 8 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 / 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 / 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 / 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n(No possible next steps with a single number)\n"
                ],
                "values": [
                    1000,
                    0,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((3 + 8) - 9) * 12 = 24\n",
                    "9 - 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 3) * (12 - 8) = 24\n",
                    "9 - 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - (9 - 3)) * 12 = 24\n",
                    "3 * 8 = 24 (left: 9 12 24)\n24 / 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 8) * (24 / 9) = 24\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n(There are no possible next steps with only one number.)\n"
                ]
            }
        ],
        "idx": 845,
        "ys": [
            "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((3 + 8) - 9) * 12 = 24\n",
            "9 - 3 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 3) * (12 - 8) = 24\n",
            "9 - 3 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - (9 - 3)) * 12 = 24\n",
            "3 * 8 = 24 (left: 9 12 24)\n24 / 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 8) * (24 / 9) = 24\n",
            "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
            "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
            "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n(There are no possible next steps with only one number.)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 79472,
            "prompt_tokens": 313408,
            "cost": 14.17056
        },
        "time_spent": 37.26279592514038
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 6 11)\n",
                    "3 + 6 = 9 (left: 2 9 11)\n",
                    "6 + 11 = 17 (left: 2 3 17)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n",
                    "11 - 6 = 5 (left: 2 3 5)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n",
                    "11 - 2 = 9 (left: 3 6 9)\n",
                    "6 / 2 = 3 (left: 3 3 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 2 6 8)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n",
                    "3 + 6 = 9 (left: 2 9 11)\n",
                    "6 + 11 = 17 (left: 2 3 17)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n",
                    "11 - 6 = 5 (left: 2 3 5)\n",
                    "11 - 2 = 9 (left: 3 6 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 11",
                "ys": [
                    "11 - 3 = 8 (left: 2 6 8)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n",
                    "3 + 6 = 9 (left: 2 9 11)\n",
                    "6 + 11 = 17 (left: 2 3 17)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n",
                    "11 - 6 = 5 (left: 2 3 5)\n",
                    "11 - 2 = 9 (left: 3 6 9)\n"
                ],
                "new_ys": [
                    "11 - 3 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 6 = 2 (left: 2 2)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n11 + 5 = 16 (left: 6 16)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n11 + 6 = 17 (left: 5 17)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 * 6 = 30 (left: 11 30)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n11 * 5 = 55 (left: 6 55)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n11 * 6 = 66 (left: 5 66)\n",
                    "3 + 6 = 9 (left: 2 9 11)\n2 + 9 = 11 (left: 11 11)\n",
                    "3 + 6 = 9 (left: 2 9 11)\n11 + 2 = 13 (left: 9 13)\n",
                    "3 + 6 = 9 (left: 2 9 11)\n11 - 2 = 9 (left: 9 9)\n",
                    "3 + 6 = 9 (left: 2 9 11)\n11 - 9 = 2 (left: 2 2)\n",
                    "3 + 6 = 9 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n",
                    "3 + 6 = 9 (left: 2 9 11)\n11 / 11 = 1 (left: 1 2 9)\n",
                    "6 + 11 = 17 (left: 2 3 17)\n2 + 3 = 5 (left: 5 17)\n",
                    "6 + 11 = 17 (left: 2 3 17)\n3 + 17 = 20 (left: 2 20)\n",
                    "6 + 11 = 17 (left: 2 3 17)\n17 - 3 = 14 (left: 2 14)\n",
                    "6 + 11 = 17 (left: 2 3 17)\n17 - 2 = 15 (left: 3 15)\n",
                    "6 + 11 = 17 (left: 2 3 17)\n2 * 3 = 6 (left: 6 17)\n",
                    "6 + 11 = 17 (left: 2 3 17)\n17 / 2 = 8.5 (left: 3 8.5)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n11 + 6 = 17 (left: 6 17)\n",
                    "11 - 6 = 5 (left: 2 3 5)\n2 + 3 = 5 (left: 5 5)\n",
                    "11 - 6 = 5 (left: 2 3 5)\n3 + 2 = 5 (left: 5 5)\n",
                    "11 - 6 = 5 (left: 2 3 5)\n5 - 2 = 3 (left: 3 3)\n",
                    "11 - 6 = 5 (left: 2 3 5)\n5 - 3 = 2 (left: 2 2)\n",
                    "11 - 6 = 5 (left: 2 3 5)\n2 * 3 = 6 (left: 5 6)\n",
                    "11 - 6 = 5 (left: 2 3 5)\n3 * 2 = 6 (left: 5 6)\n",
                    "11 - 6 = 5 (left: 2 3 5)\n5 / 5 = 1 (left: 1 2 3)\n",
                    "11 - 2 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n",
                    "11 - 2 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n",
                    "11 - 2 = 9 (left: 3 6 9)\n9 - 6 = 3 (left: 3 3)\n",
                    "11 - 2 = 9 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n",
                    "11 - 2 = 9 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n",
                    "11 - 2 = 9 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 6 11",
                "ys": [
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n"
                ],
                "new_ys": [
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 - 8 = 0 (left: 0)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 * 8 = 64 (left: 64)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 / 8 = 1 (left: 1)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n11 - 11 = 0 (left: 0)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n11 * 11 = 121 (left: 121)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n11 / 11 = 1 (left: 1)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)\n",
                    "2 + 3 = 5 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 6 11",
                "ys": [
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n"
                ],
                "new_ys": [
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 - 3) * (6 / 2) = 24\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((11 - 3) / 2) * 6 = 24\n",
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNo possible operations with a single number.\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\nInput: 16\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\nPossible next steps:\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n16 / 8 = 2 (left: 2 8)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nInput: 36\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nPossible next steps:\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 36 = 1 (left: 1)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 - 36 = 0 (left: 0)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 + 36 = 72 (left: 72)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 * 36 = 1296 (left: 1296)\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 - 3) * (6 / 2) = 24\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((11 - 3) / 2) * 6 = 24\n",
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNo possible operations with a single number.\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n"
                ]
            }
        ],
        "idx": 846,
        "ys": [
            "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 - 3) * (6 / 2) = 24\n",
            "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((11 - 3) / 2) * 6 = 24\n",
            "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
            "11 - 3 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNo possible operations with a single number.\n",
            "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
            "11 - 3 = 8 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 81384,
            "prompt_tokens": 319964,
            "cost": 14.48196
        },
        "time_spent": 38.589558124542236
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 5 6 9)\n",
                    "5 + 4 = 9 (left: 2 9 9)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n",
                    "9 - 4 = 5 (left: 2 5 5)\n",
                    "5 - 2 = 3 (left: 3 4 9)\n",
                    "4 * 2 = 8 (left: 5 8 9)\n",
                    "9 - 2 = 7 (left: 4 5 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 5 6 9)\n",
                    "5 + 4 = 9 (left: 2 9 9)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n",
                    "9 - 4 = 5 (left: 2 5 5)\n",
                    "5 - 2 = 3 (left: 3 4 9)\n",
                    "4 * 2 = 8 (left: 5 8 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 5 9",
                "ys": [
                    "2 + 4 = 6 (left: 5 6 9)\n",
                    "5 + 4 = 9 (left: 2 9 9)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n",
                    "9 - 4 = 5 (left: 2 5 5)\n",
                    "5 - 2 = 3 (left: 3 4 9)\n",
                    "4 * 2 = 8 (left: 5 8 9)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 + 6 = 15 (left: 5 15)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 - 5 = 1 (left: 1 9)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 6 = 3 (left: 3 5)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 * 5 = 30 (left: 9 30)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 * 5 = 45 (left: 6 45)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 * 6 = 54 (left: 5 54)\n",
                    "5 + 4 = 9 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n",
                    "5 + 4 = 9 (left: 2 9 9)\n9 + 9 = 18 (left: 2 18)\n",
                    "5 + 4 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n",
                    "5 + 4 = 9 (left: 2 9 9)\n9 / 9 = 1 (left: 1 2)\n",
                    "5 + 4 = 9 (left: 2 9 9)\n2 * 9 = 18 (left: 9 18)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n5 + 11 = 16 (left: 4 16)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n4 * 5 = 20 (left: 11 20)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n11 + 4 = 15 (left: 5 15)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n11 + 5 = 16 (left: 4 16)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 + 4 = 8 (left: 2 8)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 - 2 = 2 (left: 2 4)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 * 2 = 8 (left: 4 8)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 / 2 = 2 (left: 2 4)\n",
                    "9 - 4 = 5 (left: 2 5 5)\n2 + 5 = 7 (left: 5 7)\n",
                    "9 - 4 = 5 (left: 2 5 5)\n5 + 5 = 10 (left: 2 10)\n",
                    "9 - 4 = 5 (left: 2 5 5)\n5 - 2 = 3 (left: 3 5)\n",
                    "9 - 4 = 5 (left: 2 5 5)\n5 * 2 = 10 (left: 5 10)\n",
                    "9 - 4 = 5 (left: 2 5 5)\n5 / 5 = 1 (left: 1 2)\n",
                    "5 - 2 = 3 (left: 3 4 9)\n3 + 4 = 7 (left: 7 9)\n",
                    "5 - 2 = 3 (left: 3 4 9)\n4 + 9 = 13 (left: 3 13)\n",
                    "5 - 2 = 3 (left: 3 4 9)\n9 + 3 = 12 (left: 4 12)\n",
                    "5 - 2 = 3 (left: 3 4 9)\n3 * 4 = 12 (left: 9 12)\n",
                    "5 - 2 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "5 - 2 = 3 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "4 * 2 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n",
                    "4 * 2 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n",
                    "4 * 2 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n",
                    "4 * 2 = 8 (left: 5 8 9)\n8 + 5 = 13 (left: 9 13)\n",
                    "4 * 2 = 8 (left: 5 8 9)\n9 - 8 = 1 (left: 1 5)\n",
                    "4 * 2 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n",
                    "4 * 2 = 8 (left: 5 8 9)\n9 * 5 = 45 (left: 8 45)\n",
                    "4 * 2 = 8 (left: 5 8 9)\n8 * 5 = 40 (left: 9 40)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n",
                    "5 - 2 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 + 6 = 15 (left: 5 15)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 - 5 = 1 (left: 1 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 5 9",
                "ys": [
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n",
                    "5 - 2 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 + 6 = 15 (left: 5 15)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 - 5 = 1 (left: 1 9)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "5 - 2 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "5 - 2 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "5 - 2 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n11 - 9 = 2 (left: 2)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 + 6 = 15 (left: 5 15)\n15 + 5 = 20 (left: 20)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 + 6 = 15 (left: 5 15)\n15 - 5 = 10 (left: 10)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 + 6 = 15 (left: 5 15)\n15 / 5 = 3 (left: 3)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 + 6 = 15 (left: 5 15)\n15 * 5 = 75 (left: 75)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 - 5 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 - 5 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 - 5 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n6 - 5 = 1 (left: 1 9)\n9 / 1 = 9 (left: 9)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "5 - 2 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 5 9",
                "ys": [
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "5 - 2 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 5) * (2 + 4) = 24\n",
                    "9 + 2 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((9 + 2) - 5) = 24\n",
                    "9 - 5 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (2 + (9 - 5)) = 24\n",
                    "5 - 2 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (9 - (5 - 2)) = 24\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "9 + 2 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 14 = 24 (left: 8 24)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 5) * (2 + 4) = 24\n",
                    "9 + 2 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((9 + 2) - 5) = 24\n",
                    "9 - 5 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (2 + (9 - 5)) = 24\n",
                    "5 - 2 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (9 - (5 - 2)) = 24\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
                ]
            }
        ],
        "idx": 847,
        "ys": [
            "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 5) * (2 + 4) = 24\n",
            "9 + 2 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((9 + 2) - 5) = 24\n",
            "9 - 5 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (2 + (9 - 5)) = 24\n",
            "5 - 2 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (9 - (5 - 2)) = 24\n",
            "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
            "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
            "2 + 4 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 83150,
            "prompt_tokens": 327330,
            "cost": 14.808899999999998
        },
        "time_spent": 37.361279010772705
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 7 11 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n",
                    "12 - 4 = 8 (left: 7 8 11)\n",
                    "11 + 4 = 15 (left: 7 12 15)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n",
                    "11 - 7 = 4 (left: 4 4 12)\n",
                    "12 + 4 = 16 (left: 7 11 16)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n",
                    "12 / 4 = 3 (left: 3 7 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n",
                    "12 - 4 = 8 (left: 7 8 11)\n",
                    "11 + 4 = 15 (left: 7 12 15)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n",
                    "11 - 7 = 4 (left: 4 4 12)\n",
                    "12 + 4 = 16 (left: 7 11 16)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 7 11 12",
                "ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n",
                    "12 - 4 = 8 (left: 7 8 11)\n",
                    "11 + 4 = 15 (left: 7 12 15)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n",
                    "11 - 7 = 4 (left: 4 4 12)\n",
                    "12 + 4 = 16 (left: 7 11 16)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n"
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n",
                    "12 - 4 = 8 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n",
                    "12 - 4 = 8 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n",
                    "12 - 4 = 8 (left: 7 8 11)\n11 - 8 = 3 (left: 3 7)\n",
                    "12 - 4 = 8 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n",
                    "12 - 4 = 8 (left: 7 8 11)\n7 * 8 = 56 (left: 11 56)\n",
                    "12 - 4 = 8 (left: 7 8 11)\n11 + 7 = 18 (left: 8 18)\n",
                    "12 - 4 = 8 (left: 7 8 11)\n11 + 8 = 19 (left: 7 19)\n",
                    "12 - 4 = 8 (left: 7 8 11)\n8 + 7 = 15 (left: 11 15)\n",
                    "11 + 4 = 15 (left: 7 12 15)\n7 + 12 = 19 (left: 15 19)\n",
                    "11 + 4 = 15 (left: 7 12 15)\n15 - 7 = 8 (left: 8 12)\n",
                    "11 + 4 = 15 (left: 7 12 15)\n15 - 12 = 3 (left: 3 7)\n",
                    "11 + 4 = 15 (left: 7 12 15)\n12 - 7 = 5 (left: 5 15)\n",
                    "11 + 4 = 15 (left: 7 12 15)\n7 * 12 = 84 (left: 15 84)\n",
                    "11 + 4 = 15 (left: 7 12 15)\n15 + 12 = 27 (left: 7 27)\n",
                    "11 + 4 = 15 (left: 7 12 15)\n15 + 7 = 22 (left: 12 22)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n11 + 5 = 16 (left: 4 16)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n11 + 4 = 15 (left: 5 15)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 11 20)\n",
                    "11 - 7 = 4 (left: 4 4 12)\n4 + 4 = 8 (left: 8 12)\n",
                    "11 - 7 = 4 (left: 4 4 12)\n4 * 4 = 16 (left: 12 16)\n",
                    "11 - 7 = 4 (left: 4 4 12)\n12 + 4 = 16 (left: 4 16)\n",
                    "11 - 7 = 4 (left: 4 4 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "11 - 7 = 4 (left: 4 4 12)\n12 / 4 = 3 (left: 3 4)\n",
                    "12 + 4 = 16 (left: 7 11 16)\n7 + 11 = 18 (left: 16 18)\n",
                    "12 + 4 = 16 (left: 7 11 16)\n16 - 7 = 9 (left: 9 11)\n",
                    "12 + 4 = 16 (left: 7 11 16)\n16 - 11 = 5 (left: 5 7)\n",
                    "12 + 4 = 16 (left: 7 11 16)\n11 - 7 = 4 (left: 4 16)\n",
                    "12 + 4 = 16 (left: 7 11 16)\n16 + 7 = 23 (left: 11 23)\n",
                    "12 + 4 = 16 (left: 7 11 16)\n16 + 11 = 27 (left: 7 27)\n",
                    "12 + 4 = 16 (left: 7 11 16)\n7 * 11 = 77 (left: 16 77)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n4 + 12 = 16 (left: 16 18)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 - 12 = 6 (left: 4 6)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 - 4 = 14 (left: 12 14)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n12 / 4 = 3 (left: 3 18)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 / 3 = 6 (left: 4 6)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n12 + 4 = 16 (left: 16 18)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 - 12 = 6 (left: 4 6)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 / 3 = 6 (left: 4 6)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 7 11 12",
                "ys": [
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 - 12 = 6 (left: 4 6)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 / 3 = 6 (left: 4 6)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n"
                ],
                "new_ys": [
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 - 12 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 - 12 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 - 12 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 / 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 / 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n22 - 12 = 10 (left: 10)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 * 2 = 24 (left: 22 24)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n22 * 2 = 44 (left: 12 44)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n22 / 2 = 11 (left: 11 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n12 + 11 = 23 (left: 11 23)\n23 - 11 = 12 (left: 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n12 - 11 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n12 + 121 = 133 (left: 133)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n121 - 12 = 109 (left: 109)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n121 / 12 = 10 (left: 10 1)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n12 * 12 = 144 (left: 144 1)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 - 12 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 / 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 - 12 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 7 11 12",
                "ys": [
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 - 12 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 / 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 - 12 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n"
                ],
                "new_ys": [
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (11 - (12 - 7)) = 24\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 - 12 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((11 + 7) - 12) = 24\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 / 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((11 + 7) / 3) = 24\n",
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 - 12 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 - 12 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 - 12 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\nInput: 10\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\nPossible next steps:\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\nInput: 34\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\nPossible next steps:\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\nNo valid operations possible.\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (11 - (12 - 7)) = 24\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 - 12 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((11 + 7) - 12) = 24\n",
                    "11 + 7 = 18 (left: 4 12 18)\n18 / 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((11 + 7) / 3) = 24\n",
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n"
                ]
            }
        ],
        "idx": 848,
        "ys": [
            "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (11 - (12 - 7)) = 24\n",
            "11 + 7 = 18 (left: 4 12 18)\n18 - 12 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((11 + 7) - 12) = 24\n",
            "11 + 7 = 18 (left: 4 12 18)\n18 / 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((11 + 7) / 3) = 24\n",
            "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
            "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
            "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
            "12 - 7 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 84947,
            "prompt_tokens": 334291,
            "cost": 15.12555
        },
        "time_spent": 36.741556882858276
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 4 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 4 9)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n",
                    "9 + 2 = 11 (left: 2 4 11)\n",
                    "2 * 2 = 4 (left: 4 4 9)\n",
                    "4 - 2 = 2 (left: 2 2 9)\n",
                    "9 - 4 = 5 (left: 2 2 5)\n",
                    "4 / 2 = 2 (left: 2 2 9)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 2 = 6 (left: 2 6 9)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n",
                    "9 + 2 = 11 (left: 2 4 11)\n",
                    "2 * 2 = 4 (left: 4 4 9)\n",
                    "4 - 2 = 2 (left: 2 2 9)\n",
                    "9 - 4 = 5 (left: 2 2 5)\n",
                    "4 / 2 = 2 (left: 2 2 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 4 9",
                "ys": [
                    "4 + 2 = 6 (left: 2 6 9)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n",
                    "9 + 2 = 11 (left: 2 4 11)\n",
                    "2 * 2 = 4 (left: 4 4 9)\n",
                    "4 - 2 = 2 (left: 2 2 9)\n",
                    "9 - 4 = 5 (left: 2 2 5)\n",
                    "4 / 2 = 2 (left: 2 2 9)\n"
                ],
                "new_ys": [
                    "4 + 2 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 - 6 = 3 (left: 2 3)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 + 9 = 15 (left: 2 15)\n",
                    "4 + 2 = 6 (left: 2 6 9)\nInput: 3 5 7 11\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 9 16)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n9 + 4 = 13 (left: 4 13)\n",
                    "9 + 2 = 11 (left: 2 4 11)\n2 + 4 = 6 (left: 6 11)\n",
                    "9 + 2 = 11 (left: 2 4 11)\n4 + 11 = 15 (left: 2 15)\n",
                    "9 + 2 = 11 (left: 2 4 11)\n11 - 4 = 7 (left: 2 7)\n",
                    "9 + 2 = 11 (left: 2 4 11)\n11 - 2 = 9 (left: 4 9)\n",
                    "9 + 2 = 11 (left: 2 4 11)\n4 - 2 = 2 (left: 2 11)\n",
                    "9 + 2 = 11 (left: 2 4 11)\n4 * 2 = 8 (left: 8 11)\n",
                    "9 + 2 = 11 (left: 2 4 11)\n11 / 2 = 5.5 (invalid)\n",
                    "2 * 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n",
                    "2 * 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 9 16)\n",
                    "2 * 2 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)\n",
                    "2 * 2 = 4 (left: 4 4 9)\n9 + 4 = 13 (left: 4 13)\n",
                    "4 - 2 = 2 (left: 2 2 9)\n2 + 2 = 4 (left: 4 9)\n",
                    "4 - 2 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n",
                    "4 - 2 = 2 (left: 2 2 9)\n9 + 2 = 11 (left: 2 11)\n",
                    "4 - 2 = 2 (left: 2 2 9)\n9 - 2 = 7 (left: 2 7)\n",
                    "9 - 4 = 5 (left: 2 2 5)\n2 + 2 = 4 (left: 4 5)\n",
                    "9 - 4 = 5 (left: 2 2 5)\n2 * 2 = 4 (left: 4 5)\n",
                    "9 - 4 = 5 (left: 2 2 5)\n5 + 2 = 7 (left: 2 7)\n",
                    "9 - 4 = 5 (left: 2 2 5)\n5 - 2 = 3 (left: 2 3)\n",
                    "9 - 4 = 5 (left: 2 2 5)\n5 / 2 = 2.5 (left: 2 2.5)\n",
                    "4 / 2 = 2 (left: 2 2 9)\n2 + 2 = 4 (left: 4 9)\n",
                    "4 / 2 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n",
                    "4 / 2 = 2 (left: 2 2 9)\n9 + 2 = 11 (left: 2 11)\n",
                    "4 / 2 = 2 (left: 2 2 9)\n9 - 2 = 7 (left: 2 7)\n",
                    "4 / 2 = 2 (left: 2 2 9)\n9 / 3 = 3 (left: 2 3)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "4 + 2 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 + 9 = 15 (left: 2 15)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 4 9",
                "ys": [
                    "4 + 2 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 + 9 = 15 (left: 2 15)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n"
                ],
                "new_ys": [
                    "4 + 2 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n9 - 8 = 1 (left: 1)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n7 - 6 = 1 (left: 1)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 * 7 = 42 (left: 42)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 * 12 = 108 (left: 108)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n12 / 9 = 1.33 (left: 1.33)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\nInput: 3 9\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\nPossible next steps:\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n9 - 3 = 6 (left: 6)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n9 / 3 = 3 (left: 3)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 + 9 = 15 (left: 2 15)\n15 + 2 = 17 (left: 17)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 + 9 = 15 (left: 2 15)\n15 - 2 = 13 (left: 13)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 + 9 = 15 (left: 2 15)\n2 * 15 = 30 (left: 30)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 + 9 = 15 (left: 2 15)\n15 / 2 = 7.5 (left: 7.5)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n9 - 8 = 1 (left: 1)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 2 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 + 9 = 15 (left: 2 15)\n15 + 2 = 17 (left: 17)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 4 9",
                "ys": [
                    "4 + 2 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 + 9 = 15 (left: 2 15)\n15 + 2 = 17 (left: 17)\n"
                ],
                "new_ys": [
                    "4 + 2 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
                    "4 + 2 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "4 + 2 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNone (No valid operations possible with a single number)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nInput: 13\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nPossible next steps:\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nNone\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 21\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nNone\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\nInput: 27\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\nPossible next steps:\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\nNo valid operations possible with a single number.\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\nInput: 17\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\nPossible next steps:\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 + 2 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\nNone\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 + 9 = 15 (left: 2 15)\n15 + 2 = 17 (left: 17)\nInput: 17\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 + 9 = 15 (left: 2 15)\n15 + 2 = 17 (left: 17)\nPossible next steps:\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 + 9 = 15 (left: 2 15)\n15 + 2 = 17 (left: 17)\nNo valid operations possible with a single number.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 2 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
                    "4 + 2 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "4 + 2 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNone (No valid operations possible with a single number)\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nInput: 13\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nPossible next steps:\n",
                    "4 + 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nNone\n",
                    "4 + 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 21\n"
                ]
            }
        ],
        "idx": 849,
        "ys": [
            "4 + 2 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
            "4 + 2 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
            "4 + 2 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNone (No valid operations possible with a single number)\n",
            "4 + 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nInput: 13\n",
            "4 + 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nPossible next steps:\n",
            "4 + 2 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nNone\n",
            "4 + 2 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 21\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 86481,
            "prompt_tokens": 340037,
            "cost": 15.389969999999998
        },
        "time_spent": 32.54137301445007
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 6 8 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n",
                    "8 - 2 = 6 (left: 6 6 8)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n",
                    "6 + 2 = 8 (left: 8 8 8)\n",
                    "8 - 6 = 2 (left: 2 2 8)\n",
                    "6 * 2 = 12 (left: 8 8 12)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n",
                    "6 - 2 = 4 (left: 4 8 8)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    100,
                    100
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n",
                    "6 + 2 = 8 (left: 8 8 8)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n",
                    "6 - 2 = 4 (left: 4 8 8)\n",
                    "8 - 2 = 6 (left: 6 6 8)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n",
                    "8 - 6 = 2 (left: 2 2 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 6 8 8",
                "ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n",
                    "6 + 2 = 8 (left: 8 8 8)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n",
                    "6 - 2 = 4 (left: 4 8 8)\n",
                    "8 - 2 = 6 (left: 6 6 8)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n",
                    "8 - 6 = 2 (left: 2 2 8)\n"
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 8 64)\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n",
                    "6 + 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "6 + 2 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 8 64)\n",
                    "6 + 2 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)\n",
                    "6 + 2 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n2 + 6 = 8 (left: 8 16)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n16 - 6 = 10 (left: 2 10)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n16 / 2 = 8 (left: 6 8)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n16 - 2 = 14 (left: 6 14)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n6 - 2 = 4 (left: 4 16)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n6 * 2 = 12 (left: 12 16)\n",
                    "6 - 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 + 8 = 16 (left: 4 16)\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "8 - 2 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n",
                    "8 - 2 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n",
                    "8 - 2 = 6 (left: 6 6 8)\n8 + 6 = 14 (left: 6 14)\n",
                    "8 - 2 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n8 - 6 = 2 (left: 2 4)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n8 / 4 = 2 (left: 2 6)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n6 + 8 = 14 (left: 4 14)\n",
                    "8 - 6 = 2 (left: 2 2 8)\n2 + 2 = 4 (left: 4 8)\n",
                    "8 - 6 = 2 (left: 2 2 8)\n2 * 2 = 4 (left: 4 8)\n",
                    "8 - 6 = 2 (left: 2 2 8)\n8 + 2 = 10 (left: 2 10)\n",
                    "8 - 6 = 2 (left: 2 2 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "8 - 6 = 2 (left: 2 2 8)\n8 / 2 = 4 (left: 2 4)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "6 + 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n2 + 6 = 8 (left: 8 16)\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n16 - 6 = 10 (left: 2 10)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n16 / 2 = 8 (left: 6 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 6 8 8",
                "ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "6 + 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n2 + 6 = 8 (left: 8 16)\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n16 - 6 = 10 (left: 2 10)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n16 / 2 = 8 (left: 6 8)\n"
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 8)\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 * 2 = 16 (left: 16 16)\n",
                    "6 + 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "6 + 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "6 + 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "6 + 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 * 2 = 16 (left: 16 16)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n2 + 6 = 8 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n2 + 6 = 8 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n2 + 6 = 8 (left: 8 16)\n16 / 8 = 2 (left: 2 8)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n2 + 6 = 8 (left: 8 16)\n8 * 2 = 16 (left: 16 16)\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n32 / 8 = 4 (left: 4)\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 * 32 = 256 (left: 256)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n16 - 6 = 10 (left: 2 10)\n10 + 2 = 12 (left: 12)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n16 - 6 = 10 (left: 2 10)\n10 - 2 = 8 (left: 8)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n16 - 6 = 10 (left: 2 10)\n10 / 2 = 5 (left: 5)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n16 - 6 = 10 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n16 / 2 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n16 / 2 = 8 (left: 6 8)\n8 - 6 = 2 (left: 2)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n16 / 2 = 8 (left: 6 8)\n6 * 8 = 48 (left: 48)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n16 / 2 = 8 (left: 6 8)\n8 / 6 = 1.33 (left: 1.33)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    100,
                    0,
                    0,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "6 + 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n2 + 6 = 8 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 6 8 8",
                "ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "6 + 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "8 + 8 = 16 (left: 2 6 16)\n2 + 6 = 8 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (2 + 6) + 8 + 8 = 24\n",
                    "6 + 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (6 + 2) + 8 + 8 = 24\n",
                    "8 + 8 = 16 (left: 2 6 16)\n2 + 6 = 8 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (8 + 8) + (2 + 6) = 24\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\nAnswer: (8 * (6 - 2)) - 8 = 24\n",
                    "8 / 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 8 / 2) * 6 = 24\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\nInput: 40\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\nPossible next steps:\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\nNone (Goal reached)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "8 / 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (2 + 6) + 8 + 8 = 24\n",
                    "6 + 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (6 + 2) + 8 + 8 = 24\n",
                    "8 + 8 = 16 (left: 2 6 16)\n2 + 6 = 8 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (8 + 8) + (2 + 6) = 24\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\nAnswer: (8 * (6 - 2)) - 8 = 24\n",
                    "8 / 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 8 / 2) * 6 = 24\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\nInput: 40\n",
                    "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 850,
        "ys": [
            "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (2 + 6) + 8 + 8 = 24\n",
            "6 + 2 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (6 + 2) + 8 + 8 = 24\n",
            "8 + 8 = 16 (left: 2 6 16)\n2 + 6 = 8 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (8 + 8) + (2 + 6) = 24\n",
            "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\nAnswer: (8 * (6 - 2)) - 8 = 24\n",
            "8 / 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 8 / 2) * 6 = 24\n",
            "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\nInput: 40\n",
            "6 - 2 = 4 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 88034,
            "prompt_tokens": 347808,
            "cost": 15.71628
        },
        "time_spent": 33.7914981842041
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 5 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n",
                    "5 + 5 = 10 (left: 4 7 10)\n",
                    "7 + 4 = 11 (left: 5 5 11)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n",
                    "7 - 5 = 2 (left: 2 4 5)\n",
                    "7 - 4 = 3 (left: 3 5 5)\n",
                    "5 * 4 = 20 (left: 5 7 20)\n",
                    "7 * 4 = 28 (left: 5 5 28)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n",
                    "5 + 5 = 10 (left: 4 7 10)\n",
                    "7 + 4 = 11 (left: 5 5 11)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n",
                    "7 - 5 = 2 (left: 2 4 5)\n",
                    "7 - 4 = 3 (left: 3 5 5)\n",
                    "5 * 4 = 20 (left: 5 7 20)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 5 7",
                "ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n",
                    "5 + 5 = 10 (left: 4 7 10)\n",
                    "7 + 4 = 11 (left: 5 5 11)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n",
                    "7 - 5 = 2 (left: 2 4 5)\n",
                    "7 - 4 = 3 (left: 3 5 5)\n",
                    "5 * 4 = 20 (left: 5 7 20)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 7 = 16 (left: 5 16)\n",
                    "5 + 5 = 10 (left: 4 7 10)\n4 + 7 = 11 (left: 10 11)\n",
                    "5 + 5 = 10 (left: 4 7 10)\n10 - 4 = 6 (left: 6 7)\n",
                    "5 + 5 = 10 (left: 4 7 10)\n10 - 7 = 3 (left: 3 4)\n",
                    "5 + 5 = 10 (left: 4 7 10)\n7 - 4 = 3 (left: 3 10)\n",
                    "5 + 5 = 10 (left: 4 7 10)\n10 + 4 = 14 (left: 7 14)\n",
                    "5 + 5 = 10 (left: 4 7 10)\n10 + 7 = 17 (left: 4 17)\n",
                    "5 + 5 = 10 (left: 4 7 10)\n7 * 4 = 28 (left: 10 28)\n",
                    "7 + 4 = 11 (left: 5 5 11)\n5 + 5 = 10 (left: 10 11)\n",
                    "7 + 4 = 11 (left: 5 5 11)\n11 - 5 = 6 (left: 5 6)\n",
                    "7 + 4 = 11 (left: 5 5 11)\n5 * 5 = 25 (left: 11 25)\n",
                    "7 + 4 = 11 (left: 5 5 11)\n11 + 5 = 16 (left: 5 16)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n7 - 5 = 2 (left: 1 2)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n7 - 1 = 6 (left: 5 6)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 * 1 = 5 (left: 5 7)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n7 * 1 = 7 (left: 5 7)\n",
                    "7 - 5 = 2 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n",
                    "7 - 5 = 2 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n",
                    "7 - 5 = 2 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "7 - 5 = 2 (left: 2 4 5)\n4 - 2 = 2 (left: 2 5)\n",
                    "7 - 5 = 2 (left: 2 4 5)\n5 - 4 = 1 (left: 1 2)\n",
                    "7 - 5 = 2 (left: 2 4 5)\n4 * 2 = 8 (left: 5 8)\n",
                    "7 - 5 = 2 (left: 2 4 5)\n5 * 2 = 10 (left: 4 10)\n",
                    "7 - 5 = 2 (left: 2 4 5)\n4 / 2 = 2 (left: 2 5)\n",
                    "7 - 4 = 3 (left: 3 5 5)\n3 + 5 = 8 (left: 5 8)\n",
                    "7 - 4 = 3 (left: 3 5 5)\n5 + 5 = 10 (left: 3 10)\n",
                    "7 - 4 = 3 (left: 3 5 5)\n5 - 3 = 2 (left: 2 5)\n",
                    "7 - 4 = 3 (left: 3 5 5)\n5 * 3 = 15 (left: 5 15)\n",
                    "7 - 4 = 3 (left: 3 5 5)\n3 * 5 = 15 (left: 5 15)\n",
                    "5 * 4 = 20 (left: 5 7 20)\n5 + 7 = 12 (left: 12 20)\n",
                    "5 * 4 = 20 (left: 5 7 20)\n20 - 7 = 13 (left: 5 13)\n",
                    "5 * 4 = 20 (left: 5 7 20)\n20 - 5 = 15 (left: 7 15)\n",
                    "5 * 4 = 20 (left: 5 7 20)\n20 / 5 = 4 (left: 4 7)\n",
                    "5 * 4 = 20 (left: 5 7 20)\n7 - 5 = 2 (left: 2 20)\n",
                    "5 * 4 = 20 (left: 5 7 20)\n20 + 5 = 25 (left: 7 25)\n",
                    "5 * 4 = 20 (left: 5 7 20)\n20 + 7 = 27 (left: 5 27)\n",
                    "5 * 4 = 20 (left: 5 7 20)\n7 * 5 = 35 (left: 20 35)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 7 = 16 (left: 5 16)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 5 7",
                "ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 7 = 16 (left: 5 16)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 * 12 = 108 (left: 108)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 / 9 = 1.33 (left: 1.33)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n7 - 4 = 3 (left: 3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n2 + 5 = 7 (left: 7)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n5 - 2 = 3 (left: 3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n9 - 2 = 7 (left: 7)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n9 / 3 = 3 (left: 3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 - 9 = 26 (left: 26)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 + 9 = 44 (left: 44)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 / 9 = 3 (left: 3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 * 9 = 315 (left: 315)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n9 * 35 = 315 (left: 315)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n7 + 14 = 21 (left: 21)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n14 - 7 = 7 (left: 7)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n14 / 7 = 2 (left: 2)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n7 * 2 = 14 (left: 14)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 7 = 16 (left: 5 16)\n5 + 16 = 21 (left: 21)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 7 = 16 (left: 5 16)\n16 - 5 = 11 (left: 11)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 7 = 16 (left: 5 16)\n16 / 5 = 3 (left: 3)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 7 = 16 (left: 5 16)\n5 * 16 = 80 (left: 80)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 - 9 = 26 (left: 26)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n7 + 14 = 21 (left: 21)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 5 7",
                "ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 - 9 = 26 (left: 26)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n7 + 14 = 21 (left: 21)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 21\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nNone (21 is the target number)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nInput: 11\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nNone\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\nInput: 28\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\nNone\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nInput: 11\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nNone\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 - 9 = 26 (left: 26)\nInput: 26\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 - 9 = 26 (left: 26)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 - 9 = 26 (left: 26)\nNone\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n7 + 14 = 21 (left: 21)\nInput: 21\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n7 + 14 = 21 (left: 21)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n7 + 14 = 21 (left: 21)\n(No possible steps with a single number)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 21\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nNone (21 is the target number)\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nInput: 11\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nNone\n",
                    "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\nInput: 28\n"
                ]
            }
        ],
        "idx": 851,
        "ys": [
            "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 21\n",
            "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
            "4 + 5 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nNone (21 is the target number)\n",
            "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nInput: 11\n",
            "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nPossible next steps:\n",
            "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nNone\n",
            "4 + 5 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\nInput: 28\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 89739,
            "prompt_tokens": 353554,
            "cost": 15.99096
        },
        "time_spent": 36.22524309158325
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n",
                    "8 + 3 = 11 (left: 2 11 11)\n",
                    "11 - 8 = 3 (left: 2 3 3)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n",
                    "11 - 2 = 9 (left: 3 8 9)\n",
                    "8 - 3 = 5 (left: 2 5 11)\n",
                    "8 / 2 = 4 (left: 3 4 11)\n",
                    "11 / 11 = 1 (left: 1 2 3)\n"
                ],
                "values": [
                    100,
                    100,
                    100,
                    100,
                    50,
                    100,
                    100,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n",
                    "8 + 3 = 11 (left: 2 11 11)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n",
                    "11 - 2 = 9 (left: 3 8 9)\n",
                    "11 - 8 = 3 (left: 2 3 3)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 8 11",
                "ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n",
                    "8 + 3 = 11 (left: 2 11 11)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n",
                    "11 - 2 = 9 (left: 3 8 9)\n",
                    "11 - 8 = 3 (left: 2 3 3)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 * 5 = 40 (left: 11 40)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 + 11 = 22 (left: 2 22)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 / 11 = 1 (left: 1 2)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 10 14)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n8 + 14 = 22 (left: 2 22)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n14 - 8 = 6 (left: 2 6)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n14 - 2 = 12 (left: 8 12)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n14 / 2 = 7 (left: 7 8)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n8 / 2 = 4 (left: 4 14)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n8 - 2 = 6 (left: 6 14)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n14 + 2 = 16 (left: 8 16)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n2 * 8 = 16 (left: 14 16)\n",
                    "8 + 3 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n",
                    "8 + 3 = 11 (left: 2 11 11)\n11 + 11 = 22 (left: 2 22)\n",
                    "8 + 3 = 11 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "8 + 3 = 11 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n",
                    "8 + 3 = 11 (left: 2 11 11)\n11 / 11 = 1 (left: 1 2)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n8 + 8 = 16 (left: 2 16)\n",
                    "11 - 2 = 9 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n",
                    "11 - 2 = 9 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n",
                    "11 - 2 = 9 (left: 3 8 9)\n8 + 3 = 11 (left: 9 11)\n",
                    "11 - 2 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n",
                    "11 - 2 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n",
                    "11 - 2 = 9 (left: 3 8 9)\n9 * 3 = 27 (left: 8 27)\n",
                    "11 - 2 = 9 (left: 3 8 9)\n8 * 3 = 24 (left: 9 24)\n",
                    "11 - 2 = 9 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n",
                    "11 - 8 = 3 (left: 2 3 3)\n2 + 3 = 5 (left: 3 5)\n",
                    "11 - 8 = 3 (left: 2 3 3)\n3 + 3 = 6 (left: 2 6)\n",
                    "11 - 8 = 3 (left: 2 3 3)\n3 - 2 = 1 (left: 1 3)\n",
                    "11 - 8 = 3 (left: 2 3 3)\n3 * 2 = 6 (left: 3 6)\n",
                    "11 - 8 = 3 (left: 2 3 3)\n3 / 3 = 1 (left: 1 2)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100,
                    100,
                    50,
                    50,
                    0,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 + 11 = 22 (left: 2 22)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 10 14)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n8 + 14 = 22 (left: 2 22)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 8 11",
                "ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 + 11 = 22 (left: 2 22)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 10 14)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n8 + 14 = 22 (left: 2 22)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 * 2 = 16 (left: 16 16)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n5 * 19 = 95 (left: 95)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 / 5 = 3.8 (left: 3.8)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 + 11 = 22 (left: 2 22)\n22 - 2 = 20 (left: 20)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 + 11 = 22 (left: 2 22)\n22 / 2 = 11 (left: 11)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 + 11 = 22 (left: 2 22)\n2 * 2 = 4 (left: 4 22)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n8 + 14 = 22 (left: 2 22)\n22 - 2 = 20 (left: 20)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n8 + 14 = 22 (left: 2 22)\n22 / 2 = 11 (left: 11)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n8 + 14 = 22 (left: 2 22)\n2 * 2 = 4 (left: 4 22)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    100,
                    0,
                    0,
                    100,
                    0,
                    50,
                    50,
                    0,
                    100,
                    0,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 + 11 = 22 (left: 2 22)\n22 - 2 = 20 (left: 20)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 8 11",
                "ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "11 + 3 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 + 11 = 22 (left: 2 22)\n22 - 2 = 20 (left: 20)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (2 + 3 + 8) + 11 = 24\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (2 + 3) + 11 + 8 = 24\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (11 + 8) + (2 + 3) = 24\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (3 + 8) + (2 + 11) = 24\n",
                    "11 + 3 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (11 + 3) + (2 + 8) = 24\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nThere are no possible next steps with only one number.\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 + 11 = 22 (left: 2 22)\n22 - 2 = 20 (left: 20)\nInput: 20\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 + 11 = 22 (left: 2 22)\n22 - 2 = 20 (left: 20)\nPossible next steps:\n",
                    "3 + 8 = 11 (left: 2 11 11)\n11 + 11 = 22 (left: 2 22)\n22 - 2 = 20 (left: 20)\nNone\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (2 + 3 + 8) + 11 = 24\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (2 + 3) + 11 + 8 = 24\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (11 + 8) + (2 + 3) = 24\n",
                    "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (3 + 8) + (2 + 11) = 24\n",
                    "11 + 3 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (11 + 3) + (2 + 8) = 24\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 852,
        "ys": [
            "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (2 + 3 + 8) + 11 = 24\n",
            "2 + 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (2 + 3) + 11 + 8 = 24\n",
            "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (11 + 8) + (2 + 3) = 24\n",
            "3 + 8 = 11 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (3 + 8) + (2 + 11) = 24\n",
            "11 + 3 = 14 (left: 2 8 14)\n2 + 8 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (11 + 3) + (2 + 8) = 24\n",
            "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14\n",
            "2 + 3 = 5 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 91339,
            "prompt_tokens": 361325,
            "cost": 16.32009
        },
        "time_spent": 35.92693090438843
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 7 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 8 11 13)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n",
                    "13 + 4 = 17 (left: 7 8 17)\n",
                    "4 * 7 = 28 (left: 8 13 28)\n",
                    "8 - 7 = 1 (left: 1 4 13)\n",
                    "13 - 7 = 6 (left: 4 6 8)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n",
                    "13 / 1 = 13 (left: 4 7 8)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "8 - 4 = 4 (left: 4 7 13)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n",
                    "13 + 4 = 17 (left: 7 8 17)\n",
                    "4 * 7 = 28 (left: 8 13 28)\n",
                    "8 - 7 = 1 (left: 1 4 13)\n",
                    "13 - 7 = 6 (left: 4 6 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 7 8 13",
                "ys": [
                    "8 - 4 = 4 (left: 4 7 13)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n",
                    "13 + 4 = 17 (left: 7 8 17)\n",
                    "4 * 7 = 28 (left: 8 13 28)\n",
                    "8 - 7 = 1 (left: 1 4 13)\n",
                    "13 - 7 = 6 (left: 4 6 8)\n"
                ],
                "new_ys": [
                    "8 - 4 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 4 = 17 (left: 7 17)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n7 + 4 = 11 (left: 11 13)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 7 = 20 (left: 4 20)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 8 = 1 (left: 1 7)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 * 8 = 56 (left: 9 56)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n13 + 11 = 24 (left: 8 24)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n13 - 8 = 5 (left: 5 11)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n13 - 11 = 2 (left: 2 8)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 - 8 = 3 (left: 3 13)\n",
                    "13 + 4 = 17 (left: 7 8 17)\n7 + 8 = 15 (left: 15 17)\n",
                    "13 + 4 = 17 (left: 7 8 17)\n17 - 8 = 9 (left: 7 9)\n",
                    "13 + 4 = 17 (left: 7 8 17)\n17 - 7 = 10 (left: 8 10)\n",
                    "13 + 4 = 17 (left: 7 8 17)\n8 - 7 = 1 (left: 1 17)\n",
                    "13 + 4 = 17 (left: 7 8 17)\n7 * 8 = 56 (left: 17 56)\n",
                    "13 + 4 = 17 (left: 7 8 17)\n17 + 7 = 24 (left: 8 24)\n",
                    "4 * 7 = 28 (left: 8 13 28)\n8 + 13 = 21 (left: 21 28)\n",
                    "4 * 7 = 28 (left: 8 13 28)\n28 - 13 = 15 (left: 8 15)\n",
                    "4 * 7 = 28 (left: 8 13 28)\n28 - 8 = 20 (left: 13 20)\n",
                    "4 * 7 = 28 (left: 8 13 28)\n28 / 7 = 4 (left: 4 8 13)\n",
                    "4 * 7 = 28 (left: 8 13 28)\n13 - 8 = 5 (left: 5 28)\n",
                    "4 * 7 = 28 (left: 8 13 28)\n28 + 8 = 36 (left: 13 36)\n",
                    "4 * 7 = 28 (left: 8 13 28)\n28 + 13 = 41 (left: 8 41)\n",
                    "4 * 7 = 28 (left: 8 13 28)\n28 * 13 = 364 (left: 8 364)\n",
                    "8 - 7 = 1 (left: 1 4 13)\n1 + 4 = 5 (left: 5 13)\n",
                    "8 - 7 = 1 (left: 1 4 13)\n13 + 1 = 14 (left: 4 14)\n",
                    "8 - 7 = 1 (left: 1 4 13)\n13 - 4 = 9 (left: 1 9)\n",
                    "8 - 7 = 1 (left: 1 4 13)\n13 - 1 = 12 (left: 4 12)\n",
                    "8 - 7 = 1 (left: 1 4 13)\n4 - 1 = 3 (left: 3 13)\n",
                    "8 - 7 = 1 (left: 1 4 13)\n13 / 1 = 13 (left: 4 13)\n",
                    "8 - 7 = 1 (left: 1 4 13)\n4 * 1 = 4 (left: 4 13)\n",
                    "13 - 7 = 6 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n",
                    "13 - 7 = 6 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n",
                    "13 - 7 = 6 (left: 4 6 8)\n8 - 6 = 2 (left: 2 4)\n",
                    "13 - 7 = 6 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n",
                    "13 - 7 = 6 (left: 4 6 8)\n8 + 6 = 14 (left: 4 14)\n",
                    "13 - 7 = 6 (left: 4 6 8)\n8 + 4 = 12 (left: 6 12)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    100,
                    100,
                    100,
                    100,
                    50,
                    50,
                    0,
                    0,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 - 4 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 4 = 17 (left: 7 17)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n7 + 4 = 11 (left: 11 13)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 7 = 20 (left: 4 20)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 7 8 13",
                "ys": [
                    "8 - 4 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 4 = 17 (left: 7 17)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n7 + 4 = 11 (left: 11 13)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 7 = 20 (left: 4 20)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n"
                ],
                "new_ys": [
                    "8 - 4 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 4 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 4 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n7 + 4 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n7 + 4 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 7 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 7 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 7 = 20 (left: 4 20)\n20 / 4 = 5 (left: 5)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 7 = 20 (left: 4 20)\n4 * 20 = 80 (left: 80)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n"
                ],
                "values": [
                    100,
                    0,
                    50,
                    0,
                    100,
                    100,
                    50,
                    100,
                    0,
                    100,
                    50,
                    0,
                    0,
                    100,
                    0,
                    100,
                    50
                ],
                "select_new_ys": [
                    "8 - 4 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 4 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n7 + 4 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 7 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 7 8 13",
                "ys": [
                    "8 - 4 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 4 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n7 + 4 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 7 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "8 - 4 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (8 - 4 + 7) + 13 = 24\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 4) * (13 - 7) = 24\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 4 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: 7 + (13 + (8 - 4)) = 24\n",
                    "8 - 4 = 4 (left: 4 7 13)\n7 + 4 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (7 + (8 - 4)) + 13 = 24\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 7 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: (8 - 4) + (13 + 7) = 24\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (13 - 4) + (7 + 8) = 24\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: 7 + (8 + (13 - 4)) = 24\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    1000
                ],
                "select_new_ys": [
                    "8 - 4 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (8 - 4 + 7) + 13 = 24\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 4) * (13 - 7) = 24\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 4 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: 7 + (13 + (8 - 4)) = 24\n",
                    "8 - 4 = 4 (left: 4 7 13)\n7 + 4 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (7 + (8 - 4)) + 13 = 24\n",
                    "8 - 4 = 4 (left: 4 7 13)\n13 + 7 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: (8 - 4) + (13 + 7) = 24\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (13 - 4) + (7 + 8) = 24\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: 7 + (8 + (13 - 4)) = 24\n"
                ]
            }
        ],
        "idx": 853,
        "ys": [
            "8 - 4 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (8 - 4 + 7) + 13 = 24\n",
            "8 - 4 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 4) * (13 - 7) = 24\n",
            "8 - 4 = 4 (left: 4 7 13)\n13 + 4 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: 7 + (13 + (8 - 4)) = 24\n",
            "8 - 4 = 4 (left: 4 7 13)\n7 + 4 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (7 + (8 - 4)) + 13 = 24\n",
            "8 - 4 = 4 (left: 4 7 13)\n13 + 7 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: (8 - 4) + (13 + 7) = 24\n",
            "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (13 - 4) + (7 + 8) = 24\n",
            "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: 7 + (8 + (13 - 4)) = 24\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 92878,
            "prompt_tokens": 369906,
            "cost": 16.66986
        },
        "time_spent": 35.06951284408569
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 6 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 8 12 12)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n",
                    "8 + 6 = 14 (left: 6 12 14)\n",
                    "12 - 8 = 4 (left: 4 6 6)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    100
                ],
                "select_new_ys": [
                    "12 + 6 = 18 (left: 6 8 18)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n",
                    "8 + 6 = 14 (left: 6 12 14)\n",
                    "12 - 8 = 4 (left: 4 6 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 6 8 12",
                "ys": [
                    "12 + 6 = 18 (left: 6 8 18)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n",
                    "8 + 6 = 14 (left: 6 12 14)\n",
                    "12 - 8 = 4 (left: 4 6 6)\n"
                ],
                "new_ys": [
                    "12 + 6 = 18 (left: 6 8 18)\n6 + 8 = 14 (left: 14 18)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 - 8 = 10 (left: 6 10)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 - 6 = 12 (left: 8 12)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n8 + 6 = 14 (left: 14 18)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 2 = 9 (left: 6 8 9)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n6 * 3 = 18 (left: 8 18)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n8 - 6 = 2 (left: 2 2)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 + 12 = 24 (left: 8 24)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 * 2 = 24 (left: 8 24)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n8 + 6 = 14 (left: 6 14)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n",
                    "8 + 6 = 14 (left: 6 12 14)\n6 + 12 = 18 (left: 14 18)\n",
                    "8 + 6 = 14 (left: 6 12 14)\n14 + 6 = 20 (left: 12 20)\n",
                    "8 + 6 = 14 (left: 6 12 14)\n14 + 12 = 26 (left: 6 26)\n",
                    "8 + 6 = 14 (left: 6 12 14)\n14 - 6 = 8 (left: 8 12)\n",
                    "8 + 6 = 14 (left: 6 12 14)\n14 - 12 = 2 (left: 2 6)\n",
                    "8 + 6 = 14 (left: 6 12 14)\n12 - 6 = 6 (left: 6 14)\n",
                    "8 + 6 = 14 (left: 6 12 14)\n12 * 2 = 24 (left: 6 24)\n",
                    "8 + 6 = 14 (left: 6 12 14)\n14 * 2 = 28 (left: 6 28)\n",
                    "12 - 8 = 4 (left: 4 6 6)\n4 + 6 = 10 (left: 6 10)\n",
                    "12 - 8 = 4 (left: 4 6 6)\n6 + 6 = 12 (left: 4 12)\n",
                    "12 - 8 = 4 (left: 4 6 6)\n6 - 4 = 2 (left: 2 6)\n",
                    "12 - 8 = 4 (left: 4 6 6)\n6 / 6 = 1 (left: 1 4)\n",
                    "12 - 8 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n6 + 8 = 14 (left: 14 18)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 - 8 = 10 (left: 6 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 6 8 12",
                "ys": [
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n6 + 8 = 14 (left: 14 18)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 - 8 = 10 (left: 6 10)\n"
                ],
                "new_ys": [
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\nInput: 3 8\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\nPossible next steps:\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n6 + 8 = 14 (left: 14 18)\n14 + 18 = 32 (left: 32)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n6 + 8 = 14 (left: 14 18)\n18 - 14 = 4 (left: 4)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n6 + 8 = 14 (left: 14 18)\n14 * 18 = 252 (left: 252)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n6 + 8 = 14 (left: 14 18)\n18 / 14 = 1.28571428571429 (left: 1.28571428571429)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 - 8 = 10 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 - 8 = 10 (left: 6 10)\n10 - 6 = 4 (left: 4)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 - 8 = 10 (left: 6 10)\n6 * 10 = 60 (left: 60)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 - 8 = 10 (left: 6 10)\n10 / 6 = 1.666... (left: 1.666...)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 6 8 12",
                "ys": [
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "12 / 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((12 + 6) / 6) * 8 = 24\n",
                    "12 / 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (12 / 6) * (6 * 8) = 24\n",
                    "12 / 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 / (12 / 6)) * 6 = 24\n",
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * (8 - 6)) + 12 = 24\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 + 6) / 4 * 8 = 24\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "12 / 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "12 / 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "12 / 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n"
                ],
                "values": [
                    1000,
                    0,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((12 + 6) / 6) * 8 = 24\n",
                    "12 / 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 / (12 / 6)) * 6 = 24\n",
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * (8 - 6)) + 12 = 24\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 + 6) / 4 * 8 = 24\n",
                    "12 / 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (12 / 6) * (6 * 8) = 24\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 854,
        "ys": [
            "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((12 + 6) / 6) * 8 = 24\n",
            "12 / 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 / (12 / 6)) * 6 = 24\n",
            "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * (8 - 6)) + 12 = 24\n",
            "6 + 6 = 12 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 + 6) / 4 * 8 = 24\n",
            "12 / 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (12 / 6) * (6 * 8) = 24\n",
            "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "12 + 6 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 94541,
            "prompt_tokens": 377677,
            "cost": 17.002769999999998
        },
        "time_spent": 35.55671405792236
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 8 9 11)\n",
                    "6 + 8 = 14 (left: 5 9 14)\n",
                    "8 + 9 = 17 (left: 5 6 17)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n",
                    "9 - 6 = 3 (left: 3 5 8)\n",
                    "8 - 5 = 3 (left: 3 6 9)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n",
                    "6 - 5 = 1 (left: 1 8 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 8 9 11)\n",
                    "6 + 8 = 14 (left: 5 9 14)\n",
                    "8 + 9 = 17 (left: 5 6 17)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n",
                    "9 - 6 = 3 (left: 3 5 8)\n",
                    "8 - 5 = 3 (left: 3 6 9)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 8 9",
                "ys": [
                    "5 + 6 = 11 (left: 8 9 11)\n",
                    "6 + 8 = 14 (left: 5 9 14)\n",
                    "8 + 9 = 17 (left: 5 6 17)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n",
                    "9 - 6 = 3 (left: 3 5 8)\n",
                    "8 - 5 = 3 (left: 3 6 9)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 11 17)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 9)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 * 9 = 72 (left: 11 72)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 + 9 = 20 (left: 8 20)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 + 8 = 19 (left: 9 19)\n",
                    "6 + 8 = 14 (left: 5 9 14)\n5 + 9 = 14 (left: 14 14)\n",
                    "6 + 8 = 14 (left: 5 9 14)\n14 + 5 = 19 (left: 9 19)\n",
                    "6 + 8 = 14 (left: 5 9 14)\n14 - 5 = 9 (left: 9 9)\n",
                    "6 + 8 = 14 (left: 5 9 14)\n14 - 9 = 5 (left: 5 5)\n",
                    "6 + 8 = 14 (left: 5 9 14)\n9 - 5 = 4 (left: 4 14)\n",
                    "6 + 8 = 14 (left: 5 9 14)\n14 / 2 = 7 (left: 5 7 9)\n",
                    "8 + 9 = 17 (left: 5 6 17)\n5 + 6 = 11 (left: 11 17)\n",
                    "8 + 9 = 17 (left: 5 6 17)\n17 - 6 = 11 (left: 5 11)\n",
                    "8 + 9 = 17 (left: 5 6 17)\n17 - 5 = 12 (left: 6 12)\n",
                    "8 + 9 = 17 (left: 5 6 17)\n6 - 5 = 1 (left: 1 17)\n",
                    "8 + 9 = 17 (left: 5 6 17)\n5 * 6 = 30 (left: 17 30)\n",
                    "8 + 9 = 17 (left: 5 6 17)\n17 + 6 = 23 (left: 5 23)\n",
                    "8 + 9 = 17 (left: 5 6 17)\n17 + 5 = 22 (left: 6 22)\n",
                    "8 + 9 = 17 (left: 5 6 17)\n6 + 5 = 11 (left: 11 17)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 6 = 2 (left: 2 4)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 + 4 = 12 (left: 6 12)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 + 6 = 14 (left: 4 14)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n6 + 4 = 10 (left: 8 10)\n",
                    "9 - 6 = 3 (left: 3 5 8)\n3 + 5 = 8 (left: 8 8)\n",
                    "9 - 6 = 3 (left: 3 5 8)\n8 + 3 = 11 (left: 5 11)\n",
                    "9 - 6 = 3 (left: 3 5 8)\n8 + 5 = 13 (left: 3 13)\n",
                    "9 - 6 = 3 (left: 3 5 8)\n8 - 3 = 5 (left: 5 5)\n",
                    "9 - 6 = 3 (left: 3 5 8)\n8 - 5 = 3 (left: 3 3)\n",
                    "9 - 6 = 3 (left: 3 5 8)\n3 * 5 = 15 (left: 8 15)\n",
                    "9 - 6 = 3 (left: 3 5 8)\n8 / 2 = 4 (left: 3 4 5)\n",
                    "8 - 5 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n",
                    "8 - 5 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n",
                    "8 - 5 = 3 (left: 3 6 9)\n9 - 6 = 3 (left: 3 3)\n",
                    "8 - 5 = 3 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n",
                    "8 - 5 = 3 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n",
                    "8 - 5 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 + 1 = 6 (left: 6 6)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n6 + 1 = 7 (left: 5 7)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n6 - 1 = 5 (left: 5 5)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n6 - 5 = 1 (left: 1 1)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n6 / 1 = 6 (left: 5 6)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 * 1 = 5 (left: 5 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 11 17)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 9)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 + 9 = 20 (left: 8 20)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 8 9",
                "ys": [
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 11 17)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 9)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 + 9 = 20 (left: 8 20)\n"
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n6 / 4 = 1.5 (invalid)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 11 17)\n17 - 11 = 6 (left: 6)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n8 - 2 = 6 (left: 6)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n8 / 2 = 4 (left: 4)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 9)\n9 - 3 = 6 (left: 6)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 9)\n9 / 3 = 3 (left: 3)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 + 9 = 20 (left: 8 20)\n20 - 8 = 12 (left: 12)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 + 9 = 20 (left: 8 20)\n20 + 8 = 28 (left: 28)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 + 9 = 20 (left: 8 20)\n20 / 8 = 2.5 (left: 2.5)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 + 9 = 20 (left: 8 20)\n20 * 8 = 160 (left: 160)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 6 8 9",
                "ys": [
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n"
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - (9 - 5)) * 6 = 24\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (5 - (9 - 8)) * 6 = 24\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nInput: 10\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nPossible next steps:\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nInput: 10\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nPossible next steps:\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 8 24)\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\nInput: 28\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n2 + 8 = 10 (left: 10)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n8 - 2 = 6 (left: 6)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n2 * 8 = 16 (left: 16)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n8 / 2 = 4 (left: 4)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n10 * 8 = 80 (left: 8 14 80)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 - 8 = 8 (left: 8 16)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 * 1 = 16 (left: 16 16)\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - (9 - 5)) * 6 = 24\n",
                    "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (5 - (9 - 8)) * 6 = 24\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nInput: 10\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nPossible next steps:\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
                ]
            }
        ],
        "idx": 855,
        "ys": [
            "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - (9 - 5)) * 6 = 24\n",
            "9 - 8 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (5 - (9 - 8)) * 6 = 24\n",
            "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nInput: 10\n",
            "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nPossible next steps:\n",
            "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n",
            "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
            "9 - 5 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 96602,
            "prompt_tokens": 384233,
            "cost": 17.32311
        },
        "time_spent": 38.84662103652954
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 5 6 9)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n",
                    "9 + 3 = 12 (left: 3 5 12)\n",
                    "9 - 3 = 6 (left: 3 5 6)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n",
                    "9 / 3 = 3 (left: 3 3 5)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n",
                    "5 - 3 = 2 (left: 2 3 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n",
                    "9 + 3 = 12 (left: 3 5 12)\n",
                    "9 - 3 = 6 (left: 3 5 6)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n",
                    "9 / 3 = 3 (left: 3 3 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 5 9",
                "ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n",
                    "9 + 3 = 12 (left: 3 5 12)\n",
                    "9 - 3 = 6 (left: 3 5 6)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n",
                    "9 / 3 = 3 (left: 3 3 5)\n"
                ],
                "new_ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 + 3 = 11 (left: 9 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 - 8 = 1 (left: 1 3)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n8 * 3 = 24 (left: 9 24)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 + 6 = 15 (left: 5 15)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n6 - 5 = 1 (left: 1 9)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 - 6 = 3 (left: 3 5)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n6 * 5 = 30 (left: 9 30)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 / 3 = 3 (left: 3 6)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n5 + 9 = 14 (left: 9 14)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n9 + 9 = 18 (left: 5 18)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n9 - 5 = 4 (left: 4 9)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n9 * 5 = 45 (left: 9 45)\n",
                    "9 + 3 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n",
                    "9 + 3 = 12 (left: 3 5 12)\n5 + 3 = 8 (left: 8 12)\n",
                    "9 + 3 = 12 (left: 3 5 12)\n12 + 3 = 15 (left: 5 15)\n",
                    "9 + 3 = 12 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n",
                    "9 + 3 = 12 (left: 3 5 12)\n12 - 3 = 9 (left: 5 9)\n",
                    "9 + 3 = 12 (left: 3 5 12)\n12 / 3 = 4 (left: 4 5)\n",
                    "9 + 3 = 12 (left: 3 5 12)\n5 * 3 = 15 (left: 12 15)\n",
                    "9 - 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n",
                    "9 - 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n",
                    "9 - 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n",
                    "9 - 3 = 6 (left: 3 5 6)\n6 - 3 = 3 (left: 3 5)\n",
                    "9 - 3 = 6 (left: 3 5 6)\n6 - 5 = 1 (left: 1 3)\n",
                    "9 - 3 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n3 * 3 = 9 (left: 4 9)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n4 + 3 = 7 (left: 3 7)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n4 - 3 = 1 (left: 1 3)\n",
                    "9 / 3 = 3 (left: 3 3 5)\n3 + 3 = 6 (left: 5 6)\n",
                    "9 / 3 = 3 (left: 3 3 5)\n3 * 3 = 9 (left: 5 9)\n",
                    "9 / 3 = 3 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n",
                    "9 / 3 = 3 (left: 3 3 5)\n5 - 3 = 2 (left: 2 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    0
                ],
                "select_new_ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n",
                    "9 / 3 = 3 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 5 9",
                "ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n",
                    "9 / 3 = 3 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n"
                ],
                "new_ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "9 / 3 = 3 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 / 3 = 3 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "9 / 3 = 3 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n11 - 9 = 2 (left: 2)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n8 - 6 = 2 (left: 2)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 5 9",
                "ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (5 + 3) * (9 / 3) = 24\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 5) * (3 + 3) = 24\n",
                    "9 - 5 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 + 3) * (9 - 5) = 24\n",
                    "9 / 3 = 3 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 / 3) * (5 + 3) = 24\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 8 = 80 (left: 14 80)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "9 - 5 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (5 + 3) * (9 / 3) = 24\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 5) * (3 + 3) = 24\n",
                    "9 - 5 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 + 3) * (9 - 5) = 24\n",
                    "9 / 3 = 3 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 / 3) * (5 + 3) = 24\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n"
                ]
            }
        ],
        "idx": 856,
        "ys": [
            "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (5 + 3) * (9 / 3) = 24\n",
            "3 + 3 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 5) * (3 + 3) = 24\n",
            "9 - 5 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 + 3) * (9 - 5) = 24\n",
            "9 / 3 = 3 (left: 3 3 5)\n5 + 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 / 3) * (5 + 3) = 24\n",
            "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
            "5 + 3 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 98260,
            "prompt_tokens": 391599,
            "cost": 17.643569999999997
        },
        "time_spent": 35.4550518989563
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 7 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 7 9 11)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n",
                    "11 + 4 = 15 (left: 5 7 15)\n",
                    "7 - 4 = 3 (left: 3 5 11)\n",
                    "11 - 5 = 6 (left: 4 6 7)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n",
                    "7 - 5 = 2 (left: 2 4 11)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100
                ],
                "select_new_ys": [
                    "11 - 7 = 4 (left: 4 4 5)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n",
                    "11 + 4 = 15 (left: 5 7 15)\n",
                    "7 - 4 = 3 (left: 3 5 11)\n",
                    "11 - 5 = 6 (left: 4 6 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 7 11",
                "ys": [
                    "11 - 7 = 4 (left: 4 4 5)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n",
                    "11 + 4 = 15 (left: 5 7 15)\n",
                    "7 - 4 = 3 (left: 3 5 11)\n",
                    "11 - 5 = 6 (left: 4 6 7)\n"
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 - 4 = 1 (left: 1 4)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n20 - 11 = 9 (left: 7 9)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n20 - 7 = 13 (left: 11 13)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n20 / 4 = 5 (left: 5 11)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n11 * 2 = 22 (left: 7 22)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n20 + 7 = 27 (left: 11 27)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n7 + 9 = 16 (left: 11 16)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n11 - 7 = 4 (left: 4 9)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n11 - 9 = 2 (left: 2 7)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n9 - 7 = 2 (left: 2 11)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n7 * 9 = 63 (left: 11 63)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n11 + 9 = 20 (left: 7 20)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n11 + 7 = 18 (left: 9 18)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n4 + 11 = 15 (left: 12 15)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n12 - 4 = 8 (left: 8 11)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n12 - 11 = 1 (left: 1 4)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n11 - 4 = 7 (left: 7 12)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n4 * 11 = 44 (left: 12 44)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n12 / 4 = 3 (left: 3 11)\n",
                    "11 + 4 = 15 (left: 5 7 15)\n5 + 7 = 12 (left: 12 15)\n",
                    "11 + 4 = 15 (left: 5 7 15)\n15 - 7 = 8 (left: 5 8)\n",
                    "11 + 4 = 15 (left: 5 7 15)\n15 - 5 = 10 (left: 7 10)\n",
                    "11 + 4 = 15 (left: 5 7 15)\n7 - 5 = 2 (left: 2 15)\n",
                    "11 + 4 = 15 (left: 5 7 15)\n15 / 5 = 3 (left: 3 7)\n",
                    "11 + 4 = 15 (left: 5 7 15)\n5 * 7 = 35 (left: 15 35)\n",
                    "7 - 4 = 3 (left: 3 5 11)\n3 + 5 = 8 (left: 8 11)\n",
                    "7 - 4 = 3 (left: 3 5 11)\n5 + 3 = 8 (left: 8 11)\n",
                    "7 - 4 = 3 (left: 3 5 11)\n11 + 3 = 14 (left: 5 14)\n",
                    "7 - 4 = 3 (left: 3 5 11)\n11 - 5 = 6 (left: 3 6)\n",
                    "7 - 4 = 3 (left: 3 5 11)\n11 - 3 = 8 (left: 5 8)\n",
                    "7 - 4 = 3 (left: 3 5 11)\n5 * 3 = 15 (left: 11 15)\n",
                    "7 - 4 = 3 (left: 3 5 11)\n11 / 3 = 3.67 (invalid)\n",
                    "11 - 5 = 6 (left: 4 6 7)\n4 + 6 = 10 (left: 7 10)\n",
                    "11 - 5 = 6 (left: 4 6 7)\n7 - 4 = 3 (left: 3 6)\n",
                    "11 - 5 = 6 (left: 4 6 7)\n7 - 6 = 1 (left: 1 4)\n",
                    "11 - 5 = 6 (left: 4 6 7)\n4 * 6 = 24 (left: 7 24)\n",
                    "11 - 5 = 6 (left: 4 6 7)\n6 / 3 = 2 (left: 2 7)\n",
                    "11 - 5 = 6 (left: 4 6 7)\n7 + 6 = 13 (left: 4 13)\n",
                    "11 - 5 = 6 (left: 4 6 7)\n7 + 4 = 11 (left: 6 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 * 4 = 20 (left: 7 11 20)\n20 - 7 = 13 (left: 11 13)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n20 - 11 = 9 (left: 7 9)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 7 11",
                "ys": [
                    "5 * 4 = 20 (left: 7 11 20)\n20 - 7 = 13 (left: 11 13)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n20 - 11 = 9 (left: 7 9)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n"
                ],
                "new_ys": [
                    "5 * 4 = 20 (left: 7 11 20)\n20 - 7 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n20 - 7 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n8 - 5 = 3 (left: 3)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n8 / 5 = 1.6 (left: 1.6)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 + 16 = 21 (left: 21)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n16 - 5 = 11 (left: 11)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n16 / 5 = 3.2 (left: 3.2)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 * 16 = 80 (left: 80)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 + 9 = 13 (left: 13)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n9 - 4 = 5 (left: 5)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n20 - 18 = 2 (left: 2)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 * 20 = 360 (left: 360)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n20 / 18 = 1.11 (left: 1.11)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n20 - 11 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n20 - 11 = 9 (left: 7 9)\n9 - 7 = 2 (left: 2)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n20 - 11 = 9 (left: 7 9)\n7 * 9 = 63 (left: 63)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n20 - 18 = 2 (left: 2)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 * 20 = 360 (left: 360)\n",
                    "5 * 4 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n20 / 18 \u2248 1.11 (left: 1.11)\n"
                ],
                "values": [
                    100,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 * 4 = 20 (left: 7 11 20)\n20 - 7 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 + 16 = 21 (left: 21)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n16 - 5 = 11 (left: 11)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 + 9 = 13 (left: 13)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 7 11",
                "ys": [
                    "5 * 4 = 20 (left: 7 11 20)\n20 - 7 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 + 16 = 21 (left: 21)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n16 - 5 = 11 (left: 11)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 + 9 = 13 (left: 13)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n"
                ],
                "new_ys": [
                    "5 * 4 = 20 (left: 7 11 20)\n20 - 7 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: 11 + (5 * 4 - 7) = 24\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\nInput: 13\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\nPossible next steps:\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\nNone\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\nInput: 40\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\nPossible next steps:\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n(There are no possible next steps with a single number)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 + 16 = 21 (left: 21)\nInput: 21\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 + 16 = 21 (left: 21)\nPossible next steps:\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 + 16 = 21 (left: 21)\nNone\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n16 - 5 = 11 (left: 11)\nInput: 11\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n16 - 5 = 11 (left: 11)\nPossible next steps:\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n16 - 5 = 11 (left: 11)\nNone\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 + 9 = 13 (left: 13)\nInput: 13\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 + 9 = 13 (left: 13)\nPossible next steps:\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 + 9 = 13 (left: 13)\nNone\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\nInput: 36\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\nPossible next steps:\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 / 1 = 36 (left: 1 36)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 - 1 = 35 (left: 1 35)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 + 1 = 37 (left: 1 37)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 * 1 = 36 (left: 1 36)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 / 2 = 18 (left: 2 18)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 - 2 = 34 (left: 2 34)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 + 2 = 38 (left: 2 38)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 * 2 = 72 (left: 2 72)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 / 3 = 12 (left: 3 12)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 - 3 = 33 (left: 3 33)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 + 3 = 39 (left: 3 39)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 * 3 = 108 (left: 3 108)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 / 4 = 9 (left: 4 9)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 - 4 = 32 (left: 4 32)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 + 4 = 40 (left: 4 40)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 * 4 = 144 (left: 4 144)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 / 6 = 6 (left: 6 6)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 - 6 = 30 (left: 6 30)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 + 6 = 42 (left: 6 42)\n",
                    "11 - 7 = 4 (left: 4 4 5)\n5 + 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 * 6 = 216 (left: 6 216)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 * 4 = 20 (left: 7 11 20)\n20 - 7 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: 11 + (5 * 4 - 7) = 24\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\nInput: 13\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\nPossible next steps:\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\nNone\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\nInput: 40\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\nPossible next steps:\n",
                    "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n(There are no possible next steps with a single number)\n"
                ]
            }
        ],
        "idx": 857,
        "ys": [
            "5 * 4 = 20 (left: 7 11 20)\n20 - 7 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: 11 + (5 * 4 - 7) = 24\n",
            "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\nInput: 13\n",
            "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\nPossible next steps:\n",
            "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\nNone\n",
            "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\nInput: 40\n",
            "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\nPossible next steps:\n",
            "11 - 7 = 4 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n(There are no possible next steps with a single number)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 100235,
            "prompt_tokens": 397750,
            "cost": 17.9466
        },
        "time_spent": 36.46086311340332
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 9 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 9 = 13 (left: 12 12 13)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n",
                    "12 + 4 = 16 (left: 9 12 16)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n",
                    "12 + 12 = 24 (left: 4 9 24)\n",
                    "12 * 4 = 48 (left: 9 12 48)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "12 / 4 = 3 (left: 3 9 12)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n",
                    "12 + 4 = 16 (left: 9 12 16)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n",
                    "12 + 12 = 24 (left: 4 9 24)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 9 12 12",
                "ys": [
                    "12 / 4 = 3 (left: 3 9 12)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n",
                    "12 + 4 = 16 (left: 9 12 16)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n",
                    "12 + 12 = 24 (left: 4 9 24)\n"
                ],
                "new_ys": [
                    "12 / 4 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 - 9 = 3 (left: 3 3)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 - 3 = 9 (left: 9 9)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 / 3 = 4 (left: 4 9)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n9 / 3 = 3 (left: 3 12)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n9 * 3 = 27 (left: 12 27)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n12 + 3 = 15 (left: 4 15)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n12 + 4 = 16 (left: 3 16)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n12 / 3 = 4 (left: 4 4)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13 24)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n13 + 12 = 25 (left: 12 25)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n13 - 12 = 1 (left: 1 12)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 * 12 = 144 (left: 13 144)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n13 * 12 = 156 (left: 12 156)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 / 12 = 1 (left: 1 13)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n12 - 8 = 4 (left: 4 9)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n12 + 8 = 20 (left: 9 20)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n12 + 9 = 21 (left: 8 21)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n12 / 3 = 4 (left: 4 9)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n8 * 3 = 24 (left: 9 24)\n",
                    "12 + 4 = 16 (left: 9 12 16)\n9 + 12 = 21 (left: 16 21)\n",
                    "12 + 4 = 16 (left: 9 12 16)\n16 - 9 = 7 (left: 7 12)\n",
                    "12 + 4 = 16 (left: 9 12 16)\n16 - 12 = 4 (left: 4 9)\n",
                    "12 + 4 = 16 (left: 9 12 16)\n12 - 9 = 3 (left: 3 16)\n",
                    "12 + 4 = 16 (left: 9 12 16)\n16 / 2 = 8 (left: 8 9)\n",
                    "12 + 4 = 16 (left: 9 12 16)\n12 / 3 = 4 (left: 4 9 16)\n",
                    "12 + 4 = 16 (left: 9 12 16)\n16 + 12 = 28 (left: 9 28)\n",
                    "12 + 4 = 16 (left: 9 12 16)\n9 * 12 = 108 (left: 16 108)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 + 12 = 24 (left: 5 24)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 - 5 = 7 (left: 7 12)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 / 12 = 1 (left: 1 5)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 * 5 = 60 (left: 12 60)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 - 12 = 0 (left: 0 5)\n",
                    "12 + 12 = 24 (left: 4 9 24)\n4 + 9 = 13 (left: 13 24)\n",
                    "12 + 12 = 24 (left: 4 9 24)\n24 + 4 = 28 (left: 9 28)\n",
                    "12 + 12 = 24 (left: 4 9 24)\n24 - 4 = 20 (left: 9 20)\n",
                    "12 + 12 = 24 (left: 4 9 24)\n24 / 4 = 6 (left: 6 9)\n",
                    "12 + 12 = 24 (left: 4 9 24)\n9 - 4 = 5 (left: 5 24)\n",
                    "12 + 12 = 24 (left: 4 9 24)\n24 - 9 = 15 (left: 4 15)\n",
                    "12 + 12 = 24 (left: 4 9 24)\n24 / 9 = 2 (left: 2 4)\n"
                ],
                "values": [
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "12 / 4 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 - 3 = 9 (left: 9 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 9 12 12",
                "ys": [
                    "12 / 4 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 - 3 = 9 (left: 9 9)\n"
                ],
                "new_ys": [
                    "12 / 4 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n3 + 21 = 24 (left: 24)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n21 - 3 = 18 (left: 18)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n21 / 3 = 7 (left: 7)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n3 * 21 = 63 (left: 63)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 - 3 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 - 3 = 9 (left: 9 9)\n9 - 9 = 0 (left: 0)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 - 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    100,
                    50,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 4 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n3 + 21 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n21 - 3 = 18 (left: 18)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 9 12 12",
                "ys": [
                    "12 / 4 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n3 + 21 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 4 = 8 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n21 - 3 = 18 (left: 18)\n"
                ],
                "new_ys": [
                    "12 / 4 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / 4 + 9) + 12 = 24\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (12 + 12 / 4) = 24\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n3 + 21 = 24 (left: 24)\nAnswer: (12 / 4) + (12 + 9) = 24\n",
                    "12 - 9 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (12 - 9) * (12 - 4) = 24\n",
                    "12 - 9 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 - 9) * 4 + 12 = 24\n",
                    "12 - 4 = 8 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (12 - 9) * (12 - 4) = 24\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n21 - 3 = 18 (left: 18)\nInput: 18\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n21 - 3 = 18 (left: 18)\nPossible next steps:\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n21 - 3 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n21 - 3 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n21 - 3 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 4 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / 4 + 9) + 12 = 24\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (12 + 12 / 4) = 24\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n3 + 21 = 24 (left: 24)\nAnswer: (12 / 4) + (12 + 9) = 24\n",
                    "12 - 9 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (12 - 9) * (12 - 4) = 24\n",
                    "12 - 9 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 - 9) * 4 + 12 = 24\n",
                    "12 - 4 = 8 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (12 - 9) * (12 - 4) = 24\n",
                    "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n21 - 3 = 18 (left: 18)\nInput: 18\n"
                ]
            }
        ],
        "idx": 858,
        "ys": [
            "12 / 4 = 3 (left: 3 9 12)\n3 + 9 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / 4 + 9) + 12 = 24\n",
            "12 / 4 = 3 (left: 3 9 12)\n12 + 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (12 + 12 / 4) = 24\n",
            "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n3 + 21 = 24 (left: 24)\nAnswer: (12 / 4) + (12 + 9) = 24\n",
            "12 - 9 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (12 - 9) * (12 - 4) = 24\n",
            "12 - 9 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 - 9) * 4 + 12 = 24\n",
            "12 - 4 = 8 (left: 8 9 12)\n12 - 9 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (12 - 9) * (12 - 4) = 24\n",
            "12 / 4 = 3 (left: 3 9 12)\n12 + 9 = 21 (left: 3 21)\n21 - 3 = 18 (left: 18)\nInput: 18\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 102047,
            "prompt_tokens": 405926,
            "cost": 18.3006
        },
        "time_spent": 38.28616976737976
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 6 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n",
                    "6 + 3 = 9 (left: 3 9 9)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n",
                    "9 - 3 = 6 (left: 3 6 6)\n",
                    "9 / 3 = 3 (left: 3 3 6)\n",
                    "6 - 3 = 3 (left: 3 3 9)\n",
                    "6 / 3 = 2 (left: 2 3 9)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    100,
                    100,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n",
                    "9 - 3 = 6 (left: 3 6 6)\n",
                    "6 - 3 = 3 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n",
                    "6 + 3 = 9 (left: 3 9 9)\n",
                    "9 / 3 = 3 (left: 3 3 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 6 9",
                "ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n",
                    "9 - 3 = 6 (left: 3 6 6)\n",
                    "6 - 3 = 3 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n",
                    "6 + 3 = 9 (left: 3 9 9)\n",
                    "9 / 3 = 3 (left: 3 3 6)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 * 6 = 54 (left: 9 54)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 3 6)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n3 + 6 = 9 (left: 9 12)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n12 - 3 = 9 (left: 6 9)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n12 + 6 = 18 (left: 3 18)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n12 + 3 = 15 (left: 6 15)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n",
                    "9 - 3 = 6 (left: 3 6 6)\n3 + 6 = 9 (left: 6 9)\n",
                    "9 - 3 = 6 (left: 3 6 6)\n6 + 6 = 12 (left: 3 12)\n",
                    "9 - 3 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6)\n",
                    "9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)\n",
                    "9 - 3 = 6 (left: 3 6 6)\n6 / 3 = 2 (left: 2 6)\n",
                    "6 - 3 = 3 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "6 - 3 = 3 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "6 - 3 = 3 (left: 3 3 9)\n9 / 3 = 3 (left: 3 3)\n",
                    "6 - 3 = 3 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 * 6 = 36 (left: 9 36)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 + 6 = 15 (left: 6 15)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 - 6 = 3 (left: 3 6)\n",
                    "6 + 3 = 9 (left: 3 9 9)\n3 + 9 = 12 (left: 9 12)\n",
                    "6 + 3 = 9 (left: 3 9 9)\n9 + 9 = 18 (left: 3 18)\n",
                    "6 + 3 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "6 + 3 = 9 (left: 3 9 9)\n9 * 3 = 27 (left: 9 27)\n",
                    "6 + 3 = 9 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "9 / 3 = 3 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n",
                    "9 / 3 = 3 (left: 3 3 6)\n3 * 3 = 9 (left: 6 9)\n",
                    "9 / 3 = 3 (left: 3 3 6)\n6 - 3 = 3 (left: 3 3)\n",
                    "9 / 3 = 3 (left: 3 3 6)\n6 / 3 = 2 (left: 2 3)\n"
                ],
                "values": [
                    100,
                    50,
                    0,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n",
                    "9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 3 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 6 9",
                "ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n",
                    "9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 3 6)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n",
                    "9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3)\n",
                    "9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)\n6 * 18 = 108 (left: 108)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n9 - 3 = 6 (left: 6)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n9 / 3 = 3 (left: 3)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 3 6)\n3 + 6 = 9 (left: 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 3 6)\n6 - 3 = 3 (left: 3)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 / 3 = 3 (left: 3 6)\n6 / 3 = 2 (left: 2)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    50,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    100,
                    100,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 6 9",
                "ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 + 3 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (3 * 3) + 6 + 9 = 24\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (3 * 3 + 9) + 6 = 24\n",
                    "9 + 3 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((9 + 3) / 3) * 6 = 24\n",
                    "9 + 3 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 3) = 24\n",
                    "9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: 6 + (9 - 3) * 3 = 24\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\nInput: 18\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\nPossible next steps:\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (3 * 3) + 6 + 9 = 24\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (3 * 3 + 9) + 6 = 24\n",
                    "9 + 3 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((9 + 3) / 3) * 6 = 24\n",
                    "9 + 3 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 3) = 24\n",
                    "9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: 6 + (9 - 3) * 3 = 24\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n"
                ]
            }
        ],
        "idx": 859,
        "ys": [
            "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (3 * 3) + 6 + 9 = 24\n",
            "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (3 * 3 + 9) + 6 = 24\n",
            "9 + 3 = 12 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((9 + 3) / 3) * 6 = 24\n",
            "9 + 3 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 3) = 24\n",
            "9 - 3 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: 6 + (9 - 3) * 3 = 24\n",
            "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
            "3 * 3 = 9 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 103633,
            "prompt_tokens": 413697,
            "cost": 18.62889
        },
        "time_spent": 35.94289493560791
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 5 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 5 = 8 (left: 8 9 13)\n",
                    "13 - 9 = 4 (left: 3 4 5)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n",
                    "9 + 3 = 12 (left: 5 12 13)\n",
                    "13 + 3 = 16 (left: 5 9 16)\n",
                    "5 * 3 = 15 (left: 9 13 15)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    100,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "13 - 5 = 8 (left: 3 8 9)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n",
                    "13 - 9 = 4 (left: 3 4 5)\n",
                    "9 + 3 = 12 (left: 5 12 13)\n",
                    "13 + 3 = 16 (left: 5 9 16)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 5 9 13",
                "ys": [
                    "13 - 5 = 8 (left: 3 8 9)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n",
                    "13 - 9 = 4 (left: 3 4 5)\n",
                    "9 + 3 = 12 (left: 5 12 13)\n",
                    "13 + 3 = 16 (left: 5 9 16)\n"
                ],
                "new_ys": [
                    "13 - 5 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n3 + 9 = 12 (left: 8 12)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n8 + 9 = 17 (left: 3 17)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n9 - 8 = 1 (left: 1 3)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n3 * 9 = 27 (left: 8 27)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 - 9 = 1 (left: 1 5)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n3 + 13 = 16 (left: 14 16)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 + 14 = 27 (left: 3 27)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n14 - 13 = 1 (left: 1 3)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n14 - 3 = 11 (left: 11 13)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 - 3 = 10 (left: 10 14)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n14 * 3 = 42 (left: 13 42)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 * 3 = 39 (left: 14 39)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n8 + 9 = 17 (left: 13 17)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n13 + 9 = 22 (left: 8 22)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n13 - 9 = 4 (left: 4 8)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n13 - 8 = 5 (left: 5 9)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n9 - 8 = 1 (left: 1 13)\n",
                    "13 - 9 = 4 (left: 3 4 5)\n3 + 4 = 7 (left: 5 7)\n",
                    "13 - 9 = 4 (left: 3 4 5)\n3 + 5 = 8 (left: 4 8)\n",
                    "13 - 9 = 4 (left: 3 4 5)\n4 + 5 = 9 (left: 3 9)\n",
                    "13 - 9 = 4 (left: 3 4 5)\n4 - 3 = 1 (left: 1 5)\n",
                    "13 - 9 = 4 (left: 3 4 5)\n5 - 3 = 2 (left: 2 4)\n",
                    "13 - 9 = 4 (left: 3 4 5)\n5 - 4 = 1 (left: 1 3)\n",
                    "13 - 9 = 4 (left: 3 4 5)\n3 * 4 = 12 (left: 5 12)\n",
                    "13 - 9 = 4 (left: 3 4 5)\n3 * 5 = 15 (left: 4 15)\n",
                    "13 - 9 = 4 (left: 3 4 5)\n4 * 5 = 20 (left: 3 20)\n",
                    "9 + 3 = 12 (left: 5 12 13)\n5 + 12 = 17 (left: 13 17)\n",
                    "9 + 3 = 12 (left: 5 12 13)\n13 + 12 = 25 (left: 5 25)\n",
                    "9 + 3 = 12 (left: 5 12 13)\n13 - 5 = 8 (left: 8 12)\n",
                    "9 + 3 = 12 (left: 5 12 13)\n13 - 12 = 1 (left: 1 5)\n",
                    "9 + 3 = 12 (left: 5 12 13)\n12 - 5 = 7 (left: 7 13)\n",
                    "9 + 3 = 12 (left: 5 12 13)\n13 * 5 = 65 (left: 12 65)\n",
                    "9 + 3 = 12 (left: 5 12 13)\n12 / 5 = 2 (left: 2 13)\n",
                    "13 + 3 = 16 (left: 5 9 16)\n5 + 9 = 14 (left: 14 16)\n",
                    "13 + 3 = 16 (left: 5 9 16)\n16 - 9 = 7 (left: 5 7)\n",
                    "13 + 3 = 16 (left: 5 9 16)\n16 - 5 = 11 (left: 9 11)\n",
                    "13 + 3 = 16 (left: 5 9 16)\n9 - 5 = 4 (left: 4 16)\n",
                    "13 + 3 = 16 (left: 5 9 16)\n16 + 5 = 21 (left: 9 21)\n",
                    "13 + 3 = 16 (left: 5 9 16)\n9 + 5 = 14 (left: 14 16)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    100,
                    100,
                    50,
                    100,
                    0,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 + 14 = 27 (left: 3 27)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n14 - 3 = 11 (left: 11 13)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 - 3 = 10 (left: 10 14)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 5 9 13",
                "ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 + 14 = 27 (left: 3 27)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n14 - 3 = 11 (left: 11 13)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 - 3 = 10 (left: 10 14)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n"
                ],
                "new_ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n5 * 19 = 95 (left: 95)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 + 14 = 27 (left: 3 27)\n27 + 3 = 30 (left: 30)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 + 14 = 27 (left: 3 27)\n27 - 3 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 + 14 = 27 (left: 3 27)\n27 / 3 = 9 (left: 9)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 + 14 = 27 (left: 3 27)\n3 * 3 = 9 (left: 9 27)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n14 - 3 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n14 - 3 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 - 3 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 - 3 = 10 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n11 - 9 = 2 (left: 2)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    0,
                    100,
                    50,
                    0,
                    50,
                    100,
                    0,
                    0,
                    100,
                    0,
                    100,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 + 14 = 27 (left: 3 27)\n27 - 3 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n14 - 3 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 - 3 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 5 9 13",
                "ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 + 14 = 27 (left: 3 27)\n27 - 3 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n14 - 3 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 - 3 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n"
                ],
                "new_ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (13 - 3) + (5 + 9) = 24\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (13 - 3) + 5 = 24\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((13 - 3) + 9) + 5 = 24\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 + 14 = 27 (left: 3 27)\n27 - 3 = 24 (left: 24)\nAnswer: (9 + 5 + 13) - 3 = 24\n",
                    "9 + 5 = 14 (left: 3 13 14)\n14 - 3 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (9 + 5 - 3) + 13 = 24\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 - 3 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (9 + 5) + (13 - 3) = 24\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n(There are no possible next steps with only one number)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (13 - 3) + (5 + 9) = 24\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (13 - 3) + 5 = 24\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((13 - 3) + 9) + 5 = 24\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 + 14 = 27 (left: 3 27)\n27 - 3 = 24 (left: 24)\nAnswer: (9 + 5 + 13) - 3 = 24\n",
                    "9 + 5 = 14 (left: 3 13 14)\n14 - 3 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (9 + 5 - 3) + 13 = 24\n",
                    "9 + 5 = 14 (left: 3 13 14)\n13 - 3 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (9 + 5) + (13 - 3) = 24\n",
                    "13 - 3 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14\n"
                ]
            }
        ],
        "idx": 860,
        "ys": [
            "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (13 - 3) + (5 + 9) = 24\n",
            "13 - 3 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (13 - 3) + 5 = 24\n",
            "13 - 3 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((13 - 3) + 9) + 5 = 24\n",
            "9 + 5 = 14 (left: 3 13 14)\n13 + 14 = 27 (left: 3 27)\n27 - 3 = 24 (left: 24)\nAnswer: (9 + 5 + 13) - 3 = 24\n",
            "9 + 5 = 14 (left: 3 13 14)\n14 - 3 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (9 + 5 - 3) + 13 = 24\n",
            "9 + 5 = 14 (left: 3 13 14)\n13 - 3 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (9 + 5) + (13 - 3) = 24\n",
            "13 - 3 = 10 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 105232,
            "prompt_tokens": 421873,
            "cost": 18.97011
        },
        "time_spent": 34.80272579193115
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 7 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 10 13)\n",
                    "8 + 3 = 11 (left: 7 11 13)\n",
                    "13 + 3 = 16 (left: 7 8 16)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n",
                    "8 - 3 = 5 (left: 5 7 13)\n",
                    "13 - 7 = 6 (left: 3 6 8)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n",
                    "13 / 1 = 13 (left: 3 7 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 8 10 13)\n",
                    "8 + 3 = 11 (left: 7 11 13)\n",
                    "13 + 3 = 16 (left: 7 8 16)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n",
                    "8 - 3 = 5 (left: 5 7 13)\n",
                    "13 - 7 = 6 (left: 3 6 8)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 7 8 13",
                "ys": [
                    "3 + 7 = 10 (left: 8 10 13)\n",
                    "8 + 3 = 11 (left: 7 11 13)\n",
                    "13 + 3 = 16 (left: 7 8 16)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n",
                    "8 - 3 = 5 (left: 5 7 13)\n",
                    "13 - 7 = 6 (left: 3 6 8)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 13 18)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 8 = 5 (left: 5 10)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 + 10 = 23 (left: 8 23)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 + 8 = 21 (left: 10 21)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 + 8 = 18 (left: 13 18)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 * 10 = 130 (left: 8 130)\n",
                    "3 + 7 = 10 (left: 8 10 13)\nInput: 1 2 3 4\n",
                    "3 + 7 = 10 (left: 8 10 13)\nPossible next steps:\n",
                    "8 + 3 = 11 (left: 7 11 13)\n7 + 11 = 18 (left: 13 18)\n",
                    "8 + 3 = 11 (left: 7 11 13)\n13 + 11 = 24 (left: 7 24)\n",
                    "8 + 3 = 11 (left: 7 11 13)\n13 - 11 = 2 (left: 2 7)\n",
                    "8 + 3 = 11 (left: 7 11 13)\n13 - 7 = 6 (left: 6 11)\n",
                    "8 + 3 = 11 (left: 7 11 13)\n11 - 7 = 4 (left: 4 13)\n",
                    "13 + 3 = 16 (left: 7 8 16)\n7 + 8 = 15 (left: 15 16)\n",
                    "13 + 3 = 16 (left: 7 8 16)\n16 - 8 = 8 (left: 7 8)\n",
                    "13 + 3 = 16 (left: 7 8 16)\n16 - 7 = 9 (left: 8 9)\n",
                    "13 + 3 = 16 (left: 7 8 16)\n8 - 7 = 1 (left: 1 16)\n",
                    "13 + 3 = 16 (left: 7 8 16)\n16 / 8 = 2 (left: 2 7)\n",
                    "13 + 3 = 16 (left: 7 8 16)\n7 * 8 = 56 (left: 16 56)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n8 + 13 = 21 (left: 21 21)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n21 - 13 = 8 (left: 8 8)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n21 - 8 = 13 (left: 13 13)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n13 - 8 = 5 (left: 5 21)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n21 / 3 = 7 (left: 7 13)\n",
                    "8 - 3 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n",
                    "8 - 3 = 5 (left: 5 7 13)\n13 + 5 = 18 (left: 7 18)\n",
                    "8 - 3 = 5 (left: 5 7 13)\n13 - 7 = 6 (left: 5 6)\n",
                    "8 - 3 = 5 (left: 5 7 13)\n13 - 5 = 8 (left: 7 8)\n",
                    "8 - 3 = 5 (left: 5 7 13)\n7 - 5 = 2 (left: 2 13)\n",
                    "8 - 3 = 5 (left: 5 7 13)\n13 * 5 = 65 (left: 7 65)\n",
                    "8 - 3 = 5 (left: 5 7 13)\n7 * 5 = 35 (left: 13 35)\n",
                    "13 - 7 = 6 (left: 3 6 8)\n3 + 6 = 9 (left: 8 9)\n",
                    "13 - 7 = 6 (left: 3 6 8)\n6 + 8 = 14 (left: 3 14)\n",
                    "13 - 7 = 6 (left: 3 6 8)\n8 - 3 = 5 (left: 5 6)\n",
                    "13 - 7 = 6 (left: 3 6 8)\n8 - 6 = 2 (left: 2 3)\n",
                    "13 - 7 = 6 (left: 3 6 8)\n3 * 6 = 18 (left: 8 18)\n",
                    "13 - 7 = 6 (left: 3 6 8)\n3 * 8 = 24 (left: 6 24)\n",
                    "13 - 7 = 6 (left: 3 6 8)\n6 * 8 = 48 (left: 3 48)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n7 + 8 = 15 (left: 10 15)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 8 = 2 (left: 2 7)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n8 - 7 = 1 (left: 1 10)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 + 7 = 17 (left: 8 17)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 + 8 = 18 (left: 7 18)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n8 * 7 = 56 (left: 10 56)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 13 18)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 8 = 5 (left: 5 10)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 + 10 = 23 (left: 8 23)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 + 8 = 21 (left: 10 21)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 7 8 13",
                "ys": [
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 13 18)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 8 = 5 (left: 5 10)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 + 10 = 23 (left: 8 23)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 + 8 = 21 (left: 10 21)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 13 18)\n18 - 13 = 5 (left: 5)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 13 18)\n13 * 18 = 234 (left: 234)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 13 18)\n18 / 13 \u2248 1.38 (left: 1)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 8 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 8 = 5 (left: 5 10)\n10 - 5 = 5 (left: 5)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 8 = 5 (left: 5 10)\n10 / 5 = 2 (left: 2)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 8 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n2 + 13 = 15 (left: 15)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 + 10 = 23 (left: 8 23)\n23 + 8 = 31 (left: 31)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 + 10 = 23 (left: 8 23)\n23 - 8 = 15 (left: 15)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 + 10 = 23 (left: 8 23)\n8 * 23 = 184 (left: 184)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 + 8 = 21 (left: 10 21)\n10 + 21 = 31 (left: 31)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 + 8 = 21 (left: 10 21)\n21 - 10 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 + 8 = 21 (left: 10 21)\n21 / 10 = 2.1 (left: 2.1)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 + 8 = 21 (left: 10 21)\n10 * 21 = 210 (left: 210)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 8 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n2 + 13 = 15 (left: 15)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 7 8 13",
                "ys": [
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 8 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n2 + 13 = 15 (left: 15)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - (3 + 7)) * 8 = 24\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((13 - 3) - 7) * 8 = 24\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\nInput: 31\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\nNo valid operations possible.\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 8 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\nInput: 15\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 8 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 8 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\nNone\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n2 + 13 = 15 (left: 15)\nInput: 15\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n2 + 13 = 15 (left: 15)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n2 + 13 = 15 (left: 15)\nNone\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - (3 + 7)) * 8 = 24\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((13 - 3) - 7) * 8 = 24\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 861,
        "ys": [
            "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - (3 + 7)) * 8 = 24\n",
            "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((13 - 3) - 7) * 8 = 24\n",
            "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
            "3 + 7 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
            "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 106904,
            "prompt_tokens": 428429,
            "cost": 19.26711
        },
        "time_spent": 34.479942321777344
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 4 5 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n",
                    "5 + 4 = 9 (left: 4 7 9)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n",
                    "4 * 4 = 16 (left: 5 7 16)\n",
                    "5 + 7 = 12 (left: 4 4 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n",
                    "5 + 4 = 9 (left: 4 7 9)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n",
                    "4 * 4 = 16 (left: 5 7 16)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 4 5 7",
                "ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n",
                    "5 + 4 = 9 (left: 4 7 9)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n",
                    "4 * 4 = 16 (left: 5 7 16)\n"
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 7)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 7 = 1 (left: 1 5)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 + 7 = 15 (left: 5 15)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 + 5 = 13 (left: 7 13)\n",
                    "5 + 4 = 9 (left: 4 7 9)\n4 + 7 = 11 (left: 9 11)\n",
                    "5 + 4 = 9 (left: 4 7 9)\n9 - 4 = 5 (left: 5 7)\n",
                    "5 + 4 = 9 (left: 4 7 9)\n9 - 7 = 2 (left: 2 4)\n",
                    "5 + 4 = 9 (left: 4 7 9)\n7 - 4 = 3 (left: 3 9)\n",
                    "5 + 4 = 9 (left: 4 7 9)\n4 * 7 = 28 (left: 9 28)\n",
                    "5 + 4 = 9 (left: 4 7 9)\n9 + 7 = 16 (left: 4 16)\n",
                    "5 + 4 = 9 (left: 4 7 9)\n9 + 4 = 13 (left: 7 13)\n",
                    "5 + 4 = 9 (left: 4 7 9)\n7 * 4 = 28 (left: 9 28)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n5 + 11 = 16 (left: 4 16)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n4 * 5 = 20 (left: 11 20)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n11 + 4 = 15 (left: 5 15)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n5 * 4 = 20 (left: 11 20)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n3 + 4 = 7 (left: 5 7)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n3 + 5 = 8 (left: 4 8)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n4 + 5 = 9 (left: 3 9)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n5 - 3 = 2 (left: 2 4)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n5 - 4 = 1 (left: 1 3)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n4 - 3 = 1 (left: 1 5)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n3 * 4 = 12 (left: 5 12)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n3 * 5 = 15 (left: 4 15)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n4 * 5 = 20 (left: 3 20)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n1 + 4 = 5 (left: 5 7)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n4 + 7 = 11 (left: 1 11)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 4 = 3 (left: 1 3)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n4 - 1 = 3 (left: 3 7)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 * 1 = 7 (left: 4 7)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n4 * 1 = 4 (left: 4 7)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n4 + 4 = 8 (left: 2 8)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n4 - 2 = 2 (left: 2 4)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n4 * 2 = 8 (left: 4 8)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n4 / 2 = 2 (left: 2 4)\n",
                    "4 * 4 = 16 (left: 5 7 16)\n5 + 7 = 12 (left: 12 16)\n",
                    "4 * 4 = 16 (left: 5 7 16)\n16 - 7 = 9 (left: 5 9)\n",
                    "4 * 4 = 16 (left: 5 7 16)\n16 - 5 = 11 (left: 7 11)\n",
                    "4 * 4 = 16 (left: 5 7 16)\n7 - 5 = 2 (left: 2 16)\n",
                    "4 * 4 = 16 (left: 5 7 16)\n16 / 2 = 8 (left: 5 8)\n",
                    "4 * 4 = 16 (left: 5 7 16)\n5 * 7 = 35 (left: 16 35)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 7)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 4 5 7",
                "ys": [
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 7)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n"
                ],
                "new_ys": [
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 7)\n7 - 3 = 4 (left: 4)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n8 - 5 = 3 (left: 3 7)\n3 * 7 = 21 (left: 21)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n8 - 2 = 6 (left: 6)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n8 / 2 = 4 (left: 4)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n8 + 35 = 43 (left: 43)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n35 - 8 = 27 (left: 27)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n35 / 8 = 4.375 (left: 4.375)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n8 * 35 = 280 (left: 280)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 4 5 7",
                "ys": [
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n"
                ],
                "new_ys": [
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((7 + 4) - 5) = 24\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (7 - (5 - 4)) = 24\n",
                    "7 - 5 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((7 - 5) + 4) = 24\n",
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 8 = 80 (left: 14 80)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\nInput: 18\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\nPossible next steps:\n",
                    "7 - 5 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "7 - 5 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 8 24)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\nInput: 20\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\nPossible next steps:\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\nNone\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((7 + 4) - 5) = 24\n",
                    "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (7 - (5 - 4)) = 24\n",
                    "7 - 5 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((7 - 5) + 4) = 24\n",
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 8 = 80 (left: 14 80)\n"
                ]
            }
        ],
        "idx": 862,
        "ys": [
            "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((7 + 4) - 5) = 24\n",
            "5 - 4 = 1 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (7 - (5 - 4)) = 24\n",
            "7 - 5 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((7 - 5) + 4) = 24\n",
            "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
            "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
            "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
            "7 + 4 = 11 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 8 = 80 (left: 14 80)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 108831,
            "prompt_tokens": 435390,
            "cost": 19.591559999999998
        },
        "time_spent": 39.09643602371216
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 5 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n",
                    "5 + 5 = 10 (left: 1 10 11)\n",
                    "11 + 1 = 12 (left: 5 5 12)\n",
                    "5 * 5 = 25 (left: 1 11 25)\n",
                    "11 - 5 = 6 (left: 1 5 6)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n",
                    "11 / 1 = 11 (left: 5 5 11)\n",
                    "5 - 1 = 4 (left: 4 5 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n",
                    "5 + 5 = 10 (left: 1 10 11)\n",
                    "11 + 1 = 12 (left: 5 5 12)\n",
                    "5 * 5 = 25 (left: 1 11 25)\n",
                    "11 - 5 = 6 (left: 1 5 6)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n",
                    "11 / 1 = 11 (left: 5 5 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 5 11",
                "ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n",
                    "5 + 5 = 10 (left: 1 10 11)\n",
                    "11 + 1 = 12 (left: 5 5 12)\n",
                    "5 * 5 = 25 (left: 1 11 25)\n",
                    "11 - 5 = 6 (left: 1 5 6)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n",
                    "11 / 1 = 11 (left: 5 5 11)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 + 5 = 16 (left: 6 16)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 + 6 = 17 (left: 5 17)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 / 11 = 1 (left: 1 5 6)\n",
                    "5 + 5 = 10 (left: 1 10 11)\n1 + 10 = 11 (left: 11 11)\n",
                    "5 + 5 = 10 (left: 1 10 11)\n11 - 1 = 10 (left: 10 10)\n",
                    "5 + 5 = 10 (left: 1 10 11)\n11 - 10 = 1 (left: 1 1)\n",
                    "5 + 5 = 10 (left: 1 10 11)\n10 + 1 = 11 (left: 11 11)\n",
                    "5 + 5 = 10 (left: 1 10 11)\n11 * 1 = 11 (left: 10 11)\n",
                    "5 + 5 = 10 (left: 1 10 11)\n10 - 1 = 9 (left: 9 11)\n",
                    "11 + 1 = 12 (left: 5 5 12)\n5 + 5 = 10 (left: 10 12)\n",
                    "11 + 1 = 12 (left: 5 5 12)\n12 - 5 = 7 (left: 5 7)\n",
                    "11 + 1 = 12 (left: 5 5 12)\n5 * 5 = 25 (left: 12 25)\n",
                    "11 + 1 = 12 (left: 5 5 12)\n12 + 5 = 17 (left: 5 17)\n",
                    "11 + 1 = 12 (left: 5 5 12)\n12 / 5 = 2.4 (left: 2.4 5)\n",
                    "5 * 5 = 25 (left: 1 11 25)\n1 + 11 = 12 (left: 12 25)\n",
                    "5 * 5 = 25 (left: 1 11 25)\n25 - 11 = 14 (left: 1 14)\n",
                    "5 * 5 = 25 (left: 1 11 25)\n25 - 1 = 24 (left: 11 24)\n",
                    "5 * 5 = 25 (left: 1 11 25)\n11 - 1 = 10 (left: 10 25)\n",
                    "5 * 5 = 25 (left: 1 11 25)\n25 + 1 = 26 (left: 11 26)\n",
                    "5 * 5 = 25 (left: 1 11 25)\n11 + 1 = 12 (left: 12 25)\n",
                    "5 * 5 = 25 (left: 1 11 25)\n25 / 1 = 25 (left: 11 25)\n",
                    "5 * 5 = 25 (left: 1 11 25)\n11 * 1 = 11 (left: 11 25)\n",
                    "11 - 5 = 6 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n",
                    "11 - 5 = 6 (left: 1 5 6)\n6 - 1 = 5 (left: 5 5)\n",
                    "11 - 5 = 6 (left: 1 5 6)\n6 - 5 = 1 (left: 1 1)\n",
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n",
                    "11 - 5 = 6 (left: 1 5 6)\n6 / 1 = 6 (left: 5 6)\n",
                    "11 - 5 = 6 (left: 1 5 6)\n5 * 1 = 5 (left: 5 6)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n5 + 5 = 10 (left: 10 10)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n10 + 5 = 15 (left: 5 15)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n10 - 5 = 5 (left: 5 5)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n10 / 5 = 2 (left: 2 5)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n5 * 5 = 25 (left: 10 25)\n",
                    "11 / 1 = 11 (left: 5 5 11)\n5 + 5 = 10 (left: 10 11)\n",
                    "11 / 1 = 11 (left: 5 5 11)\n11 - 5 = 6 (left: 5 6)\n",
                    "11 / 1 = 11 (left: 5 5 11)\n5 * 5 = 25 (left: 11 25)\n",
                    "11 / 1 = 11 (left: 5 5 11)\n11 + 5 = 16 (left: 5 16)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 + 5 = 16 (left: 6 16)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 + 6 = 17 (left: 5 17)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 5 11",
                "ys": [
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 + 5 = 16 (left: 6 16)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 + 6 = 17 (left: 5 17)\n"
                ],
                "new_ys": [
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n11 - 11 = 0 (left: 0)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n11 * 11 = 121 (left: 121)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n11 / 11 = 1 (left: 1)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n5 + 5 = 10 (left: 10)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n5 - 5 = 0 (left: 0)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 + 5 = 16 (left: 6 16)\n6 + 16 = 22 (left: 22)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 + 5 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 + 5 = 16 (left: 6 16)\n16 / 6 \u2248 2.67 (left: 2.67)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 + 5 = 16 (left: 6 16)\n6 * 16 = 96 (left: 96)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 + 6 = 17 (left: 5 17)\n17 - 5 = 12 (left: 12)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 + 6 = 17 (left: 5 17)\n5 + 17 = 22 (left: 22)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 + 6 = 17 (left: 5 17)\n17 / 5 = 3 (left: 3)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 + 6 = 17 (left: 5 17)\n17 * 5 = 85 (left: 85)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n5 + 5 = 10 (left: 10)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 5 11",
                "ys": [
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n5 + 5 = 10 (left: 10)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n"
                ],
                "new_ys": [
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (5 - 1) * (11 - 5) = 24\n",
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nInput: 10\n",
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nPossible next steps:\n",
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n",
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\nInput: 22\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\nNone (target reached)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n5 + 5 = 10 (left: 10)\nInput: 10\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n5 + 5 = 10 (left: 10)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n5 + 5 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n5 + 5 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n5 + 5 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\nInput: 25\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\nNone\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\nInput: 3 8\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n3 + 8 = 11 (left: 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n8 - 3 = 5 (left: 5)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n8 / 3 = 2 remainder 2 (left: 2 2)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n3 * 8 = 24 (left: 24)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nInput: 36\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 36 = 1 (left: 1)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 - 36 = 0 (left: 0)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 + 36 = 72 (left: 72)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 * 36 = 1296 (left: 1296)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (5 - 1) * (11 - 5) = 24\n",
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nInput: 10\n",
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nPossible next steps:\n",
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n",
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\nInput: 22\n"
                ]
            }
        ],
        "idx": 863,
        "ys": [
            "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (5 - 1) * (11 - 5) = 24\n",
            "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nInput: 10\n",
            "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\nPossible next steps:\n",
            "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n",
            "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
            "11 - 5 = 6 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
            "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\nInput: 22\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 110775,
            "prompt_tokens": 441541,
            "cost": 19.89273
        },
        "time_spent": 37.04539108276367
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 6 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 6 6 13)\n",
                    "6 + 2 = 8 (left: 4 8 13)\n",
                    "13 + 2 = 15 (left: 4 6 15)\n",
                    "2 * 4 = 8 (left: 6 8 13)\n",
                    "6 - 2 = 4 (left: 4 4 13)\n",
                    "13 - 6 = 7 (left: 2 4 7)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n",
                    "13 - 2 = 11 (left: 4 6 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 2 6 9)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n",
                    "6 + 2 = 8 (left: 4 8 13)\n",
                    "13 + 2 = 15 (left: 4 6 15)\n",
                    "2 * 4 = 8 (left: 6 8 13)\n",
                    "6 - 2 = 4 (left: 4 4 13)\n",
                    "13 - 6 = 7 (left: 2 4 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 6 13",
                "ys": [
                    "13 - 4 = 9 (left: 2 6 9)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n",
                    "6 + 2 = 8 (left: 4 8 13)\n",
                    "13 + 2 = 15 (left: 4 6 15)\n",
                    "2 * 4 = 8 (left: 6 8 13)\n",
                    "6 - 2 = 4 (left: 4 4 13)\n",
                    "13 - 6 = 7 (left: 2 4 7)\n"
                ],
                "new_ys": [
                    "13 - 4 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n9 - 6 = 3 (left: 2 3)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n9 / 3 = 3 (left: 2 3)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 + 6 = 19 (left: 6 19)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 / 6 \u2248 2.17 (left: 2.17 6)\n",
                    "6 + 2 = 8 (left: 4 8 13)\n4 + 8 = 12 (left: 12 13)\n",
                    "6 + 2 = 8 (left: 4 8 13)\n13 - 8 = 5 (left: 4 5)\n",
                    "6 + 2 = 8 (left: 4 8 13)\n13 - 4 = 9 (left: 8 9)\n",
                    "6 + 2 = 8 (left: 4 8 13)\n8 * 4 = 32 (left: 13 32)\n",
                    "6 + 2 = 8 (left: 4 8 13)\n13 + 4 = 17 (left: 8 17)\n",
                    "6 + 2 = 8 (left: 4 8 13)\n8 + 4 = 12 (left: 12 13)\n",
                    "6 + 2 = 8 (left: 4 8 13)\n13 + 8 = 21 (left: 4 21)\n",
                    "6 + 2 = 8 (left: 4 8 13)\n8 / 4 = 2 (left: 2 13)\n",
                    "13 + 2 = 15 (left: 4 6 15)\n4 + 6 = 10 (left: 10 15)\n",
                    "13 + 2 = 15 (left: 4 6 15)\n15 - 6 = 9 (left: 4 9)\n",
                    "13 + 2 = 15 (left: 4 6 15)\n15 - 4 = 11 (left: 6 11)\n",
                    "13 + 2 = 15 (left: 4 6 15)\n6 - 4 = 2 (left: 2 15)\n",
                    "13 + 2 = 15 (left: 4 6 15)\n15 / 3 = 5 (left: 4 5)\n",
                    "13 + 2 = 15 (left: 4 6 15)\n6 * 4 = 24 (left: 15 24)\n",
                    "13 + 2 = 15 (left: 4 6 15)\n15 + 6 = 21 (left: 4 21)\n",
                    "13 + 2 = 15 (left: 4 6 15)\n15 + 4 = 19 (left: 6 19)\n",
                    "2 * 4 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 13 14)\n",
                    "2 * 4 = 8 (left: 6 8 13)\n13 + 8 = 21 (left: 6 21)\n",
                    "2 * 4 = 8 (left: 6 8 13)\n13 - 8 = 5 (left: 5 6)\n",
                    "2 * 4 = 8 (left: 6 8 13)\n13 - 6 = 7 (left: 7 8)\n",
                    "2 * 4 = 8 (left: 6 8 13)\n8 - 6 = 2 (left: 2 13)\n",
                    "2 * 4 = 8 (left: 6 8 13)\n13 / 1 = 13 (left: 6 8)\n",
                    "6 - 2 = 4 (left: 4 4 13)\n4 + 4 = 8 (left: 8 13)\n",
                    "6 - 2 = 4 (left: 4 4 13)\n13 + 4 = 17 (left: 4 17)\n",
                    "6 - 2 = 4 (left: 4 4 13)\n13 - 4 = 9 (left: 4 9)\n",
                    "6 - 2 = 4 (left: 4 4 13)\n4 * 4 = 16 (left: 13 16)\n",
                    "6 - 2 = 4 (left: 4 4 13)\n13 / 4 = 3 (left: 3 4)\n",
                    "13 - 6 = 7 (left: 2 4 7)\n2 + 4 = 6 (left: 6 7)\n",
                    "13 - 6 = 7 (left: 2 4 7)\n4 + 7 = 11 (left: 2 11)\n",
                    "13 - 6 = 7 (left: 2 4 7)\n7 - 4 = 3 (left: 2 3)\n",
                    "13 - 6 = 7 (left: 2 4 7)\n7 - 2 = 5 (left: 4 5)\n",
                    "13 - 6 = 7 (left: 2 4 7)\n2 * 4 = 8 (left: 7 8)\n",
                    "13 - 6 = 7 (left: 2 4 7)\n4 * 7 = 28 (left: 2 28)\n",
                    "13 - 6 = 7 (left: 2 4 7)\n7 / 2 = 3.5 (left: 3.5 4)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 + 6 = 19 (left: 6 19)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 6 13",
                "ys": [
                    "13 - 4 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 + 6 = 19 (left: 6 19)\n"
                ],
                "new_ys": [
                    "13 - 4 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n9 - 8 = 1 (left: 1)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n9 / 8 = 1.125 (invalid)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n9 - 8 = 1 (left: 1)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n7 - 6 = 1 (left: 1)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 * 7 = 42 (left: 42)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 * 12 = 108 (left: 108)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n12 / 9 = 1.33 (left: 1.33)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n13 - 12 = 1 (left: 1)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n7 - 6 = 1 (left: 1)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n6 * 7 = 42 (left: 42)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 + 6 = 19 (left: 6 19)\n6 + 19 = 25 (left: 25)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 + 6 = 19 (left: 6 19)\n19 - 6 = 13 (left: 13)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 + 6 = 19 (left: 6 19)\n19 / 6 = 3 (left: 3)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 + 6 = 19 (left: 6 19)\n6 * 19 = 114 (left: 114)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 + 6 = 19 (left: 6 19)\n6 + 19 = 25 (left: 25)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 6 13",
                "ys": [
                    "13 - 4 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 + 6 = 19 (left: 6 19)\n6 + 19 = 25 (left: 25)\n"
                ],
                "new_ys": [
                    "13 - 4 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
                    "13 - 4 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "13 - 4 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNone\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNone\n",
                    "13 - 4 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nInput: 13\n",
                    "13 - 4 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nPossible next steps:\n",
                    "13 - 4 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nNone\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 21\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nNo valid operations possible with a single number.\n",
                    "2 + 4 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\nInput: 25\n",
                    "2 + 4 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\nPossible next steps:\n",
                    "2 + 4 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n(No possible next steps)\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nInput: 13\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nPossible next steps:\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nNone\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 + 6 = 19 (left: 6 19)\n6 + 19 = 25 (left: 25)\nInput: 25\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 + 6 = 19 (left: 6 19)\n6 + 19 = 25 (left: 25)\nPossible next steps:\n",
                    "2 + 4 = 6 (left: 6 6 13)\n13 + 6 = 19 (left: 6 19)\n6 + 19 = 25 (left: 25)\nNone\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
                    "13 - 4 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "13 - 4 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNone\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "13 - 4 = 9 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNone\n",
                    "13 - 4 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nInput: 13\n"
                ]
            }
        ],
        "idx": 864,
        "ys": [
            "13 - 4 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
            "13 - 4 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
            "13 - 4 = 9 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNone\n",
            "13 - 4 = 9 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
            "13 - 4 = 9 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
            "13 - 4 = 9 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNone\n",
            "13 - 4 = 9 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nInput: 13\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 112365,
            "prompt_tokens": 447287,
            "cost": 20.16051
        },
        "time_spent": 34.19128918647766
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 7 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n",
                    "12 - 6 = 6 (left: 6 7 9)\n",
                    "7 + 6 = 13 (left: 9 12 13)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n",
                    "12 + 6 = 18 (left: 7 9 18)\n",
                    "12 - 9 = 3 (left: 3 6 7)\n",
                    "12 + 9 = 21 (left: 6 7 21)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 - 7 = 2 (left: 2 6 12)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n",
                    "12 - 6 = 6 (left: 6 7 9)\n",
                    "7 + 6 = 13 (left: 9 12 13)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 7 9 12",
                "ys": [
                    "9 - 7 = 2 (left: 2 6 12)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n",
                    "12 - 6 = 6 (left: 6 7 9)\n",
                    "7 + 6 = 13 (left: 9 12 13)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n"
                ],
                "new_ys": [
                    "9 - 7 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n6 / 2 = 3 (left: 3 12)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 6 = 2 (left: 2 2)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 12)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 9)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 - 9 = 3 (left: 3 13)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 * 12 = 108 (left: 13 108)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n13 + 12 = 25 (left: 9 25)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n13 + 9 = 22 (left: 12 22)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n3 + 7 = 10 (left: 10 12)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n12 + 3 = 15 (left: 7 15)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n12 - 7 = 5 (left: 3 5)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n12 / 3 = 4 (left: 4 7)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n12 - 3 = 9 (left: 7 9)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 * 3 = 21 (left: 12 21)\n",
                    "12 - 6 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n",
                    "12 - 6 = 6 (left: 6 7 9)\n9 - 7 = 2 (left: 2 6)\n",
                    "12 - 6 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n",
                    "12 - 6 = 6 (left: 6 7 9)\n7 - 6 = 1 (left: 1 9)\n",
                    "12 - 6 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n",
                    "12 - 6 = 6 (left: 6 7 9)\n9 + 7 = 16 (left: 6 16)\n",
                    "12 - 6 = 6 (left: 6 7 9)\n9 + 6 = 15 (left: 7 15)\n",
                    "7 + 6 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "7 + 6 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 12)\n",
                    "7 + 6 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 9)\n",
                    "7 + 6 = 13 (left: 9 12 13)\n12 - 9 = 3 (left: 3 13)\n",
                    "7 + 6 = 13 (left: 9 12 13)\n9 * 12 = 108 (left: 13 108)\n",
                    "7 + 6 = 13 (left: 9 12 13)\n13 + 12 = 25 (left: 9 25)\n",
                    "7 + 6 = 13 (left: 9 12 13)\n13 + 9 = 22 (left: 12 22)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 6 = 3 (left: 3 5)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n5 * 6 = 30 (left: 9 30)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n6 + 9 = 15 (left: 5 15)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n5 + 9 = 14 (left: 6 14)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n7 + 12 = 19 (left: 15 19)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n15 - 7 = 8 (left: 8 12)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n15 - 12 = 3 (left: 3 7)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n12 - 7 = 5 (left: 5 15)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n7 * 12 = 84 (left: 15 84)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n15 + 12 = 27 (left: 7 27)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n15 + 7 = 22 (left: 12 22)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 7 9 12",
                "ys": [
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n"
                ],
                "new_ys": [
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n12 - 8 = 4 (left: 4)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n14 - 6 = 8 (left: 8)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n14 / 2 = 7 (left: 6 7)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 * 2 = 12 (left: 12 14)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 + 6 = 8 (left: 8)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n6 - 2 = 4 (left: 4)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n6 / 2 = 3 (left: 3)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n10 - 6 = 4 (left: 4)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n10 / 2 = 5 (left: 5 6)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n6 * 10 = 60 (left: 60)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 7 9 12",
                "ys": [
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n"
                ],
                "new_ys": [
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 6 * (9 - (12 - 7)) = 24\n",
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\nInput: 20\n",
                    "9 - 7 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\nPossible next steps:\n",
                    "9 - 7 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\nNone (Target reached)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\nInput: 20\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\nPossible next steps:\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\nNo valid operations possible with a single number.\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nInput: 36\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nPossible next steps:\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 - 24 = 12 (left: 12)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 4 = 9 (left: 9)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 - 12 = 24 (left: 24)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 6 * (9 - (12 - 7)) = 24\n",
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "9 - 7 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\nInput: 20\n",
                    "9 - 7 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 865,
        "ys": [
            "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 6 * (9 - (12 - 7)) = 24\n",
            "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
            "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
            "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
            "12 - 7 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
            "9 - 7 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\nInput: 20\n",
            "9 - 7 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 114475,
            "prompt_tokens": 453438,
            "cost": 20.47164
        },
        "time_spent": 39.7002387046814
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 6 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 6 13)\n",
                    "6 + 1 = 7 (left: 5 7 13)\n",
                    "13 + 1 = 14 (left: 5 6 14)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n",
                    "6 - 1 = 5 (left: 5 5 13)\n",
                    "13 - 5 = 8 (left: 1 6 8)\n",
                    "13 - 6 = 7 (left: 1 5 7)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 * 1 = 5 (left: 5 6 13)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n",
                    "6 + 1 = 7 (left: 5 7 13)\n",
                    "13 + 1 = 14 (left: 5 6 14)\n",
                    "6 - 1 = 5 (left: 5 5 13)\n",
                    "13 - 5 = 8 (left: 1 6 8)\n",
                    "13 - 6 = 7 (left: 1 5 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 6 13",
                "ys": [
                    "5 * 1 = 5 (left: 5 6 13)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n",
                    "6 + 1 = 7 (left: 5 7 13)\n",
                    "13 + 1 = 14 (left: 5 6 14)\n",
                    "6 - 1 = 5 (left: 5 5 13)\n",
                    "13 - 5 = 8 (left: 1 6 8)\n",
                    "13 - 6 = 7 (left: 1 5 7)\n"
                ],
                "new_ys": [
                    "5 * 1 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 13)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 / 1 = 13 (left: 5 13)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 * 5 = 30 (left: 13 30)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n13 + 6 = 19 (left: 6 19)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n13 / 6 \u2248 2 (left: 2 6)\n",
                    "6 + 1 = 7 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n",
                    "6 + 1 = 7 (left: 5 7 13)\n13 + 5 = 18 (left: 7 18)\n",
                    "6 + 1 = 7 (left: 5 7 13)\n13 - 7 = 6 (left: 5 6)\n",
                    "6 + 1 = 7 (left: 5 7 13)\n13 - 5 = 8 (left: 7 8)\n",
                    "6 + 1 = 7 (left: 5 7 13)\n7 - 5 = 2 (left: 2 13)\n",
                    "6 + 1 = 7 (left: 5 7 13)\n13 * 5 = 65 (left: 7 65)\n",
                    "6 + 1 = 7 (left: 5 7 13)\n13 / 1 = 13 (left: 5 7)\n",
                    "13 + 1 = 14 (left: 5 6 14)\n5 + 6 = 11 (left: 11 14)\n",
                    "13 + 1 = 14 (left: 5 6 14)\n14 - 6 = 8 (left: 5 8)\n",
                    "13 + 1 = 14 (left: 5 6 14)\n14 - 5 = 9 (left: 6 9)\n",
                    "13 + 1 = 14 (left: 5 6 14)\n6 - 5 = 1 (left: 1 14)\n",
                    "13 + 1 = 14 (left: 5 6 14)\n5 * 6 = 30 (left: 14 30)\n",
                    "13 + 1 = 14 (left: 5 6 14)\n14 + 6 = 20 (left: 5 20)\n",
                    "13 + 1 = 14 (left: 5 6 14)\n14 + 5 = 19 (left: 6 19)\n",
                    "6 - 1 = 5 (left: 5 5 13)\n5 + 5 = 10 (left: 10 13)\n",
                    "6 - 1 = 5 (left: 5 5 13)\n13 + 5 = 18 (left: 5 18)\n",
                    "6 - 1 = 5 (left: 5 5 13)\n13 - 5 = 8 (left: 5 8)\n",
                    "6 - 1 = 5 (left: 5 5 13)\n5 * 5 = 25 (left: 13 25)\n",
                    "6 - 1 = 5 (left: 5 5 13)\n13 / 5 = 2 (left: 2 5)\n",
                    "13 - 5 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n",
                    "13 - 5 = 8 (left: 1 6 8)\n8 - 1 = 7 (left: 6 7)\n",
                    "13 - 5 = 8 (left: 1 6 8)\n8 - 6 = 2 (left: 1 2)\n",
                    "13 - 5 = 8 (left: 1 6 8)\n6 - 1 = 5 (left: 5 8)\n",
                    "13 - 5 = 8 (left: 1 6 8)\n1 * 6 = 6 (left: 6 8)\n",
                    "13 - 5 = 8 (left: 1 6 8)\n8 / 1 = 8 (left: 6 8)\n",
                    "13 - 6 = 7 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n",
                    "13 - 6 = 7 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n",
                    "13 - 6 = 7 (left: 1 5 7)\n7 - 5 = 2 (left: 1 2)\n",
                    "13 - 6 = 7 (left: 1 5 7)\n7 - 1 = 6 (left: 5 6)\n",
                    "13 - 6 = 7 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\n",
                    "13 - 6 = 7 (left: 1 5 7)\n7 * 1 = 7 (left: 5 7)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 * 1 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 13)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 / 1 = 13 (left: 5 13)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 * 5 = 30 (left: 13 30)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 6 13",
                "ys": [
                    "5 * 1 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 13)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 / 1 = 13 (left: 5 13)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 * 5 = 30 (left: 13 30)\n"
                ],
                "new_ys": [
                    "5 * 1 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n19 / 5 = 3 (left: 3 4)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n5 * 19 = 95 (left: 95)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n5 + 7 = 12 (left: 12)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n7 - 5 = 2 (left: 2)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n5 * 7 = 35 (left: 35)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8)\n8 - 6 = 2 (left: 2)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8)\n6 * 8 = 48 (left: 48)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8)\n8 / 6 = 1.33 (left: 1.33)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 13)\nInput: 1 13\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 13)\nPossible next steps:\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 13)\n13 * 1 = 13 (left: 13)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 13)\n13 / 1 = 13 (left: 13)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 / 1 = 13 (left: 5 13)\n5 + 13 = 18 (left: 18)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 / 1 = 13 (left: 5 13)\n13 - 5 = 8 (left: 8)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 * 5 = 30 (left: 13 30)\n13 + 30 = 43 (left: 43)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 * 5 = 30 (left: 13 30)\n30 - 13 = 17 (left: 17)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 * 5 = 30 (left: 13 30)\n30 / 13 \u2248 2.31 (left: 2.31)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 * 5 = 30 (left: 13 30)\n13 * 30 = 390 (left: 390)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 * 1 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n5 + 7 = 12 (left: 12)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n5 * 7 = 35 (left: 35)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 6 13",
                "ys": [
                    "5 * 1 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n5 + 7 = 12 (left: 12)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n5 * 7 = 35 (left: 35)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n"
                ],
                "new_ys": [
                    "5 * 1 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (5 * 1 + 6) + 13 = 24\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\nAnswer: (5 * 1) + (13 + 6) = 24\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n(There are no possible next steps with only one number.)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n5 + 7 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n5 + 7 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n5 + 7 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n5 + 7 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n5 + 7 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n5 * 7 = 35 (left: 35)\nInput: 35\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n5 * 7 = 35 (left: 35)\nPossible next steps:\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n5 * 7 = 35 (left: 35)\nNone (target reached)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\nInput: 14\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\nPossible next steps:\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\nInput: 14\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\nPossible next steps:\n",
                    "5 * 1 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\nNo possible operations with a single number.\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 * 1 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (5 * 1 + 6) + 13 = 24\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\nAnswer: (5 * 1) + (13 + 6) = 24\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n(There are no possible next steps with only one number.)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n5 + 7 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n5 + 7 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n"
                ]
            }
        ],
        "idx": 866,
        "ys": [
            "5 * 1 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (5 * 1 + 6) + 13 = 24\n",
            "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\nAnswer: (5 * 1) + (13 + 6) = 24\n",
            "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14\n",
            "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n",
            "5 * 1 = 5 (left: 5 6 13)\n13 + 6 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n(There are no possible next steps with only one number.)\n",
            "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n5 + 7 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
            "5 * 1 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 5 7)\n5 + 7 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 116147,
            "prompt_tokens": 459994,
            "cost": 20.76864
        },
        "time_spent": 35.10595488548279
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 8 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 8 11 11)\n",
                    "8 / 8 = 1 (left: 1 3 11)\n",
                    "11 + 3 = 14 (left: 8 8 14)\n",
                    "3 * 8 = 24 (left: 8 11 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n",
                    "11 - 8 = 3 (left: 3 3 8)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100,
                    100
                ],
                "select_new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n",
                    "3 + 8 = 11 (left: 8 11 11)\n",
                    "8 / 8 = 1 (left: 1 3 11)\n",
                    "11 + 3 = 14 (left: 8 8 14)\n",
                    "3 * 8 = 24 (left: 8 11 24)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 8 8 11",
                "ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n",
                    "3 + 8 = 11 (left: 8 11 11)\n",
                    "8 / 8 = 1 (left: 1 3 11)\n",
                    "11 + 3 = 14 (left: 8 8 14)\n",
                    "3 * 8 = 24 (left: 8 11 24)\n"
                ],
                "new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 * 5 = 55 (left: 8 55)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 * 5 = 40 (left: 11 40)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 / 5 = 2 (left: 2 8)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n3 - 1 = 2 (left: 2 8)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 8 64)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n",
                    "3 + 8 = 11 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n",
                    "3 + 8 = 11 (left: 8 11 11)\n11 + 11 = 22 (left: 8 22)\n",
                    "3 + 8 = 11 (left: 8 11 11)\n11 - 8 = 3 (left: 3 11)\n",
                    "8 / 8 = 1 (left: 1 3 11)\n1 + 3 = 4 (left: 4 11)\n",
                    "8 / 8 = 1 (left: 1 3 11)\n3 + 11 = 14 (left: 1 14)\n",
                    "8 / 8 = 1 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n",
                    "8 / 8 = 1 (left: 1 3 11)\n11 - 1 = 10 (left: 3 10)\n",
                    "8 / 8 = 1 (left: 1 3 11)\n3 - 1 = 2 (left: 2 11)\n",
                    "8 / 8 = 1 (left: 1 3 11)\n11 * 3 = 33 (left: 1 33)\n",
                    "8 / 8 = 1 (left: 1 3 11)\n11 / 1 = 11 (left: 3 11)\n",
                    "11 + 3 = 14 (left: 8 8 14)\n8 + 8 = 16 (left: 14 16)\n",
                    "11 + 3 = 14 (left: 8 8 14)\n14 + 8 = 22 (left: 8 22)\n",
                    "11 + 3 = 14 (left: 8 8 14)\n14 - 8 = 6 (left: 6 8)\n",
                    "11 + 3 = 14 (left: 8 8 14)\n8 * 8 = 64 (left: 14 64)\n",
                    "3 * 8 = 24 (left: 8 11 24)\n8 + 11 = 19 (left: 19 24)\n",
                    "3 * 8 = 24 (left: 8 11 24)\n24 - 11 = 13 (left: 8 13)\n",
                    "3 * 8 = 24 (left: 8 11 24)\n24 - 8 = 16 (left: 11 16)\n",
                    "3 * 8 = 24 (left: 8 11 24)\n24 / 8 = 3 (left: 3 11)\n",
                    "3 * 8 = 24 (left: 8 11 24)\n11 - 8 = 3 (left: 3 24)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    100,
                    100,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 8 8 11",
                "ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n"
                ],
                "new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 * 2 = 16 (left: 16 16)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 * 2 = 16 (left: 16 16)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n8 - 6 = 2 (left: 2)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n8 / 6 = 1.33 (left: 1.33)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 8 8 11",
                "ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: 11 + ((8 - 3) + 8) = 24\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: 8 + (11 + (8 - 3)) = 24\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (8 / (11 / 11)) = 24\n",
                    "11 / 11 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * 8 * (11 / 11) = 24\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * 8 * (11 / 11) = 24\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: 8 + 8 + (11 - 3) = 24\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNo valid operations possible with a single number.\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: 11 + ((8 - 3) + 8) = 24\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: 8 + (11 + (8 - 3)) = 24\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (8 / (11 / 11)) = 24\n",
                    "11 / 11 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * 8 * (11 / 11) = 24\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * 8 * (11 / 11) = 24\n",
                    "11 - 3 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: 8 + 8 + (11 - 3) = 24\n",
                    "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n"
                ]
            }
        ],
        "idx": 867,
        "ys": [
            "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: 11 + ((8 - 3) + 8) = 24\n",
            "8 - 3 = 5 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: 8 + (11 + (8 - 3)) = 24\n",
            "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (8 / (11 / 11)) = 24\n",
            "11 / 11 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * 8 * (11 / 11) = 24\n",
            "11 / 11 = 1 (left: 1 3 8)\n8 * 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * 8 * (11 / 11) = 24\n",
            "11 - 3 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: 8 + 8 + (11 - 3) = 24\n",
            "11 / 11 = 1 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 117741,
            "prompt_tokens": 468170,
            "cost": 21.10956
        },
        "time_spent": 34.585405111312866
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 4 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 4 5 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n",
                    "10 - 4 = 6 (left: 2 3 6)\n",
                    "10 / 2 = 5 (left: 3 4 5)\n",
                    "4 * 3 = 12 (left: 2 10 12)\n"
                ],
                "values": [
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n",
                    "4 * 3 = 12 (left: 2 10 12)\n",
                    "2 + 3 = 5 (left: 4 5 10)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n",
                    "10 - 4 = 6 (left: 2 3 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 4 10",
                "ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n",
                    "4 * 3 = 12 (left: 2 10 12)\n",
                    "2 + 3 = 5 (left: 4 5 10)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n",
                    "10 - 4 = 6 (left: 2 3 6)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n10 / 2 = 5 (left: 5 7)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 10 14)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n4 + 12 = 16 (left: 3 16)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 / 3 = 4 (left: 4 4)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)\n",
                    "4 * 3 = 12 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n",
                    "4 * 3 = 12 (left: 2 10 12)\n12 - 10 = 2 (left: 2 2)\n",
                    "4 * 3 = 12 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n",
                    "4 * 3 = 12 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n",
                    "4 * 3 = 12 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n",
                    "4 * 3 = 12 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)\n",
                    "2 + 3 = 5 (left: 4 5 10)\n4 + 5 = 9 (left: 9 10)\n",
                    "2 + 3 = 5 (left: 4 5 10)\n5 + 10 = 15 (left: 4 15)\n",
                    "2 + 3 = 5 (left: 4 5 10)\n10 - 5 = 5 (left: 4 5)\n",
                    "2 + 3 = 5 (left: 4 5 10)\n10 - 4 = 6 (left: 5 6)\n",
                    "2 + 3 = 5 (left: 4 5 10)\n5 - 4 = 1 (left: 1 10)\n",
                    "2 + 3 = 5 (left: 4 5 10)\n10 / 5 = 2 (left: 2 4)\n",
                    "2 + 3 = 5 (left: 4 5 10)\n10 / 2 = 5 (left: 4 5)\n",
                    "2 + 3 = 5 (left: 4 5 10)\n4 * 5 = 20 (left: 10 20)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 - 6 = 4 (left: 4 4)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 - 4 = 6 (left: 6 6)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 + 4 = 10 (left: 10 10)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 / 2 = 5 (left: 4 5)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 * 4 = 24 (left: 10 24)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n3 + 10 = 13 (left: 2 13)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 - 3 = 7 (left: 2 7)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 * 3 = 6 (left: 6 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 / 2 = 5 (left: 3 5)\n",
                    "10 - 4 = 6 (left: 2 3 6)\n2 + 3 = 5 (left: 5 6)\n",
                    "10 - 4 = 6 (left: 2 3 6)\n3 + 6 = 9 (left: 2 9)\n",
                    "10 - 4 = 6 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)\n",
                    "10 - 4 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n",
                    "10 - 4 = 6 (left: 2 3 6)\n2 * 3 = 6 (left: 6 6)\n",
                    "10 - 4 = 6 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n",
                    "10 - 4 = 6 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "10 - 4 = 6 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    100,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 10 14)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "4 * 3 = 12 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 4 10",
                "ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 10 14)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "4 * 3 = 12 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "4 * 3 = 12 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "4 * 3 = 12 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "4 * 3 = 12 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "4 * 3 = 12 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n8 - 7 = 1 (left: 1)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n",
                    "3 + 4 = 7 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n8 / 7 \u2248 1.14 (left: 1.14)\n"
                ],
                "values": [
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "4 * 3 = 12 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 4 10",
                "ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "4 * 3 = 12 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (2 * (3 + 4)) = 24\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((10 + 2) - 4) = 24\n",
                    "10 + 2 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (10 + 2) + (3 * 4) = 24\n",
                    "4 * 3 = 12 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 * 3) + (2 + 10) = 24\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (10 - (4 - 2)) = 24\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (2 * (3 + 4)) = 24\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((10 + 2) - 4) = 24\n",
                    "10 + 2 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (10 + 2) + (3 * 4) = 24\n",
                    "4 * 3 = 12 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 * 3) + (2 + 10) = 24\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (10 - (4 - 2)) = 24\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 868,
        "ys": [
            "3 + 4 = 7 (left: 2 7 10)\n2 * 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (2 * (3 + 4)) = 24\n",
            "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((10 + 2) - 4) = 24\n",
            "10 + 2 = 12 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (10 + 2) + (3 * 4) = 24\n",
            "4 * 3 = 12 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (4 * 3) + (2 + 10) = 24\n",
            "4 - 2 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (10 - (4 - 2)) = 24\n",
            "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "10 + 2 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 119398,
            "prompt_tokens": 475941,
            "cost": 21.44211
        },
        "time_spent": 35.78561186790466
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 6 8 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 8 8 12)\n",
                    "8 + 8 = 16 (left: 6 6 16)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n",
                    "8 / 8 = 1 (left: 1 6 6)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n",
                    "8 + 8 = 16 (left: 6 6 16)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n",
                    "8 / 8 = 1 (left: 1 6 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 6 8 8",
                "ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n",
                    "8 + 8 = 16 (left: 6 6 16)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n",
                    "8 / 8 = 1 (left: 1 6 6)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 6 = 2 (left: 2 2)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 12 64)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "8 + 8 = 16 (left: 6 6 16)\n6 + 6 = 12 (left: 12 16)\n",
                    "8 + 8 = 16 (left: 6 6 16)\n16 - 6 = 10 (left: 6 10)\n",
                    "8 + 8 = 16 (left: 6 6 16)\n16 / 6 = 2 (left: 2 6)\n",
                    "8 + 8 = 16 (left: 6 6 16)\n6 * 6 = 36 (left: 16 36)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n6 + 8 = 14 (left: 14 48)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n48 / 6 = 8 (left: 8 8)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n48 - 8 = 40 (left: 6 40)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n48 / 8 = 6 (left: 6 6)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n8 - 6 = 2 (left: 2 48)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n48 - 6 = 42 (left: 8 42)\n",
                    "8 / 8 = 1 (left: 1 6 6)\n1 + 6 = 7 (left: 6 7)\n",
                    "8 / 8 = 1 (left: 1 6 6)\n6 + 6 = 12 (left: 1 12)\n",
                    "8 / 8 = 1 (left: 1 6 6)\n6 - 1 = 5 (left: 5 6)\n",
                    "8 / 8 = 1 (left: 1 6 6)\n6 * 1 = 6 (left: 6 6)\n",
                    "8 / 8 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    100,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n8 - 6 = 2 (left: 2 48)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 12 16)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 6 8 8",
                "ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n8 - 6 = 2 (left: 2 48)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 12 16)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n8 - 6 = 2 (left: 2 48)\n48 + 2 = 50 (left: 50)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n8 - 6 = 2 (left: 2 48)\n48 - 2 = 46 (left: 46)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n8 - 6 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n8 - 6 = 2 (left: 2 48)\n2 * 48 = 96 (left: 96)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 * 8 = 64 (left: 64)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 - 8 = 0 (left: 0)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 * 6 = 12 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 12 16)\n12 + 16 = 28 (left: 28)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 12 16)\n16 - 12 = 4 (left: 4)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n8 - 6 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 6 8 8",
                "ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n8 - 6 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 / (8 - 6)) * 8 = 24\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 / (8 - 6)) * 6 = 24\n",
                    "8 * 6 = 48 (left: 6 8 48)\n8 - 6 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: (8 * 6) / (8 - 6) = 24\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 8 = 80 (left: 8 14 80)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n16 - 8 = 8 (left: 8 16)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n16 * 1 = 16 (left: 16 16)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n12 * 2 = 24 (left: 8 24)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 / (8 - 6)) * 8 = 24\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 / (8 - 6)) * 6 = 24\n",
                    "8 * 6 = 48 (left: 6 8 48)\n8 - 6 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: (8 * 6) / (8 - 6) = 24\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n"
                ]
            }
        ],
        "idx": 869,
        "ys": [
            "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 / (8 - 6)) * 8 = 24\n",
            "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 / (8 - 6)) * 6 = 24\n",
            "8 * 6 = 48 (left: 6 8 48)\n8 - 6 = 2 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: (8 * 6) / (8 - 6) = 24\n",
            "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
            "8 - 6 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
            "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 120784,
            "prompt_tokens": 482376,
            "cost": 21.71832
        },
        "time_spent": 30.278443098068237
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 9 9 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 9 = 13 (left: 9 10 13)\n",
                    "9 + 9 = 18 (left: 4 10 18)\n",
                    "10 + 4 = 14 (left: 9 9 14)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n",
                    "10 - 9 = 1 (left: 1 4 9)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n",
                    "9 / 9 = 1 (left: 1 4 10)\n",
                    "4 * 9 = 36 (left: 9 10 36)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 + 9 = 18 (left: 4 10 18)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n",
                    "4 + 9 = 13 (left: 9 10 13)\n",
                    "10 + 4 = 14 (left: 9 9 14)\n",
                    "10 - 9 = 1 (left: 1 4 9)\n",
                    "9 / 9 = 1 (left: 1 4 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 9 9 10",
                "ys": [
                    "9 + 9 = 18 (left: 4 10 18)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n",
                    "4 + 9 = 13 (left: 9 10 13)\n",
                    "10 + 4 = 14 (left: 9 9 14)\n",
                    "10 - 9 = 1 (left: 1 4 9)\n",
                    "9 / 9 = 1 (left: 1 4 10)\n"
                ],
                "new_ys": [
                    "9 + 9 = 18 (left: 4 10 18)\n4 + 10 = 14 (left: 14 18)\n",
                    "9 + 9 = 18 (left: 4 10 18)\n18 - 10 = 8 (left: 4 8)\n",
                    "9 + 9 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n",
                    "9 + 9 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n",
                    "9 + 9 = 18 (left: 4 10 18)\n18 / 2 = 9 (left: 4 9 10)\n",
                    "9 + 9 = 18 (left: 4 10 18)\n10 * 4 = 40 (left: 18 40)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 - 9 = 1 (left: 1 5)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 * 6 = 54 (left: 9 54)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 / 3 = 3 (left: 3 6)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n",
                    "10 - 4 = 6 (left: 6 9 9)\nInput: 3 3 7 11\n",
                    "4 + 9 = 13 (left: 9 10 13)\n9 + 10 = 19 (left: 13 19)\n",
                    "4 + 9 = 13 (left: 9 10 13)\n13 - 9 = 4 (left: 4 10)\n",
                    "4 + 9 = 13 (left: 9 10 13)\n13 - 10 = 3 (left: 3 9)\n",
                    "4 + 9 = 13 (left: 9 10 13)\n10 - 9 = 1 (left: 1 13)\n",
                    "4 + 9 = 13 (left: 9 10 13)\n9 * 10 = 90 (left: 13 90)\n",
                    "4 + 9 = 13 (left: 9 10 13)\n13 + 10 = 23 (left: 9 23)\n",
                    "4 + 9 = 13 (left: 9 10 13)\n13 + 9 = 22 (left: 10 22)\n",
                    "10 + 4 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n",
                    "10 + 4 = 14 (left: 9 9 14)\n14 + 9 = 23 (left: 9 23)\n",
                    "10 + 4 = 14 (left: 9 9 14)\n14 - 9 = 5 (left: 5 9)\n",
                    "10 - 9 = 1 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)\n",
                    "10 - 9 = 1 (left: 1 4 9)\n4 + 9 = 13 (left: 1 13)\n",
                    "10 - 9 = 1 (left: 1 4 9)\n9 - 4 = 5 (left: 1 5)\n",
                    "10 - 9 = 1 (left: 1 4 9)\n4 - 1 = 3 (left: 3 9)\n",
                    "10 - 9 = 1 (left: 1 4 9)\n9 - 1 = 8 (left: 4 8)\n",
                    "10 - 9 = 1 (left: 1 4 9)\n4 * 1 = 4 (left: 4 9)\n",
                    "10 - 9 = 1 (left: 1 4 9)\n9 / 1 = 9 (left: 4 9)\n",
                    "9 / 9 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n",
                    "9 / 9 = 1 (left: 1 4 10)\n4 + 10 = 14 (left: 1 14)\n",
                    "9 / 9 = 1 (left: 1 4 10)\n10 - 4 = 6 (left: 1 6)\n",
                    "9 / 9 = 1 (left: 1 4 10)\n10 - 1 = 9 (left: 4 9)\n",
                    "9 / 9 = 1 (left: 1 4 10)\n4 - 1 = 3 (left: 3 10)\n",
                    "9 / 9 = 1 (left: 1 4 10)\n10 / 2 = 5 (left: 1 5)\n",
                    "9 / 9 = 1 (left: 1 4 10)\n4 * 1 = 4 (left: 4 10)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    100,
                    0,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    100,
                    100,
                    100,
                    50,
                    0,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "9 + 9 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n",
                    "9 + 9 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 9 9 10",
                "ys": [
                    "9 + 9 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n",
                    "9 + 9 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n"
                ],
                "new_ys": [
                    "9 + 9 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 + 9 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "9 + 9 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "9 + 9 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n18 - 6 = 12 (left: 12)\n",
                    "9 + 9 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n18 / 6 = 3 (left: 3)\n",
                    "9 + 9 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n6 * 3 = 18 (left: 18)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n5 * 19 = 95 (left: 95)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 / 5 = 3.8 (left: 3.8)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    50,
                    0,
                    50,
                    100,
                    0,
                    100,
                    0,
                    100,
                    50,
                    0,
                    0,
                    100,
                    0,
                    100,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "9 + 9 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 + 9 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 9 9 10",
                "ys": [
                    "9 + 9 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 + 9 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "9 + 9 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (9 + 9 - 4) = 24\n",
                    "9 + 9 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (9 + 9) + (10 - 4) = 24\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (9 - 4 + 9) + 10 = 24\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (10 + (9 - 4)) = 24\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (10 + 9) + (9 - 4) = 24\n",
                    "10 - 4 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (9 + (10 - 4)) = 24\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (10 - 4) + (9 + 9) = 24\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    1000
                ],
                "select_new_ys": [
                    "9 + 9 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (9 + 9 - 4) = 24\n",
                    "9 + 9 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (9 + 9) + (10 - 4) = 24\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (9 - 4 + 9) + 10 = 24\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (10 + (9 - 4)) = 24\n",
                    "9 - 4 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (10 + 9) + (9 - 4) = 24\n",
                    "10 - 4 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (9 + (10 - 4)) = 24\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (10 - 4) + (9 + 9) = 24\n"
                ]
            }
        ],
        "idx": 870,
        "ys": [
            "9 + 9 = 18 (left: 4 10 18)\n18 - 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (9 + 9 - 4) = 24\n",
            "9 + 9 = 18 (left: 4 10 18)\n10 - 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (9 + 9) + (10 - 4) = 24\n",
            "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (9 - 4 + 9) + 10 = 24\n",
            "9 - 4 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (10 + (9 - 4)) = 24\n",
            "9 - 4 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (10 + 9) + (9 - 4) = 24\n",
            "10 - 4 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (9 + (10 - 4)) = 24\n",
            "10 - 4 = 6 (left: 6 9 9)\n9 + 9 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (10 - 4) + (9 + 9) = 24\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 122313,
            "prompt_tokens": 490957,
            "cost": 22.06749
        },
        "time_spent": 32.645615100860596
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 7 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 7 9)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n",
                    "7 + 3 = 10 (left: 3 9 10)\n",
                    "9 + 3 = 12 (left: 3 7 12)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n",
                    "9 - 7 = 2 (left: 2 3 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 / 3 = 3 (left: 3 3 7)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n",
                    "7 + 3 = 10 (left: 3 9 10)\n",
                    "9 + 3 = 12 (left: 3 7 12)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 7 9",
                "ys": [
                    "9 / 3 = 3 (left: 3 3 7)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n",
                    "7 + 3 = 10 (left: 3 9 10)\n",
                    "9 + 3 = 12 (left: 3 7 12)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n"
                ],
                "new_ys": [
                    "9 / 3 = 3 (left: 3 3 7)\n3 + 3 = 6 (left: 6 7)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 * 3 = 9 (left: 7 9)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n7 + 3 = 10 (left: 3 10)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n7 - 3 = 4 (left: 3 4)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 + 9 = 16 (left: 6 16)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 7 = 2 (left: 2 6)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 * 7 = 42 (left: 9 42)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n7 + 9 = 16 (left: 9 16)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n9 - 7 = 2 (left: 2 9)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n9 * 7 = 63 (left: 9 63)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n9 / 7 = 1 (left: 1 9)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n9 + 9 = 18 (left: 7 18)\n",
                    "7 + 3 = 10 (left: 3 9 10)\n3 + 9 = 12 (left: 10 12)\n",
                    "7 + 3 = 10 (left: 3 9 10)\n10 + 3 = 13 (left: 9 13)\n",
                    "7 + 3 = 10 (left: 3 9 10)\n10 - 3 = 7 (left: 7 9)\n",
                    "7 + 3 = 10 (left: 3 9 10)\n9 + 3 = 12 (left: 10 12)\n",
                    "7 + 3 = 10 (left: 3 9 10)\n10 - 9 = 1 (left: 1 3)\n",
                    "7 + 3 = 10 (left: 3 9 10)\n9 - 3 = 6 (left: 6 10)\n",
                    "7 + 3 = 10 (left: 3 9 10)\n10 / 2 = 5 (left: 3 5 9)\n",
                    "7 + 3 = 10 (left: 3 9 10)\n9 * 3 = 27 (left: 10 27)\n",
                    "9 + 3 = 12 (left: 3 7 12)\n3 + 7 = 10 (left: 10 12)\n",
                    "9 + 3 = 12 (left: 3 7 12)\n12 + 3 = 15 (left: 7 15)\n",
                    "9 + 3 = 12 (left: 3 7 12)\n12 - 7 = 5 (left: 3 5)\n",
                    "9 + 3 = 12 (left: 3 7 12)\n12 - 3 = 9 (left: 7 9)\n",
                    "9 + 3 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n",
                    "9 + 3 = 12 (left: 3 7 12)\n12 / 3 = 4 (left: 4 7)\n",
                    "9 + 3 = 12 (left: 3 7 12)\n7 * 3 = 21 (left: 12 21)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 7 9)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n3 + 7 = 10 (left: 6 10)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n6 + 7 = 13 (left: 3 13)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n6 - 3 = 3 (left: 3 7)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 6 = 1 (left: 1 3)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n3 * 6 = 18 (left: 7 18)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n6 * 7 = 42 (left: 3 42)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n3 * 7 = 21 (left: 6 21)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n3 + 4 = 7 (left: 7 9)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n3 * 4 = 12 (left: 9 12)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 + 3 = 12 (left: 4 12)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 / 3 = 3 (left: 3 4)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n4 + 3 = 7 (left: 7 9)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n4 * 3 = 12 (left: 9 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 + 3 = 6 (left: 6 7)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 * 3 = 9 (left: 7 9)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n7 + 3 = 10 (left: 3 10)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n7 - 3 = 4 (left: 3 4)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 7 9",
                "ys": [
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 + 3 = 6 (left: 6 7)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 * 3 = 9 (left: 7 9)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n7 + 3 = 10 (left: 3 10)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n7 - 3 = 4 (left: 3 4)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n"
                ],
                "new_ys": [
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 + 3 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 + 3 = 6 (left: 6 7)\n7 - 6 = 1 (left: 1)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 + 3 = 6 (left: 6 7)\n6 * 7 = 42 (left: 42)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 * 3 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 * 3 = 9 (left: 7 9)\n9 - 7 = 2 (left: 2)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 * 3 = 9 (left: 7 9)\n7 * 9 = 63 (left: 63)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n7 + 3 = 10 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n7 + 3 = 10 (left: 3 10)\n10 - 3 = 7 (left: 7)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n7 + 3 = 10 (left: 3 10)\n10 / 3 \u2248 3.33 (left: 3.33)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n7 + 3 = 10 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n7 - 3 = 4 (left: 3 4)\n3 + 4 = 7 (left: 7)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n7 - 3 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n7 - 3 = 4 (left: 3 4)\n4 - 3 = 1 (left: 1)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 + 3 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 * 3 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n7 + 3 = 10 (left: 3 10)\n3 + 10 = 13 (left: 13)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 7 9",
                "ys": [
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 + 3 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 * 3 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n7 + 3 = 10 (left: 3 10)\n3 + 10 = 13 (left: 13)\n"
                ],
                "new_ys": [
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 3) * (7 - 3) = 24\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 3) * (7 - 3) = 24\n",
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 8 = 80 (left: 8 14 80)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 + 3 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\nInput: 13\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 + 3 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\nPossible next steps:\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 + 3 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\nNone\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 * 3 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 * 3 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n16 - 8 = 8 (left: 8 16)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 * 3 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n3 * 3 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n16 * 1 = 16 (left: 16 16)\n",
                    "9 / 3 = 3 (left: 3 3 7)\n7 + 3 = 10 (left: 3 10)\n3 + 10 = 13 (left: 13)\nInput: 13\n",
                    "9 / 3 = 3 (left: 3 3 7)\n7 + 3 = 10 (left: 3 10)\n3 + 10 = 13 (left: 13)\nPossible next steps:\n",
                    "9 / 3 = 3 (left: 3 3 7)\n7 + 3 = 10 (left: 3 10)\n3 + 10 = 13 (left: 13)\nNone\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 3) * (7 - 3) = 24\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 3) * (7 - 3) = 24\n",
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 8 = 80 (left: 8 14 80)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n"
                ]
            }
        ],
        "idx": 871,
        "ys": [
            "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 3) * (7 - 3) = 24\n",
            "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 3) * (7 - 3) = 24\n",
            "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
            "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
            "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
            "9 - 3 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 8 = 80 (left: 8 14 80)\n",
            "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 124074,
            "prompt_tokens": 497513,
            "cost": 22.369829999999997
        },
        "time_spent": 35.03220510482788
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 7 9 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n",
                    "10 - 1 = 9 (left: 7 9 9)\n",
                    "9 + 1 = 10 (left: 7 10 10)\n",
                    "10 - 9 = 1 (left: 1 1 7)\n",
                    "10 - 7 = 3 (left: 1 3 9)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n",
                    "9 - 7 = 2 (left: 1 2 10)\n",
                    "10 / 2 = 5 (left: 1 5 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n",
                    "10 - 1 = 9 (left: 7 9 9)\n",
                    "9 + 1 = 10 (left: 7 10 10)\n",
                    "10 - 7 = 3 (left: 1 3 9)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n",
                    "9 - 7 = 2 (left: 1 2 10)\n",
                    "10 / 2 = 5 (left: 1 5 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 7 9 10",
                "ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n",
                    "10 - 1 = 9 (left: 7 9 9)\n",
                    "9 + 1 = 10 (left: 7 10 10)\n",
                    "10 - 7 = 3 (left: 1 3 9)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n",
                    "9 - 7 = 2 (left: 1 2 10)\n",
                    "10 / 2 = 5 (left: 1 5 9)\n"
                ],
                "new_ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 9 = 1 (left: 1 8)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 + 9 = 19 (left: 8 19)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 * 9 = 72 (left: 10 72)\n",
                    "10 - 1 = 9 (left: 7 9 9)\n7 + 9 = 16 (left: 9 16)\n",
                    "10 - 1 = 9 (left: 7 9 9)\n9 + 9 = 18 (left: 7 18)\n",
                    "10 - 1 = 9 (left: 7 9 9)\n9 - 7 = 2 (left: 2 9)\n",
                    "10 - 1 = 9 (left: 7 9 9)\n9 * 7 = 63 (left: 9 63)\n",
                    "10 - 1 = 9 (left: 7 9 9)\n9 / 9 = 1 (left: 1 7)\n",
                    "9 + 1 = 10 (left: 7 10 10)\n7 + 10 = 17 (left: 10 17)\n",
                    "9 + 1 = 10 (left: 7 10 10)\n10 + 10 = 20 (left: 7 20)\n",
                    "9 + 1 = 10 (left: 7 10 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "9 + 1 = 10 (left: 7 10 10)\n10 * 7 = 70 (left: 10 70)\n",
                    "9 + 1 = 10 (left: 7 10 10)\n10 / 7 \u2248 1.43 (left: 1.43 10)\n",
                    "10 - 7 = 3 (left: 1 3 9)\n1 + 3 = 4 (left: 4 9)\n",
                    "10 - 7 = 3 (left: 1 3 9)\n3 + 9 = 12 (left: 1 12)\n",
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 3 = 6 (left: 1 6)\n",
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n",
                    "10 - 7 = 3 (left: 1 3 9)\n3 - 1 = 2 (left: 2 9)\n",
                    "10 - 7 = 3 (left: 1 3 9)\n9 / 3 = 3 (left: 1 3)\n",
                    "10 - 7 = 3 (left: 1 3 9)\n3 * 1 = 3 (left: 3 9)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n10 - 6 = 4 (left: 4 9)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n10 - 9 = 1 (left: 1 6)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n9 - 6 = 3 (left: 3 10)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 * 9 = 54 (left: 10 54)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n10 + 9 = 19 (left: 6 19)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n10 + 6 = 16 (left: 9 16)\n",
                    "9 - 7 = 2 (left: 1 2 10)\n1 + 2 = 3 (left: 3 10)\n",
                    "9 - 7 = 2 (left: 1 2 10)\n2 + 10 = 12 (left: 1 12)\n",
                    "9 - 7 = 2 (left: 1 2 10)\n10 - 2 = 8 (left: 1 8)\n",
                    "9 - 7 = 2 (left: 1 2 10)\n10 - 1 = 9 (left: 2 9)\n",
                    "9 - 7 = 2 (left: 1 2 10)\n10 / 2 = 5 (left: 1 5)\n",
                    "9 - 7 = 2 (left: 1 2 10)\n2 * 1 = 2 (left: 2 10)\n",
                    "10 / 2 = 5 (left: 1 5 9)\n1 + 5 = 6 (left: 6 9)\n",
                    "10 / 2 = 5 (left: 1 5 9)\n5 + 9 = 14 (left: 1 14)\n",
                    "10 / 2 = 5 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n",
                    "10 / 2 = 5 (left: 1 5 9)\n9 - 1 = 8 (left: 5 8)\n",
                    "10 / 2 = 5 (left: 1 5 9)\n5 - 1 = 4 (left: 4 9)\n",
                    "10 / 2 = 5 (left: 1 5 9)\n5 * 1 = 5 (left: 5 9)\n",
                    "10 / 2 = 5 (left: 1 5 9)\n9 / 1 = 9 (left: 5 9)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 + 9 = 19 (left: 8 19)\n",
                    "10 - 1 = 9 (left: 7 9 9)\n7 + 9 = 16 (left: 9 16)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 7 9 10",
                "ys": [
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 + 9 = 19 (left: 8 19)\n",
                    "10 - 1 = 9 (left: 7 9 9)\n7 + 9 = 16 (left: 9 16)\n"
                ],
                "new_ys": [
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\nInput: 3 8\n",
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\nPossible next steps:\n",
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n9 - 2 = 7 (left: 7)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n9 / 2 = 4.5 (left: 4.5)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\nInput: 1 10\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\nPossible next steps:\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n9 + 18 = 27 (left: 27)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n18 - 9 = 9 (left: 9)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n18 / 9 = 2 (left: 2)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 + 8 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 + 9 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 + 9 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\n",
                    "10 - 1 = 9 (left: 7 9 9)\n7 + 9 = 16 (left: 9 16)\n9 + 16 = 25 (left: 25)\n",
                    "10 - 1 = 9 (left: 7 9 9)\n7 + 9 = 16 (left: 9 16)\n16 - 9 = 7 (left: 7)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 7 9 10",
                "ys": [
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 - 1) * (10 - 7) = 24\n",
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n(There are no possible next steps with a single number.)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nInput: 27\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nPossible next steps:\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nNone\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nInput: 11\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nPossible next steps:\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nNone\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\nInput: 18\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\nPossible next steps:\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n10 - 8 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nInput: 11\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nPossible next steps:\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nNone\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 - 1) * (10 - 7) = 24\n",
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n(There are no possible next steps with a single number.)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nInput: 27\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nPossible next steps:\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nNone\n"
                ]
            }
        ],
        "idx": 872,
        "ys": [
            "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 - 1) * (10 - 7) = 24\n",
            "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
            "10 - 7 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n(There are no possible next steps with a single number.)\n",
            "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nInput: 27\n",
            "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nPossible next steps:\n",
            "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\nNone\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 125778,
            "prompt_tokens": 503664,
            "cost": 22.656599999999997
        },
        "time_spent": 36.066988945007324
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 9 13)\n",
                    "3 + 2 = 5 (left: 5 9 13)\n",
                    "9 + 2 = 11 (left: 3 11 13)\n",
                    "13 + 2 = 15 (left: 3 9 15)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n",
                    "9 / 3 = 3 (left: 2 3 13)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 2 3 4)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n",
                    "2 + 3 = 5 (left: 5 9 13)\n",
                    "3 + 2 = 5 (left: 5 9 13)\n",
                    "9 + 2 = 11 (left: 3 11 13)\n",
                    "13 + 2 = 15 (left: 3 9 15)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 2 3 4)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n",
                    "2 + 3 = 5 (left: 5 9 13)\n",
                    "3 + 2 = 5 (left: 5 9 13)\n",
                    "9 + 2 = 11 (left: 3 11 13)\n",
                    "13 + 2 = 15 (left: 3 9 15)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n4 - 3 = 1 (left: 1 2)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n4 / 2 = 2 (left: 2 3)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n11 + 3 = 14 (left: 9 14)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n11 - 9 = 2 (left: 2 3)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n11 - 3 = 8 (left: 8 9)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n",
                    "2 + 3 = 5 (left: 5 9 13)\n5 + 9 = 14 (left: 13 14)\n",
                    "2 + 3 = 5 (left: 5 9 13)\n13 + 5 = 18 (left: 9 18)\n",
                    "2 + 3 = 5 (left: 5 9 13)\n13 - 5 = 8 (left: 8 9)\n",
                    "2 + 3 = 5 (left: 5 9 13)\n13 - 9 = 4 (left: 4 5)\n",
                    "2 + 3 = 5 (left: 5 9 13)\n9 - 5 = 4 (left: 4 13)\n",
                    "3 + 2 = 5 (left: 5 9 13)\n5 + 9 = 14 (left: 13 14)\n",
                    "3 + 2 = 5 (left: 5 9 13)\n13 + 5 = 18 (left: 9 18)\n",
                    "3 + 2 = 5 (left: 5 9 13)\n13 - 9 = 4 (left: 4 5)\n",
                    "3 + 2 = 5 (left: 5 9 13)\n13 - 5 = 8 (left: 8 9)\n",
                    "3 + 2 = 5 (left: 5 9 13)\n9 - 5 = 4 (left: 4 13)\n",
                    "9 + 2 = 11 (left: 3 11 13)\n3 + 11 = 14 (left: 13 14)\n",
                    "9 + 2 = 11 (left: 3 11 13)\n13 + 3 = 16 (left: 11 16)\n",
                    "9 + 2 = 11 (left: 3 11 13)\n13 - 11 = 2 (left: 2 3)\n",
                    "9 + 2 = 11 (left: 3 11 13)\n13 - 3 = 10 (left: 10 11)\n",
                    "9 + 2 = 11 (left: 3 11 13)\n11 - 3 = 8 (left: 8 13)\n",
                    "13 + 2 = 15 (left: 3 9 15)\n3 + 9 = 12 (left: 12 15)\n",
                    "13 + 2 = 15 (left: 3 9 15)\n15 + 3 = 18 (left: 9 18)\n",
                    "13 + 2 = 15 (left: 3 9 15)\n15 - 9 = 6 (left: 3 6)\n",
                    "13 + 2 = 15 (left: 3 9 15)\n15 / 3 = 5 (left: 5 9)\n",
                    "13 + 2 = 15 (left: 3 9 15)\n9 - 3 = 6 (left: 6 15)\n",
                    "13 + 2 = 15 (left: 3 9 15)\n9 * 3 = 27 (left: 15 27)\n",
                    "13 + 2 = 15 (left: 3 9 15)\n15 - 3 = 12 (left: 9 12)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n6 + 9 = 15 (left: 13 15)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 + 6 = 19 (left: 9 19)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 - 6 = 7 (left: 7 9)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n9 - 6 = 3 (left: 3 13)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n11 + 3 = 14 (left: 9 14)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n11 + 3 = 14 (left: 9 14)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 + 5 = 9 (left: 9)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n5 - 4 = 1 (left: 1)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n2 + 7 = 9 (left: 9)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n7 - 2 = 5 (left: 5)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n2 * 7 = 14 (left: 14)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n12 - 11 = 1 (left: 1)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n11 + 3 = 14 (left: 9 14)\n9 + 14 = 23 (left: 23)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n11 + 3 = 14 (left: 9 14)\n14 - 9 = 5 (left: 5)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n27 + 11 = 38 (left: 38)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n27 - 11 = 16 (left: 16)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n11 * 27 = 297 (left: 297)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n2 * 7 = 14 (left: 14)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n2 * 7 = 14 (left: 14)\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 9) * (2 * 3) = 24\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 * 2) * (13 - 9) = 24\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\nInput: 20\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\nPossible next steps:\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\nNone (Target reached)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n2 * 7 = 14 (left: 14)\nInput: 14\n",
                    "13 - 9 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n2 * 7 = 14 (left: 14)\nPossible next steps:\n",
                    "13 - 9 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)\n2 * 7 = 14 (left: 14)\nNo valid operations possible with a single number.\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nInput: 23\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nPossible next steps:\n",
                    "13 - 2 = 11 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nNone (Target reached)\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 9) * (2 * 3) = 24\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 * 2) * (13 - 9) = 24\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n"
                ]
            }
        ],
        "idx": 873,
        "ys": [
            "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 9) * (2 * 3) = 24\n",
            "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 * 2) * (13 - 9) = 24\n",
            "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
            "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
            "13 - 9 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
            "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
            "3 * 2 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 127315,
            "prompt_tokens": 510220,
            "cost": 22.9455
        },
        "time_spent": 34.33857607841492
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 3 5",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n",
                    "5 - 3 = 2 (left: 2 3 3)\n",
                    "3 - 3 = 0 (left: 0 3 5)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 3 5 9)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n",
                    "5 - 3 = 2 (left: 2 3 3)\n",
                    "3 - 3 = 0 (left: 0 3 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 3 5",
                "ys": [
                    "3 * 3 = 9 (left: 3 5 9)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n",
                    "5 - 3 = 2 (left: 2 3 3)\n",
                    "3 - 3 = 0 (left: 0 3 5)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 / 3 = 3 (left: 3 5)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 6 = 9 (left: 5 9)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n6 - 3 = 3 (left: 3 5)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n6 - 5 = 1 (left: 1 3)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 6 = 18 (left: 5 18)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 + 3 = 11 (left: 3 11)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 / 3 \u2248 2.67 (left: 2.67 3)\n",
                    "5 - 3 = 2 (left: 2 3 3)\n2 + 3 = 5 (left: 3 5)\n",
                    "5 - 3 = 2 (left: 2 3 3)\n3 + 3 = 6 (left: 2 6)\n",
                    "5 - 3 = 2 (left: 2 3 3)\n3 - 2 = 1 (left: 1 3)\n",
                    "5 - 3 = 2 (left: 2 3 3)\n3 * 2 = 6 (left: 3 6)\n",
                    "5 - 3 = 2 (left: 2 3 3)\n3 / 3 = 1 (left: 1 2)\n",
                    "3 - 3 = 0 (left: 0 3 5)\n3 + 5 = 8 (left: 0 8)\n",
                    "3 - 3 = 0 (left: 0 3 5)\n5 - 3 = 2 (left: 0 2)\n",
                    "3 - 3 = 0 (left: 0 3 5)\n3 * 5 = 15 (left: 0 15)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 / 3 = 3 (left: 3 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 3 5",
                "ys": [
                    "3 * 3 = 9 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 / 3 = 3 (left: 3 5)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n9 - 8 = 1 (left: 1)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n9 / 8 = 1.125 (left: 1.125)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n3 + 14 = 17 (left: 17)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n14 / 3 = 4.67 (left: 4.67)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n3 * 14 = 42 (left: 42)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 + 4 = 7 (left: 7)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n4 - 3 = 1 (left: 1)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n6 - 5 = 1 (left: 1)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 / 3 = 3 (left: 3 5)\n3 + 5 = 8 (left: 8)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 / 3 = 3 (left: 3 5)\n5 - 3 = 2 (left: 2)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 / 3 = 3 (left: 3 5)\n3 * 5 = 15 (left: 15)\n"
                ],
                "values": [
                    0,
                    100,
                    100,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n3 + 14 = 17 (left: 17)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 3 5",
                "ys": [
                    "3 * 3 = 9 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n3 + 14 = 17 (left: 17)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (3 * 3) + (3 * 5) = 24\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (3 * 3) + (5 * 3) = 24\n",
                    "3 * 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
                    "3 * 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "3 * 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNone (No valid operations can be performed with a single number)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n3 + 14 = 17 (left: 17)\nInput: 17\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n3 + 14 = 17 (left: 17)\nPossible next steps:\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n3 + 14 = 17 (left: 17)\nNone\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\nInput: 11\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\nPossible next steps:\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\nNone\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 8 24)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nInput: 11\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nPossible next steps:\n",
                    "3 * 3 = 9 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n(No possible next steps)\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (3 * 3) + (3 * 5) = 24\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (3 * 3) + (5 * 3) = 24\n",
                    "3 * 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
                    "3 * 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "3 * 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNone (No valid operations can be performed with a single number)\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n3 + 14 = 17 (left: 17)\nInput: 17\n",
                    "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n3 + 14 = 17 (left: 17)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 874,
        "ys": [
            "3 * 3 = 9 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (3 * 3) + (3 * 5) = 24\n",
            "3 * 3 = 9 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (3 * 3) + (5 * 3) = 24\n",
            "3 * 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
            "3 * 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
            "3 * 3 = 9 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNone (No valid operations can be performed with a single number)\n",
            "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n3 + 14 = 17 (left: 17)\nInput: 17\n",
            "3 * 3 = 9 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n3 + 14 = 17 (left: 17)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 128602,
            "prompt_tokens": 516250,
            "cost": 23.20362
        },
        "time_spent": 31.621636152267456
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n",
                    "9 + 5 = 14 (left: 6 12 14)\n",
                    "12 + 5 = 17 (left: 6 9 17)\n",
                    "6 * 5 = 30 (left: 9 12 30)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n",
                    "12 - 6 = 6 (left: 5 6 9)\n",
                    "12 / 6 = 2 (left: 2 5 9)\n",
                    "12 - 5 = 7 (left: 6 7 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n",
                    "9 + 5 = 14 (left: 6 12 14)\n",
                    "12 + 5 = 17 (left: 6 9 17)\n",
                    "6 * 5 = 30 (left: 9 12 30)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n",
                    "12 - 6 = 6 (left: 5 6 9)\n",
                    "12 / 6 = 2 (left: 2 5 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 9 12",
                "ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n",
                    "9 + 5 = 14 (left: 6 12 14)\n",
                    "12 + 5 = 17 (left: 6 9 17)\n",
                    "6 * 5 = 30 (left: 9 12 30)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n",
                    "12 - 6 = 6 (left: 5 6 9)\n",
                    "12 / 6 = 2 (left: 2 5 9)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 11)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 - 11 = 1 (left: 1 9)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 + 11 = 23 (left: 9 23)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 + 9 = 21 (left: 11 21)\n",
                    "9 + 5 = 14 (left: 6 12 14)\n6 + 12 = 18 (left: 14 18)\n",
                    "9 + 5 = 14 (left: 6 12 14)\n14 + 12 = 26 (left: 6 26)\n",
                    "9 + 5 = 14 (left: 6 12 14)\n14 - 6 = 8 (left: 8 12)\n",
                    "9 + 5 = 14 (left: 6 12 14)\n12 - 6 = 6 (left: 6 14)\n",
                    "9 + 5 = 14 (left: 6 12 14)\n14 - 12 = 2 (left: 2 6)\n",
                    "9 + 5 = 14 (left: 6 12 14)\n12 / 6 = 2 (left: 2 14)\n",
                    "9 + 5 = 14 (left: 6 12 14)\n14 / 2 = 7 (left: 6 7)\n",
                    "12 + 5 = 17 (left: 6 9 17)\n6 + 9 = 15 (left: 15 17)\n",
                    "12 + 5 = 17 (left: 6 9 17)\n17 - 9 = 8 (left: 6 8)\n",
                    "12 + 5 = 17 (left: 6 9 17)\n17 - 6 = 11 (left: 9 11)\n",
                    "12 + 5 = 17 (left: 6 9 17)\n9 - 6 = 3 (left: 3 17)\n",
                    "12 + 5 = 17 (left: 6 9 17)\n17 + 6 = 23 (left: 9 23)\n",
                    "12 + 5 = 17 (left: 6 9 17)\n17 + 9 = 26 (left: 6 26)\n",
                    "12 + 5 = 17 (left: 6 9 17)\n9 * 6 = 54 (left: 17 54)\n",
                    "6 * 5 = 30 (left: 9 12 30)\n9 + 12 = 21 (left: 21 30)\n",
                    "6 * 5 = 30 (left: 9 12 30)\n30 - 12 = 18 (left: 9 18)\n",
                    "6 * 5 = 30 (left: 9 12 30)\n30 - 9 = 21 (left: 12 21)\n",
                    "6 * 5 = 30 (left: 9 12 30)\n12 * 9 = 108 (left: 30 108)\n",
                    "6 * 5 = 30 (left: 9 12 30)\n30 / 2 = 15 (left: 9 12 15)\n",
                    "6 * 5 = 30 (left: 9 12 30)\n12 + 9 = 21 (left: 21 30)\n",
                    "6 * 5 = 30 (left: 9 12 30)\n30 / 3 = 10 (left: 9 10 12)\n",
                    "6 * 5 = 30 (left: 9 12 30)\n12 - 9 = 3 (left: 3 30)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 / 4 = 3 (left: 3 6)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 4 = 8 (left: 6 8)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 / 6 = 2 (left: 2 4)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 + 4 = 10 (left: 10 12)\n",
                    "12 - 6 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n",
                    "12 - 6 = 6 (left: 5 6 9)\n9 + 6 = 15 (left: 5 15)\n",
                    "12 - 6 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n",
                    "12 - 6 = 6 (left: 5 6 9)\n9 - 6 = 3 (left: 3 5)\n",
                    "12 - 6 = 6 (left: 5 6 9)\n6 - 5 = 1 (left: 1 9)\n",
                    "12 - 6 = 6 (left: 5 6 9)\n5 * 6 = 30 (left: 9 30)\n",
                    "12 / 6 = 2 (left: 2 5 9)\n2 + 5 = 7 (left: 7 9)\n",
                    "12 / 6 = 2 (left: 2 5 9)\n5 + 9 = 14 (left: 2 14)\n",
                    "12 / 6 = 2 (left: 2 5 9)\n9 - 5 = 4 (left: 2 4)\n",
                    "12 / 6 = 2 (left: 2 5 9)\n9 - 2 = 7 (left: 5 7)\n",
                    "12 / 6 = 2 (left: 2 5 9)\n5 - 2 = 3 (left: 3 9)\n",
                    "12 / 6 = 2 (left: 2 5 9)\n9 / 3 = 3 (left: 2 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n",
                    "12 - 6 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 11)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 - 11 = 1 (left: 1 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 9 12",
                "ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n",
                    "12 - 6 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 11)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 - 11 = 1 (left: 1 9)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\nInput: 2 12\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 6 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "12 - 6 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "12 - 6 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n20 / 12 = 1.666... (left: 1.666...)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 11)\nInput: 3 11\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 11)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 11)\n11 - 3 = 8 (left: 8)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 11)\n11 / 3 = 3.67 (left: 3.67)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 - 11 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 - 11 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 - 11 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n12 - 11 = 1 (left: 1 9)\n9 / 1 = 9 (left: 9)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 6 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 6 9 12",
                "ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 6 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((5 + 6) - 9) * 12 = 24\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 5) * (12 - 6) = 24\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (6 - (9 - 5)) * 12 = 24\n",
                    "12 - 6 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 5) * (12 - 6) = 24\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNo possible steps with a single number.\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 14 = 24 (left: 8 8)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((5 + 6) - 9) * 12 = 24\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 5) * (12 - 6) = 24\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (6 - (9 - 5)) * 12 = 24\n",
                    "12 - 6 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 5) * (12 - 6) = 24\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNo possible steps with a single number.\n"
                ]
            }
        ],
        "idx": 875,
        "ys": [
            "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((5 + 6) - 9) * 12 = 24\n",
            "9 - 5 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 5) * (12 - 6) = 24\n",
            "9 - 5 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (6 - (9 - 5)) * 12 = 24\n",
            "12 - 6 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 5) * (12 - 6) = 24\n",
            "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
            "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
            "5 + 6 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNo possible steps with a single number.\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 130449,
            "prompt_tokens": 523616,
            "cost": 23.535420000000002
        },
        "time_spent": 39.192421197891235
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 9 10 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 9 = 15 (left: 10 11 15)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n",
                    "11 - 9 = 2 (left: 2 6 10)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n",
                    "10 + 11 = 21 (left: 6 9 21)\n",
                    "9 + 11 = 20 (left: 6 10 20)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n",
                    "10 + 6 = 16 (left: 9 11 16)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    100,
                    100,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 4 9 11)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n",
                    "10 + 11 = 21 (left: 6 9 21)\n",
                    "9 + 11 = 20 (left: 6 10 20)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n",
                    "11 - 9 = 2 (left: 2 6 10)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 9 10 11",
                "ys": [
                    "10 - 6 = 4 (left: 4 9 11)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n",
                    "10 + 11 = 21 (left: 6 9 21)\n",
                    "9 + 11 = 20 (left: 6 10 20)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n",
                    "11 - 9 = 2 (left: 2 6 10)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n"
                ],
                "new_ys": [
                    "10 - 6 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 - 9 = 2 (left: 2 4)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 9)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 11 36)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 - 9 = 1 (left: 1 5)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 / 5 = 2 (left: 2 9)\n",
                    "10 + 11 = 21 (left: 6 9 21)\n6 + 9 = 15 (left: 15 21)\n",
                    "10 + 11 = 21 (left: 6 9 21)\n21 - 9 = 12 (left: 6 12)\n",
                    "10 + 11 = 21 (left: 6 9 21)\n21 - 6 = 15 (left: 9 15)\n",
                    "10 + 11 = 21 (left: 6 9 21)\n21 / 3 = 7 (left: 6 7 9)\n",
                    "10 + 11 = 21 (left: 6 9 21)\n9 - 6 = 3 (left: 3 21)\n",
                    "10 + 11 = 21 (left: 6 9 21)\n9 + 6 = 15 (left: 15 21)\n",
                    "10 + 11 = 21 (left: 6 9 21)\n21 / 7 = 3 (left: 3 6 9)\n",
                    "9 + 11 = 20 (left: 6 10 20)\n6 + 10 = 16 (left: 16 20)\n",
                    "9 + 11 = 20 (left: 6 10 20)\n20 - 10 = 10 (left: 6 10)\n",
                    "9 + 11 = 20 (left: 6 10 20)\n20 - 6 = 14 (left: 10 14)\n",
                    "9 + 11 = 20 (left: 6 10 20)\n10 + 6 = 16 (left: 16 20)\n",
                    "9 + 11 = 20 (left: 6 10 20)\n20 / 2 = 10 (left: 6 10)\n",
                    "9 + 11 = 20 (left: 6 10 20)\n10 * 2 = 20 (left: 6 20)\n",
                    "9 + 11 = 20 (left: 6 10 20)\nInput: 4 5 7 8\n",
                    "6 + 9 = 15 (left: 10 11 15)\n10 + 11 = 21 (left: 15 21)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n15 - 11 = 4 (left: 4 10)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n15 - 10 = 5 (left: 5 11)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n11 - 10 = 1 (left: 1 15)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n15 + 11 = 26 (left: 10 26)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n15 + 10 = 25 (left: 11 25)\n",
                    "11 - 9 = 2 (left: 2 6 10)\n2 + 6 = 8 (left: 8 10)\n",
                    "11 - 9 = 2 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)\n",
                    "11 - 9 = 2 (left: 2 6 10)\n10 - 2 = 8 (left: 6 8)\n",
                    "11 - 9 = 2 (left: 2 6 10)\n6 / 2 = 3 (left: 3 10)\n",
                    "11 - 9 = 2 (left: 2 6 10)\n10 / 2 = 5 (left: 5 6)\n",
                    "11 - 9 = 2 (left: 2 6 10)\n6 - 2 = 4 (left: 4 10)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n10 + 11 = 21 (left: 21 54)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n54 - 11 = 43 (left: 10 43)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n54 - 10 = 44 (left: 11 44)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n54 / 11 = 4 (left: 4 10)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n11 - 10 = 1 (left: 1 54)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n54 + 10 = 64 (left: 11 64)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n54 + 11 = 65 (left: 10 65)\n"
                ],
                "values": [
                    100,
                    50,
                    0,
                    50,
                    50,
                    100,
                    100,
                    100,
                    50,
                    0,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    100,
                    50,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n",
                    "10 + 11 = 21 (left: 6 9 21)\n21 - 6 = 15 (left: 9 15)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 9 10 11",
                "ys": [
                    "10 - 6 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n",
                    "10 + 11 = 21 (left: 6 9 21)\n21 - 6 = 15 (left: 9 15)\n"
                ],
                "new_ys": [
                    "10 - 6 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n20 / 4 = 5 (left: 5)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 * 20 = 80 (left: 80)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n5 * 19 = 95 (left: 95)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 / 5 = 3.8 (left: 3.8)\n",
                    "10 + 11 = 21 (left: 6 9 21)\n21 - 6 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "10 + 11 = 21 (left: 6 9 21)\n21 - 6 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    100,
                    100,
                    50,
                    0,
                    0,
                    100,
                    0,
                    100,
                    0,
                    100,
                    50,
                    0,
                    0,
                    100,
                    0
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "10 + 11 = 21 (left: 6 9 21)\n21 - 6 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 9 10 11",
                "ys": [
                    "10 - 6 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "10 + 11 = 21 (left: 6 9 21)\n21 - 6 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "10 - 6 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (10 - 6 + 9) + 11 = 24\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (11 + (10 - 6)) = 24\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: (11 + 9) + (10 - 6) = 24\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (9 + (11 - 6)) = 24\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (10 + (11 - 6)) = 24\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (10 + 9) + (11 - 6) = 24\n",
                    "10 + 11 = 21 (left: 6 9 21)\n21 - 6 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (10 + 11 - 6) = 24\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    1000
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (10 - 6 + 9) + 11 = 24\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (11 + (10 - 6)) = 24\n",
                    "10 - 6 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: (11 + 9) + (10 - 6) = 24\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (9 + (11 - 6)) = 24\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (10 + (11 - 6)) = 24\n",
                    "11 - 6 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (10 + 9) + (11 - 6) = 24\n",
                    "10 + 11 = 21 (left: 6 9 21)\n21 - 6 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (10 + 11 - 6) = 24\n"
                ]
            }
        ],
        "idx": 876,
        "ys": [
            "10 - 6 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (10 - 6 + 9) + 11 = 24\n",
            "10 - 6 = 4 (left: 4 9 11)\n11 + 4 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (11 + (10 - 6)) = 24\n",
            "10 - 6 = 4 (left: 4 9 11)\n11 + 9 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: (11 + 9) + (10 - 6) = 24\n",
            "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (9 + (11 - 6)) = 24\n",
            "11 - 6 = 5 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (10 + (11 - 6)) = 24\n",
            "11 - 6 = 5 (left: 5 9 10)\n10 + 9 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (10 + 9) + (11 - 6) = 24\n",
            "10 + 11 = 21 (left: 6 9 21)\n21 - 6 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (10 + 11 - 6) = 24\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 132041,
            "prompt_tokens": 532197,
            "cost": 23.88837
        },
        "time_spent": 36.02599596977234
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 5 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 5 6 11)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n",
                    "11 + 2 = 13 (left: 4 5 13)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n",
                    "5 - 2 = 3 (left: 3 4 11)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n",
                    "11 - 2 = 9 (left: 4 5 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 * 4 = 8 (left: 5 8 11)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n",
                    "11 + 2 = 13 (left: 4 5 13)\n",
                    "5 - 2 = 3 (left: 3 4 11)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 5 11",
                "ys": [
                    "2 * 4 = 8 (left: 5 8 11)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n",
                    "11 + 2 = 13 (left: 4 5 13)\n",
                    "5 - 2 = 3 (left: 3 4 11)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n"
                ],
                "new_ys": [
                    "2 * 4 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n5 * 8 = 40 (left: 11 40)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 11 11)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 5)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n11 + 5 = 16 (left: 6 16)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n11 + 6 = 17 (left: 5 17)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n5 * 6 = 30 (left: 11 30)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n11 / 5 = 2 (left: 2 6) [rounded down]\n",
                    "5 + 4 = 9 (left: 2 9 11)\n2 + 9 = 11 (left: 11 11)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n11 + 2 = 13 (left: 9 13)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n11 - 2 = 9 (left: 9 9)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n11 - 9 = 2 (left: 2 2)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n11 / 11 = 1 (left: 1 2 9)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n9 * 2 = 18 (left: 11 18)\n",
                    "11 + 2 = 13 (left: 4 5 13)\n4 + 5 = 9 (left: 9 13)\n",
                    "11 + 2 = 13 (left: 4 5 13)\n13 - 5 = 8 (left: 4 8)\n",
                    "11 + 2 = 13 (left: 4 5 13)\n13 - 4 = 9 (left: 5 9)\n",
                    "11 + 2 = 13 (left: 4 5 13)\n5 - 4 = 1 (left: 1 13)\n",
                    "11 + 2 = 13 (left: 4 5 13)\n4 * 5 = 20 (left: 13 20)\n",
                    "11 + 2 = 13 (left: 4 5 13)\n13 + 5 = 18 (left: 4 18)\n",
                    "11 + 2 = 13 (left: 4 5 13)\n13 + 4 = 17 (left: 5 17)\n",
                    "5 - 2 = 3 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "5 - 2 = 3 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n",
                    "5 - 2 = 3 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n",
                    "5 - 2 = 3 (left: 3 4 11)\n11 - 3 = 8 (left: 4 8)\n",
                    "5 - 2 = 3 (left: 3 4 11)\n3 * 4 = 12 (left: 11 12)\n",
                    "5 - 2 = 3 (left: 3 4 11)\n11 / 3 = 3 (left: 3 4) (remainder 2)\n",
                    "5 - 2 = 3 (left: 3 4 11)\n4 * 3 = 12 (left: 11 12)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n2 + 4 = 6 (left: 6 6)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n4 + 6 = 10 (left: 2 10)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n6 - 2 = 4 (left: 4 4)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n6 - 4 = 2 (left: 2 2)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 6 8)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n6 / 2 = 3 (left: 3 4)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n2 + 5 = 7 (left: 7 7)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 - 5 = 2 (left: 2 2)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 - 2 = 5 (left: 5 5)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n5 + 2 = 7 (left: 7 7)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n5 * 2 = 10 (left: 7 10)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 2 = 9 (left: 5 9)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "2 * 4 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 5 11",
                "ys": [
                    "2 * 4 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n"
                ],
                "new_ys": [
                    "2 * 4 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 * 2 = 16 (left: 16 16)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n5 * 19 = 95 (left: 95)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 / 5 = 3.8 (left: 3.8)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n8 - 6 = 2 (left: 2)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5)\n3 + 5 = 8 (left: 8)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5)\n5 - 3 = 2 (left: 2)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5)\n3 * 5 = 15 (left: 15)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\nInput: 3 11\n",
                    "2 * 4 = 8 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\nPossible next steps:\n",
                    "2 * 4 = 8 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n11 - 3 = 8 (left: 8)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n11 / 3 = 3.67 (left: 3.67)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    100,
                    0,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "2 * 4 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 5 11",
                "ys": [
                    "2 * 4 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "2 * 4 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (2 * 4 + 5) + 11 = 24\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (2 * 4) + (11 + 5) = 24\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (2 * 4 + 11) + 5 = 24\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * ((11 - 4) + 5) = 24\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nNone\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nThere are no possible next steps with only one number.\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 * 4 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (2 * 4 + 5) + 11 = 24\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (2 * 4) + (11 + 5) = 24\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (2 * 4 + 11) + 5 = 24\n",
                    "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * ((11 - 4) + 5) = 24\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n",
                    "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nNone\n"
                ]
            }
        ],
        "idx": 877,
        "ys": [
            "2 * 4 = 8 (left: 5 8 11)\n5 + 8 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (2 * 4 + 5) + 11 = 24\n",
            "2 * 4 = 8 (left: 5 8 11)\n11 + 5 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (2 * 4) + (11 + 5) = 24\n",
            "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (2 * 4 + 11) + 5 = 24\n",
            "11 - 4 = 7 (left: 2 5 7)\n7 + 5 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * ((11 - 4) + 5) = 24\n",
            "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14\n",
            "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n",
            "2 * 4 = 8 (left: 5 8 11)\n11 + 8 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nNone\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 133841,
            "prompt_tokens": 539563,
            "cost": 24.217349999999996
        },
        "time_spent": 36.530274868011475
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 5 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 3 5 10)\n",
                    "5 - 2 = 3 (left: 1 3 10)\n",
                    "10 - 5 = 5 (left: 1 2 5)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n",
                    "10 - 1 = 9 (left: 2 5 9)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n",
                    "10 + 1 = 11 (left: 2 5 11)\n",
                    "Input: 3 4 7 9\n",
                    "Possible next steps:\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 / 2 = 5 (left: 1 5 5)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n",
                    "5 - 2 = 3 (left: 1 3 10)\n",
                    "10 - 5 = 5 (left: 1 2 5)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n",
                    "10 - 1 = 9 (left: 2 5 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 5 10",
                "ys": [
                    "10 / 2 = 5 (left: 1 5 5)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n",
                    "5 - 2 = 3 (left: 1 3 10)\n",
                    "10 - 5 = 5 (left: 1 2 5)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n",
                    "10 - 1 = 9 (left: 2 5 9)\n"
                ],
                "new_ys": [
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 * 1 = 5 (left: 5 5)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 / 1 = 5 (left: 5 5)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 - 2 = 2 (left: 2 10)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 + 3 = 8 (left: 8 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 + 3 = 13 (left: 5 13)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 + 5 = 15 (left: 3 15)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 - 3 = 7 (left: 5 7)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 / 5 = 2 (left: 2 3)\n",
                    "5 - 2 = 3 (left: 1 3 10)\n1 + 3 = 4 (left: 4 10)\n",
                    "5 - 2 = 3 (left: 1 3 10)\n3 + 10 = 13 (left: 1 13)\n",
                    "5 - 2 = 3 (left: 1 3 10)\n10 - 3 = 7 (left: 1 7)\n",
                    "5 - 2 = 3 (left: 1 3 10)\n10 - 1 = 9 (left: 3 9)\n",
                    "5 - 2 = 3 (left: 1 3 10)\n3 - 1 = 2 (left: 2 10)\n",
                    "5 - 2 = 3 (left: 1 3 10)\n10 / 2 = 5 (left: 1 5)\n",
                    "10 - 5 = 5 (left: 1 2 5)\n1 + 2 = 3 (left: 3 5)\n",
                    "10 - 5 = 5 (left: 1 2 5)\n2 + 5 = 7 (left: 1 7)\n",
                    "10 - 5 = 5 (left: 1 2 5)\n5 - 2 = 3 (left: 1 3)\n",
                    "10 - 5 = 5 (left: 1 2 5)\n5 - 1 = 4 (left: 2 4)\n",
                    "10 - 5 = 5 (left: 1 2 5)\n2 - 1 = 1 (left: 1 5)\n",
                    "10 - 5 = 5 (left: 1 2 5)\n5 / 1 = 5 (left: 2 5)\n",
                    "10 - 5 = 5 (left: 1 2 5)\n2 * 1 = 2 (left: 2 5)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n1 + 10 = 11 (left: 10 11)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n10 - 1 = 9 (left: 9 10)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n10 * 1 = 10 (left: 10 10)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n10 / 1 = 10 (left: 10 10)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n10 + 10 = 20 (left: 1 20)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n10 - 10 = 0 (left: 0 1)\n",
                    "10 - 1 = 9 (left: 2 5 9)\n2 + 5 = 7 (left: 7 9)\n",
                    "10 - 1 = 9 (left: 2 5 9)\n9 - 5 = 4 (left: 2 4)\n",
                    "10 - 1 = 9 (left: 2 5 9)\n9 - 2 = 7 (left: 5 7)\n",
                    "10 - 1 = 9 (left: 2 5 9)\n5 + 2 = 7 (left: 7 9)\n",
                    "10 - 1 = 9 (left: 2 5 9)\n9 / 3 = 3 (left: 2 3)\n",
                    "10 - 1 = 9 (left: 2 5 9)\n5 * 2 = 10 (left: 9 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 * 1 = 5 (left: 5 5)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 / 1 = 5 (left: 5 5)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 5 10",
                "ys": [
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 * 1 = 5 (left: 5 5)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 / 1 = 5 (left: 5 5)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n"
                ],
                "new_ys": [
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n6 - 5 = 1 (left: 1)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 + 1 = 11 (left: 11)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 * 1 = 10 (left: 10)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 + 5 = 9 (left: 9)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n5 - 4 = 1 (left: 1)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 * 1 = 5 (left: 5 5)\n5 + 5 = 10 (left: 10)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 * 1 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 / 1 = 5 (left: 5 5)\n5 + 5 = 10 (left: 10)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 / 1 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 / 1 = 5 (left: 5 5)\n5 - 5 = 0 (left: 0)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 / 2 = 5 (left: 5 6)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n14 + 2 = 16 (left: 16)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n14 - 2 = 12 (left: 12)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n14 / 2 = 7 (left: 7)\n",
                    "5 - 1 = 4 (left: 2 4 10)\n4 + 10 = 14 (left: 2 14)\n2 * 14 = 28 (left: 28)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 + 1 = 11 (left: 11)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 * 1 = 10 (left: 10)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 * 1 = 5 (left: 5 5)\n5 + 5 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 2 5 10",
                "ys": [
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 + 1 = 11 (left: 11)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 * 1 = 10 (left: 10)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 * 1 = 5 (left: 5 5)\n5 + 5 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nInput: 11\n",
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nPossible next steps:\n",
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nNone\n",
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\nInput: 30\n",
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\nPossible next steps:\n",
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\nNone (target reached)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 + 1 = 11 (left: 11)\nInput: 11\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 + 1 = 11 (left: 11)\nPossible next steps:\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 + 1 = 11 (left: 11)\n(No possible next steps with a single number)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 * 1 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\nInput: 20\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\nPossible next steps:\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\nNone (goal reached)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 * 1 = 5 (left: 5 5)\n5 + 5 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 * 1 = 5 (left: 5 5)\n5 + 5 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 * 1 = 5 (left: 5 5)\n5 + 5 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 * 1 = 5 (left: 5 5)\n5 + 5 = 10 (left: 10)\n10 * 8 = 80 (left: 8 14 80)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nInput: 11\n",
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nPossible next steps:\n",
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nNone\n",
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\nInput: 30\n",
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\nPossible next steps:\n",
                    "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\nNone (target reached)\n",
                    "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 + 1 = 11 (left: 11)\nInput: 11\n"
                ]
            }
        ],
        "idx": 878,
        "ys": [
            "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nInput: 11\n",
            "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nPossible next steps:\n",
            "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nNone\n",
            "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\nInput: 30\n",
            "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\nPossible next steps:\n",
            "10 / 2 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\nNone (target reached)\n",
            "10 / 2 = 5 (left: 1 5 5)\n5 + 5 = 10 (left: 1 10)\n10 + 1 = 11 (left: 11)\nInput: 11\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 135615,
            "prompt_tokens": 545309,
            "cost": 24.49617
        },
        "time_spent": 36.217140913009644
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 2 5",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n",
                    "2 * 2 = 4 (left: 2 4 5)\n",
                    "5 + 2 = 7 (left: 2 2 7)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n",
                    "2 * 2 = 4 (left: 2 4 5)\n",
                    "5 + 2 = 7 (left: 2 2 7)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 2 5",
                "ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n",
                    "2 * 2 = 4 (left: 2 4 5)\n",
                    "5 + 2 = 7 (left: 2 2 7)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 - 2 = 2 (left: 2 5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 4 = 1 (left: 1 2)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 * 2 = 8 (left: 5 8)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 / 2 = 2.5 (left: 2.5 4)\n",
                    "2 * 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n",
                    "2 * 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n",
                    "2 * 2 = 4 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "2 * 2 = 4 (left: 2 4 5)\n4 - 2 = 2 (left: 2 5)\n",
                    "2 * 2 = 4 (left: 2 4 5)\n5 - 4 = 1 (left: 1 2)\n",
                    "2 * 2 = 4 (left: 2 4 5)\n4 * 2 = 8 (left: 5 8)\n",
                    "2 * 2 = 4 (left: 2 4 5)\n5 * 2 = 10 (left: 4 10)\n",
                    "2 * 2 = 4 (left: 2 4 5)\n5 / 2 = 2.5 (left: 2.5 4)\n",
                    "5 + 2 = 7 (left: 2 2 7)\n2 + 2 = 4 (left: 4 7)\n",
                    "5 + 2 = 7 (left: 2 2 7)\n2 * 2 = 4 (left: 4 7)\n",
                    "5 + 2 = 7 (left: 2 2 7)\n7 + 2 = 9 (left: 2 9)\n",
                    "5 + 2 = 7 (left: 2 2 7)\n7 - 2 = 5 (left: 2 5)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n2 + 2 = 4 (left: 3 4)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n2 * 2 = 4 (left: 3 4)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 + 2 = 5 (left: 2 5)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 - 2 = 1 (left: 1 2)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 / 3 = 1 (left: 1 2)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 + 2 = 3 (left: 3 5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n2 + 5 = 7 (left: 1 7)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n5 - 2 = 3 (left: 1 3)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n5 - 1 = 4 (left: 2 4)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n2 - 1 = 1 (left: 1 5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n5 * 2 = 10 (left: 1 10)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n5 / 1 = 5 (left: 2 5)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n2 + 2 = 4 (left: 4 10)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 - 2 = 8 (left: 2 8)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 / 2 = 5 (left: 2 5)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n2 * 2 = 4 (left: 4 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 - 2 = 2 (left: 2 5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 * 2 = 8 (left: 5 8)\n",
                    "2 * 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 2 5",
                "ys": [
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 - 2 = 2 (left: 2 5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 * 2 = 8 (left: 5 8)\n",
                    "2 * 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n"
                ],
                "new_ys": [
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n6 - 5 = 1 (left: 1)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n2 + 9 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n9 - 2 = 7 (left: 7)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n9 / 3 = 3 (left: 3)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n2 * 9 = 18 (left: 18)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n3 + 4 = 7 (left: 7)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n4 - 3 = 1 (left: 1)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 - 2 = 2 (left: 2 5)\n2 + 5 = 7 (left: 7)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 - 2 = 2 (left: 2 5)\n5 - 2 = 3 (left: 3)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 - 2 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 - 2 = 2 (left: 2 5)\n5 / 2 = 2.5 (left: 2.5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 * 2 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 * 2 = 8 (left: 5 8)\n8 - 5 = 3 (left: 3)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 * 2 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 * 2 = 8 (left: 5 8)\n8 / 5 = 1.6 (left: 1.6)\n",
                    "2 * 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "2 * 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n6 - 5 = 1 (left: 1)\n",
                    "2 * 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n2 + 9 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n2 * 9 = 18 (left: 18)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 2 5",
                "ys": [
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n2 + 9 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n2 * 9 = 18 (left: 18)\n"
                ],
                "new_ys": [
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * ((5 * 2) + 2) = 24\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNo valid operations possible with a single number.\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 * 8 = 80 (left: 14 80)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 + 10 = 24 (left: 8 8 24)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nInput: 11\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nNone\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\nInput: 30\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\nNone (Goal reached)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n2 + 9 = 11 (left: 11)\nInput: 11\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n2 + 9 = 11 (left: 11)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n2 + 9 = 11 (left: 11)\nNone\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n2 * 9 = 18 (left: 18)\nInput: 18\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n2 * 9 = 18 (left: 18)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n2 * 9 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * ((5 * 2) + 2) = 24\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNo valid operations possible with a single number.\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
                ]
            }
        ],
        "idx": 879,
        "ys": [
            "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * ((5 * 2) + 2) = 24\n",
            "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
            "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
            "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNo valid operations possible with a single number.\n",
            "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
            "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
            "5 * 2 = 10 (left: 2 2 10)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 137179,
            "prompt_tokens": 551197,
            "cost": 24.76665
        },
        "time_spent": 35.42008423805237
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 12 13 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 12 = 18 (left: 13 13 18)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n",
                    "12 + 13 = 25 (left: 6 13 25)\n",
                    "13 - 12 = 1 (left: 1 6 13)\n",
                    "12 * 2 = 24 (left: 6 13 24)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n",
                    "13 + 6 = 19 (left: 12 13 19)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "13 + 13 = 26 (left: 6 12 26)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n",
                    "6 + 12 = 18 (left: 13 13 18)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n",
                    "12 + 13 = 25 (left: 6 13 25)\n",
                    "13 - 12 = 1 (left: 1 6 13)\n",
                    "12 * 2 = 24 (left: 6 13 24)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 12 13 13",
                "ys": [
                    "13 + 13 = 26 (left: 6 12 26)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n",
                    "6 + 12 = 18 (left: 13 13 18)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n",
                    "12 + 13 = 25 (left: 6 13 25)\n",
                    "13 - 12 = 1 (left: 1 6 13)\n",
                    "12 * 2 = 24 (left: 6 13 24)\n"
                ],
                "new_ys": [
                    "13 + 13 = 26 (left: 6 12 26)\n6 + 12 = 18 (left: 18 26)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 - 12 = 14 (left: 6 14)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 - 6 = 20 (left: 12 20)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 * 2 = 24 (left: 6 24)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 / 2 = 13 (left: 6 12 13)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 + 6 = 32 (left: 12 32)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 + 6 = 18 (left: 18 26)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n2 + 13 = 15 (left: 13 15)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 * 2 = 26 (left: 13 26)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 / 13 = 1 (left: 1 2)\n",
                    "6 + 12 = 18 (left: 13 13 18)\n13 + 13 = 26 (left: 18 26)\n",
                    "6 + 12 = 18 (left: 13 13 18)\n18 + 13 = 31 (left: 13 31)\n",
                    "6 + 12 = 18 (left: 13 13 18)\n18 - 13 = 5 (left: 5 13)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n7 + 12 = 19 (left: 13 19)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n13 - 7 = 6 (left: 6 12)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n13 - 12 = 1 (left: 1 7)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n12 - 7 = 5 (left: 5 13)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n7 * 12 = 84 (left: 13 84)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n13 + 12 = 25 (left: 7 25)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n13 + 7 = 20 (left: 12 20)\n",
                    "12 + 13 = 25 (left: 6 13 25)\n6 + 13 = 19 (left: 19 25)\n",
                    "12 + 13 = 25 (left: 6 13 25)\n25 - 13 = 12 (left: 6 12)\n",
                    "12 + 13 = 25 (left: 6 13 25)\n25 - 6 = 19 (left: 13 19)\n",
                    "12 + 13 = 25 (left: 6 13 25)\n13 + 6 = 19 (left: 19 25)\n",
                    "12 + 13 = 25 (left: 6 13 25)\n25 / 25 = 1 (left: 1 6 13)\n",
                    "12 + 13 = 25 (left: 6 13 25)\n13 * 6 = 78 (left: 25 78)\n",
                    "12 + 13 = 25 (left: 6 13 25)\n25 + 6 = 31 (left: 13 31)\n",
                    "12 + 13 = 25 (left: 6 13 25)\n25 + 13 = 38 (left: 6 38)\n",
                    "13 - 12 = 1 (left: 1 6 13)\n1 + 6 = 7 (left: 7 13)\n",
                    "13 - 12 = 1 (left: 1 6 13)\n13 + 1 = 14 (left: 6 14)\n",
                    "13 - 12 = 1 (left: 1 6 13)\n13 - 6 = 7 (left: 1 7)\n",
                    "13 - 12 = 1 (left: 1 6 13)\n13 - 1 = 12 (left: 6 12)\n",
                    "13 - 12 = 1 (left: 1 6 13)\n6 - 1 = 5 (left: 5 13)\n",
                    "13 - 12 = 1 (left: 1 6 13)\n13 / 1 = 13 (left: 6 13)\n",
                    "13 - 12 = 1 (left: 1 6 13)\n6 * 1 = 6 (left: 6 13)\n",
                    "12 * 2 = 24 (left: 6 13 24)\n6 + 13 = 19 (left: 19 24)\n",
                    "12 * 2 = 24 (left: 6 13 24)\n24 - 13 = 11 (left: 6 11)\n",
                    "12 * 2 = 24 (left: 6 13 24)\n24 - 6 = 18 (left: 13 18)\n",
                    "12 * 2 = 24 (left: 6 13 24)\n13 + 6 = 19 (left: 19 24)\n",
                    "12 * 2 = 24 (left: 6 13 24)\n24 / 6 = 4 (left: 4 13)\n",
                    "12 * 2 = 24 (left: 6 13 24)\n13 * 6 = 78 (left: 24 78)\n",
                    "12 * 2 = 24 (left: 6 13 24)\n24 / 13 = 1.846... (invalid)\n",
                    "12 * 2 = 24 (left: 6 13 24)\nInput: 1 3 7 9\n"
                ],
                "values": [
                    0,
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    50,
                    100,
                    100,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 - 12 = 14 (left: 6 14)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 - 6 = 20 (left: 12 20)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 * 2 = 24 (left: 6 24)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 + 6 = 32 (left: 12 32)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 12 13 13",
                "ys": [
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 - 12 = 14 (left: 6 14)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 - 6 = 20 (left: 12 20)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 * 2 = 24 (left: 6 24)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 + 6 = 32 (left: 12 32)\n"
                ],
                "new_ys": [
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 + 2 = 28 (left: 28)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 - 2 = 24 (left: 24)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 / 2 = 13 (left: 13)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n2 * 26 = 52 (left: 52)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n26 + 2 = 28 (left: 28)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n26 - 2 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n2 * 26 = 52 (left: 52)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 - 12 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 - 12 = 14 (left: 6 14)\n14 - 6 = 8 (left: 8)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 - 12 = 14 (left: 6 14)\n14 / 2 = 7 (left: 6 7)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 - 12 = 14 (left: 6 14)\n6 * 2 = 12 (left: 12 14)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 - 6 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 - 6 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 - 6 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 - 6 = 20 (left: 12 20)\n20 / 12 = 1.666... (left: 1.666...)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 * 2 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 * 2 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 * 2 = 24 (left: 6 24)\n24 / 6 = 4 (left: 4)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 * 2 = 24 (left: 6 24)\n6 * 24 = 144 (left: 144)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 + 6 = 32 (left: 12 32)\n12 + 32 = 44 (left: 44)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 + 6 = 32 (left: 12 32)\n32 - 12 = 20 (left: 20)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 + 6 = 32 (left: 12 32)\n32 / 12 = 2 (left: 2)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n26 + 6 = 32 (left: 12 32)\n12 * 32 = 384 (left: 384)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    0,
                    50,
                    100,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 - 2 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n26 - 2 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 + 2 = 28 (left: 28)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 / 2 = 13 (left: 13)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n26 + 2 = 28 (left: 28)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 12 13 13",
                "ys": [
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 - 2 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n26 - 2 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 + 2 = 28 (left: 28)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 / 2 = 13 (left: 13)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n26 + 2 = 28 (left: 28)\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13)\n"
                ],
                "new_ys": [
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 - 2 = 24 (left: 24)\nAnswer: (13 + 13) - (12 / 6) = 24\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n26 - 2 = 24 (left: 24)\nAnswer: (13 + 13) - (12 / 6) = 24\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (13 - 12 / 6) + 13 = 24\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 + 2 = 28 (left: 28)\nInput: 28\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 + 2 = 28 (left: 28)\nPossible next steps:\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 + 2 = 28 (left: 28)\nNone (target reached)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 / 2 = 13 (left: 13)\nInput: 13\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 / 2 = 13 (left: 13)\nPossible next steps:\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 / 2 = 13 (left: 13)\nNone\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n26 + 2 = 28 (left: 28)\nInput: 28\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n26 + 2 = 28 (left: 28)\nPossible next steps:\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n26 + 2 = 28 (left: 28)\nThere are no possible next steps with only one number.\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13)\nInput: 13\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13)\nPossible next steps:\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n26 / 2 = 13 (left: 13)\nNone\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 - 2 = 24 (left: 24)\nAnswer: (13 + 13) - (12 / 6) = 24\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n26 - 2 = 24 (left: 24)\nAnswer: (13 + 13) - (12 / 6) = 24\n",
                    "12 / 6 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (13 - 12 / 6) + 13 = 24\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 + 2 = 28 (left: 28)\nInput: 28\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 + 2 = 28 (left: 28)\nPossible next steps:\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 + 2 = 28 (left: 28)\nNone (target reached)\n",
                    "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 / 2 = 13 (left: 13)\nInput: 13\n"
                ]
            }
        ],
        "idx": 880,
        "ys": [
            "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 - 2 = 24 (left: 24)\nAnswer: (13 + 13) - (12 / 6) = 24\n",
            "12 / 6 = 2 (left: 2 13 13)\n13 + 13 = 26 (left: 2 26)\n26 - 2 = 24 (left: 24)\nAnswer: (13 + 13) - (12 / 6) = 24\n",
            "12 / 6 = 2 (left: 2 13 13)\n13 - 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (13 - 12 / 6) + 13 = 24\n",
            "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 + 2 = 28 (left: 28)\nInput: 28\n",
            "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 + 2 = 28 (left: 28)\nPossible next steps:\n",
            "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 + 2 = 28 (left: 28)\nNone (target reached)\n",
            "13 + 13 = 26 (left: 6 12 26)\n12 / 6 = 2 (left: 2 26)\n26 / 2 = 13 (left: 13)\nInput: 13\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 138852,
            "prompt_tokens": 558158,
            "cost": 25.07586
        },
        "time_spent": 37.096400022506714
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n",
                    "10 + 3 = 13 (left: 3 6 13)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n",
                    "6 - 3 = 3 (left: 3 3 10)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n",
                    "6 * 3 = 18 (left: 3 10 18)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n",
                    "10 + 3 = 13 (left: 3 6 13)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n",
                    "6 - 3 = 3 (left: 3 3 10)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 6 10",
                "ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n",
                    "10 + 3 = 13 (left: 3 6 13)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n",
                    "6 - 3 = 3 (left: 3 3 10)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 / 2 = 5 (left: 5 6 6)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n3 + 9 = 12 (left: 10 12)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n10 + 3 = 13 (left: 9 13)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n10 - 3 = 7 (left: 7 9)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n9 + 3 = 12 (left: 10 12)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n9 - 3 = 6 (left: 6 10)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n10 - 9 = 1 (left: 1 3)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n9 / 3 = 3 (left: 3 10)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n10 / 2 = 5 (left: 3 5 9)\n",
                    "10 + 3 = 13 (left: 3 6 13)\n3 + 6 = 9 (left: 9 13)\n",
                    "10 + 3 = 13 (left: 3 6 13)\n13 + 3 = 16 (left: 6 16)\n",
                    "10 + 3 = 13 (left: 3 6 13)\n13 - 6 = 7 (left: 3 7)\n",
                    "10 + 3 = 13 (left: 3 6 13)\n13 - 3 = 10 (left: 6 10)\n",
                    "10 + 3 = 13 (left: 3 6 13)\n6 * 3 = 18 (left: 13 18)\n",
                    "10 + 3 = 13 (left: 3 6 13)\n6 / 3 = 2 (left: 2 13)\n",
                    "10 + 3 = 13 (left: 3 6 13)\n13 + 6 = 19 (left: 3 19)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n10 - 6 = 4 (left: 4 9)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n10 - 9 = 1 (left: 1 6)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n9 - 6 = 3 (left: 3 10)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n6 * 9 = 54 (left: 10 54)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n10 + 6 = 16 (left: 9 16)\n",
                    "3 * 3 = 9 (left: 6 9 10)\n10 + 9 = 19 (left: 6 19)\n",
                    "6 - 3 = 3 (left: 3 3 10)\n3 + 3 = 6 (left: 6 10)\n",
                    "6 - 3 = 3 (left: 3 3 10)\n3 * 3 = 9 (left: 9 10)\n",
                    "6 - 3 = 3 (left: 3 3 10)\n10 + 3 = 13 (left: 3 13)\n",
                    "6 - 3 = 3 (left: 3 3 10)\n10 - 3 = 7 (left: 3 7)\n",
                    "6 - 3 = 3 (left: 3 3 10)\n10 / 3 \u2248 3.33 (left: 3 3.33)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n3 * 3 = 9 (left: 4 9)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n4 + 3 = 7 (left: 3 7)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n4 - 3 = 1 (left: 1 3)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n3 + 6 = 9 (left: 5 9)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n6 - 3 = 3 (left: 3 5)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n6 - 5 = 1 (left: 1 3)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n3 * 6 = 18 (left: 5 18)\n",
                    "10 / 2 = 5 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n3 + 9 = 12 (left: 10 12)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n10 + 3 = 13 (left: 9 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 6 10",
                "ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n3 + 9 = 12 (left: 10 12)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n10 + 3 = 13 (left: 9 13)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\nInput: 4 6\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n12 - 10 = 2 (left: 2)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 * 12 = 120 (left: 120)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n12 / 10 = 1.2 (left: 1.2)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n6 + 16 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 / 6 \u2248 2.67 (left: 2.67)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n6 * 16 = 96 (left: 96)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n10 + 36 = 46 (left: 46)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 - 10 = 26 (left: 26)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3.6 (left: 3.6)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n10 * 36 = 360 (left: 360)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n3 + 9 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n3 + 9 = 12 (left: 10 12)\n12 - 10 = 2 (left: 2)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n3 + 9 = 12 (left: 10 12)\n10 * 12 = 120 (left: 120)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n3 + 9 = 12 (left: 10 12)\n12 / 10 = 1.2 (left: 1.2)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n10 + 3 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n",
                    "6 + 3 = 9 (left: 3 9 10)\n10 + 3 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n6 + 16 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 6 10",
                "ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n6 + 16 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (3 + 3) = 24\n",
                    "10 - 6 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 + 3) * (10 - 6) = 24\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 8 = 80 (left: 14 80)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 8 24)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "10 - 6 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 8 = 80 (left: 8 14 80)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\nInput: 22\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\nThere are no possible next steps with only one number.\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n6 + 16 = 22 (left: 22)\nInput: 22\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n6 + 16 = 22 (left: 22)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n6 + 16 = 22 (left: 22)\nNone\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (3 + 3) = 24\n",
                    "10 - 6 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 + 3) * (10 - 6) = 24\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 8 = 80 (left: 14 80)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 8 24)\n"
                ]
            }
        ],
        "idx": 881,
        "ys": [
            "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (3 + 3) = 24\n",
            "10 - 6 = 4 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 + 3) * (10 - 6) = 24\n",
            "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
            "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
            "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
            "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 8 = 80 (left: 14 80)\n",
            "3 + 3 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 8 24)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 140734,
            "prompt_tokens": 564714,
            "cost": 25.385460000000002
        },
        "time_spent": 36.56706690788269
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n",
                    "4 + 8 = 12 (left: 3 11 12)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n",
                    "3 * 4 = 12 (left: 8 11 12)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n",
                    "8 - 3 = 5 (left: 4 5 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 4 8 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n",
                    "4 + 8 = 12 (left: 3 11 12)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n",
                    "3 * 4 = 12 (left: 8 11 12)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 8 11",
                "ys": [
                    "11 - 3 = 8 (left: 4 8 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n",
                    "4 + 8 = 12 (left: 3 11 12)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n",
                    "3 * 4 = 12 (left: 8 11 12)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n"
                ],
                "new_ys": [
                    "11 - 3 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 + 8 = 16 (left: 4 16)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 7)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 * 8 = 56 (left: 11 56)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 + 7 = 18 (left: 8 18)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 + 8 = 19 (left: 7 19)\n",
                    "4 + 8 = 12 (left: 3 11 12)\n3 + 11 = 14 (left: 12 14)\n",
                    "4 + 8 = 12 (left: 3 11 12)\n12 + 3 = 15 (left: 11 15)\n",
                    "4 + 8 = 12 (left: 3 11 12)\n12 - 3 = 9 (left: 9 11)\n",
                    "4 + 8 = 12 (left: 3 11 12)\n12 - 11 = 1 (left: 1 3)\n",
                    "4 + 8 = 12 (left: 3 11 12)\n11 - 3 = 8 (left: 8 12)\n",
                    "4 + 8 = 12 (left: 3 11 12)\n12 / 3 = 4 (left: 4 11)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n3 + 4 = 7 (left: 7 19)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 + 3 = 22 (left: 4 22)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 + 4 = 23 (left: 3 23)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 - 3 = 16 (left: 4 16)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 - 4 = 15 (left: 3 15)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n3 * 4 = 12 (left: 12 19)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 / 3 = 6 (left: 4 6)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n4 - 3 = 1 (left: 1 19)\n",
                    "3 * 4 = 12 (left: 8 11 12)\n8 + 11 = 19 (left: 12 19)\n",
                    "3 * 4 = 12 (left: 8 11 12)\n12 - 8 = 4 (left: 4 11)\n",
                    "3 * 4 = 12 (left: 8 11 12)\n12 - 11 = 1 (left: 1 8)\n",
                    "3 * 4 = 12 (left: 8 11 12)\n11 - 8 = 3 (left: 3 12)\n",
                    "3 * 4 = 12 (left: 8 11 12)\n12 + 11 = 23 (left: 8 23)\n",
                    "3 * 4 = 12 (left: 8 11 12)\n12 + 8 = 20 (left: 11 20)\n",
                    "3 * 4 = 12 (left: 8 11 12)\n12 * 11 = 132 (left: 8 132)\n",
                    "3 * 4 = 12 (left: 8 11 12)\n11 * 8 = 88 (left: 12 88)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n3 + 7 = 10 (left: 8 10)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n8 + 3 = 11 (left: 7 11)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n8 + 7 = 15 (left: 3 15)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n8 - 3 = 5 (left: 5 7)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n7 - 3 = 4 (left: 4 8)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n3 * 7 = 21 (left: 8 21)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n8 * 3 = 24 (left: 7 24)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n3 * 3 = 9 (left: 4 9)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n4 + 3 = 7 (left: 3 7)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n4 - 3 = 1 (left: 1 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 / 3 = 6 (left: 4 6)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 + 8 = 16 (left: 4 16)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 8 11",
                "ys": [
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 / 3 = 6 (left: 4 6)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 + 8 = 16 (left: 4 16)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8)\n"
                ],
                "new_ys": [
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n32 / 8 = 4 (left: 4)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 * 32 = 256 (left: 256)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 / 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 / 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 + 8 = 16 (left: 4 16)\n4 + 16 = 20 (left: 20)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 + 8 = 16 (left: 4 16)\n16 - 4 = 12 (left: 12)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 + 8 = 16 (left: 4 16)\n16 / 4 = 4 (left: 4)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 + 8 = 16 (left: 4 16)\n4 * 16 = 64 (left: 64)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8)\n8 - 2 = 6 (left: 6)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8)\n8 / 2 = 4 (left: 4)\n"
                ],
                "values": [
                    50,
                    100,
                    0,
                    0,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 / 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 8 11",
                "ys": [
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 / 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n"
                ],
                "new_ys": [
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\nAnswer: (11 - 3) * 4 - 8 = 24\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 / 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((8 + 11) / 3) = 24\n",
                    "11 - 8 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((11 - 8) + 3) = 24\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\nInput: 40\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\nPossible next steps:\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\nNone (target reached)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "11 - 8 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "11 - 3 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\nInput: 20\n",
                    "11 - 3 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\nPossible next steps:\n",
                    "11 - 3 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\nNone (Only one number left, game over)\n"
                ],
                "values": [
                    1000,
                    0,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\nAnswer: (11 - 3) * 4 - 8 = 24\n",
                    "11 - 8 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((11 - 8) + 3) = 24\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 / 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((8 + 11) / 3) = 24\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\nInput: 40\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\nPossible next steps:\n",
                    "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\nNone (target reached)\n",
                    "8 + 11 = 19 (left: 3 4 19)\n19 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n"
                ]
            }
        ],
        "idx": 882,
        "ys": [
            "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\nAnswer: (11 - 3) * 4 - 8 = 24\n",
            "11 - 8 = 3 (left: 3 3 4)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((11 - 8) + 3) = 24\n",
            "8 + 11 = 19 (left: 3 4 19)\n19 / 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * ((8 + 11) / 3) = 24\n",
            "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\nInput: 40\n",
            "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\nPossible next steps:\n",
            "11 - 3 = 8 (left: 4 8 8)\n8 * 4 = 32 (left: 8 32)\n8 + 32 = 40 (left: 40)\nNone (target reached)\n",
            "8 + 11 = 19 (left: 3 4 19)\n19 / 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 142511,
            "prompt_tokens": 571675,
            "cost": 25.70091
        },
        "time_spent": 36.51875400543213
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 4 6 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 6 8 13)\n",
                    "6 + 4 = 10 (left: 4 10 13)\n",
                    "13 + 4 = 17 (left: 4 6 17)\n",
                    "4 * 4 = 16 (left: 6 13 16)\n",
                    "6 - 4 = 2 (left: 2 4 13)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n",
                    "6 / 2 = 3 (left: 3 4 13)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 4 4 7)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n",
                    "6 + 4 = 10 (left: 4 10 13)\n",
                    "13 + 4 = 17 (left: 4 6 17)\n",
                    "4 * 4 = 16 (left: 6 13 16)\n",
                    "6 - 4 = 2 (left: 2 4 13)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 4 6 13",
                "ys": [
                    "13 - 6 = 7 (left: 4 4 7)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n",
                    "6 + 4 = 10 (left: 4 10 13)\n",
                    "13 + 4 = 17 (left: 4 6 17)\n",
                    "4 * 4 = 16 (left: 6 13 16)\n",
                    "6 - 4 = 2 (left: 2 4 13)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n"
                ],
                "new_ys": [
                    "13 - 6 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 + 4 = 11 (left: 4 11)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 13 14)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 + 6 = 19 (left: 8 19)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 - 6 = 7 (left: 7 8)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n8 + 6 = 14 (left: 13 14)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 - 8 = 5 (left: 5 6)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n8 - 6 = 2 (left: 2 13)\n",
                    "6 + 4 = 10 (left: 4 10 13)\n4 + 10 = 14 (left: 13 14)\n",
                    "6 + 4 = 10 (left: 4 10 13)\n13 + 4 = 17 (left: 10 17)\n",
                    "6 + 4 = 10 (left: 4 10 13)\n13 - 4 = 9 (left: 9 10)\n",
                    "6 + 4 = 10 (left: 4 10 13)\n13 - 10 = 3 (left: 3 4)\n",
                    "6 + 4 = 10 (left: 4 10 13)\n10 - 4 = 6 (left: 6 13)\n",
                    "6 + 4 = 10 (left: 4 10 13)\n13 * 4 = 52 (left: 10 52)\n",
                    "6 + 4 = 10 (left: 4 10 13)\n10 * 4 = 40 (left: 13 40)\n",
                    "6 + 4 = 10 (left: 4 10 13)\n13 + 10 = 23 (left: 4 23)\n",
                    "13 + 4 = 17 (left: 4 6 17)\n4 + 6 = 10 (left: 10 17)\n",
                    "13 + 4 = 17 (left: 4 6 17)\n17 + 4 = 21 (left: 6 21)\n",
                    "13 + 4 = 17 (left: 4 6 17)\n17 - 6 = 11 (left: 4 11)\n",
                    "13 + 4 = 17 (left: 4 6 17)\n17 - 4 = 13 (left: 6 13)\n",
                    "13 + 4 = 17 (left: 4 6 17)\n6 - 4 = 2 (left: 2 17)\n",
                    "13 + 4 = 17 (left: 4 6 17)\n17 / 4 = 4.25 (invalid)\n",
                    "13 + 4 = 17 (left: 4 6 17)\n6 * 4 = 24 (left: 17 24)\n",
                    "4 * 4 = 16 (left: 6 13 16)\n6 + 13 = 19 (left: 16 19)\n",
                    "4 * 4 = 16 (left: 6 13 16)\n16 - 6 = 10 (left: 10 13)\n",
                    "4 * 4 = 16 (left: 6 13 16)\n16 - 13 = 3 (left: 3 6)\n",
                    "4 * 4 = 16 (left: 6 13 16)\n13 - 6 = 7 (left: 7 16)\n",
                    "4 * 4 = 16 (left: 6 13 16)\n16 / 2 = 8 (left: 6 8 13)\n",
                    "4 * 4 = 16 (left: 6 13 16)\n13 + 6 = 19 (left: 16 19)\n",
                    "6 - 4 = 2 (left: 2 4 13)\n2 + 4 = 6 (left: 6 13)\n",
                    "6 - 4 = 2 (left: 2 4 13)\n4 + 13 = 17 (left: 2 17)\n",
                    "6 - 4 = 2 (left: 2 4 13)\n13 - 4 = 9 (left: 2 9)\n",
                    "6 - 4 = 2 (left: 2 4 13)\n13 - 2 = 11 (left: 4 11)\n",
                    "6 - 4 = 2 (left: 2 4 13)\n4 - 2 = 2 (left: 2 13)\n",
                    "6 - 4 = 2 (left: 2 4 13)\n13 / 2 = 6.5 (left: 4 6.5)\n",
                    "6 - 4 = 2 (left: 2 4 13)\n4 * 2 = 8 (left: 8 13)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n9 - 4 = 5 (left: 5 6)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n9 - 6 = 3 (left: 3 4)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n6 - 4 = 2 (left: 2 9)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n4 * 6 = 24 (left: 9 24)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n9 + 6 = 15 (left: 4 15)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n9 + 4 = 13 (left: 6 13)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n6 + 4 = 10 (left: 9 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 + 4 = 11 (left: 4 11)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 13 14)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 + 6 = 19 (left: 8 19)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 - 6 = 7 (left: 7 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 4 6 13",
                "ys": [
                    "13 - 6 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 + 4 = 11 (left: 4 11)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 13 14)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 + 6 = 19 (left: 8 19)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 - 6 = 7 (left: 7 8)\n"
                ],
                "new_ys": [
                    "13 - 6 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n8 - 7 = 1 (left: 1)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n8 / 7 \u2248 1.14 (left: 1.14)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n7 + 16 = 23 (left: 23)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n16 - 7 = 9 (left: 9)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n16 / 7 \u2248 2.29 (left: 2.29)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n7 * 16 = 112 (left: 112)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 + 4 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 + 4 = 11 (left: 4 11)\n11 - 4 = 7 (left: 7)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 + 4 = 11 (left: 4 11)\n11 / 4 = 2.75 (invalid)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 + 4 = 11 (left: 4 11)\n4 * 11 = 44 (left: 44)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n3 + 4 = 7 (left: 7)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n4 - 3 = 1 (left: 1)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 13 14)\n13 + 14 = 27 (left: 27)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 13 14)\n14 - 13 = 1 (left: 1)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 + 6 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 + 6 = 19 (left: 8 19)\n19 + 8 = 27 (left: 27)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 + 6 = 19 (left: 8 19)\n8 * 19 = 152 (left: 152)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 - 6 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 - 6 = 7 (left: 7 8)\n8 - 7 = 1 (left: 1)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 - 6 = 7 (left: 7 8)\n7 * 8 = 56 (left: 56)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 - 6 = 7 (left: 7 8)\n8 / 7 \u2248 1.14 (left: 1.14)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n7 + 16 = 23 (left: 23)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 + 4 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 13 14)\n13 + 14 = 27 (left: 27)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 + 6 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 + 6 = 19 (left: 8 19)\n19 + 8 = 27 (left: 27)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 4 6 13",
                "ys": [
                    "13 - 6 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n7 + 16 = 23 (left: 23)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 + 4 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 13 14)\n13 + 14 = 27 (left: 27)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 + 6 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 + 6 = 19 (left: 8 19)\n19 + 8 = 27 (left: 27)\n"
                ],
                "new_ys": [
                    "13 - 6 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\nInput: 15\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\nPossible next steps:\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\nNone\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n7 + 16 = 23 (left: 23)\nInput: 23\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n7 + 16 = 23 (left: 23)\nPossible next steps:\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n7 + 16 = 23 (left: 23)\nNone\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 + 4 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\nInput: 15\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 + 4 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\nPossible next steps:\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 + 4 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\nNo valid operations possible with a single number.\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\nInput: 12\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\nPossible next steps:\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 13 14)\n13 + 14 = 27 (left: 27)\nInput: 27\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 13 14)\n13 + 14 = 27 (left: 27)\nPossible next steps:\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 13 14)\n13 + 14 = 27 (left: 27)\nNone\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 + 6 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\nInput: 11\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 + 6 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\nPossible next steps:\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 + 6 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\nNone\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 + 6 = 19 (left: 8 19)\n19 + 8 = 27 (left: 27)\nInput: 27\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 + 6 = 19 (left: 8 19)\n19 + 8 = 27 (left: 27)\nPossible next steps:\n",
                    "4 + 4 = 8 (left: 6 8 13)\n13 + 6 = 19 (left: 8 19)\n19 + 8 = 27 (left: 27)\nNone\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\nInput: 15\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\nPossible next steps:\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\nNone\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n7 + 16 = 23 (left: 23)\nInput: 23\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n7 + 16 = 23 (left: 23)\nPossible next steps:\n",
                    "13 - 6 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n7 + 16 = 23 (left: 23)\nNone\n",
                    "13 - 6 = 7 (left: 4 4 7)\n7 + 4 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\nInput: 15\n"
                ]
            }
        ],
        "idx": 883,
        "ys": [
            "13 - 6 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\nInput: 15\n",
            "13 - 6 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\nPossible next steps:\n",
            "13 - 6 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n7 + 8 = 15 (left: 15)\nNone\n",
            "13 - 6 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n7 + 16 = 23 (left: 23)\nInput: 23\n",
            "13 - 6 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n7 + 16 = 23 (left: 23)\nPossible next steps:\n",
            "13 - 6 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n7 + 16 = 23 (left: 23)\nNone\n",
            "13 - 6 = 7 (left: 4 4 7)\n7 + 4 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\nInput: 15\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 144216,
            "prompt_tokens": 577421,
            "cost": 25.97559
        },
        "time_spent": 34.77829599380493
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 6 7 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 6 = 10 (left: 7 10 10)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n",
                    "10 - 6 = 4 (left: 4 4 7)\n",
                    "10 - 4 = 6 (left: 6 6 7)\n",
                    "7 + 4 = 11 (left: 6 10 11)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n",
                    "10 - 7 = 3 (left: 3 4 6)\n",
                    "6 + 4 = 10 (left: 7 10 10)\n"
                ],
                "values": [
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "7 - 4 = 3 (left: 3 6 10)\n",
                    "10 - 6 = 4 (left: 4 4 7)\n",
                    "4 + 6 = 10 (left: 7 10 10)\n",
                    "10 - 4 = 6 (left: 6 6 7)\n",
                    "7 + 4 = 11 (left: 6 10 11)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n",
                    "10 - 7 = 3 (left: 3 4 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 6 7 10",
                "ys": [
                    "7 - 4 = 3 (left: 3 6 10)\n",
                    "10 - 6 = 4 (left: 4 4 7)\n",
                    "4 + 6 = 10 (left: 7 10 10)\n",
                    "10 - 4 = 6 (left: 6 6 7)\n",
                    "7 + 4 = 11 (left: 6 10 11)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n",
                    "10 - 7 = 3 (left: 3 4 6)\n"
                ],
                "new_ys": [
                    "7 - 4 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 + 3 = 9 (left: 9 10)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 + 3 = 13 (left: 6 13)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 / 2 = 5 (left: 3 5 6)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n",
                    "10 - 6 = 4 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n",
                    "10 - 6 = 4 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n",
                    "10 - 6 = 4 (left: 4 4 7)\n7 + 4 = 11 (left: 4 11)\n",
                    "10 - 6 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n",
                    "4 + 6 = 10 (left: 7 10 10)\n7 + 10 = 17 (left: 10 17)\n",
                    "4 + 6 = 10 (left: 7 10 10)\n10 + 10 = 20 (left: 7 20)\n",
                    "4 + 6 = 10 (left: 7 10 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "4 + 6 = 10 (left: 7 10 10)\n10 * 7 = 70 (left: 10 70)\n",
                    "4 + 6 = 10 (left: 7 10 10)\n10 / 10 = 1 (left: 1 7)\n",
                    "10 - 4 = 6 (left: 6 6 7)\n6 + 6 = 12 (left: 7 12)\n",
                    "10 - 4 = 6 (left: 6 6 7)\n7 + 6 = 13 (left: 6 13)\n",
                    "10 - 4 = 6 (left: 6 6 7)\n7 - 6 = 1 (left: 1 6)\n",
                    "10 - 4 = 6 (left: 6 6 7)\n6 * 6 = 36 (left: 7 36)\n",
                    "10 - 4 = 6 (left: 6 6 7)\n7 * 6 = 42 (left: 6 42)\n",
                    "7 + 4 = 11 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n",
                    "7 + 4 = 11 (left: 6 10 11)\n11 - 6 = 5 (left: 5 10)\n",
                    "7 + 4 = 11 (left: 6 10 11)\n11 - 10 = 1 (left: 1 6)\n",
                    "7 + 4 = 11 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n",
                    "7 + 4 = 11 (left: 6 10 11)\n11 + 6 = 17 (left: 10 17)\n",
                    "7 + 4 = 11 (left: 6 10 11)\n10 + 11 = 21 (left: 6 21)\n",
                    "7 + 4 = 11 (left: 6 10 11)\n6 * 10 = 60 (left: 11 60)\n",
                    "7 + 4 = 11 (left: 6 10 11)\n11 + 10 = 21 (left: 6 21)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n6 + 7 = 13 (left: 13 14)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n7 + 14 = 21 (left: 6 21)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n14 - 7 = 7 (left: 6 7)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n14 - 6 = 8 (left: 7 8)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n7 - 6 = 1 (left: 1 14)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n14 / 7 = 2 (left: 2 6)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n14 / 2 = 7 (left: 6 7)\n",
                    "10 - 7 = 3 (left: 3 4 6)\n3 + 4 = 7 (left: 6 7)\n",
                    "10 - 7 = 3 (left: 3 4 6)\n3 * 4 = 12 (left: 6 12)\n",
                    "10 - 7 = 3 (left: 3 4 6)\n4 + 6 = 10 (left: 3 10)\n",
                    "10 - 7 = 3 (left: 3 4 6)\n6 - 3 = 3 (left: 3 4)\n",
                    "10 - 7 = 3 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "10 - 7 = 3 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 4 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 + 3 = 9 (left: 9 10)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 + 3 = 13 (left: 6 13)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 6 7 10",
                "ys": [
                    "7 - 4 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 + 3 = 9 (left: 9 10)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 + 3 = 13 (left: 6 13)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n"
                ],
                "new_ys": [
                    "7 - 4 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 + 3 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 + 3 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 + 3 = 13 (left: 6 13)\n6 + 13 = 19 (left: 19)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 + 3 = 13 (left: 6 13)\n13 - 6 = 7 (left: 7)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\nInput: 3 4\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\nPossible next steps:\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n3 + 4 = 7 (left: 7)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n4 - 3 = 1 (left: 1)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n4 / 3 = 1.33 (left: 1.33)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n7 - 6 = 1 (left: 1)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n6 * 7 = 42 (left: 42)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n18 - 10 = 8 (left: 8)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n10 - 2 = 8 (left: 8)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n10 / 2 = 5 (left: 5)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "7 - 4 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 + 3 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 + 3 = 13 (left: 6 13)\n6 + 13 = 19 (left: 19)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 6 7 10",
                "ys": [
                    "7 - 4 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 + 3 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 + 3 = 13 (left: 6 13)\n6 + 13 = 19 (left: 19)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "7 - 4 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 19\n",
                    "7 - 4 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
                    "7 - 4 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nNone\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 + 3 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 19\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 + 3 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 + 3 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nNone\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 + 3 = 13 (left: 6 13)\n6 + 13 = 19 (left: 19)\nInput: 19\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 + 3 = 13 (left: 6 13)\n6 + 13 = 19 (left: 19)\nPossible next steps:\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 + 3 = 13 (left: 6 13)\n6 + 13 = 19 (left: 19)\nNone\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nInput: 13\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nPossible next steps:\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nNone\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\nInput: 28\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\nPossible next steps:\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\nNone (target reached)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 4 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 19\n",
                    "7 - 4 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
                    "7 - 4 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nNone\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 + 3 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 19\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 + 3 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
                    "7 - 4 = 3 (left: 3 6 10)\n6 + 3 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nNone\n",
                    "7 - 4 = 3 (left: 3 6 10)\n10 + 3 = 13 (left: 6 13)\n6 + 13 = 19 (left: 19)\nInput: 19\n"
                ]
            }
        ],
        "idx": 884,
        "ys": [
            "7 - 4 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 19\n",
            "7 - 4 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
            "7 - 4 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nNone\n",
            "7 - 4 = 3 (left: 3 6 10)\n6 + 3 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 19\n",
            "7 - 4 = 3 (left: 3 6 10)\n6 + 3 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
            "7 - 4 = 3 (left: 3 6 10)\n6 + 3 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nNone\n",
            "7 - 4 = 3 (left: 3 6 10)\n10 + 3 = 13 (left: 6 13)\n6 + 13 = 19 (left: 19)\nInput: 19\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 145862,
            "prompt_tokens": 583167,
            "cost": 26.24673
        },
        "time_spent": 34.20624613761902
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 11 11 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 11 = 17 (left: 11 12 17)\n",
                    "11 + 12 = 23 (left: 6 11 23)\n",
                    "12 - 11 = 1 (left: 1 6 11)\n",
                    "12 - 6 = 6 (left: 6 11 11)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n",
                    "12 * 2 = 24 (left: 6 11 24)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100
                ],
                "select_new_ys": [
                    "12 / 6 = 2 (left: 2 11 11)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n",
                    "6 + 11 = 17 (left: 11 12 17)\n",
                    "11 + 12 = 23 (left: 6 11 23)\n",
                    "12 - 11 = 1 (left: 1 6 11)\n",
                    "12 - 6 = 6 (left: 6 11 11)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 11 11 12",
                "ys": [
                    "12 / 6 = 2 (left: 2 11 11)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n",
                    "6 + 11 = 17 (left: 11 12 17)\n",
                    "11 + 12 = 23 (left: 6 11 23)\n",
                    "12 - 11 = 1 (left: 1 6 11)\n",
                    "12 - 6 = 6 (left: 6 11 11)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n"
                ],
                "new_ys": [
                    "12 / 6 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 / 11 = 1 (left: 1 2)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 - 11 = 0 (left: 0 2)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n6 + 12 = 18 (left: 18 22)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n22 - 12 = 10 (left: 6 10)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n22 - 6 = 16 (left: 12 16)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 * 2 = 24 (left: 6 24)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n22 + 2 = 24 (left: 6 24)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n22 / 2 = 11 (left: 6 11)\n",
                    "6 + 11 = 17 (left: 11 12 17)\n11 + 12 = 23 (left: 17 23)\n",
                    "6 + 11 = 17 (left: 11 12 17)\n17 + 12 = 29 (left: 11 29)\n",
                    "6 + 11 = 17 (left: 11 12 17)\n17 - 11 = 6 (left: 6 12)\n",
                    "6 + 11 = 17 (left: 11 12 17)\n17 - 12 = 5 (left: 5 11)\n",
                    "6 + 11 = 17 (left: 11 12 17)\n12 - 11 = 1 (left: 1 17)\n",
                    "11 + 12 = 23 (left: 6 11 23)\n6 + 11 = 17 (left: 17 23)\n",
                    "11 + 12 = 23 (left: 6 11 23)\n23 - 11 = 12 (left: 6 12)\n",
                    "11 + 12 = 23 (left: 6 11 23)\n23 - 6 = 17 (left: 11 17)\n",
                    "11 + 12 = 23 (left: 6 11 23)\n11 - 6 = 5 (left: 5 23)\n",
                    "11 + 12 = 23 (left: 6 11 23)\n23 + 6 = 29 (left: 11 29)\n",
                    "11 + 12 = 23 (left: 6 11 23)\n23 + 11 = 34 (left: 6 34)\n",
                    "12 - 11 = 1 (left: 1 6 11)\n1 + 6 = 7 (left: 7 11)\n",
                    "12 - 11 = 1 (left: 1 6 11)\n11 - 6 = 5 (left: 1 5)\n",
                    "12 - 11 = 1 (left: 1 6 11)\n11 - 1 = 10 (left: 6 10)\n",
                    "12 - 11 = 1 (left: 1 6 11)\n6 - 1 = 5 (left: 5 11)\n",
                    "12 - 11 = 1 (left: 1 6 11)\n11 + 1 = 12 (left: 6 12)\n",
                    "12 - 11 = 1 (left: 1 6 11)\n6 * 1 = 6 (left: 6 11)\n",
                    "12 - 11 = 1 (left: 1 6 11)\n11 / 1 = 11 (left: 6 11)\n",
                    "12 - 11 = 1 (left: 1 6 11)\n6 + 1 = 7 (left: 7 11)\n",
                    "12 - 6 = 6 (left: 6 11 11)\n6 + 11 = 17 (left: 11 17)\n",
                    "12 - 6 = 6 (left: 6 11 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "12 - 6 = 6 (left: 6 11 11)\n11 * 6 = 66 (left: 11 66)\n",
                    "12 - 6 = 6 (left: 6 11 11)\n11 / 11 = 1 (left: 1 6)\n",
                    "12 - 6 = 6 (left: 6 11 11)\n11 + 11 = 22 (left: 6 22)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n5 + 11 = 16 (left: 12 16)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n12 - 5 = 7 (left: 7 11)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n12 - 11 = 1 (left: 1 5)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n11 + 5 = 16 (left: 12 16)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n12 + 11 = 23 (left: 5 23)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n12 + 5 = 17 (left: 11 17)\n",
                    "11 - 6 = 5 (left: 5 11 12)\n11 - 5 = 6 (left: 6 12)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "12 / 6 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n6 + 12 = 18 (left: 18 22)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n22 - 12 = 10 (left: 6 10)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n22 - 6 = 16 (left: 12 16)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 11 11 12",
                "ys": [
                    "12 / 6 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n6 + 12 = 18 (left: 18 22)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n22 - 12 = 10 (left: 6 10)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n22 - 6 = 16 (left: 12 16)\n"
                ],
                "new_ys": [
                    "12 / 6 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 - 2 = 20 (left: 20)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 / 2 = 11 (left: 11)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n2 * 2 = 4 (left: 4 22)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n11 - 9 = 2 (left: 2)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 + 22 = 33 (left: 33)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n22 - 11 = 11 (left: 11)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n22 / 11 = 2 (left: 2)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 * 2 = 22 (left: 22)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n6 + 12 = 18 (left: 18 22)\n18 + 22 = 40 (left: 40)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n6 + 12 = 18 (left: 18 22)\n22 - 18 = 4 (left: 4)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n6 + 12 = 18 (left: 18 22)\n18 * 22 = 396 (left: 396)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n6 + 12 = 18 (left: 18 22)\n22 / 18 = 1.22 (left: 1.22)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n22 - 12 = 10 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n22 - 12 = 10 (left: 6 10)\n10 - 6 = 4 (left: 4)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n22 - 12 = 10 (left: 6 10)\n6 * 10 = 60 (left: 60)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n22 - 12 = 10 (left: 6 10)\n10 / 6 \u2248 1.67 (left: 1.67)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n22 - 6 = 16 (left: 12 16)\n12 + 16 = 28 (left: 28)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n22 - 6 = 16 (left: 12 16)\n16 - 12 = 4 (left: 4)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n22 - 6 = 16 (left: 12 16)\n12 * 16 = 192 (left: 192)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n22 - 6 = 16 (left: 12 16)\n16 / 12 = 1.333 (left: 1.333)\n"
                ],
                "values": [
                    100,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 6 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 - 2 = 20 (left: 20)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 / 2 = 11 (left: 11)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 + 22 = 33 (left: 33)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n22 - 11 = 11 (left: 11)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 * 2 = 22 (left: 22)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 11 11 12",
                "ys": [
                    "12 / 6 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 - 2 = 20 (left: 20)\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 / 2 = 11 (left: 11)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 + 22 = 33 (left: 33)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n22 - 11 = 11 (left: 11)\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 * 2 = 22 (left: 22)\n"
                ],
                "new_ys": [
                    "12 / 6 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: 11 + 11 + (12 / 6) = 24\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 - 2 = 20 (left: 20)\nInput: 20\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 - 2 = 20 (left: 20)\nPossible next steps:\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 - 2 = 20 (left: 20)\nNone\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 / 2 = 11 (left: 11)\nInput: 11\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 / 2 = 11 (left: 11)\nPossible next steps:\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 / 2 = 11 (left: 11)\nNone\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nInput: 20\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nPossible next steps:\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 - 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nNone\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 + 22 = 33 (left: 33)\nInput: 33\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 + 22 = 33 (left: 33)\nPossible next steps:\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 + 22 = 33 (left: 33)\nNo valid operations possible.\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n22 - 11 = 11 (left: 11)\nInput: 11\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n22 - 11 = 11 (left: 11)\nPossible next steps:\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n22 - 11 = 11 (left: 11)\nNone\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 * 2 = 22 (left: 22)\nInput: 22\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 * 2 = 22 (left: 22)\nPossible next steps:\n",
                    "12 / 6 = 2 (left: 2 11 11)\n11 * 2 = 22 (left: 11 22)\n11 * 2 = 22 (left: 22)\nNone (target reached)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 6 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: 11 + 11 + (12 / 6) = 24\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 - 2 = 20 (left: 20)\nInput: 20\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 - 2 = 20 (left: 20)\nPossible next steps:\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 - 2 = 20 (left: 20)\nNone\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 / 2 = 11 (left: 11)\nInput: 11\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 / 2 = 11 (left: 11)\nPossible next steps:\n",
                    "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 / 2 = 11 (left: 11)\nNone\n"
                ]
            }
        ],
        "idx": 885,
        "ys": [
            "12 / 6 = 2 (left: 2 11 11)\n2 + 11 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: 11 + 11 + (12 / 6) = 24\n",
            "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 - 2 = 20 (left: 20)\nInput: 20\n",
            "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 - 2 = 20 (left: 20)\nPossible next steps:\n",
            "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 - 2 = 20 (left: 20)\nNone\n",
            "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 / 2 = 11 (left: 11)\nInput: 11\n",
            "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 / 2 = 11 (left: 11)\nPossible next steps:\n",
            "11 + 11 = 22 (left: 6 12 22)\n12 / 6 = 2 (left: 2 22)\n22 / 2 = 11 (left: 11)\nNone\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 147421,
            "prompt_tokens": 589318,
            "cost": 26.5248
        },
        "time_spent": 35.226325035095215
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 6 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 6 = 9 (left: 9 9 11)\n",
                    "9 + 3 = 12 (left: 6 11 12)\n",
                    "11 + 3 = 14 (left: 6 9 14)\n",
                    "6 * 3 = 18 (left: 9 11 18)\n",
                    "9 - 3 = 6 (left: 6 6 11)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n",
                    "9 / 3 = 3 (left: 3 6 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "11 - 6 = 5 (left: 3 5 9)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n",
                    "9 + 3 = 12 (left: 6 11 12)\n",
                    "11 + 3 = 14 (left: 6 9 14)\n",
                    "6 * 3 = 18 (left: 9 11 18)\n",
                    "9 - 3 = 6 (left: 6 6 11)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 6 9 11",
                "ys": [
                    "11 - 6 = 5 (left: 3 5 9)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n",
                    "9 + 3 = 12 (left: 6 11 12)\n",
                    "11 + 3 = 14 (left: 6 9 14)\n",
                    "6 * 3 = 18 (left: 9 11 18)\n",
                    "9 - 3 = 6 (left: 6 6 11)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n"
                ],
                "new_ys": [
                    "11 - 6 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 - 3 = 2 (left: 2 9)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 / 3 = 3 (left: 3 5)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 + 9 = 18 (left: 11 18)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 - 9 = 2 (left: 2 9)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 * 9 = 81 (left: 11 81)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n",
                    "9 + 3 = 12 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n",
                    "9 + 3 = 12 (left: 6 11 12)\n12 - 6 = 6 (left: 6 11)\n",
                    "9 + 3 = 12 (left: 6 11 12)\n12 + 11 = 23 (left: 6 23)\n",
                    "9 + 3 = 12 (left: 6 11 12)\n12 - 11 = 1 (left: 1 6)\n",
                    "9 + 3 = 12 (left: 6 11 12)\n6 * 2 = 12 (left: 11 12)\n",
                    "9 + 3 = 12 (left: 6 11 12)\n11 + 1 = 12 (left: 6 12)\n",
                    "11 + 3 = 14 (left: 6 9 14)\n6 + 9 = 15 (left: 14 15)\n",
                    "11 + 3 = 14 (left: 6 9 14)\n14 + 6 = 20 (left: 9 20)\n",
                    "11 + 3 = 14 (left: 6 9 14)\n14 - 6 = 8 (left: 8 9)\n",
                    "11 + 3 = 14 (left: 6 9 14)\n14 - 9 = 5 (left: 5 6)\n",
                    "11 + 3 = 14 (left: 6 9 14)\n9 - 6 = 3 (left: 3 14)\n",
                    "11 + 3 = 14 (left: 6 9 14)\n14 / 2 = 7 (left: 6 7 9)\n",
                    "6 * 3 = 18 (left: 9 11 18)\n9 + 11 = 20 (left: 18 20)\n",
                    "6 * 3 = 18 (left: 9 11 18)\n18 + 11 = 29 (left: 9 29)\n",
                    "6 * 3 = 18 (left: 9 11 18)\n18 - 9 = 9 (left: 9 11)\n",
                    "6 * 3 = 18 (left: 9 11 18)\n18 - 11 = 7 (left: 7 9)\n",
                    "6 * 3 = 18 (left: 9 11 18)\n11 - 9 = 2 (left: 2 18)\n",
                    "9 - 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n",
                    "9 - 3 = 6 (left: 6 6 11)\n11 + 6 = 17 (left: 6 17)\n",
                    "9 - 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 5 6)\n",
                    "9 - 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n",
                    "9 - 3 = 6 (left: 6 6 11)\n11 / 6 \u2248 1.83 (left: 1.83 6)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n6 + 8 = 14 (left: 9 14)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n8 - 6 = 2 (left: 2 9)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 + 6 = 15 (left: 8 15)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n8 + 9 = 17 (left: 6 17)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n6 * 8 = 48 (left: 9 48)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "11 - 6 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 - 3 = 2 (left: 2 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 6 9 11",
                "ys": [
                    "11 - 6 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 - 3 = 2 (left: 2 9)\n"
                ],
                "new_ys": [
                    "11 - 6 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n9 - 8 = 1 (left: 1)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n3 + 14 = 17 (left: 17)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n14 / 3 \u2248 4.67 (left: 4.67)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n3 * 14 = 42 (left: 42)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 + 4 = 7 (left: 7)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n4 - 3 = 1 (left: 1)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n6 - 5 = 1 (left: 1)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 - 3 = 2 (left: 2 9)\nInput: 2 9\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 - 3 = 2 (left: 2 9)\nPossible next steps:\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 - 3 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 - 3 = 2 (left: 2 9)\n9 - 2 = 7 (left: 7)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 - 3 = 2 (left: 2 9)\n9 / 3 = 3 (left: 2 3)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 - 3 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n"
                ],
                "values": [
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "11 - 6 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n3 + 14 = 17 (left: 17)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 6 9 11",
                "ys": [
                    "11 - 6 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n3 + 14 = 17 (left: 17)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "11 - 6 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (3 * (11 - 6)) = 24\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 - 3) * (9 - 6) = 24\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNo valid operations possible with a single number.\n",
                    "11 - 6 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
                    "11 - 6 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "11 - 6 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nNo valid operations possible with a single number.\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n3 + 14 = 17 (left: 17)\nInput: 17\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n3 + 14 = 17 (left: 17)\nPossible next steps:\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n3 + 14 = 17 (left: 17)\nThere are no possible next steps with only one number.\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\nInput: 11\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\nPossible next steps:\n",
                    "11 - 6 = 5 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\nNo valid operations possible with a single number.\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "11 - 6 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 6 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (3 * (11 - 6)) = 24\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 - 3) * (9 - 6) = 24\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNo valid operations possible with a single number.\n",
                    "11 - 6 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
                    "11 - 6 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 886,
        "ys": [
            "11 - 6 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (3 * (11 - 6)) = 24\n",
            "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 - 3) * (9 - 6) = 24\n",
            "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
            "11 - 3 = 8 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNo valid operations possible with a single number.\n",
            "11 - 6 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 17\n",
            "11 - 6 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 149039,
            "prompt_tokens": 595874,
            "cost": 26.818559999999998
        },
        "time_spent": 36.20731592178345
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 7 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 7 = 12 (left: 9 12 13)\n",
                    "13 + 5 = 18 (left: 7 9 18)\n",
                    "13 - 9 = 4 (left: 4 5 7)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n",
                    "9 + 5 = 14 (left: 7 13 14)\n",
                    "9 - 7 = 2 (left: 2 5 13)\n",
                    "7 + 5 = 12 (left: 9 12 13)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "13 - 5 = 8 (left: 7 8 9)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n",
                    "13 + 5 = 18 (left: 7 9 18)\n",
                    "13 - 9 = 4 (left: 4 5 7)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n",
                    "9 + 5 = 14 (left: 7 13 14)\n",
                    "9 - 7 = 2 (left: 2 5 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 7 9 13",
                "ys": [
                    "13 - 5 = 8 (left: 7 8 9)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n",
                    "13 + 5 = 18 (left: 7 9 18)\n",
                    "13 - 9 = 4 (left: 4 5 7)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n",
                    "9 + 5 = 14 (left: 7 13 14)\n",
                    "9 - 7 = 2 (left: 2 5 13)\n"
                ],
                "new_ys": [
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 - 8 = 1 (left: 1 7)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 * 8 = 56 (left: 9 56)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n13 - 9 = 4 (left: 4 12)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n13 - 12 = 1 (left: 1 9)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n12 - 9 = 3 (left: 3 13)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n9 * 12 = 108 (left: 13 108)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n13 + 12 = 25 (left: 9 25)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n13 + 9 = 22 (left: 12 22)\n",
                    "13 + 5 = 18 (left: 7 9 18)\n7 + 9 = 16 (left: 16 18)\n",
                    "13 + 5 = 18 (left: 7 9 18)\n18 - 9 = 9 (left: 7 9)\n",
                    "13 + 5 = 18 (left: 7 9 18)\n18 - 7 = 11 (left: 9 11)\n",
                    "13 + 5 = 18 (left: 7 9 18)\n9 - 7 = 2 (left: 2 18)\n",
                    "13 + 5 = 18 (left: 7 9 18)\n18 / 9 = 2 (left: 2 7)\n",
                    "13 + 5 = 18 (left: 7 9 18)\n9 * 2 = 18 (left: 7 18)\n",
                    "13 - 9 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n",
                    "13 - 9 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n",
                    "13 - 9 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 5)\n",
                    "13 - 9 = 4 (left: 4 5 7)\n7 - 5 = 2 (left: 2 4)\n",
                    "13 - 9 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n",
                    "13 - 9 = 4 (left: 4 5 7)\n5 * 7 = 35 (left: 4 35)\n",
                    "13 - 9 = 4 (left: 4 5 7)\n7 / 4 = 1.75 (left: 1.75 5)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n6 + 9 = 15 (left: 5 15)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n9 - 6 = 3 (left: 3 5)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n5 * 6 = 30 (left: 9 30)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n6 * 9 = 54 (left: 5 54)\n",
                    "9 + 5 = 14 (left: 7 13 14)\n7 + 13 = 20 (left: 14 20)\n",
                    "9 + 5 = 14 (left: 7 13 14)\n14 + 13 = 27 (left: 7 27)\n",
                    "9 + 5 = 14 (left: 7 13 14)\n14 - 7 = 7 (left: 7 13)\n",
                    "9 + 5 = 14 (left: 7 13 14)\n14 - 13 = 1 (left: 1 7)\n",
                    "9 + 5 = 14 (left: 7 13 14)\n13 - 7 = 6 (left: 6 14)\n",
                    "9 + 5 = 14 (left: 7 13 14)\n14 * 7 = 98 (left: 13 98)\n",
                    "9 + 5 = 14 (left: 7 13 14)\n14 / 7 = 2 (left: 2 13)\n",
                    "9 - 7 = 2 (left: 2 5 13)\n2 + 5 = 7 (left: 7 13)\n",
                    "9 - 7 = 2 (left: 2 5 13)\n13 + 2 = 15 (left: 5 15)\n",
                    "9 - 7 = 2 (left: 2 5 13)\n13 - 5 = 8 (left: 2 8)\n",
                    "9 - 7 = 2 (left: 2 5 13)\n13 - 2 = 11 (left: 5 11)\n",
                    "9 - 7 = 2 (left: 2 5 13)\n5 - 2 = 3 (left: 3 13)\n",
                    "9 - 7 = 2 (left: 2 5 13)\n5 * 2 = 10 (left: 10 13)\n",
                    "9 - 7 = 2 (left: 2 5 13)\n13 / 2 = 6.5 (left: 5 6.5)\n"
                ],
                "values": [
                    100,
                    50,
                    0,
                    50,
                    0,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 7 9 13",
                "ys": [
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n"
                ],
                "new_ys": [
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 8)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 * 2 = 16 (left: 16 16)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n8 - 2 = 6 (left: 6)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n8 / 2 = 4 (left: 4)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n9 / 1 = 9 (left: 9)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 - 13 = 8 (left: 8)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 7 9 13",
                "ys": [
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (7 + (13 - 5)) = 24\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: 7 + ((13 - 5) + 9) = 24\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (13 - 5) + (7 + 9) = 24\n",
                    "13 - 7 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 5) * (13 - 7) = 24\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n14 + 10 = 24 (left: 8 8 24)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "13 - 7 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n10 * 8 = 80 (left: 14 80)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n80 / 10 = 8 (left: 8 8 14)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (7 + (13 - 5)) = 24\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: 7 + ((13 - 5) + 9) = 24\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (13 - 5) + (7 + 9) = 24\n",
                    "13 - 7 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 5) * (13 - 7) = 24\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n14 + 10 = 24 (left: 8 8 24)\n"
                ]
            }
        ],
        "idx": 887,
        "ys": [
            "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (7 + (13 - 5)) = 24\n",
            "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: 7 + ((13 - 5) + 9) = 24\n",
            "13 - 5 = 8 (left: 7 8 9)\n7 + 9 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (13 - 5) + (7 + 9) = 24\n",
            "13 - 7 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 5) * (13 - 7) = 24\n",
            "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
            "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
            "13 - 5 = 8 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n14 + 10 = 24 (left: 8 8 24)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 150880,
            "prompt_tokens": 603240,
            "cost": 27.15
        },
        "time_spent": 36.942699909210205
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n",
                    "4 * 2 = 8 (left: 8 12 12)\n",
                    "12 - 2 = 10 (left: 4 10 12)\n",
                    "12 / 4 = 3 (left: 2 3 12)\n",
                    "12 + 12 = 24 (left: 2 4 24)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n",
                    "4 * 2 = 8 (left: 8 12 12)\n",
                    "12 - 2 = 10 (left: 4 10 12)\n",
                    "12 / 4 = 3 (left: 2 3 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 12 12",
                "ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n",
                    "4 * 2 = 8 (left: 8 12 12)\n",
                    "12 - 2 = 10 (left: 4 10 12)\n",
                    "12 / 4 = 3 (left: 2 3 12)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 * 6 = 72 (left: 12 72)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 - 4 = 8 (left: 6 8)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 / 4 = 3 (left: 3 6)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 + 4 = 16 (left: 6 16)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 12 24)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n2 + 8 = 10 (left: 10 12)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n8 + 12 = 20 (left: 2 20)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n12 - 8 = 4 (left: 2 4)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n12 / 2 = 6 (left: 6 8)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n8 - 2 = 6 (left: 6 12)\n",
                    "12 - 4 = 8 (left: 2 8 12)\n12 - 2 = 10 (left: 8 10)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n4 + 12 = 16 (left: 14 16)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 + 4 = 18 (left: 12 18)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 + 12 = 26 (left: 4 26)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 10 12)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 - 12 = 2 (left: 2 4)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n12 - 4 = 8 (left: 8 14)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n12 / 4 = 3 (left: 3 14)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 / 2 = 7 (left: 4 7)\n",
                    "4 * 2 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "4 * 2 = 8 (left: 8 12 12)\n12 + 12 = 24 (left: 8 24)\n",
                    "4 * 2 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "4 * 2 = 8 (left: 8 12 12)\n12 * 2 = 24 (left: 8 24)\n",
                    "4 * 2 = 8 (left: 8 12 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "12 - 2 = 10 (left: 4 10 12)\n4 + 10 = 14 (left: 12 14)\n",
                    "12 - 2 = 10 (left: 4 10 12)\n12 - 4 = 8 (left: 8 10)\n",
                    "12 - 2 = 10 (left: 4 10 12)\n12 - 10 = 2 (left: 2 4)\n",
                    "12 - 2 = 10 (left: 4 10 12)\n10 - 4 = 6 (left: 6 12)\n",
                    "12 - 2 = 10 (left: 4 10 12)\n12 / 4 = 3 (left: 3 10)\n",
                    "12 - 2 = 10 (left: 4 10 12)\n4 * 3 = 12 (left: 10 12)\n",
                    "12 - 2 = 10 (left: 4 10 12)\n10 + 2 = 12 (left: 4 12)\n",
                    "12 / 4 = 3 (left: 2 3 12)\n2 + 3 = 5 (left: 5 12)\n",
                    "12 / 4 = 3 (left: 2 3 12)\n3 + 12 = 15 (left: 2 15)\n",
                    "12 / 4 = 3 (left: 2 3 12)\n12 - 3 = 9 (left: 2 9)\n",
                    "12 / 4 = 3 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n",
                    "12 / 4 = 3 (left: 2 3 12)\n3 - 2 = 1 (left: 1 12)\n",
                    "12 / 4 = 3 (left: 2 3 12)\n12 - 2 = 10 (left: 3 10)\n",
                    "12 / 4 = 3 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 12 12",
                "ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 * 18 = 216 (left: 216)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 / 12 = 1.5 (left: 1.5)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n24 / 6 = 4 (left: 4)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 + 12 = 24 (left: 6 24)\n6 * 24 = 144 (left: 144)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)\n12 - 10 = 2 (left: 2)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)\n10 * 12 = 120 (left: 120)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)\n12 / 10 = 1.2 (left: 1.2)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 12 12",
                "ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / (2 + 4)) * 12 = 24\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (12 - 12 / 2) = 24\n",
                    "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 2 - 4) * 12 = 24\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n(No possible next steps with only one number)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 10\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nPossible next steps:\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 8 = 80 (left: 14 80)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 8 24)\n",
                    "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNone\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / (2 + 4)) * 12 = 24\n",
                    "12 / 2 = 6 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (12 - 12 / 2) = 24\n",
                    "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 2 - 4) * 12 = 24\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n(No possible next steps with only one number)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 10\n"
                ]
            }
        ],
        "idx": 888,
        "ys": [
            "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / (2 + 4)) * 12 = 24\n",
            "12 / 2 = 6 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (12 - 12 / 2) = 24\n",
            "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 2 - 4) * 12 = 24\n",
            "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
            "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
            "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n(No possible next steps with only one number)\n",
            "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 10\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 152705,
            "prompt_tokens": 610201,
            "cost": 27.46833
        },
        "time_spent": 39.97076988220215
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 9 11 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 9 = 13 (left: 11 12 13)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n",
                    "12 - 9 = 3 (left: 3 4 11)\n",
                    "11 + 4 = 15 (left: 9 12 15)\n",
                    "12 + 4 = 16 (left: 9 11 16)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "12 / 4 = 3 (left: 3 9 11)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n",
                    "12 - 9 = 3 (left: 3 4 11)\n",
                    "11 + 4 = 15 (left: 9 12 15)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 9 11 12",
                "ys": [
                    "12 / 4 = 3 (left: 3 9 11)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n",
                    "12 - 9 = 3 (left: 3 4 11)\n",
                    "11 + 4 = 15 (left: 9 12 15)\n"
                ],
                "new_ys": [
                    "12 / 4 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n11 + 3 = 14 (left: 9 14)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 9)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n11 - 9 = 2 (left: 2 3)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n11 + 12 = 23 (left: 13 23)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 12 = 1 (left: 1 11)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n12 + 13 = 25 (left: 11 25)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n11 * 12 = 132 (left: 13 132)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 + 11 = 24 (left: 12 24)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n5 + 11 = 16 (left: 12 16)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n12 - 5 = 7 (left: 7 11)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n12 - 11 = 1 (left: 1 5)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n11 + 12 = 23 (left: 5 23)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n5 * 11 = 55 (left: 12 55)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n12 + 5 = 17 (left: 11 17)\n",
                    "9 - 4 = 5 (left: 5 11 12)\n11 - 5 = 6 (left: 6 12)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n7 + 9 = 16 (left: 12 16)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n7 * 9 = 63 (left: 12 63)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n12 + 7 = 19 (left: 9 19)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n12 + 9 = 21 (left: 7 21)\n",
                    "11 - 4 = 7 (left: 7 9 12)\nInput: 3 5 7 11\n",
                    "12 - 4 = 8 (left: 8 9 11)\n8 + 9 = 17 (left: 11 17)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n11 - 8 = 3 (left: 3 9)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n8 * 9 = 72 (left: 11 72)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n11 + 9 = 20 (left: 8 20)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n11 + 8 = 19 (left: 9 19)\n",
                    "12 - 9 = 3 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "12 - 9 = 3 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n",
                    "12 - 9 = 3 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n",
                    "12 - 9 = 3 (left: 3 4 11)\n11 - 3 = 8 (left: 4 8)\n",
                    "12 - 9 = 3 (left: 3 4 11)\n3 * 4 = 12 (left: 11 12)\n",
                    "12 - 9 = 3 (left: 3 4 11)\n11 + 3 = 14 (left: 4 14)\n",
                    "12 - 9 = 3 (left: 3 4 11)\n11 / 11 = 1 (left: 1 3 4)\n",
                    "11 + 4 = 15 (left: 9 12 15)\n9 + 12 = 21 (left: 15 21)\n",
                    "11 + 4 = 15 (left: 9 12 15)\n15 - 9 = 6 (left: 6 12)\n",
                    "11 + 4 = 15 (left: 9 12 15)\n15 - 12 = 3 (left: 3 9)\n",
                    "11 + 4 = 15 (left: 9 12 15)\n12 - 9 = 3 (left: 3 15)\n",
                    "11 + 4 = 15 (left: 9 12 15)\n15 + 9 = 24 (left: 12 24)\n",
                    "11 + 4 = 15 (left: 9 12 15)\n12 + 15 = 27 (left: 9 27)\n",
                    "11 + 4 = 15 (left: 9 12 15)\n12 * 9 = 108 (left: 15 108)\n",
                    "11 + 4 = 15 (left: 9 12 15)\n15 / 3 = 5 (left: 5 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n11 + 3 = 14 (left: 9 14)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 9)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 9 11 12",
                "ys": [
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n11 + 3 = 14 (left: 9 14)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 9)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n"
                ],
                "new_ys": [
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n12 - 11 = 1 (left: 1)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 * 12 = 132 (left: 132)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n12 / 11 = 1.09 (left: 1.09)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n11 + 3 = 14 (left: 9 14)\n9 + 14 = 23 (left: 23)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n11 + 3 = 14 (left: 9 14)\n14 - 9 = 5 (left: 5)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 9)\n9 - 8 = 1 (left: 1)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n27 - 11 = 16 (left: 16)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n27 + 11 = 38 (left: 38)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n27 / 11 = 2 (left: 2)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n9 * 3 = 27 (left: 11 27)\n27 * 11 = 297 (left: 297)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n11 - 3 = 8 (left: 8)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n11 / 3 = 3.67 (left: 3.67)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 9 11 12",
                "ys": [
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n"
                ],
                "new_ys": [
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 + 9 - 11) * 12 = 24\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - (11 - 4)) * 12 = 24\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nInput: 14\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nPossible next steps:\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nNo possible steps with a single number.\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nNone\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 10\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nPossible next steps:\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n8 + 10 = 18 (left: 8 14 18)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "12 / 4 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nInput: 23\n",
                    "12 / 4 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nPossible next steps:\n",
                    "12 / 4 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nNone\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 + 9 - 11) * 12 = 24\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - (11 - 4)) * 12 = 24\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nInput: 14\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nPossible next steps:\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nNo possible steps with a single number.\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n"
                ]
            }
        ],
        "idx": 889,
        "ys": [
            "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 + 9 - 11) * 12 = 24\n",
            "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - (11 - 4)) * 12 = 24\n",
            "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nInput: 14\n",
            "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nPossible next steps:\n",
            "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nNo possible steps with a single number.\n",
            "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
            "4 + 9 = 13 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 154550,
            "prompt_tokens": 616757,
            "cost": 27.775709999999997
        },
        "time_spent": 37.49956297874451
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 8 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 + 8 = 15 (left: 9 13 15)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n",
                    "13 - 9 = 4 (left: 4 7 8)\n",
                    "13 - 8 = 5 (left: 5 7 9)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n",
                    "7 * 2 = 14 (left: 8 9 14)\n",
                    "8 + 9 = 17 (left: 7 13 17)\n",
                    "13 + 7 = 20 (left: 8 9 20)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "7 + 8 = 15 (left: 9 13 15)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n",
                    "13 - 9 = 4 (left: 4 7 8)\n",
                    "13 - 8 = 5 (left: 5 7 9)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n",
                    "7 * 2 = 14 (left: 8 9 14)\n",
                    "8 + 9 = 17 (left: 7 13 17)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 8 9 13",
                "ys": [
                    "7 + 8 = 15 (left: 9 13 15)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n",
                    "13 - 9 = 4 (left: 4 7 8)\n",
                    "13 - 8 = 5 (left: 5 7 9)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n",
                    "7 * 2 = 14 (left: 8 9 14)\n",
                    "8 + 9 = 17 (left: 7 13 17)\n"
                ],
                "new_ys": [
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 13 = 2 (left: 2 9)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 + 9 = 24 (left: 13 24)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n2 + 8 = 10 (left: 10 13)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n8 + 13 = 21 (left: 2 21)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n13 - 8 = 5 (left: 2 5)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n13 - 2 = 11 (left: 8 11)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n8 - 2 = 6 (left: 6 13)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n13 / 2 = 6.5 (left: 6.5 8)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n8 * 2 = 16 (left: 13 16)\n",
                    "13 - 9 = 4 (left: 4 7 8)\n4 + 7 = 11 (left: 8 11)\n",
                    "13 - 9 = 4 (left: 4 7 8)\n8 - 4 = 4 (left: 4 7)\n",
                    "13 - 9 = 4 (left: 4 7 8)\n8 - 7 = 1 (left: 1 4)\n",
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n",
                    "13 - 9 = 4 (left: 4 7 8)\n4 * 7 = 28 (left: 8 28)\n",
                    "13 - 9 = 4 (left: 4 7 8)\n8 * 4 = 32 (left: 7 32)\n",
                    "13 - 9 = 4 (left: 4 7 8)\n8 * 7 = 56 (left: 4 56)\n",
                    "13 - 9 = 4 (left: 4 7 8)\n8 / 4 = 2 (left: 2 7)\n",
                    "13 - 8 = 5 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "13 - 8 = 5 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n",
                    "13 - 8 = 5 (left: 5 7 9)\n9 - 7 = 2 (left: 2 5)\n",
                    "13 - 8 = 5 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n",
                    "13 - 8 = 5 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n",
                    "13 - 8 = 5 (left: 5 7 9)\n9 + 5 = 14 (left: 7 14)\n",
                    "13 - 8 = 5 (left: 5 7 9)\n9 + 7 = 16 (left: 5 16)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n6 + 8 = 14 (left: 9 14)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n8 - 6 = 2 (left: 2 9)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 8 = 1 (left: 1 6)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n6 * 8 = 48 (left: 9 48)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n8 + 9 = 17 (left: 6 17)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n6 + 9 = 15 (left: 8 15)\n",
                    "7 * 2 = 14 (left: 8 9 14)\n8 + 9 = 17 (left: 14 17)\n",
                    "7 * 2 = 14 (left: 8 9 14)\n14 + 9 = 23 (left: 8 23)\n",
                    "7 * 2 = 14 (left: 8 9 14)\n14 - 9 = 5 (left: 5 8)\n",
                    "7 * 2 = 14 (left: 8 9 14)\n14 - 8 = 6 (left: 6 9)\n",
                    "7 * 2 = 14 (left: 8 9 14)\n9 - 8 = 1 (left: 1 14)\n",
                    "7 * 2 = 14 (left: 8 9 14)\n14 / 2 = 7 (left: 7 9)\n",
                    "8 + 9 = 17 (left: 7 13 17)\n7 + 13 = 20 (left: 17 20)\n",
                    "8 + 9 = 17 (left: 7 13 17)\n17 + 13 = 30 (left: 7 30)\n",
                    "8 + 9 = 17 (left: 7 13 17)\n17 - 13 = 4 (left: 4 7)\n",
                    "8 + 9 = 17 (left: 7 13 17)\n17 - 7 = 10 (left: 10 13)\n",
                    "8 + 9 = 17 (left: 7 13 17)\n13 - 7 = 6 (left: 6 17)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 13 = 2 (left: 2 9)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 + 9 = 24 (left: 13 24)\n"
                ]
            },
            {
                "step": 2,
                "x": "7 8 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 13 = 2 (left: 2 9)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 + 9 = 24 (left: 13 24)\n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n15 + 22 = 37 (left: 37)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n22 - 15 = 7 (left: 7)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n15 * 22 = 330 (left: 330)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n22 / 15 \u2248 1.47 (left: 1.47)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n13 - 6 = 7 (left: 7)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 13 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 13 = 2 (left: 2 9)\n9 - 2 = 7 (left: 7)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 13 = 2 (left: 2 9)\n9 / 3 = 3 (left: 3)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 13 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n4 + 15 = 19 (left: 19)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n15 - 4 = 11 (left: 11)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n15 / 3 = 5 (left: 4 5)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n4 * 15 = 60 (left: 60)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 + 9 = 24 (left: 13 24)\n13 + 24 = 37 (left: 37)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 + 9 = 24 (left: 13 24)\n24 - 13 = 11 (left: 11)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 + 9 = 24 (left: 13 24)\n24 / 13 \u2248 1.85 (left: 1.85)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 + 9 = 24 (left: 13 24)\n13 * 24 = 312 (left: 312)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n15 + 22 = 37 (left: 37)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 13 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "7 8 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n15 + 22 = 37 (left: 37)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 13 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - (13 - 9)) * 8 = 24\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 - (13 - 7)) * 8 = 24\n",
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n(There are no possible next steps with a single number)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n15 + 22 = 37 (left: 37)\nInput: 37\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n15 + 22 = 37 (left: 37)\nPossible next steps:\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n15 + 22 = 37 (left: 37)\nNone\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\nInput: 19\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\nPossible next steps:\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n(No possible operations with a single number)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 13 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nInput: 11\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 13 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nPossible next steps:\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 13 = 2 (left: 2 9)\n2 + 9 = 11 (left: 11)\nNone\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - (13 - 9)) * 8 = 24\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 - (13 - 7)) * 8 = 24\n",
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n(There are no possible next steps with a single number)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 890,
        "ys": [
            "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - (13 - 9)) * 8 = 24\n",
            "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 - (13 - 7)) * 8 = 24\n",
            "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
            "13 - 9 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n(There are no possible next steps with a single number)\n",
            "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 156250,
            "prompt_tokens": 623313,
            "cost": 28.074389999999998
        },
        "time_spent": 37.73571515083313
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 6 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 8 12 12)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n",
                    "12 + 2 = 14 (left: 6 12 14)\n",
                    "2 * 6 = 12 (left: 12 12 12)\n",
                    "12 - 6 = 6 (left: 2 6 12)\n",
                    "12 - 2 = 10 (left: 6 10 12)\n",
                    "12 / 6 = 2 (left: 2 2 12)\n",
                    "12 + 12 = 24 (left: 2 6 24)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 6 6 12)\n",
                    "12 - 6 = 6 (left: 2 6 12)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n",
                    "12 + 2 = 14 (left: 6 12 14)\n",
                    "2 * 6 = 12 (left: 12 12 12)\n",
                    "12 - 2 = 10 (left: 6 10 12)\n",
                    "12 / 6 = 2 (left: 2 2 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 6 12 12",
                "ys": [
                    "12 / 2 = 6 (left: 6 6 12)\n",
                    "12 - 6 = 6 (left: 2 6 12)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n",
                    "12 + 2 = 14 (left: 6 12 14)\n",
                    "2 * 6 = 12 (left: 12 12 12)\n",
                    "12 - 2 = 10 (left: 6 10 12)\n",
                    "12 / 6 = 2 (left: 2 2 12)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 6)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n",
                    "12 - 6 = 6 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n",
                    "12 - 6 = 6 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n",
                    "12 - 6 = 6 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n",
                    "12 - 6 = 6 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n",
                    "12 - 6 = 6 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n",
                    "12 - 6 = 6 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n",
                    "12 - 6 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 + 12 = 24 (left: 8 24)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 * 2 = 24 (left: 8 24)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "12 + 2 = 14 (left: 6 12 14)\n6 + 12 = 18 (left: 14 18)\n",
                    "12 + 2 = 14 (left: 6 12 14)\n14 + 6 = 20 (left: 12 20)\n",
                    "12 + 2 = 14 (left: 6 12 14)\n14 + 12 = 26 (left: 6 26)\n",
                    "12 + 2 = 14 (left: 6 12 14)\n14 - 6 = 8 (left: 8 12)\n",
                    "12 + 2 = 14 (left: 6 12 14)\n14 - 12 = 2 (left: 2 6)\n",
                    "12 + 2 = 14 (left: 6 12 14)\n12 - 6 = 6 (left: 6 14)\n",
                    "12 + 2 = 14 (left: 6 12 14)\n12 * 2 = 24 (left: 6 24)\n",
                    "12 + 2 = 14 (left: 6 12 14)\n14 * 2 = 28 (left: 6 28)\n",
                    "2 * 6 = 12 (left: 12 12 12)\n12 + 12 = 24 (left: 12 24)\n",
                    "2 * 6 = 12 (left: 12 12 12)\n12 * 12 = 144 (left: 12 144)\n",
                    "2 * 6 = 12 (left: 12 12 12)\n12 / 12 = 1 (left: 1 12)\n",
                    "2 * 6 = 12 (left: 12 12 12)\n12 - 12 = 0 (left: 0 12)\n",
                    "12 - 2 = 10 (left: 6 10 12)\n6 + 10 = 16 (left: 12 16)\n",
                    "12 - 2 = 10 (left: 6 10 12)\n12 - 6 = 6 (left: 6 10)\n",
                    "12 - 2 = 10 (left: 6 10 12)\n12 - 10 = 2 (left: 2 6)\n",
                    "12 - 2 = 10 (left: 6 10 12)\n10 + 6 = 16 (left: 12 16)\n",
                    "12 - 2 = 10 (left: 6 10 12)\n12 + 6 = 18 (left: 10 18)\n",
                    "12 - 2 = 10 (left: 6 10 12)\n12 + 10 = 22 (left: 6 22)\n",
                    "12 - 2 = 10 (left: 6 10 12)\n12 / 6 = 2 (left: 2 10)\n",
                    "12 - 2 = 10 (left: 6 10 12)\n10 - 6 = 4 (left: 4 12)\n",
                    "12 / 6 = 2 (left: 2 2 12)\n2 + 2 = 4 (left: 4 12)\n",
                    "12 / 6 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n",
                    "12 / 6 = 2 (left: 2 2 12)\n12 + 2 = 14 (left: 2 14)\n",
                    "12 / 6 = 2 (left: 2 2 12)\n12 - 2 = 10 (left: 2 10)\n",
                    "12 / 6 = 2 (left: 2 2 12)\n12 / 2 = 6 (left: 2 6)\n"
                ],
                "values": [
                    100,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n",
                    "12 - 6 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 6 12 12",
                "ys": [
                    "12 / 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n",
                    "12 - 6 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 6)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n12 + 36 = 48 (left: 48)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n36 - 12 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n36 / 12 = 3 (left: 3)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n",
                    "12 - 6 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 6 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "12 - 6 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "12 - 6 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 6)\n2 + 6 = 8 (left: 8)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 6)\n6 - 2 = 4 (left: 4)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 6)\n6 / 2 = 3 (left: 3)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    50,
                    100,
                    50,
                    0,
                    50,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n36 - 12 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "12 - 6 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 6 12 12",
                "ys": [
                    "12 / 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n36 - 12 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "12 - 6 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / 2 + 6) + 12 = 24\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n36 - 12 = 24 (left: 24)\nAnswer: (12 / 2) * 6 - 12 = 24\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (12 / 2) + 12 + 6 = 24\n",
                    "12 - 6 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((12 - 6) * 2) + 12 = 24\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 6) * (12 / 4) = 24\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\nInput: 36\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\nPossible next steps:\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\nNone (Solution found)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / 2 + 6) + 12 = 24\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n36 - 12 = 24 (left: 24)\nAnswer: (12 / 2) * 6 - 12 = 24\n",
                    "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (12 / 2) + 12 + 6 = 24\n",
                    "12 - 6 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((12 - 6) * 2) + 12 = 24\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 6) * (12 / 4) = 24\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\nInput: 36\n",
                    "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 891,
        "ys": [
            "12 / 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / 2 + 6) + 12 = 24\n",
            "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n36 - 12 = 24 (left: 24)\nAnswer: (12 / 2) * 6 - 12 = 24\n",
            "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: (12 / 2) + 12 + 6 = 24\n",
            "12 - 6 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((12 - 6) * 2) + 12 = 24\n",
            "2 + 6 = 8 (left: 8 12 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 6) * (12 / 4) = 24\n",
            "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\nInput: 36\n",
            "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n12 * 3 = 36 (left: 36)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 157973,
            "prompt_tokens": 631084,
            "cost": 28.410899999999998
        },
        "time_spent": 34.504948139190674
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 5 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n",
                    "5 + 6 = 11 (left: 3 4 11)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n",
                    "6 - 3 = 3 (left: 3 4 5)\n",
                    "6 - 4 = 2 (left: 2 3 5)\n",
                    "6 - 5 = 1 (left: 1 3 4)\n",
                    "3 * 5 = 15 (left: 4 6 15)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n",
                    "5 + 6 = 11 (left: 3 4 11)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n",
                    "6 - 3 = 3 (left: 3 4 5)\n",
                    "6 - 4 = 2 (left: 2 3 5)\n",
                    "6 - 5 = 1 (left: 1 3 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 5 6",
                "ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n",
                    "5 + 6 = 11 (left: 3 4 11)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n",
                    "6 - 3 = 3 (left: 3 4 5)\n",
                    "6 - 4 = 2 (left: 2 3 5)\n",
                    "6 - 5 = 1 (left: 1 3 4)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n7 - 5 = 2 (left: 2 6)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n7 - 6 = 1 (left: 1 5)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 * 7 = 42 (left: 5 42)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n7 / 5 = 1 r2 (left: 1 2 6)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n9 - 6 = 3 (left: 3 3)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n3 * 6 = 18 (left: 9 18)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n",
                    "5 + 6 = 11 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "5 + 6 = 11 (left: 3 4 11)\n4 + 11 = 15 (left: 3 15)\n",
                    "5 + 6 = 11 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n",
                    "5 + 6 = 11 (left: 3 4 11)\n11 - 3 = 8 (left: 4 8)\n",
                    "5 + 6 = 11 (left: 3 4 11)\n3 * 4 = 12 (left: 11 12)\n",
                    "5 + 6 = 11 (left: 3 4 11)\n11 / 3 = 3 (left: 3 4)\n",
                    "5 + 6 = 11 (left: 3 4 11)\n4 * 3 = 12 (left: 11 12)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n12 - 6 = 6 (left: 5 6)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 6 7)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n6 + 5 = 11 (left: 11 12)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n12 / 6 = 2 (left: 2 5)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n6 * 5 = 30 (left: 12 30)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n12 / 2 = 6 (left: 5 6)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n12 + 6 = 18 (left: 5 18)\n",
                    "6 - 3 = 3 (left: 3 4 5)\n3 + 4 = 7 (left: 5 7)\n",
                    "6 - 3 = 3 (left: 3 4 5)\n3 + 5 = 8 (left: 4 8)\n",
                    "6 - 3 = 3 (left: 3 4 5)\n4 + 5 = 9 (left: 3 9)\n",
                    "6 - 3 = 3 (left: 3 4 5)\n5 - 3 = 2 (left: 2 4)\n",
                    "6 - 3 = 3 (left: 3 4 5)\n4 - 3 = 1 (left: 1 5)\n",
                    "6 - 3 = 3 (left: 3 4 5)\n5 - 4 = 1 (left: 1 3)\n",
                    "6 - 3 = 3 (left: 3 4 5)\n3 * 4 = 12 (left: 5 12)\n",
                    "6 - 3 = 3 (left: 3 4 5)\n3 * 5 = 15 (left: 4 15)\n",
                    "6 - 3 = 3 (left: 3 4 5)\n4 * 5 = 20 (left: 3 20)\n",
                    "6 - 4 = 2 (left: 2 3 5)\n2 + 3 = 5 (left: 5 5)\n",
                    "6 - 4 = 2 (left: 2 3 5)\n3 + 2 = 5 (left: 5 5)\n",
                    "6 - 4 = 2 (left: 2 3 5)\n5 - 2 = 3 (left: 3 3)\n",
                    "6 - 4 = 2 (left: 2 3 5)\n5 - 3 = 2 (left: 2 2)\n",
                    "6 - 4 = 2 (left: 2 3 5)\n2 * 3 = 6 (left: 5 6)\n",
                    "6 - 4 = 2 (left: 2 3 5)\n3 * 2 = 6 (left: 5 6)\n",
                    "6 - 4 = 2 (left: 2 3 5)\n5 / 5 = 1 (left: 1 2 3)\n",
                    "6 - 5 = 1 (left: 1 3 4)\n1 + 3 = 4 (left: 4 4)\n",
                    "6 - 5 = 1 (left: 1 3 4)\n3 + 4 = 7 (left: 1 7)\n",
                    "6 - 5 = 1 (left: 1 3 4)\n4 - 1 = 3 (left: 3 3)\n",
                    "6 - 5 = 1 (left: 1 3 4)\n4 - 3 = 1 (left: 1 4)\n",
                    "6 - 5 = 1 (left: 1 3 4)\n3 - 1 = 2 (left: 2 4)\n",
                    "6 - 5 = 1 (left: 1 3 4)\n4 * 3 = 12 (left: 1 12)\n",
                    "6 - 5 = 1 (left: 1 3 4)\n3 * 4 = 12 (left: 1 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n7 - 5 = 2 (left: 2 6)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 * 7 = 42 (left: 5 42)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 5 6",
                "ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n7 - 5 = 2 (left: 2 6)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 * 7 = 42 (left: 5 42)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n11 - 7 = 4 (left: 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 * 11 = 77 (left: 77)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n11 / 7 = 1 (left: 1)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n5 + 13 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n13 - 5 = 8 (left: 8)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n7 - 5 = 2 (left: 2 6)\n2 + 6 = 8 (left: 8)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n7 - 5 = 2 (left: 2 6)\n6 - 2 = 4 (left: 4)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n7 - 5 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n7 - 5 = 2 (left: 2 6)\n6 / 2 = 3 (left: 3)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n7 + 30 = 37 (left: 37)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n30 - 7 = 23 (left: 23)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n30 / 7 \u2248 4.29 (left: 4.29)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n7 * 30 = 210 (left: 210)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 * 7 = 42 (left: 5 42)\n5 + 42 = 47 (left: 47)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 * 7 = 42 (left: 5 42)\n42 - 5 = 37 (left: 37)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 * 7 = 42 (left: 5 42)\n42 / 5 = 8 (left: 8)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 * 7 = 42 (left: 5 42)\n5 * 42 = 210 (left: 210)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 - 9 = 0 (left: 0)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n5 + 13 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n7 - 5 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n7 + 30 = 37 (left: 37)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n30 - 7 = 23 (left: 23)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 * 7 = 42 (left: 5 42)\n42 - 5 = 37 (left: 37)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 5 6",
                "ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n5 + 13 = 18 (left: 18)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n7 - 5 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n7 + 30 = 37 (left: 37)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n30 - 7 = 23 (left: 23)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 * 7 = 42 (left: 5 42)\n42 - 5 = 37 (left: 37)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\nInput: 18\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n5 + 13 = 18 (left: 18)\nInput: 18\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n5 + 13 = 18 (left: 18)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n5 + 13 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n5 + 13 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n5 + 13 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n7 - 5 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n7 - 5 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n7 - 5 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n7 - 5 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n7 - 5 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n7 + 30 = 37 (left: 37)\nInput: 37\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n7 + 30 = 37 (left: 37)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n7 + 30 = 37 (left: 37)\nNone\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n30 - 7 = 23 (left: 23)\nInput: 23\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n30 - 7 = 23 (left: 23)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 7 30)\n30 - 7 = 23 (left: 23)\n(There are no possible next steps with only one number.)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 * 7 = 42 (left: 5 42)\n42 - 5 = 37 (left: 37)\nInput: 37\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 * 7 = 42 (left: 5 42)\n42 - 5 = 37 (left: 37)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 * 7 = 42 (left: 5 42)\n42 - 5 = 37 (left: 37)\nNo valid operations possible.\n",
                    "4 + 5 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\nInput: 18\n",
                    "4 + 5 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n8 + 8 = 16 (left: 16 18)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "4 + 5 = 9 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n18 - 16 = 2 (left: 2 8)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\nInput: 18\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n5 + 13 = 18 (left: 18)\nInput: 18\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n5 + 13 = 18 (left: 18)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 892,
        "ys": [
            "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\nInput: 18\n",
            "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\nPossible next steps:\n",
            "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n8 + 18 = 26 (left: 8 26)\n",
            "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)\n",
            "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n7 + 11 = 18 (left: 18)\n18 / 2 = 9 (left: 8 9)\n",
            "3 + 4 = 7 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n5 + 13 = 18 (left: 18)\nInput: 18\n",
            "3 + 4 = 7 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n5 + 13 = 18 (left: 18)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 159981,
            "prompt_tokens": 636830,
            "cost": 28.703760000000003
        },
        "time_spent": 38.36739730834961
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 10 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 10 = 16 (left: 12 12 16)\n",
                    "12 - 6 = 6 (left: 6 10 12)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n",
                    "12 + 12 = 24 (left: 6 10 24)\n",
                    "12 - 10 = 2 (left: 2 6 12)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n",
                    "10 + 6 = 16 (left: 12 12 16)\n",
                    "12 * 2 = 24 (left: 6 10 24)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "12 / 6 = 2 (left: 2 10 12)\n",
                    "12 - 10 = 2 (left: 2 6 12)\n",
                    "6 + 10 = 16 (left: 12 12 16)\n",
                    "12 - 6 = 6 (left: 6 10 12)\n",
                    "12 + 12 = 24 (left: 6 10 24)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n",
                    "10 + 6 = 16 (left: 12 12 16)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 10 12 12",
                "ys": [
                    "12 / 6 = 2 (left: 2 10 12)\n",
                    "12 - 10 = 2 (left: 2 6 12)\n",
                    "6 + 10 = 16 (left: 12 12 16)\n",
                    "12 - 6 = 6 (left: 6 10 12)\n",
                    "12 + 12 = 24 (left: 6 10 24)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n",
                    "10 + 6 = 16 (left: 12 12 16)\n"
                ],
                "new_ys": [
                    "12 / 6 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 - 10 = 2 (left: 2 2)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n",
                    "12 - 10 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n",
                    "12 - 10 = 2 (left: 2 6 12)\n12 + 2 = 14 (left: 6 14)\n",
                    "12 - 10 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n",
                    "12 - 10 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 6 6)\n",
                    "12 - 10 = 2 (left: 2 6 12)\n12 - 2 = 10 (left: 6 10)\n",
                    "12 - 10 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n",
                    "12 - 10 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n",
                    "6 + 10 = 16 (left: 12 12 16)\n12 + 12 = 24 (left: 16 24)\n",
                    "6 + 10 = 16 (left: 12 12 16)\n16 - 12 = 4 (left: 4 12)\n",
                    "6 + 10 = 16 (left: 12 12 16)\n12 * 2 = 24 (left: 12 24)\n",
                    "6 + 10 = 16 (left: 12 12 16)\n16 / 4 = 4 (left: 4 12)\n",
                    "12 - 6 = 6 (left: 6 10 12)\n6 + 10 = 16 (left: 12 16)\n",
                    "12 - 6 = 6 (left: 6 10 12)\n12 - 6 = 6 (left: 6 10)\n",
                    "12 - 6 = 6 (left: 6 10 12)\n12 - 10 = 2 (left: 2 6)\n",
                    "12 - 6 = 6 (left: 6 10 12)\n10 + 6 = 16 (left: 12 16)\n",
                    "12 - 6 = 6 (left: 6 10 12)\n12 / 6 = 2 (left: 2 10)\n",
                    "12 - 6 = 6 (left: 6 10 12)\n12 / 2 = 6 (left: 6 10)\n",
                    "12 - 6 = 6 (left: 6 10 12)\n10 - 6 = 4 (left: 4 12)\n",
                    "12 + 12 = 24 (left: 6 10 24)\n6 + 10 = 16 (left: 16 24)\n",
                    "12 + 12 = 24 (left: 6 10 24)\n24 - 10 = 14 (left: 6 14)\n",
                    "12 + 12 = 24 (left: 6 10 24)\n24 - 6 = 18 (left: 10 18)\n",
                    "12 + 12 = 24 (left: 6 10 24)\n24 / 6 = 4 (left: 4 10)\n",
                    "12 + 12 = 24 (left: 6 10 24)\n10 + 6 = 16 (left: 16 24)\n",
                    "12 + 12 = 24 (left: 6 10 24)\n24 + 6 = 30 (left: 10 30)\n",
                    "12 + 12 = 24 (left: 6 10 24)\n24 + 10 = 34 (left: 6 34)\n",
                    "12 + 12 = 24 (left: 6 10 24)\n10 - 6 = 4 (left: 4 24)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 / 2 = 5 (left: 5 6 6)\n",
                    "10 + 6 = 16 (left: 12 12 16)\n12 + 12 = 24 (left: 16 24)\n",
                    "10 + 6 = 16 (left: 12 12 16)\n16 - 12 = 4 (left: 4 12)\n",
                    "10 + 6 = 16 (left: 12 12 16)\n12 * 2 = 24 (left: 12 24)\n",
                    "10 + 6 = 16 (left: 12 12 16)\n16 / 4 = 4 (left: 4 12)\n"
                ],
                "values": [
                    100,
                    0,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "12 / 6 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n",
                    "12 - 10 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 10 12 12",
                "ys": [
                    "12 / 6 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n",
                    "12 - 10 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n"
                ],
                "new_ys": [
                    "12 / 6 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "12 - 10 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "12 - 10 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "12 - 10 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 - 10 = 0 (left: 0)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 * 10 = 100 (left: 100)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 / 10 = 1 (left: 1)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n10 / 2 = 5 (left: 5 6)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n12 - 8 = 4 (left: 4)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 6 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 10 12 12",
                "ys": [
                    "12 / 6 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n"
                ],
                "new_ys": [
                    "12 / 6 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / 6 + 10) + 12 = 24\n",
                    "12 / 6 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / 6 + 10) + 12 = 24\n",
                    "12 - 10 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * (12 - 10)) + 12 = 24\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (12 / 2) = 24\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 14 = 24 (left: 8 24)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nInput: 20\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nPossible next steps:\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nNone (no valid operations with a single number)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 - 8 = 8 (left: 8 16)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "12 / 6 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 * 1 = 16 (left: 16 16)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 6 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / 6 + 10) + 12 = 24\n",
                    "12 / 6 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / 6 + 10) + 12 = 24\n",
                    "12 - 10 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * (12 - 10)) + 12 = 24\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (12 / 2) = 24\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 14 = 24 (left: 8 24)\n",
                    "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n"
                ]
            }
        ],
        "idx": 893,
        "ys": [
            "12 / 6 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / 6 + 10) + 12 = 24\n",
            "12 / 6 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / 6 + 10) + 12 = 24\n",
            "12 - 10 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * (12 - 10)) + 12 = 24\n",
            "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (12 / 2) = 24\n",
            "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 + 10 = 18 (left: 14 18)\n",
            "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 14 = 24 (left: 8 24)\n",
            "12 / 2 = 6 (left: 6 6 10)\n10 - 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 161714,
            "prompt_tokens": 644196,
            "cost": 29.02872
        },
        "time_spent": 35.91643214225769
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 5 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 5 9 10)\n",
                    "5 * 5 = 25 (left: 5 9 25)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n",
                    "9 - 5 = 4 (left: 4 5 5)\n",
                    "9 / 5 = 1.8 (left: 1.8 5 5)\n"
                ],
                "values": [
                    100,
                    50,
                    100,
                    50,
                    0
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 5 9 10)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n",
                    "5 * 5 = 25 (left: 5 9 25)\n",
                    "9 - 5 = 4 (left: 4 5 5)\n",
                    "9 / 5 = 1.8 (left: 1.8 5 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 5 5 9",
                "ys": [
                    "5 + 5 = 10 (left: 5 9 10)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n",
                    "5 * 5 = 25 (left: 5 9 25)\n",
                    "9 - 5 = 4 (left: 4 5 5)\n",
                    "9 / 5 = 1.8 (left: 1.8 5 5)\n"
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 - 9 = 1 (left: 1 5)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 / 5 = 2 (left: 2 9)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 + 5 = 10 (left: 10 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 - 5 = 9 (left: 5 9)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 * 5 = 25 (left: 14 25)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 / 5 = 2.8 (left: 2.8 5)\n",
                    "5 * 5 = 25 (left: 5 9 25)\n5 + 9 = 14 (left: 14 25)\n",
                    "5 * 5 = 25 (left: 5 9 25)\n25 - 9 = 16 (left: 5 16)\n",
                    "5 * 5 = 25 (left: 5 9 25)\n25 - 5 = 20 (left: 9 20)\n",
                    "5 * 5 = 25 (left: 5 9 25)\n25 / 5 = 5 (left: 5 9)\n",
                    "5 * 5 = 25 (left: 5 9 25)\n9 - 5 = 4 (left: 4 25)\n",
                    "5 * 5 = 25 (left: 5 9 25)\n25 + 5 = 30 (left: 9 30)\n",
                    "5 * 5 = 25 (left: 5 9 25)\n9 * 5 = 45 (left: 25 45)\n",
                    "9 - 5 = 4 (left: 4 5 5)\n4 + 5 = 9 (left: 5 9)\n",
                    "9 - 5 = 4 (left: 4 5 5)\n5 + 5 = 10 (left: 4 10)\n",
                    "9 - 5 = 4 (left: 4 5 5)\n5 - 4 = 1 (left: 1 5)\n",
                    "9 - 5 = 4 (left: 4 5 5)\n5 * 4 = 20 (left: 5 20)\n",
                    "9 - 5 = 4 (left: 4 5 5)\n5 / 5 = 1 (left: 1 4)\n",
                    "9 / 5 = 1.8 (left: 1.8 5 5)\n1.8 + 5 = 6.8 (left: 5 6.8)\n",
                    "9 / 5 = 1.8 (left: 1.8 5 5)\n5 - 1.8 = 3.2 (left: 3.2 5)\n",
                    "9 / 5 = 1.8 (left: 1.8 5 5)\n5 * 1.8 = 9 (left: 5 9)\n",
                    "9 / 5 = 1.8 (left: 1.8 5 5)\n5 / 1.8 \u2248 2.78 (left: 2.78 5)\n",
                    "9 / 5 = 1.8 (left: 1.8 5 5)\n5 + 5 = 10 (left: 1.8 10)\n",
                    "9 / 5 = 1.8 (left: 1.8 5 5)\n5 - 5 = 0 (left: 0 1.8)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    0,
                    50,
                    50,
                    100,
                    100,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 + 5 = 10 (left: 10 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 5 5 9",
                "ys": [
                    "5 + 5 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 + 5 = 10 (left: 10 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n"
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 + 5 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 + 5 = 10 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n5 * 19 = 95 (left: 95)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)\n9 - 5 = 4 (left: 4)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)\n5 * 9 = 45 (left: 45)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n10 - 4 = 6 (left: 6)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n10 / 2 = 5 (left: 4 5)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n"
                ],
                "values": [
                    100,
                    0,
                    100,
                    0,
                    100,
                    0,
                    100,
                    0,
                    100,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 + 5 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 5 5 9",
                "ys": [
                    "5 + 5 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 + 5 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n"
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (5 + 5) + (5 + 9) = 24\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + ((5 + 5) + 5) = 24\n",
                    "5 + 5 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (5 + 5) + (9 + 5) = 24\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 + 5 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (9 + 5) + (5 + 5) = 24\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: 9 + 5 + 5 + 5 = 24\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n(No possible next steps with only one number)\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\nInput: 14\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\nPossible next steps:\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\nNone\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (5 + 5) + (5 + 9) = 24\n",
                    "5 + 5 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + ((5 + 5) + 5) = 24\n",
                    "5 + 5 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (5 + 5) + (9 + 5) = 24\n",
                    "9 + 5 = 14 (left: 5 5 14)\n5 + 5 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (9 + 5) + (5 + 5) = 24\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: 9 + 5 + 5 + 5 = 24\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14\n",
                    "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 894,
        "ys": [
            "5 + 5 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (5 + 5) + (5 + 9) = 24\n",
            "5 + 5 = 10 (left: 5 9 10)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + ((5 + 5) + 5) = 24\n",
            "5 + 5 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (5 + 5) + (9 + 5) = 24\n",
            "9 + 5 = 14 (left: 5 5 14)\n5 + 5 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (9 + 5) + (5 + 5) = 24\n",
            "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: 9 + 5 + 5 + 5 = 24\n",
            "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14\n",
            "9 + 5 = 14 (left: 5 5 14)\n14 + 5 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 162925,
            "prompt_tokens": 651443,
            "cost": 29.31879
        },
        "time_spent": 28.65148091316223
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 5 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 6 10 11)\n",
                    "6 + 5 = 11 (left: 5 11 11)\n",
                    "11 + 5 = 16 (left: 5 6 16)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n",
                    "11 - 6 = 5 (left: 5 5 5)\n",
                    "6 - 5 = 1 (left: 1 5 11)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 5 6 6)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n",
                    "6 + 5 = 11 (left: 5 11 11)\n",
                    "11 + 5 = 16 (left: 5 6 16)\n",
                    "11 - 6 = 5 (left: 5 5 5)\n",
                    "6 - 5 = 1 (left: 1 5 11)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 5 6 11",
                "ys": [
                    "11 - 5 = 6 (left: 5 6 6)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n",
                    "6 + 5 = 11 (left: 5 11 11)\n",
                    "11 + 5 = 16 (left: 5 6 16)\n",
                    "11 - 6 = 5 (left: 5 5 5)\n",
                    "6 - 5 = 1 (left: 1 5 11)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n"
                ],
                "new_ys": [
                    "11 - 5 = 6 (left: 5 6 6)\n5 + 6 = 11 (left: 6 11)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 / 6 = 1 (left: 1 5)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 10)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 10 = 1 (left: 1 6)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 + 6 = 17 (left: 10 17)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 + 11 = 21 (left: 6 21)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 * 10 = 60 (left: 11 60)\n",
                    "6 + 5 = 11 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n",
                    "6 + 5 = 11 (left: 5 11 11)\n11 + 11 = 22 (left: 5 22)\n",
                    "6 + 5 = 11 (left: 5 11 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "6 + 5 = 11 (left: 5 11 11)\n11 * 5 = 55 (left: 11 55)\n",
                    "6 + 5 = 11 (left: 5 11 11)\n11 / 11 = 1 (left: 1 5)\n",
                    "11 + 5 = 16 (left: 5 6 16)\n5 + 6 = 11 (left: 11 16)\n",
                    "11 + 5 = 16 (left: 5 6 16)\n16 - 6 = 10 (left: 5 10)\n",
                    "11 + 5 = 16 (left: 5 6 16)\n16 - 5 = 11 (left: 6 11)\n",
                    "11 + 5 = 16 (left: 5 6 16)\n6 * 5 = 30 (left: 16 30)\n",
                    "11 + 5 = 16 (left: 5 6 16)\n16 + 6 = 22 (left: 5 22)\n",
                    "11 + 5 = 16 (left: 5 6 16)\n16 + 5 = 21 (left: 6 21)\n",
                    "11 + 5 = 16 (left: 5 6 16)\n6 - 5 = 1 (left: 1 16)\n",
                    "11 - 6 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 10)\n",
                    "11 - 6 = 5 (left: 5 5 5)\n5 * 5 = 25 (left: 5 25)\n",
                    "11 - 6 = 5 (left: 5 5 5)\n5 - 5 = 0 (left: 0 5)\n",
                    "6 - 5 = 1 (left: 1 5 11)\n1 + 5 = 6 (left: 6 11)\n",
                    "6 - 5 = 1 (left: 1 5 11)\n5 + 11 = 16 (left: 1 16)\n",
                    "6 - 5 = 1 (left: 1 5 11)\n11 - 5 = 6 (left: 1 6)\n",
                    "6 - 5 = 1 (left: 1 5 11)\n11 - 1 = 10 (left: 5 10)\n",
                    "6 - 5 = 1 (left: 1 5 11)\n5 - 1 = 4 (left: 4 11)\n",
                    "6 - 5 = 1 (left: 1 5 11)\n11 * 1 = 11 (left: 5 11)\n",
                    "6 - 5 = 1 (left: 1 5 11)\n5 * 1 = 5 (left: 5 11)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n5 + 1 = 6 (left: 6 6)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n6 + 1 = 7 (left: 5 7)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n6 - 1 = 5 (left: 5 5)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n6 - 5 = 1 (left: 1 1)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n6 / 1 = 6 (left: 5 6)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n5 * 1 = 5 (left: 5 6)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    100,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n5 + 6 = 11 (left: 6 11)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 10)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 5 6 11",
                "ys": [
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n5 + 6 = 11 (left: 6 11)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 10)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n"
                ],
                "new_ys": [
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 - 6 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 / 6 = 5 (left: 5)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 * 30 = 180 (left: 180)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n5 + 6 = 11 (left: 6 11)\nPossible next steps:\n",
                    "11 - 5 = 6 (left: 5 6 6)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n5 + 12 = 17 (left: 17)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n12 - 5 = 7 (left: 7)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n12 / 5 = 2.4 (left: 2.4)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n5 * 12 = 60 (left: 60)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n16 - 11 = 5 (left: 5)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 10)\n10 - 5 = 5 (left: 5)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 10)\n10 / 5 = 2 (left: 2)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n11 - 4 = 7 (left: 7)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n4 * 11 = 44 (left: 44)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n11 / 4 = 2.75 (left: 2.75)\n"
                ],
                "values": [
                    50,
                    100,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 - 6 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n5 + 12 = 17 (left: 17)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 5 6 11",
                "ys": [
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 - 6 = 24 (left: 24)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n5 + 12 = 17 (left: 17)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n"
                ],
                "new_ys": [
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 - 6 = 24 (left: 24)\nAnswer: (11 - 5) * 5 - 6 = 24\n",
                    "11 / 11 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (5 - 11 / 11) * 6 = 24\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\nInput: 36\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\nPossible next steps:\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\n36 / 1 = 36 (left: 1 36)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\n36 - 1 = 35 (left: 1 35)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\n36 + 1 = 37 (left: 1 37)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\n36 * 1 = 36 (left: 1 36)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 14 18)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 14)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 + 10 = 24 (left: 8 24)\n",
                    "11 / 11 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\nInput: 17\n",
                    "11 - 5 = 6 (left: 5 6 6)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\nPossible next steps:\n",
                    "11 - 5 = 6 (left: 5 6 6)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\nNone\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n5 + 12 = 17 (left: 17)\nInput: 17\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n5 + 12 = 17 (left: 17)\nPossible next steps:\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n5 + 12 = 17 (left: 17)\nNone (no valid operations possible with a single number)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\nInput: 27\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\nPossible next steps:\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\nNone\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 - 6 = 24 (left: 24)\nAnswer: (11 - 5) * 5 - 6 = 24\n",
                    "11 / 11 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (5 - 11 / 11) * 6 = 24\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\nInput: 36\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\nPossible next steps:\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\n36 / 1 = 36 (left: 1 36)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\n36 - 1 = 35 (left: 1 35)\n",
                    "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\n36 + 1 = 37 (left: 1 37)\n"
                ]
            }
        ],
        "idx": 895,
        "ys": [
            "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 - 6 = 24 (left: 24)\nAnswer: (11 - 5) * 5 - 6 = 24\n",
            "11 / 11 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (5 - 11 / 11) * 6 = 24\n",
            "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\nInput: 36\n",
            "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\nPossible next steps:\n",
            "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\n36 / 1 = 36 (left: 1 36)\n",
            "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\n36 - 1 = 35 (left: 1 35)\n",
            "11 - 5 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n6 + 30 = 36 (left: 36)\n36 + 1 = 37 (left: 1 37)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 164587,
            "prompt_tokens": 657999,
            "cost": 29.61519
        },
        "time_spent": 35.395387172698975
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 8 9 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 9 9 14)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n",
                    "9 * 6 = 54 (left: 8 9 54)\n",
                    "8 + 9 = 17 (left: 6 9 17)\n",
                    "9 / 3 = 3 (left: 3 6 8)\n",
                    "6 * 9 = 54 (left: 8 9 54)\n"
                ],
                "values": [
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 - 6 = 3 (left: 3 8 9)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n",
                    "9 * 6 = 54 (left: 8 9 54)\n",
                    "8 + 9 = 17 (left: 6 9 17)\n",
                    "9 / 3 = 3 (left: 3 6 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 8 9 9",
                "ys": [
                    "9 - 6 = 3 (left: 3 8 9)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n",
                    "9 * 6 = 54 (left: 8 9 54)\n",
                    "8 + 9 = 17 (left: 6 9 17)\n",
                    "9 / 3 = 3 (left: 3 6 8)\n"
                ],
                "new_ys": [
                    "9 - 6 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 9 11)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 * 3 = 27 (left: 8 27)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n8 * 3 = 24 (left: 9 24)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n6 + 8 = 14 (left: 14 18)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 - 8 = 10 (left: 6 10)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 - 6 = 12 (left: 8 12)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n8 + 6 = 14 (left: 14 18)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 + 6 = 24 (left: 8 24)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 + 8 = 26 (left: 6 26)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n8 - 6 = 2 (left: 2 18)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n9 + 9 = 18 (left: 14 18)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n14 + 9 = 23 (left: 9 23)\n",
                    "6 + 8 = 14 (left: 9 9 14)\n14 - 9 = 5 (left: 5 9)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 + 9 = 18 (left: 2 18)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 / 9 = 1 (left: 1 2)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 * 9 = 18 (left: 9 18)\n",
                    "9 * 6 = 54 (left: 8 9 54)\n8 + 9 = 17 (left: 17 54)\n",
                    "9 * 6 = 54 (left: 8 9 54)\n54 + 9 = 63 (left: 8 63)\n",
                    "9 * 6 = 54 (left: 8 9 54)\n54 - 9 = 45 (left: 8 45)\n",
                    "9 * 6 = 54 (left: 8 9 54)\n54 / 9 = 6 (left: 6 8)\n",
                    "9 * 6 = 54 (left: 8 9 54)\n54 - 8 = 46 (left: 9 46)\n",
                    "9 * 6 = 54 (left: 8 9 54)\n54 / 8 = 6.75 (invalid)\n",
                    "9 * 6 = 54 (left: 8 9 54)\n9 - 8 = 1 (left: 1 54)\n",
                    "8 + 9 = 17 (left: 6 9 17)\n6 + 9 = 15 (left: 15 17)\n",
                    "8 + 9 = 17 (left: 6 9 17)\n17 - 9 = 8 (left: 6 8)\n",
                    "8 + 9 = 17 (left: 6 9 17)\n17 - 6 = 11 (left: 9 11)\n",
                    "8 + 9 = 17 (left: 6 9 17)\n9 - 6 = 3 (left: 3 17)\n",
                    "8 + 9 = 17 (left: 6 9 17)\n17 + 6 = 23 (left: 9 23)\n",
                    "8 + 9 = 17 (left: 6 9 17)\n17 + 9 = 26 (left: 6 26)\n",
                    "8 + 9 = 17 (left: 6 9 17)\n9 * 6 = 54 (left: 17 54)\n",
                    "9 / 3 = 3 (left: 3 6 8)\n3 + 6 = 9 (left: 8 9)\n",
                    "9 / 3 = 3 (left: 3 6 8)\n6 + 8 = 14 (left: 3 14)\n",
                    "9 / 3 = 3 (left: 3 6 8)\n8 - 3 = 5 (left: 5 6)\n",
                    "9 / 3 = 3 (left: 3 6 8)\n8 - 6 = 2 (left: 2 3)\n",
                    "9 / 3 = 3 (left: 3 6 8)\n3 * 6 = 18 (left: 8 18)\n",
                    "9 / 3 = 3 (left: 3 6 8)\n6 * 8 = 48 (left: 3 48)\n",
                    "9 / 3 = 3 (left: 3 6 8)\n8 / 2 = 4 (left: 3 4)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 9 11)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 8 9 9",
                "ys": [
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 9 11)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n"
                ],
                "new_ys": [
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n11 - 9 = 2 (left: 2)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 9 11)\n11 - 9 = 2 (left: 2)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n8 - 6 = 2 (left: 2)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n8 / 6 = 1.33 (left: 1.33)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n9 - 5 = 4 (left: 4)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n5 * 9 = 45 (left: 45)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 8 9 9",
                "ys": [
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n"
                ],
                "new_ys": [
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 / (9 - 6)) * 8 = 24\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 + 9) / 6 * 8 = 24\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "9 - 6 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\nInput: 20\n",
                    "9 - 6 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\nPossible next steps:\n",
                    "9 - 6 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\nNone (goal reached)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\nInput: 20\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\nPossible next steps:\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\nNone (target reached)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\nInput: 20\n",
                    "9 - 6 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\nPossible next steps:\n",
                    "9 - 6 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\nNone (target reached)\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 / (9 - 6)) * 8 = 24\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 + 9) / 6 * 8 = 24\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 896,
        "ys": [
            "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 / (9 - 6)) * 8 = 24\n",
            "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 + 9) / 6 * 8 = 24\n",
            "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
            "9 - 6 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
            "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "9 + 9 = 18 (left: 6 8 18)\n18 / 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 166195,
            "prompt_tokens": 664555,
            "cost": 29.908349999999995
        },
        "time_spent": 35.91287899017334
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 6 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 13)\n",
                    "6 + 3 = 9 (left: 3 9 13)\n",
                    "13 + 3 = 16 (left: 3 6 16)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n",
                    "6 - 3 = 3 (left: 3 3 13)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n",
                    "13 - 6 = 7 (left: 3 3 7)\n",
                    "6 / 3 = 2 (left: 2 3 13)\n",
                    "13 / 3 = 4 (left: 3 4 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n",
                    "13 - 6 = 7 (left: 3 3 7)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n",
                    "6 + 3 = 9 (left: 3 9 13)\n",
                    "13 + 3 = 16 (left: 3 6 16)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n",
                    "6 - 3 = 3 (left: 3 3 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 6 13",
                "ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n",
                    "13 - 6 = 7 (left: 3 3 7)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n",
                    "6 + 3 = 9 (left: 3 9 13)\n",
                    "13 + 3 = 16 (left: 3 6 16)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n",
                    "6 - 3 = 3 (left: 3 3 13)\n"
                ],
                "new_ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 / 2 = 5 (left: 3 5 6)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n",
                    "13 - 6 = 7 (left: 3 3 7)\n3 + 3 = 6 (left: 6 7)\n",
                    "13 - 6 = 7 (left: 3 3 7)\n3 * 3 = 9 (left: 7 9)\n",
                    "13 - 6 = 7 (left: 3 3 7)\n7 + 3 = 10 (left: 3 10)\n",
                    "13 - 6 = 7 (left: 3 3 7)\n7 - 3 = 4 (left: 3 4)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n13 + 6 = 19 (left: 6 19)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n13 / 6 \u2248 2 (left: 2 6)\n",
                    "6 + 3 = 9 (left: 3 9 13)\n3 + 9 = 12 (left: 12 13)\n",
                    "6 + 3 = 9 (left: 3 9 13)\n13 + 3 = 16 (left: 9 16)\n",
                    "6 + 3 = 9 (left: 3 9 13)\n13 - 9 = 4 (left: 3 4)\n",
                    "6 + 3 = 9 (left: 3 9 13)\n13 - 3 = 10 (left: 9 10)\n",
                    "6 + 3 = 9 (left: 3 9 13)\n9 - 3 = 6 (left: 6 13)\n",
                    "6 + 3 = 9 (left: 3 9 13)\n9 * 3 = 27 (left: 13 27)\n",
                    "6 + 3 = 9 (left: 3 9 13)\n13 / 3 = 4 (left: 4 9)\n",
                    "13 + 3 = 16 (left: 3 6 16)\n3 + 6 = 9 (left: 9 16)\n",
                    "13 + 3 = 16 (left: 3 6 16)\n16 + 3 = 19 (left: 6 19)\n",
                    "13 + 3 = 16 (left: 3 6 16)\n16 - 6 = 10 (left: 3 10)\n",
                    "13 + 3 = 16 (left: 3 6 16)\n16 / 2 = 8 (left: 3 6 8)\n",
                    "13 + 3 = 16 (left: 3 6 16)\n6 * 3 = 18 (left: 16 18)\n",
                    "13 + 3 = 16 (left: 3 6 16)\n16 - 3 = 13 (left: 6 13)\n",
                    "13 + 3 = 16 (left: 3 6 16)\n6 / 3 = 2 (left: 2 16)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n6 + 9 = 15 (left: 13 15)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 + 6 = 19 (left: 9 19)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 6 = 7 (left: 7 9)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n9 - 6 = 3 (left: 3 13)\n",
                    "6 - 3 = 3 (left: 3 3 13)\n3 + 3 = 6 (left: 6 13)\n",
                    "6 - 3 = 3 (left: 3 3 13)\n3 * 3 = 9 (left: 9 13)\n",
                    "6 - 3 = 3 (left: 3 3 13)\n13 + 3 = 16 (left: 3 16)\n",
                    "6 - 3 = 3 (left: 3 3 13)\n13 - 3 = 10 (left: 3 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 6 13",
                "ys": [
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\nInput: 4 6\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\nPossible next steps:\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n3 + 4 = 7 (left: 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n4 - 3 = 1 (left: 1)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n7 - 6 = 1 (left: 1)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n6 * 7 = 42 (left: 42)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n18 - 10 = 8 (left: 8)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n18 / 10 = 1.8 (invalid)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n10 * 18 = 180 (left: 180)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n10 - 2 = 8 (left: 8)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n10 / 2 = 5 (left: 5)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n10 - 3 = 7 (left: 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n10 / 3 = 3.33 (left: 3.33)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 6 13",
                "ys": [
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 * 3) * (13 - 9) = 24\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 19\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nNone\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nInput: 13\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nPossible next steps:\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\nNone\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\nInput: 28\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\nPossible next steps:\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n2 + 8 = 10 (left: 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n8 - 2 = 6 (left: 6)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n2 * 8 = 16 (left: 16)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n8 / 2 = 4 (left: 4)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 * 3) * (13 - 9) = 24\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 19\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nNone\n"
                ]
            }
        ],
        "idx": 897,
        "ys": [
            "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 * 3) * (13 - 9) = 24\n",
            "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 8 = 18 (left: 8 14 18)\n",
            "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 8 = 2 (left: 2 8 14)\n",
            "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n14 - 10 = 4 (left: 4 8 8)\n",
            "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 19\n",
            "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
            "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nNone\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 167999,
            "prompt_tokens": 670706,
            "cost": 30.201119999999996
        },
        "time_spent": 35.50364303588867
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 8 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n",
                    "11 + 6 = 17 (left: 8 9 17)\n",
                    "8 + 9 = 17 (left: 6 11 17)\n",
                    "11 + 8 = 19 (left: 6 9 19)\n",
                    "11 - 6 = 5 (left: 5 8 9)\n",
                    "11 - 8 = 3 (left: 3 6 9)\n",
                    "9 - 6 = 3 (left: 3 8 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n",
                    "11 + 6 = 17 (left: 8 9 17)\n",
                    "8 + 9 = 17 (left: 6 11 17)\n",
                    "11 + 8 = 19 (left: 6 9 19)\n",
                    "11 - 6 = 5 (left: 5 8 9)\n",
                    "11 - 8 = 3 (left: 3 6 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 8 9 11",
                "ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n",
                    "11 + 6 = 17 (left: 8 9 17)\n",
                    "8 + 9 = 17 (left: 6 11 17)\n",
                    "11 + 8 = 19 (left: 6 9 19)\n",
                    "11 - 6 = 5 (left: 5 8 9)\n",
                    "11 - 8 = 3 (left: 3 6 9)\n"
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 14)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n8 + 11 = 19 (left: 15 19)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n15 + 11 = 26 (left: 8 26)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n15 - 11 = 4 (left: 4 8)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n15 - 8 = 7 (left: 7 11)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n11 - 8 = 3 (left: 3 15)\n",
                    "11 + 6 = 17 (left: 8 9 17)\n8 + 9 = 17 (left: 17 17)\n",
                    "11 + 6 = 17 (left: 8 9 17)\n17 - 9 = 8 (left: 8 8)\n",
                    "11 + 6 = 17 (left: 8 9 17)\n17 - 8 = 9 (left: 9 9)\n",
                    "11 + 6 = 17 (left: 8 9 17)\n9 - 8 = 1 (left: 1 17)\n",
                    "11 + 6 = 17 (left: 8 9 17)\n17 + 8 = 25 (left: 9 25)\n",
                    "11 + 6 = 17 (left: 8 9 17)\n17 + 9 = 26 (left: 8 26)\n",
                    "8 + 9 = 17 (left: 6 11 17)\n6 + 11 = 17 (left: 17 17)\n",
                    "8 + 9 = 17 (left: 6 11 17)\n17 - 11 = 6 (left: 6 6)\n",
                    "8 + 9 = 17 (left: 6 11 17)\n17 - 6 = 11 (left: 11 11)\n",
                    "8 + 9 = 17 (left: 6 11 17)\n11 + 6 = 17 (left: 17 17)\n",
                    "8 + 9 = 17 (left: 6 11 17)\n17 / 17 = 1 (left: 1 11)\n",
                    "8 + 9 = 17 (left: 6 11 17)\n11 - 6 = 5 (left: 5 17)\n",
                    "11 + 8 = 19 (left: 6 9 19)\n6 + 9 = 15 (left: 15 19)\n",
                    "11 + 8 = 19 (left: 6 9 19)\n19 - 9 = 10 (left: 6 10)\n",
                    "11 + 8 = 19 (left: 6 9 19)\n19 - 6 = 13 (left: 9 13)\n",
                    "11 + 8 = 19 (left: 6 9 19)\n9 - 6 = 3 (left: 3 19)\n",
                    "11 + 8 = 19 (left: 6 9 19)\n19 + 6 = 25 (left: 9 25)\n",
                    "11 + 8 = 19 (left: 6 9 19)\n19 + 9 = 28 (left: 6 28)\n",
                    "11 + 8 = 19 (left: 6 9 19)\n6 * 9 = 54 (left: 19 54)\n",
                    "11 + 8 = 19 (left: 6 9 19)\n19 / 19 = 1 (left: 1 6 9)\n",
                    "11 - 6 = 5 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n",
                    "11 - 6 = 5 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n",
                    "11 - 6 = 5 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n",
                    "11 - 6 = 5 (left: 5 8 9)\n8 + 5 = 13 (left: 9 13)\n",
                    "11 - 6 = 5 (left: 5 8 9)\n9 - 8 = 1 (left: 1 5)\n",
                    "11 - 6 = 5 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n",
                    "11 - 6 = 5 (left: 5 8 9)\n9 * 5 = 45 (left: 8 45)\n",
                    "11 - 6 = 5 (left: 5 8 9)\n8 * 5 = 40 (left: 9 40)\n",
                    "11 - 8 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n",
                    "11 - 8 = 3 (left: 3 6 9)\n9 - 6 = 3 (left: 3 3)\n",
                    "11 - 8 = 3 (left: 3 6 9)\n9 - 3 = 6 (left: 6 6)\n",
                    "11 - 8 = 3 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n",
                    "11 - 8 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n",
                    "11 - 8 = 3 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 14)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n8 + 11 = 19 (left: 15 19)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n15 + 11 = 26 (left: 8 26)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 8 9 11",
                "ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 14)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n8 + 11 = 19 (left: 15 19)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n15 + 11 = 26 (left: 8 26)\n"
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n20 - 14 = 6 (left: 6)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n20 / 14 \u2248 1.43 (left: 1.43)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 * 20 = 280 (left: 280)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n25 - 9 = 16 (left: 16)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n9 + 25 = 34 (left: 34)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n25 / 9 = 2.77777... (left: 2.77777...)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n25 * 9 = 225 (left: 225)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11)\n5 * 11 = 55 (left: 55)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n9 - 3 = 6 (left: 6)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n9 / 3 = 3 (left: 3)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 14)\n2 + 14 = 16 (left: 16)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 14)\n14 - 2 = 12 (left: 12)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 14)\n14 / 2 = 7 (left: 7)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 14)\n2 * 14 = 28 (left: 28)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n8 + 11 = 19 (left: 15 19)\n15 + 19 = 34 (left: 34)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n8 + 11 = 19 (left: 15 19)\n19 - 15 = 4 (left: 4)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n15 + 11 = 26 (left: 8 26)\n8 + 26 = 34 (left: 34)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n15 + 11 = 26 (left: 8 26)\n26 - 8 = 18 (left: 18)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n15 + 11 = 26 (left: 8 26)\n26 / 2 = 13 (left: 8 13)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n25 - 9 = 16 (left: 16)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n9 + 25 = 34 (left: 34)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 14)\n2 + 14 = 16 (left: 16)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 8 9 11",
                "ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n25 - 9 = 16 (left: 16)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n9 + 25 = 34 (left: 34)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 14)\n2 + 14 = 16 (left: 16)\n"
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nInput: 34\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nNone (goal reached)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n25 - 9 = 16 (left: 16)\nInput: 16\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n25 - 9 = 16 (left: 16)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n25 - 9 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n25 - 9 = 16 (left: 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n25 - 9 = 16 (left: 16)\n16 / 8 = 2 (left: 2 8)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n9 + 25 = 34 (left: 34)\nInput: 34\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n9 + 25 = 34 (left: 34)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n9 + 25 = 34 (left: 34)\nNone (target reached)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 - 8 = 8 (left: 8 16)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 + 8 = 24 (left: 8 24)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\nInput: 27\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 11 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\nNone\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 14)\n2 + 14 = 16 (left: 16)\nInput: 16\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 14)\n2 + 14 = 16 (left: 16)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 14)\n2 + 14 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 14)\n2 + 14 = 16 (left: 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 14)\n2 + 14 = 16 (left: 16)\n16 / 8 = 2 (left: 2 8)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nInput: 34\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nNone (goal reached)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n25 - 9 = 16 (left: 16)\nInput: 16\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n25 - 9 = 16 (left: 16)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n25 - 9 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n25 - 9 = 16 (left: 16)\n16 - 8 = 8 (left: 8 8)\n"
                ]
            }
        ],
        "idx": 898,
        "ys": [
            "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nInput: 34\n",
            "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nPossible next steps:\n",
            "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nNone (goal reached)\n",
            "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n25 - 9 = 16 (left: 16)\nInput: 16\n",
            "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n25 - 9 = 16 (left: 16)\nPossible next steps:\n",
            "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n25 - 9 = 16 (left: 16)\n8 + 8 = 16 (left: 16 16)\n",
            "6 + 8 = 14 (left: 9 11 14)\n14 + 11 = 25 (left: 9 25)\n25 - 9 = 16 (left: 16)\n16 - 8 = 8 (left: 8 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 169843,
            "prompt_tokens": 676452,
            "cost": 30.484139999999996
        },
        "time_spent": 39.946497201919556
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 3 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 3 4 11)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n",
                    "11 + 1 = 12 (left: 3 3 12)\n",
                    "3 - 1 = 2 (left: 2 3 11)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n",
                    "11 / 1 = 11 (left: 3 3 11)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n",
                    "11 + 1 = 12 (left: 3 3 12)\n",
                    "3 - 1 = 2 (left: 2 3 11)\n",
                    "11 / 1 = 11 (left: 3 3 11)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 3 11",
                "ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n",
                    "11 + 1 = 12 (left: 3 3 12)\n",
                    "3 - 1 = 2 (left: 2 3 11)\n",
                    "11 / 1 = 11 (left: 3 3 11)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n"
                ],
                "new_ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 - 1 = 2 (left: 2 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n11 + 3 = 14 (left: 4 14)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n11 + 4 = 15 (left: 3 15)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 4 8)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 11 12)\n",
                    "1 + 3 = 4 (left: 3 4 11)\n11 / 3 = 3.67 (left: 3.67 4)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n1 + 9 = 10 (left: 10 11)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n11 - 9 = 2 (left: 1 2)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n11 - 1 = 10 (left: 9 10)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n9 - 1 = 8 (left: 8 11)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n11 + 1 = 12 (left: 9 12)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n9 + 1 = 10 (left: 10 11)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n11 * 1 = 11 (left: 9 11)\n",
                    "3 * 3 = 9 (left: 1 9 11)\n9 * 1 = 9 (left: 9 11)\n",
                    "11 + 1 = 12 (left: 3 3 12)\n3 + 3 = 6 (left: 6 12)\n",
                    "11 + 1 = 12 (left: 3 3 12)\n3 * 3 = 9 (left: 9 12)\n",
                    "11 + 1 = 12 (left: 3 3 12)\n12 + 3 = 15 (left: 3 15)\n",
                    "11 + 1 = 12 (left: 3 3 12)\n12 - 3 = 9 (left: 3 9)\n",
                    "11 + 1 = 12 (left: 3 3 12)\n12 / 3 = 4 (left: 3 4)\n",
                    "3 - 1 = 2 (left: 2 3 11)\n2 + 3 = 5 (left: 5 11)\n",
                    "3 - 1 = 2 (left: 2 3 11)\n3 - 2 = 1 (left: 1 11)\n",
                    "3 - 1 = 2 (left: 2 3 11)\n11 + 2 = 13 (left: 3 13)\n",
                    "3 - 1 = 2 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n",
                    "3 - 1 = 2 (left: 2 3 11)\n11 + 3 = 14 (left: 2 14)\n",
                    "3 - 1 = 2 (left: 2 3 11)\n3 * 2 = 6 (left: 6 11)\n",
                    "3 - 1 = 2 (left: 2 3 11)\n11 - 2 = 9 (left: 3 9)\n",
                    "11 / 1 = 11 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)\n",
                    "11 / 1 = 11 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)\n",
                    "11 / 1 = 11 (left: 3 3 11)\n11 + 3 = 14 (left: 3 14)\n",
                    "11 / 1 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n3 + 3 = 6 (left: 6 10)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n3 * 3 = 9 (left: 9 10)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n10 + 3 = 13 (left: 3 13)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n10 - 3 = 7 (left: 3 7)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n10 / 3 \u2248 3.33 (left: 3 3.33)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "11 / 1 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 - 1 = 2 (left: 2 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 3 11",
                "ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "11 / 1 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 - 1 = 2 (left: 2 8)\n"
                ],
                "new_ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "11 / 1 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 / 1 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "11 / 1 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 / 1 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 / 3 \u2248 2.67 (left: 2.67)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n3 + 7 = 10\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 - 3 = 4\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n3 * 7 = 21\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)\n7 / 3 = 2.33333333333333 (left: 2.33333333333333)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 - 1 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 - 1 = 2 (left: 2 8)\n8 - 2 = 6 (left: 6)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 - 1 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 - 1 = 2 (left: 2 8)\n8 / 2 = 4 (left: 4)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 / 1 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 / 1 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 3 3 11",
                "ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 / 1 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 / 1 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((11 - 3) / 1) = 24\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 - 3) * (3 * 1) = 24\n",
                    "11 / 1 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (11 - 3) / 1 = 24\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n(No possible operations with a single number)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n(There are no possible next steps with a single number)\n",
                    "11 / 1 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "11 / 1 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "11 / 1 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNone\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n12 / 4 = 3 (left: 3 8)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n8 * 3 = 24 (left: 12 24)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((11 - 3) / 1) = 24\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 - 3) * (3 * 1) = 24\n",
                    "11 / 1 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (11 - 3) / 1 = 24\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n(No possible operations with a single number)\n",
                    "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n"
                ]
            }
        ],
        "idx": 899,
        "ys": [
            "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * ((11 - 3) / 1) = 24\n",
            "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 - 3) * (3 * 1) = 24\n",
            "11 / 1 = 11 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (11 - 3) / 1 = 24\n",
            "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
            "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
            "11 - 3 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n(No possible operations with a single number)\n",
            "11 - 3 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 171616,
            "prompt_tokens": 683413,
            "cost": 30.799349999999997
        },
        "time_spent": 36.43674182891846
    }
]