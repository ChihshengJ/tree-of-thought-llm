[
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 9 11)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n",
                    "11 - 9 = 2 (left: 1 2 11)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    100
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n",
                    "1 + 5 = 6 (left: 6 9 11)\n",
                    "11 - 9 = 2 (left: 1 2 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 9 11",
                "ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n",
                    "1 + 5 = 6 (left: 6 9 11)\n",
                    "11 - 9 = 2 (left: 1 2 11)\n"
                ],
                "new_ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 11)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 - 9 = -4 (left: -4 10)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 45 10)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 14 10)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 * 5 = 45 (left: 45 10)\n",
                    "11 - 1 = 10 (left: 5 9 10)\nInput: 4 5 5 8\n",
                    "11 - 1 = 10 (left: 5 9 10)\nPossible next steps:\n",
                    "11 - 1 = 10 (left: 5 9 10)\n4 + 5 = 9 (left: 9 5 8)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n4 * 5 = 20 (left: 20 5 8)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 5 = 10 (left: 4 10 8)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 / 4 = 1.25 (left: 1.25 5 8)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 * 5 = 25 (left: 4 25 8)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 - 4 = 1 (left: 1 5 8)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 / 5 = 1 (left: 4 1 8)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 - 5 = 0 (left: 4 0 8)\n",
                    "1 + 5 = 6 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n",
                    "1 + 5 = 6 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n",
                    "1 + 5 = 6 (left: 6 9 11)\n9 * 6 = 54 (left: 11 54)\n",
                    "1 + 5 = 6 (left: 6 9 11)\n9 / 6 = 1.5 (left: 1.5 11)\n",
                    "1 + 5 = 6 (left: 6 9 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "11 - 9 = 2 (left: 1 2 11)\n1 + 2 = 3 (left: 3 11)\n",
                    "11 - 9 = 2 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)\n",
                    "11 - 9 = 2 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n",
                    "11 - 9 = 2 (left: 1 2 11)\n2 + 1 = 3 (left: 3 11)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 14 10)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 11)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 - 9 = -4 (left: -4 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 9 11",
                "ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 14 10)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 11)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 - 9 = -4 (left: -4 10)\n"
                ],
                "new_ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 * 11 = 143 (left: 143)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 - 11 = 2 (left: 2)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 / 11 = 1.18 (left: 1.18)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4 10)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 / 10 = 1.4 (left: 1.4 10)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\nInput: 3 4 5 6\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\nPossible next steps:\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n3 + 4 = 7 (left: 5 6 7)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n3 * 4 = 12 (left: 5 6 12)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n3 - 4 = -1 (left: 5 6 -1)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n3 / 4 = 0.75 (left: 5 6 0.75)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n4 + 5 = 9 (left: 3 6 9)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n4 * 5 = 20 (left: 3 6 20)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n4 - 5 = -1 (left: 3 6 -1)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n4 / 5 = 0.8 (left: 3 6 0.8)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n5 + 6 = 11 (left: 3 4 11)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n5 * 6 = 30 (left: 3 4 30)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n5 - 6 = -1 (left: 3 4 -1)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n5 / 6 = 0.8333333333333334 (left: 3 4 0.8333333333333334)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n6 + 3 = 9 (left: 4 5 9)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n6 * 3 = 18 (left: 4 5 18)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n6 - 3 = 3 (left: 4 5 3)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n6 / 3 = 2 (left: 4 5 2)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 14 10)\n10 + 14 = 24 (left: 10 14)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4 14)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 14 10)\n14 / 10 = 1.4 (left: 1.4 14)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 / 11 = 3 (left: 3 11)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 * 11 = 396 (left: 396)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 + 11 = 47 (left: 47)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n11 / 5 = 2 (left: 2 11)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 * 11 = 55 (left: 55)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\nInput: 3 3 7\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\nPossible next steps:\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 + 3 = 6 (left: 6 7)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 / 3 = 1 (left: 1 7)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n7 - 3 = 4 (left: 3 4)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n7 / 3 = 2 (left: 2 7)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 7 = 21 (left: 21)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n7 - 3 = 4 (left: 3 4)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 11)\n11 - 7 = 4 (left: 4 11)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 11)\n11 / 7 = 1.57 (left: 1.57 11)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 11)\n7 - 11 = -4 (left: -4 11)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 - 9 = -4 (left: -4 10)\n10 - (-4) = 14 (left: -4 14)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 - 9 = -4 (left: -4 10)\n10 + (-4) = 6 (left: 6 10)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 - 9 = -4 (left: -4 10)\n10 - 4 = 6 (left: -4 6)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 - 9 = -4 (left: -4 10)\n10 / (-4) = -2.5 (left: -2.5 10)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 7 = 21 (left: 21)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 * 11 = 143 (left: 143)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 9 11",
                "ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 7 = 21 (left: 21)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 * 11 = 143 (left: 143)\n"
                ],
                "new_ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\nAnswer: ((5 - 1) + 9) + 11 = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((11 - 1) + 5) + 9 = 24\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\nInput: 4 6 6 9\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\nPossible next steps:\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n4 + 6 = 10 (left: 6 9 10)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n6 / 4 = 1.5 (left: 1.5 6 9)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n9 - 4 = 5 (left: 5 6 6)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n6 * 4 = 24 (left: 6 9 24)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n6 - 4 = 2 (left: 2 6 9)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n9 - 6 = 3 (left: 3 6 6)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n9 / 4 = 2.25 (left: 2.25 6 6)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\nInput: 7 7 8 9\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\nPossible next steps:\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n7 + 7 = 14 (left: 8 9 14)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n7 / 7 = 1 (left: 1 8 9)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n9 - 7 = 2 (left: 2 7 8)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n8 + 7 = 15 (left: 9 7 15)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n7 - 7 = 0 (left: 0 7 8)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n9 - 8 = 1 (left: 1 7 9)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 is the final result.\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 7 = 21 (left: 21)\nInput: 21\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 7 = 21 (left: 21)\nPossible next steps:\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 7 = 21 (left: 21)\n21 + 3 = 24 (left: 3)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 7 = 21 (left: 21)\n21 - 3 = 18 (left: 3)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 7 = 21 (left: 21)\n21 / 3 = 7 (left: 7)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 7 = 21 (left: 21)\n21 * 3 = 63 (left: 3)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 7 = 21 (left: 21)\nInput: 1 4 5 7\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 7 = 21 (left: 21)\nPossible next steps:\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 7 = 21 (left: 21)\n1 + 4 = 5 (left: 5 7)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 7 = 21 (left: 21)\n1 * 4 = 4 (left: 4 5 7)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 7 = 21 (left: 21)\n7 - 4 = 3 (left: 1 3 5)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 7 = 21 (left: 21)\n7 - 5 = 2 (left: 1 2 5)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 7 = 21 (left: 21)\n7 / 1 = 7 (left: 4 5 7)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 7 = 21 (left: 21)\n7 - 1 = 6 (left: 4 5 6)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n11 - 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n18 is the goal! No possible next steps.\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 * 11 = 143 (left: 143)\n143 is the only number provided, please input four numbers separated by spaces.\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\nAnswer: ((5 - 1) + 9) + 11 = 24\n",
                    "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((11 - 1) + 5) + 9 = 24\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\nInput: 4 6 6 9\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\nPossible next steps:\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n4 + 6 = 10 (left: 6 9 10)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n6 / 4 = 1.5 (left: 1.5 6 9)\n",
                    "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n9 - 4 = 5 (left: 5 6 6)\n"
                ]
            }
        ],
        "idx": 800,
        "ys": [
            "5 - 1 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\nAnswer: ((5 - 1) + 9) + 11 = 24\n",
            "11 - 1 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((11 - 1) + 5) + 9 = 24\n",
            "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\nInput: 4 6 6 9\n",
            "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\nPossible next steps:\n",
            "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n4 + 6 = 10 (left: 6 9 10)\n",
            "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n6 / 4 = 1.5 (left: 1.5 6 9)\n",
            "5 - 1 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n9 - 4 = 5 (left: 5 6 6)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 1860,
            "prompt_tokens": 5043,
            "cost": 0.0112845
        },
        "time_spent": 35.158957719802856
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 10 11 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 10 = 12 (left: 11 12 11)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n",
                    "2 * 10 = 20 (left: 11 11 20)\n",
                    "11 - 2 = 9 (left: 9 11 11)\n",
                    "11 / 2 = 5 (left: 5 11 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 10 = 12 (left: 11 12 11)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n",
                    "2 * 10 = 20 (left: 11 11 20)\n",
                    "11 - 2 = 9 (left: 9 11 11)\n",
                    "11 / 2 = 5 (left: 5 11 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 10 11 11",
                "ys": [
                    "2 + 10 = 12 (left: 11 12 11)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n",
                    "2 * 10 = 20 (left: 11 11 20)\n",
                    "11 - 2 = 9 (left: 9 11 11)\n",
                    "11 / 2 = 5 (left: 5 11 11)\n"
                ],
                "new_ys": [
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 * 12 = 132 (left: 132 11)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 / 11 = 1 (left: 1 11)\n",
                    "2 + 10 = 12 (left: 11 12 11)\nInput: 4 6 8 24\n",
                    "2 + 10 = 12 (left: 11 12 11)\nPossible next steps:\n",
                    "2 + 10 = 12 (left: 11 12 11)\n4 + 6 = 10 (left: 8 10 24)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n6 / 4 = 1.5 (left: 1.5 8 24)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n8 * 4 = 32 (left: 32 6 24)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n24 - 4 = 20 (left: 6 8 20)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n11 - 8 = 3 (left: 3 11)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 * 11 = 88 (left: 11 88)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n11 / 8 = 1.375 (left: 1.375 11)\n",
                    "10 - 2 = 8 (left: 8 11 11)\nInput: 3 5 8 10\n",
                    "10 - 2 = 8 (left: 8 11 11)\nPossible next steps:\n",
                    "10 - 2 = 8 (left: 8 11 11)\n3 + 5 = 8 (left: 8 8 10)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n5 * 3 = 15 (left: 8 10 15)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 - 3 = 5 (left: 5 8 10)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n10 / 5 = 2 (left: 2 8 10)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n3 - 5 = -2 (left: -2 3 8 10)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n5 - 3 = 2 (left: 2 8 10)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n5 + 3 = 8 (left: 8 8 10)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n10 * 11 = 110 (left: 13 110)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n11 * 13 = 143 (left: 10 143)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n10 + 13 = 23 (left: 11 23)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n13 - 10 = 3 (left: 3 10)\n",
                    "11 + 2 = 13 (left: 10 11 13)\n13 - 11 = 2 (left: 2 13)\n",
                    "2 * 10 = 20 (left: 11 11 20)\n11 + 11 = 22 (left: 20 22)\n",
                    "2 * 10 = 20 (left: 11 11 20)\n11 / 11 = 1 (left: 1 20)\n",
                    "2 * 10 = 20 (left: 11 11 20)\n20 - 11 = 9 (left: 9 11)\n",
                    "2 * 10 = 20 (left: 11 11 20)\n11 - 11 = 0 (left: 0 20)\n",
                    "11 - 2 = 9 (left: 9 11 11)\n9 + 11 = 20 (left: 11 20)\n",
                    "11 - 2 = 9 (left: 9 11 11)\n11 + 9 = 20 (left: 11 20)\n",
                    "11 - 2 = 9 (left: 9 11 11)\n11 * 9 = 99 (left: 11 99)\n",
                    "11 - 2 = 9 (left: 9 11 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "11 - 2 = 9 (left: 9 11 11)\n11 / 9 = 1 (left: 1 11)\n",
                    "11 / 2 = 5 (left: 5 11 11)\n5 / 11 = 0.45 (left: 0.45 11)\n",
                    "11 / 2 = 5 (left: 5 11 11)\n11 / 5 = 2.2 (left: 2.2 11)\n",
                    "11 / 2 = 5 (left: 5 11 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "11 / 2 = 5 (left: 5 11 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "11 / 2 = 5 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n",
                    "11 / 2 = 5 (left: 5 11 11)\n11 + 5 = 16 (left: 11 16)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 - 2 = 8 (left: 8 11 11)\n3 - 5 = -2 (left: -2 3 8 10)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 * 12 = 132 (left: 132 11)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 / 11 = 1 (left: 1 11)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n11 - 8 = 3 (left: 3 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 10 11 11",
                "ys": [
                    "10 - 2 = 8 (left: 8 11 11)\n3 - 5 = -2 (left: -2 3 8 10)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 * 12 = 132 (left: 132 11)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 / 11 = 1 (left: 1 11)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n11 - 8 = 3 (left: 3 11)\n"
                ],
                "new_ys": [
                    "10 - 2 = 8 (left: 8 11 11)\n3 - 5 = -2 (left: -2 3 8 10)\n-2 * 3 = -6 (left: -6 8 10)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n3 - 5 = -2 (left: -2 3 8 10)\n3 + 8 = 11 (left: -2 11 10)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n3 - 5 = -2 (left: -2 3 8 10)\n8 - 2 = 6 (left: -2 6 10)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n3 - 5 = -2 (left: -2 3 8 10)\n10 - 8 = 2 (left: -2 3 2)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n23 - 11 = 12 (left: 12)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 * 23 = 253 (left: 253)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n23 / 11 = 2.09 (left: 2.09)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 * 12 = 132 (left: 132 11)\n132 - 11 = 121 (left: 121)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 * 12 = 132 (left: 132 11)\n132 / 11 = 12 (left: 12 11)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 * 12 = 132 (left: 132 11)\n132 + 11 = 143 (left: 143)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 * 12 = 132 (left: 132 11)\n132 * 11 = 1452 (left: 1452)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 * 12 = 132 (left: 132 11)\n132 - 11 = 121 (left: 121)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 * 12 = 132 (left: 132 11)\n132 / 11 = 12 (left: 12 11)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 / 11 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 / 11 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 / 11 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 / 11 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n11 + 19 = 30 (left: 30)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n19 - 11 = 8 (left: 8 19)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n19 / 11 = 1.7272727272727273 (left: 1.7272727272727273 19)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n19 * 11 = 209 (left: 209)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n11 / 19 = 0.5789473684210527 (left: 0.5789473684210527 11)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n11 - 19 = -8 (left: -8 11)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\nInput: 3 6 9 11\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\nPossible next steps:\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n3 + 6 = 9 (left: 9 9 11)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n6 + 9 = 15 (left: 3 15 11)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n9 + 11 = 20 (left: 3 6 20)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n3 * 6 = 18 (left: 9 18 11)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n6 * 9 = 54 (left: 3 54 11)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n9 * 11 = 99 (left: 3 6 99)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n3 - 6 = -3 (left: -3 6 9)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n6 - 9 = -3 (left: 3 -3 11)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n11 - 8 = 3 (left: 3 11)\n3 + 11 = 14 (left: 11 14)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n11 - 8 = 3 (left: 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n11 - 8 = 3 (left: 3 11)\n3 * 11 = 33 (left: 11 33)\n",
                    "10 - 2 = 8 (left: 8 11 11)\n11 - 8 = 3 (left: 3 11)\n11 / 3 = 3 (left: 3 11)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n23 - 11 = 12 (left: 12)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 / 11 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 / 11 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 10 11 11",
                "ys": [
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n23 - 11 = 12 (left: 12)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 / 11 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 / 11 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n2 + 8 = 10 (left: 10 14)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n8 + 2 = 10 (left: 10 14)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n2 * 8 = 16 (left: 16)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n8 * 2 = 16 (left: 16)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n8 + 8 = 16 (left: 16)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n8 - 8 = 0 (left: 0)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n8 / 8 = 1 (left: 1)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\nInput: 5 5 10 20\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\nPossible next steps:\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n5 + 5 = 10 (left: 10 10 20)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n5 * 5 = 25 (left: 10 20 25)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n5 / 5 = 1 (left: 1 5 10 20)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n10 + 5 = 15 (left: 5 15 20)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n10 * 5 = 50 (left: 20 50)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n10 / 5 = 2 (left: 2 10 20)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n20 + 5 = 25 (left: 5 10 25)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n20 * 5 = 100 (left: 10 100)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n20 / 5 = 4 (left: 4 20)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\nInput: 3 5 7 8\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\nPossible next steps:\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n3 + 5 = 8 (left: 7 8 8)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n3 * 5 = 15 (left: 7 8 15)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n3 / 5 = 0 (left: 0 3 7 8)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n3 - 5 = -2 (left: -2 7 8)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n5 + 7 = 12 (left: 3 8 12)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n5 * 7 = 35 (left: 3 8 35)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n5 / 7 = 0 (left: 0 5 8)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n5 - 7 = -2 (left: -2 5 8)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n7 + 8 = 15 (left: 3 5 15)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n7 * 8 = 56 (left: 3 5 56)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n7 / 8 = 0 (left: 0 7 8)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n7 - 8 = -1 (left: -1 7 8)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n8 + 3 = 11 (left: 5 7 11)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n8 * 3 = 24 (left: 7 24)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n8 / 3 = 2 (left: 2 8)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n8 - 3 = 5 (left: 5 8)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n23 - 11 = 12 (left: 12)\nThere are no possible next steps.\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nThere are no possible next steps.\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\nPossible next steps:\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n12 + 1 = 13 (left: 1 13)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n12 - 1 = 11 (left: 1 11)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n12 * 1 = 12 (left: 1 12)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 - 11 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 is the final answer.\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 / 11 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 + 12 = 24 (left: 24)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 / 11 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n5 + 5 = 10 (left: 5)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 / 11 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 / 1 = 10 (left: 1)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 / 11 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n1 * 10 = 10 (left: 10)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n12 / 11 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 - 5 = 5 (left: 5)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n5 / 5 = 1 (left: 1 5 10 20)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n3 / 5 = 0 (left: 0 3 7 8)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n2 + 8 = 10 (left: 10 14)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n8 + 2 = 10 (left: 10 14)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n2 * 8 = 16 (left: 16)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n8 * 2 = 16 (left: 16)\n",
                    "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n8 + 8 = 16 (left: 16)\n"
                ]
            }
        ],
        "idx": 801,
        "ys": [
            "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n5 / 5 = 1 (left: 1 5 10 20)\n",
            "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n3 / 5 = 0 (left: 0 3 7 8)\n",
            "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n2 + 8 = 10 (left: 10 14)\n",
            "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n8 + 2 = 10 (left: 10 14)\n",
            "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n2 * 8 = 16 (left: 16)\n",
            "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n8 * 2 = 16 (left: 16)\n",
            "2 + 10 = 12 (left: 11 12 11)\n11 + 12 = 23 (left: 11 23)\n11 + 23 = 34 (left: 34)\n8 + 8 = 16 (left: 16)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 3963,
            "prompt_tokens": 9858,
            "cost": 0.022713000000000004
        },
        "time_spent": 40.30018401145935
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 12 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 + 12 = 19 (left: 12 12 19)\n",
                    "12 + 7 = 19 (left: 12 19 13)\n",
                    "7 * 12 = 84 (left: 12 84 13)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    100,
                    50
                ],
                "select_new_ys": [
                    "12 / 7 = 1 (left: 1 12 13)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n",
                    "7 + 12 = 19 (left: 12 12 19)\n",
                    "12 + 7 = 19 (left: 12 19 13)\n",
                    "7 * 12 = 84 (left: 12 84 13)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 12 12 13",
                "ys": [
                    "12 / 7 = 1 (left: 1 12 13)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n",
                    "7 + 12 = 19 (left: 12 12 19)\n",
                    "12 + 7 = 19 (left: 12 19 13)\n",
                    "7 * 12 = 84 (left: 12 84 13)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n"
                ],
                "new_ys": [
                    "12 / 7 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 * 12 = 72 (left: 12 72)\n",
                    "7 + 12 = 19 (left: 12 12 19)\n12 + 12 = 24 (left: 19)\n",
                    "7 + 12 = 19 (left: 12 12 19)\n12 * 12 = 144 (left: 19)\n",
                    "7 + 12 = 19 (left: 12 12 19)\n12 / 12 = 1 (left: 1 19)\n",
                    "7 + 12 = 19 (left: 12 12 19)\n12 - 12 = 0 (left: 0 19)\n",
                    "7 + 12 = 19 (left: 12 12 19)\n19 + 12 = 31 (left: 12)\n",
                    "7 + 12 = 19 (left: 12 12 19)\n19 - 12 = 7 (left: 7 12)\n",
                    "7 + 12 = 19 (left: 12 12 19)\n19 / 12 = 1.58 (left: 12)\n",
                    "7 + 12 = 19 (left: 12 12 19)\n19 - 12 = 7 (left: 7 12)\n",
                    "12 + 7 = 19 (left: 12 19 13)\n12 + 19 = 31 (left: 13 31)\n",
                    "12 + 7 = 19 (left: 12 19 13)\n12 - 19 = -7 (left: -7 13)\n",
                    "12 + 7 = 19 (left: 12 19 13)\n12 * 19 = 228 (left: 13 228)\n",
                    "12 + 7 = 19 (left: 12 19 13)\n12 / 19 \u2248 0.63 (left: 0.63 13)\n",
                    "12 + 7 = 19 (left: 12 19 13)\n19 - 12 = 7 (left: 7 13)\n",
                    "12 + 7 = 19 (left: 12 19 13)\n19 / 12 \u2248 1.58 (left: 1.58 13)\n",
                    "7 * 12 = 84 (left: 12 84 13)\n12 + 84 = 96 (left: 13 96)\n",
                    "7 * 12 = 84 (left: 12 84 13)\n12 * 84 = 1008 (left: 13 1008)\n",
                    "7 * 12 = 84 (left: 12 84 13)\n84 / 12 = 7 (left: 7 13)\n",
                    "7 * 12 = 84 (left: 12 84 13)\n84 - 12 = 72 (left: 13 72)\n",
                    "7 * 12 = 84 (left: 12 84 13)\n84 /  12 = 7 (left: 7 13)\n",
                    "7 * 12 = 84 (left: 12 84 13)\n84 - 12 = 72 (left: 13 72)\n",
                    "7 * 12 = 84 (left: 12 84 13)\n13 + 12 = 25 (left: 25)\n",
                    "7 * 12 = 84 (left: 12 84 13)\n13 * 12 = 156 (left: 156)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n5 + 12 = 17 (left: 13 17)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n12 - 5 = 7 (left: 7 13)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n5 * 12 = 60 (left: 13 60)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n12 / 5 = 2.4 (left: 2.4 13)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n13 + 5 = 18 (left: 12 18)\n",
                    "12 - 7 = 5 (left: 5 12 13)\n13 - 5 = 8 (left: 8 13)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "12 / 7 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "7 + 12 = 19 (left: 12 12 19)\n12 + 12 = 24 (left: 19)\n"
                ]
            },
            {
                "step": 2,
                "x": "7 12 12 13",
                "ys": [
                    "12 / 7 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "7 + 12 = 19 (left: 12 12 19)\n12 + 12 = 24 (left: 19)\n"
                ],
                "new_ys": [
                    "12 / 7 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 * 11 = 143 (left: 143)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 - 13 = 0 (left: 0)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 * 13 = 169 (left: 169)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 / 13 = 1 (left: 1)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n13 - 12 = 1 (left: 1 13)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 * 13 = 156 (left: 156)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 / 13 = 0.9230769230769231 (left: 0.9230769230769231 12)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 / 12 = 1.5 (left: 1.5 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 -  12 = 6 (left: 6 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 /  12 = 1.5 (left: 1.5 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 / 12 = 1.5 (left: 1.5 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 12 = 72 (left: 72)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\nInput: 3 3 4 4\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n3 + 3 = 6 (left: 4 4 6)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n4 / 3 = 1 (left: 1 3 4 4)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n4 + 3 = 7 (left: 3 4 4 7)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n3 * 3 = 9 (left: 4 4 9)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n4 - 3 = 1 (left: 1 3 4 4)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n4 + 3 = 7 (left: 3 4 4 7)\n",
                    "7 + 12 = 19 (left: 12 12 19)\n12 + 12 = 24 (left: 19)\nThere are no possible next steps.\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 7 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n"
                ]
            },
            {
                "step": 3,
                "x": "7 12 12 13",
                "ys": [
                    "12 / 7 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n"
                ],
                "new_ys": [
                    "12 / 7 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (12 / 7 - 1) + 12 = 24\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (12 / 7) + (12 - 1) = 24\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 4 6 7 9\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n4 + 6 = 10 (left: 7 9 10)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n6 + 7 = 13 (left: 4 9 13)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n7 * 9 = 63 (left: 4 6 63)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n9 - 4 = 5 (left: 5 6 7)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n9 - 6 = 3 (left: 3 4 7)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n9 / 7 = 1 (left: 1 4 6)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n7 - 4 = 3 (left: 3 6 9)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n9 + 4 = 13 (left: 6 7 13)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 3 4 5 6\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n3 + 5 = 8 (left: 4 6 8)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n4 + 6 = 10 (left: 3 5 10)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n5 * 6 = 30 (left: 3 4 30)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n6 - 3 = 3 (left: 3 4 5)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n6 / 3 = 2 (left: 2 4 5)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n6 - 4 = 2 (left: 2 5 6)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n6 - 5 = 1 (left: 1 4 6)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n6 + 4 = 10 (left: 3 5 10)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 3 3 3 3\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 1 5 6 8\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n5 + 6 = 11 (left: 1 8 11)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n6 - 1 = 5 (left: 5 8 6)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n8 - 1 = 7 (left: 5 7 6)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n8 - 5 = 3 (left: 1 3 6)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n6 / 1 = 6 (left: 5 6 8)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n6 * 1 = 6 (left: 5 6 8)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n8 + 1 = 9 (left: 5 6 9)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n5 + 1 = 6 (left: 6 6 8)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\nInput: 3 3 3 3\n",
                    "12 / 7 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\nPossible next steps:\n",
                    "12 / 7 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n1 + 12 = 13 (left: 13 13)\n13 + 13 = 26 (left: 26)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\nInput: 1 3 5 7\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\nPossible next steps:\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n1 + 3 = 4 (left: 4 5 7)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n3 + 5 = 8 (left: 1 8 7)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n5 + 7 = 12 (left: 1 3 12)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n1 * 3 = 3 (left: 3 5 7)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n3 * 5 = 15 (left: 1 15 7)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n5 * 7 = 35 (left: 1 3 35)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n1 - 3 = -2 (left: -2 5 7)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n3 - 5 = -2 (left: 1 -2 7)\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 / 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n5 - 7 = -2 (left: 1 3 -2)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nInput: 4 4 6 8\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n4 + 4 = 8 (left: 6 8 8)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n4 * 6 = 24 (left: 8 8 24)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n6 - 4 = 2 (left: 2 4 8)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n8 - 6 = 2 (left: 2 4 4)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n6 * 4 = 24 (left: 4 8 24)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n8 + 6 = 14 (left: 4 4 14)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n8 / 4 = 2 (left: 2 4 8)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n6 + 4 = 10 (left: 8 4 10)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 7 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (12 / 7 - 1) + 12 = 24\n",
                    "12 / 7 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (12 / 7) + (12 - 1) = 24\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 4 6 7 9\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n4 + 6 = 10 (left: 7 9 10)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n6 + 7 = 13 (left: 4 9 13)\n",
                    "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n7 * 9 = 63 (left: 4 6 63)\n"
                ]
            }
        ],
        "idx": 802,
        "ys": [
            "12 / 7 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (12 / 7 - 1) + 12 = 24\n",
            "12 / 7 = 1 (left: 1 12 13)\n12 - 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (12 / 7) + (12 - 1) = 24\n",
            "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 4 6 7 9\n",
            "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
            "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n4 + 6 = 10 (left: 7 9 10)\n",
            "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n6 + 7 = 13 (left: 4 9 13)\n",
            "13 - 7 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n7 * 9 = 63 (left: 4 6 63)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 6112,
            "prompt_tokens": 15361,
            "cost": 0.035265500000000005
        },
        "time_spent": 40.78997492790222
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 10 10 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 10 = 15 (left: 10 15 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n",
                    "12 + 5 = 17 (left: 10 10 17)\n",
                    "5 * 10 = 50 (left: 50 10 12)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n",
                    "12 - 10 = 2 (left: 5 10 2)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n",
                    "5 + 10 = 15 (left: 10 15 12)\n",
                    "12 + 5 = 17 (left: 10 10 17)\n",
                    "5 * 10 = 50 (left: 50 10 12)\n",
                    "12 - 10 = 2 (left: 5 10 2)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 10 10 12",
                "ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n",
                    "5 + 10 = 15 (left: 10 15 12)\n",
                    "12 + 5 = 17 (left: 10 10 17)\n",
                    "5 * 10 = 50 (left: 50 10 12)\n",
                    "12 - 10 = 2 (left: 5 10 2)\n"
                ],
                "new_ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 * 2 = 20 (left: 20 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 / 2 = 5 (left: 5 10)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n5 + 10 = 15 (left: 15 12)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n12 - 5 = 7 (left: 7 10)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n5 * 10 = 50 (left: 50 12)\n",
                    "5 + 10 = 15 (left: 10 15 12)\n10 + 15 = 25 (left: 12 25)\n",
                    "5 + 10 = 15 (left: 10 15 12)\n15 - 10 = 5 (left: 5 12)\n",
                    "5 + 10 = 15 (left: 10 15 12)\n10 / 15 = 0.6666666666666666 (left: 0.6666666666666666 12)\n",
                    "5 + 10 = 15 (left: 10 15 12)\n15 - 12 = 3 (left: 10 3)\n",
                    "5 + 10 = 15 (left: 10 15 12)\n10 - 15 = -5 (left: -5 12)\n",
                    "5 + 10 = 15 (left: 10 15 12)\n10 * 15 = 150 (left: 12 150)\n",
                    "5 + 10 = 15 (left: 10 15 12)\nInput: 3 3 4 1\n",
                    "5 + 10 = 15 (left: 10 15 12)\nPossible next steps:\n",
                    "5 + 10 = 15 (left: 10 15 12)\n3 + 3 = 6 (left: 4 6 1)\n",
                    "5 + 10 = 15 (left: 10 15 12)\n3 / 3 = 1 (left: 1 1 4)\n",
                    "5 + 10 = 15 (left: 10 15 12)\n3 * 3 = 9 (left: 4 9 1)\n",
                    "5 + 10 = 15 (left: 10 15 12)\n3 - 3 = 0 (left: 0 4 1)\n",
                    "5 + 10 = 15 (left: 10 15 12)\n4 - 3 = 1 (left: 1 1 1)\n",
                    "12 + 5 = 17 (left: 10 10 17)\n10 + 10 = 20 (left: 17 20)\n",
                    "12 + 5 = 17 (left: 10 10 17)\n10 * 10 = 100 (left: 17 100)\n",
                    "12 + 5 = 17 (left: 10 10 17)\n10 / 10 = 1 (left: 1 10 17)\n",
                    "12 + 5 = 17 (left: 10 10 17)\n17 + 10 = 27 (left: 10 27)\n",
                    "12 + 5 = 17 (left: 10 10 17)\n17 - 10 = 7 (left: 7 10 17)\n",
                    "5 * 10 = 50 (left: 50 10 12)\n50 / 10 = 5 (left: 5 12)\n",
                    "5 * 10 = 50 (left: 50 10 12)\n50 - 10 = 40 (left: 40 12)\n",
                    "5 * 10 = 50 (left: 50 10 12)\n50 + 10 = 60 (left: 60 12)\n",
                    "5 * 10 = 50 (left: 50 10 12)\n50 * 10 = 500 (left: 500 12)\n",
                    "12 - 10 = 2 (left: 5 10 2)\n5 + 10 = 15 (left: 2 15)\n",
                    "12 - 10 = 2 (left: 5 10 2)\n5 * 2 = 10 (left: 10 10)\n",
                    "12 - 10 = 2 (left: 5 10 2)\n10 - 5 = 5 (left: 5 10)\n",
                    "12 - 10 = 2 (left: 5 10 2)\n10 / 5 = 2 (left: 2 10)\n"
                ],
                "values": [
                    100,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 * 2 = 20 (left: 20 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 10 10 12",
                "ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 * 2 = 20 (left: 20 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n"
                ],
                "new_ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\nInput: 2 2 4 6\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\nPossible next steps:\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n2 + 2 = 4 (left: 4 4 6)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n2 * 2 = 4 (left: 4 4 6)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n6 - 2 = 4 (left: 2 4 6)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n6 / 2 = 3 (left: 2 4 3)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\nInput: 8 3 5 10\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\nPossible next steps:\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n8 - 3 = 5 (left: 5 5 10)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n8 / 3 = 2 (left: 2 5 10)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n10 - 3 = 7 (left: 7 5 10)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 * 2 = 20 (left: 20 12)\n20 + 12 = 32 (left: 12 32)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 * 2 = 20 (left: 20 12)\n20 - 12 = 8 (left: 8 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 * 2 = 20 (left: 20 12)\n20 * 12 = 240 (left: 12 240)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 * 2 = 20 (left: 20 12)\n20 / 12 = 1.67 (left: 1.67 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 - 12 = 8 (left: 8)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 * 12 = 240 (left: 240)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 / 12 = 1.67 (left: 1.67)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n12 + 20 = 32 (left: 32)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n12 - 20 = -8 (left: -8)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 * 10 = 100 (left: 100)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 / 10 = 1 (left: 1)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n12 + 20 = 32 (left: 32)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 10 10 12",
                "ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n12 + 20 = 32 (left: 32)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n"
                ],
                "new_ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (10 / 5) + 14 = 24\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (10 - 5) * (10 / 5) * 12 = 24\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: 10 / (5 - 2) * 12 = 24\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\nInput: 3 3 7 7\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\nPossible next steps:\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\n3 + 3 = 6 (left: 6 7 7)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\n7 + 3 = 10 (left: 3 7 10)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\n3 * 3 = 9 (left: 7 7 9)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\n7 * 3 = 21 (left: 3 7 21)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\n7 / 3 = 2 (left: 2 7 7)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\n7 / 3 = 2 (left: 2 7 7)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n12 + 20 = 32 (left: 32)\n2 * 16 = 32 (left: 16)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n12 + 20 = 32 (left: 32)\n32 / 2 = 16 (left: 16)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n12 + 20 = 32 (left: 32)\n32 - 16 = 16 (left: 16)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n12 + 20 = 32 (left: 32)\n32 + 16 = 48 (left: 16)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n20 is the final answer.\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nInput: 3 3 3 3\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nPossible next steps:\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 - 3 = 0 (left: 0 3 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 / 5 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (10 / 5) + 14 = 24\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (10 - 5) * (10 / 5) * 12 = 24\n",
                    "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: 10 / (5 - 2) * 12 = 24\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\nInput: 3 3 7 7\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\nPossible next steps:\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\n3 + 3 = 6 (left: 6 7 7)\n",
                    "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\n7 + 3 = 10 (left: 3 7 10)\n"
                ]
            }
        ],
        "idx": 803,
        "ys": [
            "10 / 5 = 2 (left: 2 10 12)\n12 + 2 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (10 / 5) + 14 = 24\n",
            "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (10 - 5) * (10 / 5) * 12 = 24\n",
            "10 - 5 = 5 (left: 5 10 12)\n10 / 5 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: 10 / (5 - 2) * 12 = 24\n",
            "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\nInput: 3 3 7 7\n",
            "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\nPossible next steps:\n",
            "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\n3 + 3 = 6 (left: 6 7 7)\n",
            "10 / 5 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n20 + 12 = 32 (left: 32)\n7 + 3 = 10 (left: 3 7 10)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 7658,
            "prompt_tokens": 21213,
            "cost": 0.047135500000000004
        },
        "time_spent": 33.96859908103943
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 6 8)\n",
                    "5 + 6 = 11 (left: 1 11 8)\n",
                    "1 * 5 = 5 (left: 5 6 8)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n",
                    "8 - 6 = 2 (left: 1 5 2)\n",
                    "6 / 1 = 6 (left: 6 5 8)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "8 - 5 = 3 (left: 1 3 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n",
                    "5 + 6 = 11 (left: 1 11 8)\n",
                    "1 * 5 = 5 (left: 5 6 8)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n",
                    "8 - 6 = 2 (left: 1 5 2)\n",
                    "6 / 1 = 6 (left: 6 5 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 6 8",
                "ys": [
                    "8 - 5 = 3 (left: 1 3 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n",
                    "5 + 6 = 11 (left: 1 11 8)\n",
                    "1 * 5 = 5 (left: 5 6 8)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n",
                    "8 - 6 = 2 (left: 1 5 2)\n",
                    "6 / 1 = 6 (left: 6 5 8)\n"
                ],
                "new_ys": [
                    "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 / 6 = 1 (left: 1 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 - 6 = 0 (left: 0 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n",
                    "5 + 6 = 11 (left: 1 11 8)\n1 + 11 = 12 (left: 8 12)\n",
                    "5 + 6 = 11 (left: 1 11 8)\n11 - 1 = 10 (left: 10 8)\n",
                    "5 + 6 = 11 (left: 1 11 8)\n11 / 1 = 11 (left: 11 8)\n",
                    "5 + 6 = 11 (left: 1 11 8)\n1 * 11 = 11 (left: 11 8)\n",
                    "5 + 6 = 11 (left: 1 11 8)\nInput: 5 5 5 5\n",
                    "5 + 6 = 11 (left: 1 11 8)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 1 11 8)\n5 + 5 = 10 (left: 5 10 5)\n",
                    "5 + 6 = 11 (left: 1 11 8)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "5 + 6 = 11 (left: 1 11 8)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "5 + 6 = 11 (left: 1 11 8)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "1 * 5 = 5 (left: 5 6 8)\n5 + 6 = 11 (left: 8 11)\n",
                    "1 * 5 = 5 (left: 5 6 8)\n5 * 6 = 30 (left: 8 30)\n",
                    "1 * 5 = 5 (left: 5 6 8)\n6 - 5 = 1 (left: 1 8)\n",
                    "1 * 5 = 5 (left: 5 6 8)\n6 / 5 = 1 (left: 1 8)\n",
                    "1 * 5 = 5 (left: 5 6 8)\nInput: 1 2 3 4\n",
                    "1 * 5 = 5 (left: 5 6 8)\nPossible next steps:\n",
                    "1 * 5 = 5 (left: 5 6 8)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "1 * 5 = 5 (left: 5 6 8)\n2 * 3 = 6 (left: 1 6 4)\n",
                    "1 * 5 = 5 (left: 5 6 8)\n3 + 1 = 4 (left: 4 3 4)\n",
                    "1 * 5 = 5 (left: 5 6 8)\n4 - 2 = 2 (left: 1 2 4)\n",
                    "1 * 5 = 5 (left: 5 6 8)\n4 / 2 = 2 (left: 1 2 4)\n",
                    "1 * 5 = 5 (left: 5 6 8)\n3 * 4 = 12 (left: 1 2 12)\n",
                    "1 * 5 = 5 (left: 5 6 8)\n4 + 2 = 6 (left: 1 3 6)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 / 4 = 1.5 (left: 1.5 8)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n",
                    "5 - 1 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "8 - 6 = 2 (left: 1 5 2)\n1 + 5 = 6 (left: 2 6)\n",
                    "8 - 6 = 2 (left: 1 5 2)\n5 - 1 = 4 (left: 4 2)\n",
                    "8 - 6 = 2 (left: 1 5 2)\n1 * 5 = 5 (left: 2 5)\n",
                    "8 - 6 = 2 (left: 1 5 2)\n5 / 1 = 5 (left: 5 2)\n",
                    "6 / 1 = 6 (left: 6 5 8)\n6 + 5 = 11 (left: 8 11)\n",
                    "6 / 1 = 6 (left: 6 5 8)\n6 / 5 = 1.2 (left: 1.2 8)\n",
                    "6 / 1 = 6 (left: 6 5 8)\n6 * 5 = 30 (left: 8 30)\n",
                    "6 / 1 = 6 (left: 6 5 8)\n6 - 5 = 1 (left: 1 8)\n",
                    "6 / 1 = 6 (left: 6 5 8)\n5 - 6 = -1 (left: -1 8)\n",
                    "6 / 1 = 6 (left: 6 5 8)\nInput: 3 3 3 5\n",
                    "6 / 1 = 6 (left: 6 5 8)\nPossible next steps:\n",
                    "6 / 1 = 6 (left: 6 5 8)\n3 + 3 = 6 (left: 3 6 5)\n",
                    "6 / 1 = 6 (left: 6 5 8)\n3 / 3 = 1 (left: 1 3 5)\n",
                    "6 / 1 = 6 (left: 6 5 8)\n3 * 3 = 9 (left: 3 9 5)\n",
                    "6 / 1 = 6 (left: 6 5 8)\n3 - 3 = 0 (left: 0 3 5)\n",
                    "6 / 1 = 6 (left: 6 5 8)\n3 + 5 = 8 (left: 3 3 8)\n",
                    "6 / 1 = 6 (left: 6 5 8)\n3 / 5 = 0.6 (left: 0.6 3 5)\n",
                    "6 / 1 = 6 (left: 6 5 8)\n3 * 5 = 15 (left: 3 15 5)\n",
                    "6 / 1 = 6 (left: 6 5 8)\n3 - 5 = -2 (left: -2 3 5)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 6 8",
                "ys": [
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n"
                ],
                "new_ys": [
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 = 2 (left: 2)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\nInput: 1 2 3 4\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\nPossible next steps:\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n2 + 3 = 5 (left: 1 5 4)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 4 = 7 (left: 1 2 7)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n2 * 3 = 6 (left: 1 6 4)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 4 = 12 (left: 1 2 12)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n1 - 2 = -1 (left: -1 2 4)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n2 - 3 = -1 (left: 1 -1 4)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 - 4 = -1 (left: 1 2 -1)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n8 / 3 = 2 (left: 2)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)\n7 + 8 = 15 (left: 8 15)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)\n7 * 8 = 56 (left: 56)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)\n8 - 7 = 1 (left: 1 8)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)\n8 / 7 = 1.14 (left: 1.14 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 + 36 = 44 (left: 44)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n36 - 8 = 28 (left: 8 28)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n8 * 36 = 288 (left: 288)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n36 / 8 = 4.5 (left: 4.5 8)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n6 * 2 = 12 (left: 12)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n6 * 2 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 6 8",
                "ys": [
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n6 * 2 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (8 - 5) * 1 = 24\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (8 / 1) = 24\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 3 6 9 12\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n3 + 6 = 9 (left: 9 9 12)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n3 * 6 = 18 (left: 9 12 18)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n6 * 3 = 18 (left: 9 12 18)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n9 - 3 = 6 (left: 6 9 12)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n12 - 3 = 9 (left: 6 9 12)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n9 / 3 = 3 (left: 3 9 12)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n9 + 3 = 12 (left: 6 12 12)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n3 * 9 = 27 (left: 6 12 27)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 11\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 + 1 = 12 (left: 1 12)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 - 1 = 10 (left: 1 10)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 * 1 = 11 (left: 1 11)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 / 1 = 11 (left: 1 11)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\nThere are no possible next steps.\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n6 * 2 = 12 (left: 6)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 / 6 = 2 (left: 2)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 - 6 = 6 (left: 6)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 + 6 = 18 (left: 18)\n",
                    "1 + 5 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 6)\n6 * 2 = 12 (left: 12)\n12 is the final result, no more steps possible.\n"
                ],
                "values": [
                    0,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (8 / 1) = 24\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (8 - 5) * 1 = 24\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 3 6 9 12\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n3 + 6 = 9 (left: 9 9 12)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n3 * 6 = 18 (left: 9 12 18)\n",
                    "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n6 * 3 = 18 (left: 9 12 18)\n"
                ]
            }
        ],
        "idx": 804,
        "ys": [
            "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (8 / 1) = 24\n",
            "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (8 - 5) * 1 = 24\n",
            "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nInput: 3 6 9 12\n",
            "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nPossible next steps:\n",
            "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n3 + 6 = 9 (left: 9 9 12)\n",
            "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n3 * 6 = 18 (left: 9 12 18)\n",
            "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n6 * 3 = 18 (left: 9 12 18)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 9483,
            "prompt_tokens": 26949,
            "cost": 0.0593895
        },
        "time_spent": 44.05062413215637
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 3 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n",
                    "2 * 2 = 4 (left: 3 4 11)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n",
                    "3 * 2 = 6 (left: 2 6 11)\n",
                    "11 - 2 = 9 (left: 2 3 9)\n",
                    "11 - 3 = 8 (left: 2 8 11)\n",
                    "3 * 3 = 9 (left: 2 9 11)\n",
                    "2 * 3 = 6 (left: 6 6 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n",
                    "2 * 2 = 4 (left: 3 4 11)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n",
                    "3 * 2 = 6 (left: 2 6 11)\n",
                    "11 - 2 = 9 (left: 2 3 9)\n",
                    "11 - 3 = 8 (left: 2 8 11)\n",
                    "3 * 3 = 9 (left: 2 9 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 3 11",
                "ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n",
                    "2 * 2 = 4 (left: 3 4 11)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n",
                    "3 * 2 = 6 (left: 2 6 11)\n",
                    "11 - 2 = 9 (left: 2 3 9)\n",
                    "11 - 3 = 8 (left: 2 8 11)\n",
                    "3 * 3 = 9 (left: 2 9 11)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 4)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 7 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n",
                    "2 * 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "2 * 2 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n",
                    "2 * 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 4 8 11)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n5 + 2 = 7 (left: 7 11)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n11 - 2 = 9 (left: 5 9)\n",
                    "3 + 2 = 5 (left: 2 5 11)\n2 * 5 = 10 (left: 10 11)\n",
                    "3 * 2 = 6 (left: 2 6 11)\n2 + 6 = 8 (left: 8 11)\n",
                    "3 * 2 = 6 (left: 2 6 11)\n6 + 2 = 8 (left: 8 11)\n",
                    "3 * 2 = 6 (left: 2 6 11)\n2 * 6 = 12 (left: 12 11)\n",
                    "3 * 2 = 6 (left: 2 6 11)\n6 * 2 = 12 (left: 12 11)\n",
                    "3 * 2 = 6 (left: 2 6 11)\n6 - 2 = 4 (left: 4 11)\n",
                    "3 * 2 = 6 (left: 2 6 11)\n11 - 6 = 5 (left: 2 5)\n",
                    "3 * 2 = 6 (left: 2 6 11)\n11 - 2 = 9 (left: 6 9)\n",
                    "3 * 2 = 6 (left: 2 6 11)\n11 / 2 = 5 (left: 5 11)\n",
                    "11 - 2 = 9 (left: 2 3 9)\n2 + 3 = 5 (left: 5 9)\n",
                    "11 - 2 = 9 (left: 2 3 9)\n3 * 2 = 6 (left: 6 9)\n",
                    "11 - 2 = 9 (left: 2 3 9)\n9 - 2 = 7 (left: 7 9)\n",
                    "11 - 3 = 8 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n",
                    "11 - 3 = 8 (left: 2 8 11)\n8 * 2 = 16 (left: 16 11)\n",
                    "11 - 3 = 8 (left: 2 8 11)\n8 - 2 = 6 (left: 6 11)\n",
                    "11 - 3 = 8 (left: 2 8 11)\n11 - 2 = 9 (left: 9 8)\n",
                    "11 - 3 = 8 (left: 2 8 11)\n11 / 2 = 5.5 (left: 5.5 8)\n",
                    "3 * 3 = 9 (left: 2 9 11)\n2 + 9 = 11 (left: 11)\n",
                    "3 * 3 = 9 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n",
                    "3 * 3 = 9 (left: 2 9 11)\n2 * 9 = 18 (left: 11 18)\n",
                    "3 * 3 = 9 (left: 2 9 11)\n9 / 2 = 4 (left: 4 11)\n",
                    "3 * 3 = 9 (left: 2 9 11)\n11 - 2 = 9 (left: 9 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 4)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 7 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 3 11",
                "ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 4)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 7 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n11 - 7 = 4 (left: 4 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n11 / 7 = 1 (left: 1 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 + 11 = 23 (left: 11 23)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 * 11 = 132 (left: 11 132)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 / 11 = 1 (left: 1 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 4)\n8 + 4 = 12 (left: 12)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 4)\n8 - 4 = 4 (left: 4)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 4)\n8 * 4 = 32 (left: 32)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 4)\n8 / 4 = 2 (left: 2)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 7 11)\n11 - 7 = 4 (left: 4 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 7 11)\n7 * 11 = 77 (left: 77)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 7 11)\n11 / 7 = 1.57 (left: 1.57 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n12 + 11 = 23\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n12 - 11 = 1\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n11 - 7 = 4 (left: 4 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n11 / 7 = 1 (left: 1 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n11 * 7 = 77 (left: 77)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\nInput: 3 3 3 3\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 - 3 = 0 (left: 0 3 3 3)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 4)\n8 + 4 = 12 (left: 12)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 4)\n8 * 4 = 32 (left: 32)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 3 11",
                "ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 4)\n8 + 4 = 12 (left: 12)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 4)\n8 * 4 = 32 (left: 32)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 3 2 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 6 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 3 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n18 is the only number provided, so there are no possible next steps.\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 4)\n8 + 4 = 12 (left: 12)\nError: Please provide 4 integers separated by spaces.\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 4)\n8 * 4 = 32 (left: 32)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 3 = 8 (left: 8 4)\n8 * 4 = 32 (left: 32)\nNo possible next steps.\n",
                    "2 + 2 = 4 (left: 3 4 11)\n11 - 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\nThere are no possible next steps.\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\nInput: 3 3 6 11\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n3 + 3 = 6 (left: 6 6 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n3 / 3 = 1 (left: 1 6 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n6 * 3 = 18 (left: 3 11 18)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n6 + 3 = 9 (left: 3 9 11)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n11 - 3 = 8 (left: 3 6 8)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n11 - 6 = 5 (left: 3 5 6)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n11 / 3 = 3 (left: 3 3 6)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n11 - 3 = 8 (left: 3 6 8)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\nInput: 3 3 8 8\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n3 / 3 = 1 (left: 1 8 8)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n8 - 3 = 5 (left: 3 8 5)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n8 / 3 = 2 (left: 2 3 8)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n8 / 3 = 2 (left: 2 8 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 - 3 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n3 / 3 = 1 (left: 1 8 8)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 3 2 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 6 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 3 9)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n18 is the only number provided, so there are no possible next steps.\n"
                ]
            }
        ],
        "idx": 805,
        "ys": [
            "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
            "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 3 2 3)\n",
            "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 6 9)\n",
            "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
            "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n6 + 3 = 9 (left: 3 3 9)\n",
            "2 + 2 = 4 (left: 3 4 11)\n4 + 3 = 7 (left: 7 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 3)\n",
            "2 + 2 = 4 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n18 is the only number provided, so there are no possible next steps.\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 11008,
            "prompt_tokens": 31997,
            "cost": 0.0700115
        },
        "time_spent": 33.19523525238037
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 5 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 5 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n",
                    "5 - 2 = 3 (left: 2 3 11)\n",
                    "11 - 5 = 6 (left: 2 6 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 4 5 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n",
                    "5 - 2 = 3 (left: 2 3 11)\n",
                    "11 - 5 = 6 (left: 2 6 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 5 11",
                "ys": [
                    "2 + 2 = 4 (left: 4 5 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n",
                    "5 - 2 = 3 (left: 2 3 11)\n",
                    "11 - 5 = 6 (left: 2 6 11)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 4 = 7 (left: 4 7)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 * 4 = 20 (left: 20 11)\n",
                    "5 - 2 = 3 (left: 2 3 11)\n2 + 3 = 5 (left: 5 11)\n",
                    "5 - 2 = 3 (left: 2 3 11)\n3 * 2 = 6 (left: 6 11)\n",
                    "5 - 2 = 3 (left: 2 3 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "11 - 5 = 6 (left: 2 6 11)\n2 + 6 = 8 (left: 8 11)\n",
                    "11 - 5 = 6 (left: 2 6 11)\n6 * 2 = 12 (left: 12 11)\n",
                    "11 - 5 = 6 (left: 2 6 11)\n11 - 2 = 9 (left: 9 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 5 11",
                "ys": [
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n"
                ],
                "new_ys": [
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n11 / 9 = 1.22 (left: 1.22 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 - 11 = -2 (left: -2 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n20 + 11 = 31 (left: 31)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n20 - 11 = 9 (left: 9)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n20 * 11 = 220 (left: 220)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n20 / 11 = 1 (left: 1)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n11 + 20 = 31 (left: 31)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n11 - 20 = -9 (left: -9)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n11 / 9 = 1.22 (left: 1.22 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n9 - 11 = -2 (left: -2 9)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\nInput: 3 5 5 7\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n3 + 5 = 8 (left: 8 5 7)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n5 / 3 = 1.67 (left: 1.67 5 7)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n7 - 3 = 4 (left: 4 5 7)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n5 * 3 = 15 (left: 15 5 7)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n7 - 5 = 2 (left: 2 5 7)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n7 + 3 = 10 (left: 5 10 7)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n7 / 5 = 1.4 (left: 1.4 5 7)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n5 - 3 = 2 (left: 2 5 7)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n11 / 9 = 1 (left: 1 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n11 * 9 = 99 (left: 99)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 - 11 = -2 (left: -2)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n11 / 9 = 1 (left: 1 11)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n11 * 9 = 99 (left: 99)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n9 - 11 = -2 (left: -2 11)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 5 11",
                "ys": [
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 2 * (2 * (11 - 5)) = 24\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n2 + 8 = 10 (left: 8 10)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 - 2 = 6 (left: 6 10)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nInput: 3 6 6 7\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n6 / 3 = 2 (left: 2 6 7)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n7 - 3 = 4 (left: 4 6 7)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n3 * 6 = 18 (left: 6 7 18)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n6 + 7 = 13 (left: 3 13 6)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n7 - 6 = 1 (left: 1 6 6)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n6 / 3 = 2 (left: 2 6 6)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 + 12 = 24 (left: 12 24)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 * 1 = 12 (left: 12 12)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 / 1 = 12 (left: 12 12)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 - 1 = 11 (left: 11 12)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 is the target number, no next steps.\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\nInput: 5 5 10 20\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n5 + 5 = 10 (left: 10 10 20)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n5 * 10 = 50 (left: 5 50 20)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n10 + 5 = 15 (left: 5 10 15)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n5 - 5 = 0 (left: 0 5 20)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n20 - 10 = 10 (left: 5 10 10)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n20 / 5 = 4 (left: 5 4 10)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n20 - 5 = 15 (left: 5 10 15)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n5 / 5 = 1 (left: 1 5 20)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nNo possible next steps.\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 2 * (2 * (11 - 5)) = 24\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n2 + 8 = 10 (left: 8 10)\n",
                    "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 - 2 = 6 (left: 6 10)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nInput: 3 6 6 7\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n3 + 6 = 9 (left: 6 7 9)\n",
                    "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n6 / 3 = 2 (left: 2 6 7)\n"
                ]
            }
        ],
        "idx": 806,
        "ys": [
            "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 2 * (2 * (11 - 5)) = 24\n",
            "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n2 + 8 = 10 (left: 8 10)\n",
            "2 * 2 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n8 - 2 = 6 (left: 6 10)\n",
            "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nInput: 3 6 6 7\n",
            "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nPossible next steps:\n",
            "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n3 + 6 = 9 (left: 6 7 9)\n",
            "2 + 2 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n6 / 3 = 2 (left: 2 6 7)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 12332,
            "prompt_tokens": 36693,
            "cost": 0.0797035
        },
        "time_spent": 31.6254620552063
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 - 2 = 3 (left: 3 8 9)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n",
                    "9 / 2 = 4.5 (left: 4.5 5 8)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n"
                ],
                "values": [
                    100,
                    50,
                    0,
                    100
                ],
                "select_new_ys": [
                    "5 - 2 = 3 (left: 3 8 9)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n",
                    "9 / 2 = 4.5 (left: 4.5 5 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 8 9",
                "ys": [
                    "5 - 2 = 3 (left: 3 8 9)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n",
                    "9 / 2 = 4.5 (left: 4.5 5 8)\n"
                ],
                "new_ys": [
                    "5 - 2 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 * 3 = 24 (left: 9 24)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 11 9)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8 9)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 - 8 = -1 (left: -1 9)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 / 8 = 0.875 (left: 0.875 9)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 * 8 = 56 (left: 56 9)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 - 9 = -1 (left: 7 -1)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 / 9 = 0.8888888888888888 (left: 7 0.8888888888888888)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 * 9 = 72 (left: 7 72)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 9)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n9 / 7 = 1.2857142857142858 (left: 1.2857142857142858 9)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n9 * 7 = 63 (left: 7 63)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n7 + 5 = 12 (left: 8 12)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "9 / 2 = 4.5 (left: 4.5 5 8)\n4.5 + 5 = 9.5 (left: 8 9.5)\n",
                    "9 / 2 = 4.5 (left: 4.5 5 8)\n5 * 4.5 = 22.5 (left: 8 22.5)\n",
                    "9 / 2 = 4.5 (left: 4.5 5 8)\n5 - 4.5 = 0.5 (left: 0.5 8)\n",
                    "9 / 2 = 4.5 (left: 4.5 5 8)\n5 / 4.5 = 1.1111111111111112 (left: 1.1111111111111112 8)\n",
                    "9 / 2 = 4.5 (left: 4.5 5 8)\n8 + 4.5 = 12.5 (left: 5 12.5)\n",
                    "9 / 2 = 4.5 (left: 4.5 5 8)\n8 - 4.5 = 3.5 (left: 3.5 8)\n",
                    "9 / 2 = 4.5 (left: 4.5 5 8)\n8 / 4.5 = 1.7777777777777777 (left: 1.7777777777777777 8)\n"
                ],
                "values": [
                    0,
                    50,
                    50,
                    0,
                    0,
                    100,
                    50,
                    0,
                    0,
                    100,
                    0,
                    0,
                    50,
                    100,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 * 3 = 24 (left: 9 24)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 11 9)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 - 8 = -1 (left: -1 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 8 9",
                "ys": [
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 * 3 = 24 (left: 9 24)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 11 9)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 - 8 = -1 (left: -1 9)\n"
                ],
                "new_ys": [
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 / 15 = 0 (left: 0 15)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 / 7 = 2 (left: 2 17)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 * 17 = 119 (left: 119)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\nInput: 3 4 5 6\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\nPossible next steps:\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n3 + 4 = 7 (left: 5 6 7)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n3 * 4 = 12 (left: 5 6 12)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n3 / 5 = 0.6 (left: 4 5 6)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n5 + 4 = 9 (left: 6 9 6)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n5 * 4 = 20 (left: 6 20 6)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n5 / 3 = 1.67 (left: 4 5 6)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n6 - 3 = 3 (left: 4 5 3)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n6 / 3 = 2 (left: 4 5 2)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n8 + 16 = 24 (left: 8 24)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 8)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n8 / 3 = 2 (left: 2)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 * 3 = 24 (left: 9 24)\n9 * 2 = 18 (left: 18 24)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 * 3 = 24 (left: 9 24)\n9 + 2 = 11 (left: 11 24)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 * 3 = 24 (left: 9 24)\n9 - 2 = 7 (left: 7 24)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 * 3 = 24 (left: 9 24)\n9 / 2 = 4.5 (left: 4.5 24)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 11 9)\n11 - 9 = 2 (left: 2)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 11 9)\n11 * 9 = 99 (left: 99)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 11 9)\n11 / 9 = 1.22 (left: 1.22)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 - 8 = -1 (left: -1 9)\n9 - (-1) = 10 (left: -1 10)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 - 8 = -1 (left: -1 9)\n9 + (-1) = 8 (left: 8)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 - 8 = -1 (left: -1 9)\n9 / (-1) = -9 (left: -9)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 - 8 = -1 (left: -1 9)\n9 * (-1) = -9 (left: -9)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 5 8 9",
                "ys": [
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n"
                ],
                "new_ys": [
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 5) + 8) + 9 = 24\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((2 + 5) + 8) + 9 = 24\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((2 + 5) + 8) + 9 = 24\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 - 2) * (5 - 8) = 24\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n\n3 + 8 = 11 (left: 11)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n\n8 / 3 = 2 (left: 2 8)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 is the final answer.\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n20 / 2 = 10 (left: 10)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n20 - 2 = 18 (left: 18)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n20 / 2 = 10 (left: 10)\n",
                    "5 - 2 = 3 (left: 3 8 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n20 - 2 = 18 (left: 18)\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 5) + 8) + 9 = 24\n",
                    "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((2 + 5) + 8) + 9 = 24\n",
                    "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((2 + 5) + 8) + 9 = 24\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 - 2) * (5 - 8) = 24\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n\n3 + 8 = 11 (left: 11)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n\n8 / 3 = 2 (left: 2 8)\n",
                    "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 is the final answer.\n"
                ]
            }
        ],
        "idx": 807,
        "ys": [
            "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 5) + 8) + 9 = 24\n",
            "2 + 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((2 + 5) + 8) + 9 = 24\n",
            "2 + 5 = 7 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((2 + 5) + 8) + 9 = 24\n",
            "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 - 2) * (5 - 8) = 24\n",
            "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n\n3 + 8 = 11 (left: 11)\n",
            "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n\n8 / 3 = 2 (left: 2 8)\n",
            "9 - 2 = 7 (left: 5 7 8)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 is the final answer.\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 13669,
            "prompt_tokens": 42434,
            "cost": 0.090989
        },
        "time_spent": 35.41900682449341
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 4 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 2 7 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n",
                    "4 * 3 = 12 (left: 2 12 11)\n",
                    "3 - 2 = 1 (left: 1 4 11)\n",
                    "4 - 3 = 1 (left: 1 2 11)\n",
                    "11 - 4 = 7 (left: 2 3 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 2 7 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n",
                    "4 * 3 = 12 (left: 2 12 11)\n",
                    "3 - 2 = 1 (left: 1 4 11)\n",
                    "4 - 3 = 1 (left: 1 2 11)\n",
                    "11 - 4 = 7 (left: 2 3 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 4 11",
                "ys": [
                    "3 + 4 = 7 (left: 2 7 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n",
                    "4 * 3 = 12 (left: 2 12 11)\n",
                    "3 - 2 = 1 (left: 1 4 11)\n",
                    "4 - 3 = 1 (left: 1 2 11)\n",
                    "11 - 4 = 7 (left: 2 3 7)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 - 2 = 9 (left: 7 9)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 - 7 = 4 (left: 2 4)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 - 2 = 9 (left: 7 9)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 / 2 = 5 (left: 5 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n11 - 2 = 9 (left: 2 9)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n2 + 12 = 14 (left: 11 14)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n12 - 2 = 10 (left: 10 11)\n",
                    "3 * 4 = 12 (left: 2 12 11)\n12 / 2 = 6 (left: 6 11)\n",
                    "4 * 3 = 12 (left: 2 12 11)\n2 * 12 = 24 (left: 24 11)\n",
                    "4 * 3 = 12 (left: 2 12 11)\n12 + 2 = 14 (left: 14 11)\n",
                    "4 * 3 = 12 (left: 2 12 11)\n12 / 2 = 6 (left: 6 11)\n",
                    "4 * 3 = 12 (left: 2 12 11)\n12 - 2 = 10 (left: 10 11)\n",
                    "4 * 3 = 12 (left: 2 12 11)\n11 + 2 = 13 (left: 2 13)\n",
                    "4 * 3 = 12 (left: 2 12 11)\n11 / 2 = 5 (left: 5 11)\n",
                    "4 * 3 = 12 (left: 2 12 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "3 - 2 = 1 (left: 1 4 11)\n1 + 4 = 5 (left: 5 11)\n",
                    "3 - 2 = 1 (left: 1 4 11)\n4 * 11 = 44 (left: 1 44)\n",
                    "3 - 2 = 1 (left: 1 4 11)\n11 - 1 = 10 (left: 4 10)\n",
                    "3 - 2 = 1 (left: 1 4 11)\n11 - 4 = 7 (left: 1 7)\n",
                    "3 - 2 = 1 (left: 1 4 11)\n11 / 4 = 2 (left: 1 2 11)\n",
                    "4 - 3 = 1 (left: 1 2 11)\n1 + 2 = 3 (left: 3 11)\n",
                    "4 - 3 = 1 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)\n",
                    "4 - 3 = 1 (left: 1 2 11)\n11 - 1 = 10 (left: 2 10)\n",
                    "4 - 3 = 1 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n",
                    "4 - 3 = 1 (left: 1 2 11)\n2 + 1 = 3 (left: 3 11)\n",
                    "4 - 3 = 1 (left: 1 2 11)\n1 * 11 = 11 (left: 2 11)\n",
                    "11 - 4 = 7 (left: 2 3 7)\n2 + 3 = 5 (left: 5 7)\n",
                    "11 - 4 = 7 (left: 2 3 7)\n3 + 2 = 5 (left: 5 7)\n",
                    "11 - 4 = 7 (left: 2 3 7)\n2 * 3 = 6 (left: 6 7)\n",
                    "11 - 4 = 7 (left: 2 3 7)\n3 * 2 = 6 (left: 6 7)\n",
                    "11 - 4 = 7 (left: 2 3 7)\n2 / 3 = 0.6666666666666666 (left: 0.6666666666666666 7)\n",
                    "11 - 4 = 7 (left: 2 3 7)\n3 / 2 = 1.5 (left: 1.5 7)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 - 2 = 9 (left: 7 9)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 / 2 = 5 (left: 5 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n11 - 2 = 9 (left: 2 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 4 11",
                "ys": [
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 - 2 = 9 (left: 7 9)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 / 2 = 5 (left: 5 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n11 - 2 = 9 (left: 2 9)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n11 / 9 = 1 (left: 1 11)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 * 11 = 99 (left: 99)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\nInput: 3 3 3 6\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n3 + 3 = 6 (left: 6 3 6)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n3 * 3 = 9 (left: 9 3 6)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n3 + 6 = 9 (left: 3 9 6)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n3 * 6 = 18 (left: 3 6 18)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n6 / 3 = 2 (left: 2 3 6)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n6 - 3 = 3 (left: 3 3 6)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n6 - 3 = 3 (left: 3 3 6)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n3 * 3 = 9 (left: 6 9 6)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 - 2 = 9 (left: 7 9)\n7 + 9 = 16 (left: 9 16)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 - 2 = 9 (left: 7 9)\n9 - 7 = 2 (left: 2 9)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 - 2 = 9 (left: 7 9)\n9 / 7 = 1 (left: 1 7)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 - 2 = 9 (left: 7 9)\n7 * 9 = 63 (left: 9 63)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n14 - 11 = 3 (left: 3 14)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n11 * 14 = 154 (left: 154)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n14 / 11 = 1 (left: 1 14)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\nInput: 3 3 8 8\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n3 * 3 = 9 (left: 8 8 9)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n3 + 8 = 11 (left: 11 8 8)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n3 * 8 = 24 (left: 8 8 24)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 / 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 / 2 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 / 2 = 5 (left: 5 11)\n11 / 5 = 2.2 (left: 2.2 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n11 / 9 = 1 (left: 1 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n11 * 9 = 99 (left: 99)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n9 - 11 = -2 (left: -2 9)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n9 / 11 = 0.8181818181818182 (left: 0.8181818181818182 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n11 / 5 = 2 (left: 2)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n11 * 5 = 55 (left: 55)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n11 - 2 = 9 (left: 2 9)\n2 + 9 = 11 (left: 9 11)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n11 - 2 = 9 (left: 2 9)\n9 - 2 = 7 (left: 7 9)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 / 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n11 / 9 = 1 (left: 1 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 4 11",
                "ys": [
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 / 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n11 / 9 = 1 (left: 1 11)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nInput: 2 4 5 10\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n2 + 4 = 6 (left: 5 6 10)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n5 + 4 = 9 (left: 2 9 10)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n2 * 4 = 8 (left: 5 8 10)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n5 * 4 = 20 (left: 2 10 20)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n5 + 2 = 7 (left: 4 7 10)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n10 - 4 = 6 (left: 2 6 10)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n10 / 2 = 5 (left: 4 5 10)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n10 - 5 = 5 (left: 2 5 10)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n25 * 1 = 25 (left: 25)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 * 2 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n25 / 1 = 25 (left: 25)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 / 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\nInput: 16 8 2 2\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 / 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 / 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 - 8 = 8 (left: 8 2 2)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 / 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 / 8 = 2 (left: 2 2 2)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 / 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 - 2 = 14 (left: 8 2 14)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 / 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 * 8 = 128 (left: 8 2 128)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 / 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 + 8 = 24 (left: 8 2 24)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 / 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 / 2 = 8 (left: 8 8 2)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 / 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 - 8 = 8 (left: 8 2 8)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n11 / 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 * 2 = 32 (left: 8 2 32)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nInput: 4 4 6 6\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nPossible next steps:\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n4 + 4 = 8 (left: 6 6 8)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n4 / 4 = 1 (left: 1 6 6)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n6 + 4 = 10 (left: 4 6 10)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n4 * 4 = 16 (left: 6 6 16)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n6 / 6 = 1 (left: 1 4 6)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n6 - 4 = 2 (left: 2 4 6)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n6 - 4 = 2 (left: 2 6 6)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n6 - 4 = 2 (left: 2 6 6)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n2 + 7 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n6 / 4 = 1 (left: 1 4 6)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\nInput: 16\n",
                    "4 + 3 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\nPossible next steps:\n",
                    "4 + 3 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 + 16 = 32 (left: 16 32)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 * 16 = 256 (left: 256)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 / 16 = 1 (left: 1)\n",
                    "4 + 3 = 7 (left: 2 7 11)\n7 - 2 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 - 16 = 0 (left: 0)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n2 + 11 = 13 (left: 13)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n11 - 2 = 9 (left: 9)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n11 / 2 = 5.5 (left: 5.5)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n11 / 9 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n11 / 9 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n11 / 9 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n11 / 9 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nInput: 2 4 5 10\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n2 + 4 = 6 (left: 5 6 10)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n5 + 4 = 9 (left: 2 9 10)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n2 * 4 = 8 (left: 5 8 10)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n5 * 4 = 20 (left: 2 10 20)\n",
                    "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n5 + 2 = 7 (left: 4 7 10)\n"
                ]
            }
        ],
        "idx": 808,
        "ys": [
            "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nInput: 2 4 5 10\n",
            "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nPossible next steps:\n",
            "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n2 + 4 = 6 (left: 5 6 10)\n",
            "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n5 + 4 = 9 (left: 2 9 10)\n",
            "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n2 * 4 = 8 (left: 5 8 10)\n",
            "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n5 * 4 = 20 (left: 2 10 20)\n",
            "3 + 4 = 7 (left: 2 7 11)\n7 + 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n5 + 2 = 7 (left: 4 7 10)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 15718,
            "prompt_tokens": 47480,
            "cost": 0.102656
        },
        "time_spent": 43.077840089797974
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 * 3 = 6 (left: 6 6 10)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n",
                    "6 - 2 = 4 (left: 4 6 10)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n",
                    "10 - 6 = 4 (left: 2 6 10)\n",
                    "10 / 2 = 5 (left: 5 6 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 / 2 = 3 (left: 3 6 10)\n",
                    "2 * 3 = 6 (left: 6 6 10)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n",
                    "6 - 2 = 4 (left: 4 6 10)\n",
                    "10 - 6 = 4 (left: 2 6 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 10",
                "ys": [
                    "6 / 2 = 3 (left: 3 6 10)\n",
                    "2 * 3 = 6 (left: 6 6 10)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n",
                    "6 - 2 = 4 (left: 4 6 10)\n",
                    "10 - 6 = 4 (left: 2 6 10)\n"
                ],
                "new_ys": [
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n10 - 3 = 7 (left: 7 10)\n",
                    "2 * 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n",
                    "2 * 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n",
                    "2 * 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n",
                    "2 * 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n",
                    "2 * 3 = 6 (left: 6 6 10)\n10 * 6 = 60 (left: 6 60)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 * 6 = 60 (left: 6 60)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n10 / 6 = 1.67 (left: 1.67 6)\n",
                    "3 * 2 = 6 (left: 6 6 10)\nInput: 3 3 3 6\n",
                    "3 * 2 = 6 (left: 6 6 10)\nPossible next steps:\n",
                    "3 * 2 = 6 (left: 6 6 10)\n3 + 3 = 6 (left: 3 6 6)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n3 * 3 = 9 (left: 6 9 6)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n3 / 3 = 1 (left: 1 3 6)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n6 - 3 = 3 (left: 3 3 6)\n",
                    "3 * 2 = 6 (left: 6 6 10)\n6 / 3 = 2 (left: 2 3 6)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n5 + 6 = 11 (left: 10 11)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n6 - 5 = 1 (left: 1 10)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n6 / 5 = 1.2 (left: 1.2 10)\n",
                    "2 + 3 = 5 (left: 5 6 10)\nInput: 1 2 3 4\n",
                    "2 + 3 = 5 (left: 5 6 10)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 5 6 10)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n2 + 3 = 5 (left: 1 5 4)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 + 4 = 7 (left: 1 2 7)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n2 * 3 = 6 (left: 1 6 4)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 * 4 = 12 (left: 1 2 12)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n1 - 2 = -1 (left: -1 3 4)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n2 - 3 = -1 (left: -1 1 4)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 - 4 = -1 (left: 1 2 -1)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n1 / 2 = 0.5 (left: 0.5 3 4)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n2 / 3 = 0.67 (left: 1 0.67 4)\n",
                    "2 + 3 = 5 (left: 5 6 10)\n3 / 4 = 0.75 (left: 1 2 0.75)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n5 + 6 = 11 (left: 10 11)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n6 - 5 = 1 (left: 1 10)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n6 / 5 = 1.2 (left: 1.2 10)\n",
                    "3 + 2 = 5 (left: 5 6 10)\nInput: 3 3 3 3\n",
                    "3 + 2 = 5 (left: 5 6 10)\nPossible next steps:\n",
                    "3 + 2 = 5 (left: 5 6 10)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 + 2 = 5 (left: 5 6 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "6 - 2 = 4 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n",
                    "6 - 2 = 4 (left: 4 6 10)\n6 * 4 = 24 (left: 24 10)\n",
                    "6 - 2 = 4 (left: 4 6 10)\n6 + 4 = 10 (left: 10 10)\n",
                    "6 - 2 = 4 (left: 4 6 10)\n6 / 4 = 1.5 (left: 1.5 10)\n",
                    "6 - 2 = 4 (left: 4 6 10)\n10 + 4 = 14 (left: 6 14)\n",
                    "6 - 2 = 4 (left: 4 6 10)\n10 - 4 = 6 (left: 6 10)\n",
                    "10 - 6 = 4 (left: 2 6 10)\n2 + 6 = 8 (left: 8 10)\n",
                    "10 - 6 = 4 (left: 2 6 10)\n6 + 2 = 8 (left: 8 10)\n",
                    "10 - 6 = 4 (left: 2 6 10)\n2 * 6 = 12 (left: 12 10)\n",
                    "10 - 6 = 4 (left: 2 6 10)\n6 * 2 = 12 (left: 12 10)\n",
                    "10 - 6 = 4 (left: 2 6 10)\n6 / 2 = 3 (left: 3 10)\n",
                    "10 - 6 = 4 (left: 2 6 10)\n10 + 2 = 12 (left: 2 12)\n",
                    "10 - 6 = 4 (left: 2 6 10)\n10 - 2 = 8 (left: 8 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 2 6 10)\n10 + 2 = 12 (left: 2 12)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n10 - 3 = 7 (left: 7 10)\n",
                    "2 * 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 6 10",
                "ys": [
                    "10 - 6 = 4 (left: 2 6 10)\n10 + 2 = 12 (left: 2 12)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n10 - 3 = 7 (left: 7 10)\n",
                    "2 * 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n"
                ],
                "new_ys": [
                    "10 - 6 = 4 (left: 2 6 10)\n10 + 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "10 - 6 = 4 (left: 2 6 10)\n10 + 2 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "10 - 6 = 4 (left: 2 6 10)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "10 - 6 = 4 (left: 2 6 10)\n10 + 2 = 12 (left: 2 12)\n12 + 2 = 14 (left: 2 14)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 * 10 = 90 (left: 90)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 / 10 = 0.9 (left: 0.9 10)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n10 - 3 = 7 (left: 7)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n10 / 3 = 3 (left: 3)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 28)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 - 10 = 8 (left: 8)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 * 10 = 180 (left: 180)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 / 10 = 1.8 (left: 1.8)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\nInput: 5 5 5 5\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\nPossible next steps:\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n5 - 5 = 0 (left: 0 5 5 5)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n5 * 5 = 25 (left: 25 5 5)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n5 / 5 = 1 (left: 1 5 5 5)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n10 / 2 = 5 (left: 5)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\nInput: 3 5 15 15\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\nPossible next steps:\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 5 = 8 (left: 8 15 15)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n15 / 3 = 5 (left: 5 15 15)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n15 - 3 = 12 (left: 5 12 15)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n15 - 5 = 10 (left: 3 10 15)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n10 - 3 = 7 (left: 7 10)\n7 + 10 = 17 (left: 10 17)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n10 - 3 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "2 * 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "2 * 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 * 12 = 120 (left: 120)\n",
                    "2 * 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n12 - 10 = 2 (left: 2 12)\n",
                    "2 * 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n12 / 10 = 1.2 (left: 1.2 12)\n",
                    "2 * 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n12 + 10 = 22 (left: 10 22)\n",
                    "2 * 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 - 12 = -2 (left: -2 10)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 2 6 10)\n10 + 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 28)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n5 - 5 = 0 (left: 0 5 5 5)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 6 10",
                "ys": [
                    "10 - 6 = 4 (left: 2 6 10)\n10 + 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 28)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n5 - 5 = 0 (left: 0 5 5 5)\n"
                ],
                "new_ys": [
                    "10 - 6 = 4 (left: 2 6 10)\n10 + 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (10 + 6) = 24\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 3 3 3 8\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n3 + 3 = 6 (left: 3 6 8)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n3 * 3 = 9 (left: 8 9 3)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n8 - 3 = 5 (left: 3 5 3)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n3 + 5 = 8 (left: 3 8 3)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n3 * 8 = 24 (left: 3 24 3)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n8 * 3 = 24 (left: 3 3 24)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n3 * 24 = 72 (left: 3 72 3)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 4 4 6 4\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n4 + 4 = 8 (left: 6 8 4)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n6 / 4 = 1 (left: 1 4 4)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n4 * 4 = 16 (left: 6 16 4)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n4 * 6 = 24 (left: 4 24 4)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n6 - 4 = 2 (left: 2 4 4)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n4 + 2 = 6 (left: 6 4 4)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n4 - 2 = 2 (left: 2 4 4)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n4 * 2 = 8 (left: 8 4 4)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\nInput: 13\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\nPossible next steps:\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n13 + 13 = 26 (left: 26)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n13 / 13 = 1 (left: 1)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n13 * 13 = 169 (left: 169)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n13 - 13 = 0 (left: 0)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\nInput: 3 3 8 8\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\nPossible next steps:\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n8 - 3 = 5 (left: 3 8 5)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n3 * 8 = 24 (left: 8 24 8)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n8 / 3 = 2 (left: 2 3 8)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n8 / 3 = 2 (left: 2 8 3)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n3 + 8 = 11 (left: 11 8 8)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n3 * 8 = 24 (left: 24 8 8)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 28)\nInput: 3 6 9 12\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 28)\nPossible next steps:\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 28)\n3 + 6 = 9 (left: 9 9 12)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 28)\n9 / 3 = 3 (left: 6 3 12)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 28)\n12 - 3 = 9 (left: 3 9 9)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 28)\n6 * 3 = 18 (left: 9 12 18)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 28)\n12 / 3 = 4 (left: 4 9 12)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 28)\n9 - 3 = 6 (left: 6 9 12)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 28)\n12 - 6 = 6 (left: 3 6 12)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n18 + 10 = 28 (left: 28)\n9 + 3 = 12 (left: 6 9 12)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n5 + 5 = 10 (left: 5 10 5 5)\n5 + 10 = 15 (left: 5 15 5)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n5 + 5 = 10 (left: 5 10 5 5)\n5 + 5 = 10 (left: 10 5 5)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n5 + 5 = 10 (left: 5 10 5 5)\n5 * 10 = 50 (left: 5 50 5)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n5 + 5 = 10 (left: 5 10 5 5)\n5 / 5 = 1 (left: 1 10 5)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n5 - 5 = 0 (left: 0 5 5 5)\n0 + 5 = 5 (left: 5 5 5)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n5 - 5 = 0 (left: 0 5 5 5)\n5 * 0 = 0 (left: 0 5 5)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n5 - 5 = 0 (left: 0 5 5 5)\n5 / 5 = 1 (left: 0 5 5)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 * 6 = 18 (left: 18 10)\n5 - 5 = 0 (left: 0 5 5 5)\n5 - 0 = 5 (left: 5 5 5)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 2 6 10)\n10 + 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (10 + 6) = 24\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 3 3 3 8\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n3 + 3 = 6 (left: 3 6 8)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n3 * 3 = 9 (left: 8 9 3)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n8 - 3 = 5 (left: 3 5 3)\n",
                    "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n3 + 5 = 8 (left: 3 8 3)\n"
                ]
            }
        ],
        "idx": 809,
        "ys": [
            "10 - 6 = 4 (left: 2 6 10)\n10 + 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (10 + 6) = 24\n",
            "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 3 3 3 8\n",
            "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
            "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n3 + 3 = 6 (left: 3 6 8)\n",
            "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n3 * 3 = 9 (left: 8 9 3)\n",
            "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n8 - 3 = 5 (left: 3 5 3)\n",
            "6 / 2 = 3 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n3 + 5 = 8 (left: 3 8 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 18181,
            "prompt_tokens": 52881,
            "cost": 0.11568350000000001
        },
        "time_spent": 52.35628890991211
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 5 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n",
                    "3 * 5 = 15 (left: 1 15 7)\n",
                    "5 * 7 = 35 (left: 1 3 35)\n",
                    "1 + 5 = 6 (left: 6 3 7)\n",
                    "5 - 1 = 4 (left: 4 3 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n",
                    "3 * 5 = 15 (left: 1 15 7)\n",
                    "5 * 7 = 35 (left: 1 3 35)\n",
                    "1 + 5 = 6 (left: 6 3 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 5 7",
                "ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n",
                    "3 * 5 = 15 (left: 1 15 7)\n",
                    "5 * 7 = 35 (left: 1 3 35)\n",
                    "1 + 5 = 6 (left: 6 3 7)\n"
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 - 4 = 1 (left: 1 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 5 = 2 (left: 2 7)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n1 + 8 = 9 (left: 7 9)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n8 - 1 = 7 (left: 7 7)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n1 * 8 = 8 (left: 8 8)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n8 / 1 = 8 (left: 8 8)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n1 + 3 = 4 (left: 4 12)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 + 12 = 15 (left: 1 15)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n1 * 3 = 3 (left: 3 12)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n3 + 5 = 8 (left: 8 7)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n3 * 5 = 15 (left: 15 7)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n5 + 7 = 12 (left: 3 12)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n5 * 7 = 35 (left: 3 35)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n7 + 3 = 10 (left: 10 5)\n",
                    "1 * 3 = 3 (left: 3 5 7)\n7 * 3 = 21 (left: 21 5)\n",
                    "3 * 5 = 15 (left: 1 15 7)\n1 + 15 = 16 (left: 7 16)\n",
                    "3 * 5 = 15 (left: 1 15 7)\n15 - 1 = 14 (left: 14 7)\n",
                    "3 * 5 = 15 (left: 1 15 7)\n1 * 15 = 15 (left: 15 7)\n",
                    "3 * 5 = 15 (left: 1 15 7)\n15 / 1 = 15 (left: 7 15)\n",
                    "5 * 7 = 35 (left: 1 3 35)\n1 + 3 = 4 (left: 4 35)\n",
                    "5 * 7 = 35 (left: 1 3 35)\n3 * 1 = 3 (left: 3 35)\n",
                    "5 * 7 = 35 (left: 1 3 35)\n35 + 1 = 36 (left: 3 36)\n",
                    "5 * 7 = 35 (left: 1 3 35)\n35 - 3 = 32 (left: 1 32)\n",
                    "5 * 7 = 35 (left: 1 3 35)\n35 / 3 = 11 (left: 1 11)\n",
                    "5 * 7 = 35 (left: 1 3 35)\n3 + 1 = 4 (left: 4 35)\n",
                    "1 + 5 = 6 (left: 6 3 7)\n6 + 3 = 9 (left: 7 9)\n",
                    "1 + 5 = 6 (left: 6 3 7)\n6 - 3 = 3 (left: 3 7)\n",
                    "1 + 5 = 6 (left: 6 3 7)\n6 * 3 = 18 (left: 7 18)\n",
                    "1 + 5 = 6 (left: 6 3 7)\n6 / 3 = 2 (left: 2 7)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 5 = 2 (left: 2 7)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n1 + 8 = 9 (left: 7 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 5 7",
                "ys": [
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 5 = 2 (left: 2 7)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n1 + 8 = 9 (left: 7 9)\n"
                ],
                "new_ys": [
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 - 9 = -2 (left: -2)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 * 9 = 63 (left: 63)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 / 9 = 0.77778 (left: 0.77778)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 + 20 = 27 (left: 27)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n20 - 7 = 13 (left: 13)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n20 / 7 = 2.86 (left: 2.86)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 - 20 = -13 (left: -13)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n4 * 3 = 12 (left: 3 4 12)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n5 + 7 = 12 (left: 4 12)\n12 / 4 = 3 (left: 3 3 12)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 7)\n3 + 7 = 10 (left: 7 10)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 7)\n7 - 3 = 4 (left: 4 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 7)\n3 * 7 = 21 (left: 7 21)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 4 = 3 (left: 3 7)\n7 / 3 = 2 (left: 2 7)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 5 = 2 (left: 2 7)\n2 + 7 = 9 (left: 7 9)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n7 - 5 = 2 (left: 2 7)\n7 - 2 = 5 (left: 5 7)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n1 + 8 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n1 + 8 = 9 (left: 7 9)\n9 - 7 = 2 (left: 2)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n1 + 8 = 9 (left: 7 9)\n7 * 9 = 63 (left: 63)\n",
                    "3 + 5 = 8 (left: 1 8 7)\n1 + 8 = 9 (left: 7 9)\n9 / 7 = 1.29 (left: 1.29)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 + 20 = 27 (left: 27)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n20 - 7 = 13 (left: 13)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 - 20 = -13 (left: -13)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 3 5 7",
                "ys": [
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 + 20 = 27 (left: 27)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n20 - 7 = 13 (left: 13)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 - 20 = -13 (left: -13)\n"
                ],
                "new_ys": [
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 - 1) * (5 + 7) = 24\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 is the final number, no more steps can be taken.\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 3 5 7 11\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nPossible next steps:\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 + 5 = 8 (left: 7 8 11)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n5 + 7 = 12 (left: 3 12 11)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n7 + 11 = 18 (left: 3 5 18)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 * 5 = 15 (left: 7 15 11)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n5 * 7 = 35 (left: 3 35 11)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n7 * 11 = 77 (left: 3 5 77)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 - 5 = -2 (left: -2 7 11)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n5 - 7 = -2 (left: 3 -2 11)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n7 - 11 = -4 (left: 3 5 -4)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 / 5 = 0.6 (left: 7 0.6 11)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n5 / 7 = 0.71 (left: 3 0.71 11)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n7 / 11 = 0.64 (left: 3 5 0.64)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\nInput: 2 3 4 5\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\nPossible next steps:\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n2 * 3 = 6 (left: 4 5 6)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n4 - 2 = 2 (left: 2 5 6)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n5 - 2 = 3 (left: 3 4 6)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n3 + 2 = 5 (left: 4 5 6)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\nInput: 4 7 5 9\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\nPossible next steps:\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n4 + 7 = 11 (left: 5 9 11)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n7 - 4 = 3 (left: 3 5 9)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n9 - 5 = 4 (left: 4 7 9)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 + 5 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n5 + 4 = 9 (left: 7 9 9)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 + 20 = 27 (left: 27)\nInput: 27\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 + 20 = 27 (left: 27)\nPossible next steps:\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 + 20 = 27 (left: 27)\n27 + 1 = 28 (left: 1 28)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 + 20 = 27 (left: 27)\n27 - 1 = 26 (left: 1 26)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 + 20 = 27 (left: 27)\n27 * 1 = 27 (left: 1 27)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 + 20 = 27 (left: 27)\n27 / 1 = 27 (left: 1 27)\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n20 - 7 = 13 (left: 13)\nThere are no possible next steps.\n",
                    "1 + 3 = 4 (left: 4 5 7)\n4 * 5 = 20 (left: 7 20)\n7 - 20 = -13 (left: -13)\nThere are no possible next steps for the input -13.\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 - 1) * (5 + 7) = 24\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 is the final number, no more steps can be taken.\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 3 5 7 11\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nPossible next steps:\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 + 5 = 8 (left: 7 8 11)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n5 + 7 = 12 (left: 3 12 11)\n",
                    "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n7 + 11 = 18 (left: 3 5 18)\n"
                ]
            }
        ],
        "idx": 810,
        "ys": [
            "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 - 1) * (5 + 7) = 24\n",
            "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 is the final number, no more steps can be taken.\n",
            "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 3 5 7 11\n",
            "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nPossible next steps:\n",
            "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 + 5 = 8 (left: 7 8 11)\n",
            "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n5 + 7 = 12 (left: 3 12 11)\n",
            "5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n7 + 11 = 18 (left: 3 5 18)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 19734,
            "prompt_tokens": 58270,
            "cost": 0.126873
        },
        "time_spent": 34.09187412261963
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 10 = 15 (left: 1 15 13)\n",
                    "5 * 10 = 50 (left: 1 50 13)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n",
                    "13 - 1 = 12 (left: 12 5 10)\n",
                    "13 - 5 = 8 (left: 1 8 10)\n",
                    "13 - 10 = 3 (left: 1 3 10)\n",
                    "13 / 1 = 13 (left: 13 5 10)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 + 5 = 15 (left: 1 10 15)\n",
                    "13 - 1 = 12 (left: 12 5 10)\n",
                    "5 + 10 = 15 (left: 1 15 13)\n",
                    "5 * 10 = 50 (left: 1 50 13)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n",
                    "13 - 5 = 8 (left: 1 8 10)\n",
                    "13 - 10 = 3 (left: 1 3 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 10 13",
                "ys": [
                    "10 + 5 = 15 (left: 1 10 15)\n",
                    "13 - 1 = 12 (left: 12 5 10)\n",
                    "5 + 10 = 15 (left: 1 15 13)\n",
                    "5 * 10 = 50 (left: 1 50 13)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n",
                    "13 - 5 = 8 (left: 1 8 10)\n",
                    "13 - 10 = 3 (left: 1 3 10)\n"
                ],
                "new_ys": [
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 * 10 = 10 (left: 10 15)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 10 = 5 (left: 1 5 15)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 / 1 = 15 (left: 15 15)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n",
                    "13 - 1 = 12 (left: 12 5 10)\n12 + 5 = 17 (left: 10 17)\n",
                    "13 - 1 = 12 (left: 12 5 10)\n12 / 5 = 2 (left: 2 10)\n",
                    "13 - 1 = 12 (left: 12 5 10)\n12 * 5 = 60 (left: 10 60)\n",
                    "13 - 1 = 12 (left: 12 5 10)\n12 - 5 = 7 (left: 7 10)\n",
                    "13 - 1 = 12 (left: 12 5 10)\n10 + 5 = 15 (left: 12 15)\n",
                    "13 - 1 = 12 (left: 12 5 10)\n10 / 5 = 2 (left: 2 10)\n",
                    "13 - 1 = 12 (left: 12 5 10)\n10 * 5 = 50 (left: 12 50)\n",
                    "13 - 1 = 12 (left: 12 5 10)\n10 - 5 = 5 (left: 5 10)\n",
                    "5 + 10 = 15 (left: 1 15 13)\n1 + 15 = 16 (left: 16 13)\n",
                    "5 + 10 = 15 (left: 1 15 13)\n1 * 15 = 15 (left: 15 13)\n",
                    "5 + 10 = 15 (left: 1 15 13)\n15 - 1 = 14 (left: 14 13)\n",
                    "5 + 10 = 15 (left: 1 15 13)\n15 / 1 = 15 (left: 15 13)\n",
                    "5 + 10 = 15 (left: 1 15 13)\n15 - 13 = 2 (left: 1 2)\n",
                    "5 * 10 = 50 (left: 1 50 13)\n1 + 50 = 51 (left: 13 51)\n",
                    "5 * 10 = 50 (left: 1 50 13)\n50 / 1 = 50 (left: 50 13)\n",
                    "5 * 10 = 50 (left: 1 50 13)\n50 - 1 = 49 (left: 49 13)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n1 + 2 = 3 (left: 3 13)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n2 * 1 = 2 (left: 2 13)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 2 = 11 (left: 1 11)\n",
                    "10 / 5 = 2 (left: 1 2 13)\nInput: 4 5 2 3\n",
                    "10 / 5 = 2 (left: 1 2 13)\nPossible next steps:\n",
                    "10 / 5 = 2 (left: 1 2 13)\n4 + 5 = 9 (left: 2 3 9)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n5 - 4 = 1 (left: 1 2 3)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n3 - 2 = 1 (left: 1 1 3)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n3 / 2 = 1 (left: 1 1 1)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n3 + 2 = 5 (left: 4 5 5)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n5 - 2 = 3 (left: 3 4 5)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n5 / 2 = 2 (left: 2 3 5)\n",
                    "13 - 5 = 8 (left: 1 8 10)\n1 + 8 = 9 (left: 9 10)\n",
                    "13 - 5 = 8 (left: 1 8 10)\n8 + 1 = 9 (left: 9 10)\n",
                    "13 - 5 = 8 (left: 1 8 10)\n1 * 8 = 8 (left: 8 10)\n",
                    "13 - 5 = 8 (left: 1 8 10)\n8 - 1 = 7 (left: 7 10)\n",
                    "13 - 5 = 8 (left: 1 8 10)\n10 - 1 = 9 (left: 9 10)\n",
                    "13 - 10 = 3 (left: 1 3 10)\n1 + 3 = 4 (left: 4 10)\n",
                    "13 - 10 = 3 (left: 1 3 10)\n3 * 1 = 3 (left: 3 10)\n",
                    "13 - 10 = 3 (left: 1 3 10)\n10 - 1 = 9 (left: 9 3)\n",
                    "13 - 10 = 3 (left: 1 3 10)\n3 + 1 = 4 (left: 4 10)\n",
                    "13 - 10 = 3 (left: 1 3 10)\n10 - 3 = 7 (left: 1 7)\n",
                    "13 - 10 = 3 (left: 1 3 10)\n10 / 1 = 10 (left: 10 3)\n",
                    "13 - 10 = 3 (left: 1 3 10)\nInput: 5 5 5 5\n",
                    "13 - 10 = 3 (left: 1 3 10)\nPossible next steps:\n",
                    "13 - 10 = 3 (left: 1 3 10)\n5 + 5 = 10 (left: 5 10 5)\n",
                    "13 - 10 = 3 (left: 1 3 10)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "13 - 10 = 3 (left: 1 3 10)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "13 - 10 = 3 (left: 1 3 10)\n5 - 5 = 0 (left: 0 5 5)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 * 10 = 10 (left: 10 15)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 / 1 = 15 (left: 15 15)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 10 13",
                "ys": [
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 * 10 = 10 (left: 10 15)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 / 1 = 15 (left: 15 15)\n"
                ],
                "new_ys": [
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n14 * 10 = 140 (left: 140)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n14 / 10 = 1.4 (left: 1.4)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n10 / 14 = 0.71 (left: 0.71)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n15 - 11 = 4 (left: 4 15)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n15 / 11 = 1.36 (left: 1.36 15)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 - 15 = -4 (left: -4 11)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n15 - 10 = 5 (left: 5 15)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n15 / 10 = 1.5 (left: 1.5 15)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n10 - 15 = -5 (left: -5 15)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 * 16 = 160 (left: 160)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n16 / 10 = 1.6 (left: 1.6)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n16 - 10 = 6 (left: 6)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 * 10 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 * 10 = 10 (left: 10 15)\n15 - 10 = 5 (left: 5 15)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 * 10 = 10 (left: 10 15)\n15 / 10 = 1.5 (left: 1.5 15)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 * 10 = 10 (left: 10 15)\n10 * 15 = 150 (left: 150)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 / 1 = 15 (left: 15 15)\n15 + 15 = 30 (left: 30)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 / 1 = 15 (left: 15 15)\n15 - 15 = 0 (left: 0)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 / 1 = 15 (left: 15 15)\n15 * 15 = 225 (left: 225)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 / 1 = 15 (left: 15 15)\n15 / 15 = 1 (left: 1)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 10 13",
                "ys": [
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n"
                ],
                "new_ys": [
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (10 + 5) + (10 - 1) = 24\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: 10 + (5 + 1) + 13 = 24\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (10 / 5) * (13 - 1) = 24\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 + 0 = 14 (left: 0 14)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 - 0 = 14 (left: 0 14)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\nInput: 4 5 6 7\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\nPossible next steps:\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\n5 + 6 = 11 (left: 4 7 11)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\n6 + 7 = 13 (left: 4 5 13)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\n4 * 5 = 20 (left: 6 7 20)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\n5 * 6 = 30 (left: 4 7 30)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\n6 * 7 = 42 (left: 4 5 42)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\n4 - 5 = -1 (left: -1 6 7)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\n5 - 6 = -1 (left: 4 -1 7)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\n6 - 7 = -1 (left: 4 5 -1)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\n4 / 5 = 0.8 (left: 0.8 6 7)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\n5 / 6 = 0.83 (left: 4 0.83 7)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\n6 / 7 = 0.86 (left: 4 5 0.86)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\nInput: 3 3 8 8\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\nPossible next steps:\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n8 / 3 = 2 (left: 2 3 8)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n8 / 3 = 2 (left: 2 3 8)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n8 + 3 = 11 (left: 3 8 11)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n3 * 3 = 9 (left: 8 9 8)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n10 / 1 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n3 - 3 = 0 (left: 0 8 8)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\nInput: 3 3 3 3\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\nPossible next steps:\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\nInput: 10 5 3 2\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\nPossible next steps:\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n10 - 5 = 5 (left: 5 3 2)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n10 / 5 = 2 (left: 2 3 2)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n10 + 5 = 15 (left: 3 15 2)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n10 * 5 = 50 (left: 50 3 2)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n5 + 3 = 8 (left: 10 8 2)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n5 / 3 = 1 (left: 10 1 2)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n5 * 3 = 15 (left: 10 15 2)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 + 1 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n5 - 3 = 2 (left: 10 2 2)\n"
                ],
                "values": [
                    1000,
                    0,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (10 + 5) + (10 - 1) = 24\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (10 / 5) * (13 - 1) = 24\n",
                    "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: 10 + (5 + 1) + 13 = 24\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 + 0 = 14 (left: 0 14)\n",
                    "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 - 0 = 14 (left: 0 14)\n",
                    "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\nInput: 4 5 6 7\n"
                ]
            }
        ],
        "idx": 811,
        "ys": [
            "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (10 + 5) + (10 - 1) = 24\n",
            "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (10 / 5) * (13 - 1) = 24\n",
            "10 + 5 = 15 (left: 1 10 15)\n15 - 1 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: 10 + (5 + 1) + 13 = 24\n",
            "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
            "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 + 0 = 14 (left: 0 14)\n",
            "10 / 5 = 2 (left: 1 2 13)\n13 - 1 = 12 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 - 0 = 14 (left: 0 14)\n",
            "10 + 5 = 15 (left: 1 10 15)\n1 + 10 = 11 (left: 11 15)\n11 + 15 = 26 (left: 26)\nInput: 4 5 6 7\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 21809,
            "prompt_tokens": 64353,
            "cost": 0.14014749999999998
        },
        "time_spent": 41.471269845962524
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 7 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n",
                    "7 - 5 = 2 (left: 2 8 9)\n",
                    "9 - 5 = 4 (left: 4 8 9)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n",
                    "7 - 5 = 2 (left: 2 8 9)\n",
                    "9 - 5 = 4 (left: 4 8 9)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 7 8 9",
                "ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n",
                    "7 - 5 = 2 (left: 2 8 9)\n",
                    "9 - 5 = 4 (left: 4 8 9)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n"
                ],
                "new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 * 9 = 72 (left: 12 72)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 / 8 = 1.125 (left: 1.125 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 / 9 = 1.3333 (left: 1.3333 12)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n8 + 9 = 17 (left: 17 35)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 35 = 315 (left: 8 315)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n35 - 8 = 27 (left: 8 9 27)\n",
                    "7 - 5 = 2 (left: 2 8 9)\n2 + 8 = 10 (left: 9 10)\n",
                    "7 - 5 = 2 (left: 2 8 9)\n8 - 2 = 6 (left: 6 9)\n",
                    "7 - 5 = 2 (left: 2 8 9)\n2 * 8 = 16 (left: 9 16)\n",
                    "7 - 5 = 2 (left: 2 8 9)\n8 / 2 = 4 (left: 4 9)\n",
                    "7 - 5 = 2 (left: 2 8 9)\nInput: 3 5 8 9\n",
                    "7 - 5 = 2 (left: 2 8 9)\nPossible next steps:\n",
                    "7 - 5 = 2 (left: 2 8 9)\n3 + 5 = 8 (left: 8 8 9)\n",
                    "7 - 5 = 2 (left: 2 8 9)\n5 * 3 = 15 (left: 8 15 9)\n",
                    "7 - 5 = 2 (left: 2 8 9)\n8 + 5 = 13 (left: 3 8 13)\n",
                    "7 - 5 = 2 (left: 2 8 9)\n8 - 5 = 3 (left: 3 3 9)\n",
                    "7 - 5 = 2 (left: 2 8 9)\n9 - 3 = 6 (left: 8 6 9)\n",
                    "7 - 5 = 2 (left: 2 8 9)\n3 * 5 = 15 (left: 8 15 9)\n",
                    "7 - 5 = 2 (left: 2 8 9)\n9 - 5 = 4 (left: 3 4 8)\n",
                    "7 - 5 = 2 (left: 2 8 9)\n9 / 3 = 3 (left: 5 8 3)\n",
                    "7 - 5 = 2 (left: 2 8 9)\n9 - 3 = 6 (left: 8 6 9)\n",
                    "9 - 5 = 4 (left: 4 8 9)\n4 + 8 = 12 (left: 9 12)\n",
                    "9 - 5 = 4 (left: 4 8 9)\n8 * 9 = 72 (left: 4 72)\n",
                    "9 - 5 = 4 (left: 4 8 9)\n9 - 4 = 5 (left: 5 8)\n",
                    "9 - 5 = 4 (left: 4 8 9)\n8 / 4 = 2 (left: 2 9)\n",
                    "9 - 5 = 4 (left: 4 8 9)\n9 - 8 = 1 (left: 1 9)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n2 + 8 = 10 (left: 9 10)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n8 - 2 = 6 (left: 6 9)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n9 - 2 = 7 (left: 7 8)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n9 / 2 = 4.5 (left: 4.5 8)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n2 * 8 = 16 (left: 9 16)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n8 / 2 = 4 (left: 4 9)\n",
                    "9 - 7 = 2 (left: 2 8 9)\nInput: 5 5 5 5\n",
                    "9 - 7 = 2 (left: 2 8 9)\nPossible next steps:\n",
                    "9 - 7 = 2 (left: 2 8 9)\n5 + 5 = 10 (left: 5 10 5)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "9 - 7 = 2 (left: 2 8 9)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 9 12)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 17 12)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n9 / 8 = 1 (left: 1 1 12)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n12 - 9 = 3 (left: 8 3 12)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n9 * 8 = 72 (left: 72 12)\n",
                    "7 + 5 = 12 (left: 8 9 12)\n12 / 9 = 1 (left: 8 1 1)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n8 + 9 = 17 (left: 17 35)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 35 = 315 (left: 8 315)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 7 8 9",
                "ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n8 + 9 = 17 (left: 17 35)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 35 = 315 (left: 8 315)\n"
                ],
                "new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 - 12 = 5 (left: 5 17)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 / 12 = 1.4166666666666667 (left: 1.4166666666666667 17)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 * 12 = 204 (left: 204)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 1 11)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n12 * 1 = 12 (left: 1 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 - 8 = 1 (left: 1 12)\n12 + 1 = 13 (left: 1 13)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 + 12 = 21 (left: 21)\n2 + 1 = 3 (left: 1 3)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 + 12 = 21 (left: 21)\n2 * 1 = 2 (left: 2 1)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 + 12 = 21 (left: 21)\n2 - 1 = 1 (left: 1 1)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 + 12 = 21 (left: 21)\n2 / 1 = 2 (left: 2 1)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 + 12 = 21 (left: 21)\n\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 12)\n4 * 2 = 8 (left: 8 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 4)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 12)\nInput: 1 3 5 7\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 12)\nPossible next steps:\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 12)\n1 + 3 = 4 (left: 4 5 7)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 12)\n7 - 5 = 2 (left: 1 2 7)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 12)\n7 - 3 = 4 (left: 1 4 5)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 12)\n1 * 5 = 5 (left: 5 3 7)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 12)\n7 - 1 = 6 (left: 3 5 6)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 12)\n3 + 5 = 8 (left: 1 7 8)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 12)\n7 + 5 = 12 (left: 1 3 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n12 - 8 = 4 (left: 4 12)\n1 + 7 = 8 (left: 3 5 8)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n8 + 9 = 17 (left: 17 35)\n17 + 35 = 52 (left: 52)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n8 + 9 = 17 (left: 17 35)\n35 - 17 = 18 (left: 18)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n8 + 9 = 17 (left: 17 35)\n35 / 17 = 2 (left: 2)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n8 + 9 = 17 (left: 17 35)\n17 * 35 = 595 (left: 595)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n72 - 35 = 37 (left: 37)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n72 / 35 = 2 (left: 2 35)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n72 + 35 = 107 (left: 107)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n72 * 35 = 2520 (left: 2520)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 35 = 315 (left: 8 315)\n8 * 315 = 2520 (left: 2520)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 35 = 315 (left: 8 315)\n315 / 8 = 39.375 (left: 8 39.375)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 35 = 315 (left: 8 315)\n315 - 8 = 307 (left: 8 307)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 35 = 315 (left: 8 315)\n315 + 8 = 323 (left: 8 323)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 + 12 = 21 (left: 21)\n\n",
                    "5 * 7 = 35 (left: 8 9 35)\n8 + 9 = 17 (left: 17 35)\n35 - 17 = 18 (left: 18)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n72 - 35 = 37 (left: 37)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 - 12 = 5 (left: 5 17)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 / 12 = 1.4166666666666667 (left: 1.4166666666666667 17)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 * 12 = 204 (left: 204)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 7 8 9",
                "ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 + 12 = 21 (left: 21)\n\n",
                    "5 * 7 = 35 (left: 8 9 35)\n8 + 9 = 17 (left: 17 35)\n35 - 17 = 18 (left: 18)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n72 - 35 = 37 (left: 37)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 - 12 = 5 (left: 5 17)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 / 12 = 1.4166666666666667 (left: 1.4166666666666667 17)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 * 12 = 204 (left: 204)\n"
                ],
                "new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\nInput: 1 3 4 6\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\nPossible next steps:\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n3 + 4 = 7 (left: 1 7 6)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n1 * 3 = 3 (left: 3 4 6)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n4 + 6 = 10 (left: 1 3 10)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n1 + 6 = 7 (left: 3 4 7)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n6 - 1 = 5 (left: 5 3 4)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n6 / 3 = 2 (left: 1 2 4)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n6 - 4 = 2 (left: 1 3 2)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n9 + 12 = 21 (left: 21)\n\nThere are no possible next steps.\n",
                    "5 * 7 = 35 (left: 8 9 35)\n8 + 9 = 17 (left: 17 35)\n35 - 17 = 18 (left: 18)\nInput: 3 5 6 7\n",
                    "5 * 7 = 35 (left: 8 9 35)\n8 + 9 = 17 (left: 17 35)\n35 - 17 = 18 (left: 18)\nPossible next steps:\n",
                    "5 * 7 = 35 (left: 8 9 35)\n8 + 9 = 17 (left: 17 35)\n35 - 17 = 18 (left: 18)\n3 + 5 = 8 (left: 6 7 8)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n8 + 9 = 17 (left: 17 35)\n35 - 17 = 18 (left: 18)\n5 * 3 = 15 (left: 6 7 15)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n8 + 9 = 17 (left: 17 35)\n35 - 17 = 18 (left: 18)\n7 - 5 = 2 (left: 2 6 7)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n8 + 9 = 17 (left: 17 35)\n35 - 17 = 18 (left: 18)\n7 - 3 = 4 (left: 4 6 7)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n72 - 35 = 37 (left: 37)\nInput: 4 6 8 10\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n72 - 35 = 37 (left: 37)\nPossible next steps:\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n72 - 35 = 37 (left: 37)\n4 + 6 = 10 (left: 8 10 10)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n72 - 35 = 37 (left: 37)\n6 - 4 = 2 (left: 2 8 10)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n72 - 35 = 37 (left: 37)\n10 - 8 = 2 (left: 4 2 10)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n72 - 35 = 37 (left: 37)\n10 / 2 = 5 (left: 4 8 5)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n72 - 35 = 37 (left: 37)\n8 - 4 = 4 (left: 4 4 10)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n72 - 35 = 37 (left: 37)\n10 - 4 = 6 (left: 4 6 10)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n72 - 35 = 37 (left: 37)\n8 + 4 = 12 (left: 6 10 12)\n",
                    "5 * 7 = 35 (left: 8 9 35)\n9 * 8 = 72 (left: 72 35)\n72 - 35 = 37 (left: 37)\n4 * 6 = 24 (left: 8 10 24)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 - 12 = 5 (left: 5 17)\n5 + 17 = 22 (left: 22)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 - 12 = 5 (left: 5 17)\n17 - 5 = 12 (left: 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 - 12 = 5 (left: 5 17)\n5 * 17 = 85 (left: 85)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 - 12 = 5 (left: 5 17)\n17 / 5 = 3 (left: 3)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 - 12 = 5 (left: 5 17)\n\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 / 12 = 1.4166666666666667 (left: 1.4166666666666667 17)\nInput: 1.4166666666666667 17\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 / 12 = 1.4166666666666667 (left: 1.4166666666666667 17)\nPossible next steps:\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 / 12 = 1.4166666666666667 (left: 1.4166666666666667 17)\n17 - 1.4166666666666667 = 15.583333333333333 (left: 1.4166666666666667 15.583333333333333)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 / 12 = 1.4166666666666667 (left: 1.4166666666666667 17)\n17 / 1.4166666666666667 = 12 (left: 1.4166666666666667 12)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 / 12 = 1.4166666666666667 (left: 1.4166666666666667 17)\n17 - 17 = 0 (left: 1.4166666666666667 0)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 / 12 = 1.4166666666666667 (left: 1.4166666666666667 17)\n17 * 1.4166666666666667 = 24.000000000000004 (left: 1.4166666666666667 24.000000000000004)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 * 12 = 204 (left: 204)\n204 - 2 = 202 (left: 2 202)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 * 12 = 204 (left: 204)\n204 / 2 = 102 (left: 2 102)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n17 * 12 = 204 (left: 204)\n204 * 2 = 408 (left: 2 408)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\nInput: 1 3 4 6\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\nPossible next steps:\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n3 + 4 = 7 (left: 1 7 6)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n1 * 3 = 3 (left: 3 4 6)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n4 + 6 = 10 (left: 1 3 10)\n",
                    "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n1 + 6 = 7 (left: 3 4 7)\n"
                ]
            }
        ],
        "idx": 812,
        "ys": [
            "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\nInput: 1 3 4 6\n",
            "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\nPossible next steps:\n",
            "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n1 + 3 = 4 (left: 4 4 6)\n",
            "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n3 + 4 = 7 (left: 1 7 6)\n",
            "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n1 * 3 = 3 (left: 3 4 6)\n",
            "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n4 + 6 = 10 (left: 1 3 10)\n",
            "5 + 7 = 12 (left: 8 9 12)\n8 + 9 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n1 + 6 = 7 (left: 3 4 7)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 23877,
            "prompt_tokens": 69173,
            "cost": 0.1515135
        },
        "time_spent": 48.1134090423584
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 11 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 11 = 16 (left: 12 16 12)\n",
                    "5 * 11 = 55 (left: 12 55 12)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n",
                    "12 / 5 = 2 (left: 2 11 12)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n",
                    "12 - 11 = 1 (left: 1 11 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "12 - 11 = 1 (left: 1 11 12)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n",
                    "5 * 11 = 55 (left: 12 55 12)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n",
                    "12 / 5 = 2 (left: 2 11 12)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 11 12 12",
                "ys": [
                    "12 - 11 = 1 (left: 1 11 12)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n",
                    "5 * 11 = 55 (left: 12 55 12)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n",
                    "12 / 5 = 2 (left: 2 11 12)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n"
                ],
                "new_ys": [
                    "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 11 12)\n",
                    "12 - 11 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 1 10 12)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 12)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 * 16 = 192 (left: 12 192)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 / 12 = 1.33 (left: 1.33 12)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 16)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 / 16 = 0.75 (left: 0.75 12)\n",
                    "5 * 11 = 55 (left: 12 55 12)\n12 + 55 = 67 (left: 12 67 12)\n",
                    "5 * 11 = 55 (left: 12 55 12)\n12 * 55 = 660 (left: 12 660 12)\n",
                    "5 * 11 = 55 (left: 12 55 12)\n55 - 12 = 43 (left: 12 43 12)\n",
                    "5 * 11 = 55 (left: 12 55 12)\n55 / 12 = 4.58 (left: 12 4.58 12)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n11 + 6 = 17 (left: 12 17)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 * 11 = 66 (left: 12 66)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n11 * 6 = 66 (left: 12 66)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n11 - 6 = 5 (left: 5 12)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 - 11 = -5 (left: -5 12)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n11 / 6 = 1.83 (left: 1.83 12)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 / 11 = 0.55 (left: 0.55 12)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n7 + 11 = 18 (left: 12 18)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n11 - 7 = 4 (left: 4 12)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n11 * 7 = 77 (left: 12 77)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n11 / 7 = 1 (left: 1 12)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n7 - 11 = -4 (left: -4 12)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n7 * 11 = 77 (left: 12 77)\n",
                    "12 - 5 = 7 (left: 7 11 12)\n7 / 11 = 0.64 (left: 0.64 12)\n",
                    "12 / 5 = 2 (left: 2 11 12)\n2 + 11 = 13 (left: 13 12)\n",
                    "12 / 5 = 2 (left: 2 11 12)\n2 * 11 = 22 (left: 22 12)\n",
                    "12 / 5 = 2 (left: 2 11 12)\n11 + 2 = 13 (left: 2 13)\n",
                    "12 / 5 = 2 (left: 2 11 12)\n11 * 2 = 22 (left: 2 22)\n",
                    "12 / 5 = 2 (left: 2 11 12)\n11 - 2 = 9 (left: 9 12)\n",
                    "12 / 5 = 2 (left: 2 11 12)\n11 / 2 = 5.5 (left: 5.5 12)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n11 + 17 = 28 (left: 12 28)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n17 - 11 = 6 (left: 6 12)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n11 * 17 = 187 (left: 12 187)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n17 / 11 = 1.55 (left: 1.55 12)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n17 - 12 = 5 (left: 5 12)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n12 - 11 = 1 (left: 1 12)\n",
                    "12 + 5 = 17 (left: 11 17 12)\nInput: 6 6 12 24\n",
                    "12 + 5 = 17 (left: 11 17 12)\nPossible next steps:\n",
                    "12 + 5 = 17 (left: 11 17 12)\n6 + 6 = 12 (left: 12 12 24)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n6 / 6 = 1 (left: 1 12 24)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n6 * 6 = 36 (left: 12 24 36)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n6 - 6 = 0 (left: 0 12 24)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n12 + 6 = 18 (left: 18 12 24)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n12 / 6 = 2 (left: 2 12 24)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n12 * 6 = 72 (left: 12 24 72)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n12 - 6 = 6 (left: 6 12 24)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n24 - 12 = 12 (left: 6 12 12)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n24 / 12 = 2 (left: 6 2 12)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n24 + 12 = 36 (left: 6 12 36)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n24 - 6 = 18 (left: 6 12 18)\n",
                    "12 + 5 = 17 (left: 11 17 12)\nInput: 3 6 9 12\n",
                    "12 + 5 = 17 (left: 11 17 12)\nPossible next steps:\n",
                    "12 + 5 = 17 (left: 11 17 12)\n3 + 6 = 9 (left: 9 9 12)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n3 * 6 = 18 (left: 9 12 18)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n3 / 6 = 0.5 (left: 0.5 9 12)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n3 - 6 = -3 (left: -3 9 12)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n6 - 3 = 3 (left: 3 9 12)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n9 - 3 = 6 (left: 6 9 12)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n12 - 9 = 3 (left: 3 9 3)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n12 / 3 = 4 (left: 4 9 12)\n",
                    "12 + 5 = 17 (left: 11 17 12)\n12 + 3 = 15 (left: 9 12 15)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 5 = 2 (left: 2 11 12)\n11 * 2 = 22 (left: 2 22)\n",
                    "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 11 12)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 12)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 * 16 = 192 (left: 12 192)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 16)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 11 12 12",
                "ys": [
                    "12 / 5 = 2 (left: 2 11 12)\n11 * 2 = 22 (left: 2 22)\n",
                    "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 11 12)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 12)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 * 16 = 192 (left: 12 192)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 16)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n"
                ],
                "new_ys": [
                    "12 / 5 = 2 (left: 2 11 12)\n11 * 2 = 22 (left: 2 22)\n2 * 22 = 44 (left: 44)\n",
                    "12 / 5 = 2 (left: 2 11 12)\n11 * 2 = 22 (left: 2 22)\n22 / 2 = 11 (left: 11 22)\n",
                    "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 11 12)\n11 - 12 = -1 (left: -1)\n",
                    "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 11 12)\n11 * 12 = 132 (left: 132)\n",
                    "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 11 12)\n11 / 12 = 0.92 (left: 0.92)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 - 28 = -16 (left: -16)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 * 28 = 336 (left: 336)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n28 / 12 = 2.33 (left: 2.33)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 * 16 = 192 (left: 12 192)\n12 * 2 = 24 (left: 24)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 * 16 = 192 (left: 12 192)\n12 + 192 = 204 (left: 204)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 * 16 = 192 (left: 12 192)\n12 - 192 = -180 (left: -180)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 * 16 = 192 (left: 12 192)\n12 / 192 = 0.0625 (left: 0.0625)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 16)\n4 + 16 = 20 (left: 20)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 16)\n16 / 4 = 4 (left: 4)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 16)\n16 - 4 = 12 (left: 4 12)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 16)\n16 * 4 = 64 (left: 64)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n17 - 12 = 5 (left: 5 17)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n17 / 12 = 1.41667 (left: 1.41667 17)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n12 - 17 = -5 (left: -5 12)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\nInput: 3 4 5 6\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\nPossible next steps:\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n3 + 4 = 7 (left: 5 6 7)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n4 * 5 = 20 (left: 3 6 20)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n6 - 5 = 1 (left: 3 4 1)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n5 - 4 = 1 (left: 1 3 6)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n6 + 4 = 10 (left: 3 5 10)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n5 * 4 = 20 (left: 3 20 6)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n6 / 3 = 2 (left: 2 4 5)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n6 - 3 = 3 (left: 4 5 3)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 11 = 16 (left: 12 16 12)\n12 * 16 = 192 (left: 12 192)\n12 * 2 = 24 (left: 24)\n",
                    "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 - 28 = -16 (left: -16)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 16)\n4 + 16 = 20 (left: 20)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 11 12 12",
                "ys": [
                    "5 + 11 = 16 (left: 12 16 12)\n12 * 16 = 192 (left: 12 192)\n12 * 2 = 24 (left: 24)\n",
                    "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 - 28 = -16 (left: -16)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 16)\n4 + 16 = 20 (left: 20)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n"
                ],
                "new_ys": [
                    "5 + 11 = 16 (left: 12 16 12)\n12 * 16 = 192 (left: 12 192)\n12 * 2 = 24 (left: 24)\nAnswer: (5 + 11) * 12 - 12 = 24\n",
                    "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nThere are no possible next steps.\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\nInput: 3 3 8 8\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\nPossible next steps:\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n3 * 3 = 9 (left: 8 8 9)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n8 / 3 = 2 (left: 2 3 8)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n8 / 3 = 2 (left: 2 3 8)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 - 28 = -16 (left: -16)\nThere are no possible next steps.\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\nInput: 16\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\nPossible next steps:\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\n16 + 0 = 16 (left: 0 16)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\n16 - 0 = 16 (left: 0 16)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\n16 * 1 = 16 (left: 1 16)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)\n16 / 1 = 16 (left: 1 16)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 16)\n4 + 16 = 20 (left: 20)\nInput: 6 6 6 6\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 16)\n4 + 16 = 20 (left: 20)\nPossible next steps:\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 16)\n4 + 16 = 20 (left: 20)\n6 + 6 = 12 (left: 6 6 12)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 16)\n4 + 16 = 20 (left: 20)\n6 / 6 = 1 (left: 1 6 6)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 16)\n4 + 16 = 20 (left: 20)\n6 * 6 = 36 (left: 6 6 36)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 4 16)\n4 + 16 = 20 (left: 20)\n6 - 6 = 0 (left: 0 6 6)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\nInput: 3 3 7 7\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\nPossible next steps:\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n3 + 3 = 6 (left: 6 7 7)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n7 - 3 = 4 (left: 3 7 4)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n7 + 3 = 10 (left: 3 7 10)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n3 * 3 = 9 (left: 7 9 7)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n7 - 3 = 4 (left: 3 7 4)\n",
                    "11 - 5 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n7 + 3 = 10 (left: 3 7 10)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 11 = 16 (left: 12 16 12)\n12 * 16 = 192 (left: 12 192)\n12 * 2 = 24 (left: 24)\nAnswer: (5 + 11) * 12 - 12 = 24\n",
                    "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nThere are no possible next steps.\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\nInput: 3 3 8 8\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\nPossible next steps:\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n3 * 3 = 9 (left: 8 8 9)\n"
                ]
            }
        ],
        "idx": 813,
        "ys": [
            "5 + 11 = 16 (left: 12 16 12)\n12 * 16 = 192 (left: 12 192)\n12 * 2 = 24 (left: 24)\nAnswer: (5 + 11) * 12 - 12 = 24\n",
            "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nThere are no possible next steps.\n",
            "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\nInput: 3 3 8 8\n",
            "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\nPossible next steps:\n",
            "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n3 + 3 = 6 (left: 6 8 8)\n",
            "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n8 - 3 = 5 (left: 3 5 8)\n",
            "5 + 11 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n3 * 3 = 9 (left: 8 8 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 26020,
            "prompt_tokens": 74562,
            "cost": 0.163883
        },
        "time_spent": 41.472877740859985
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "8 8 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 8 16 13)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n",
                    "8 / 8 = 1 (left: 1 8 13)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n",
                    "8 - 8 = 0 (left: 8 8 13)\n",
                    "8 / 8 = 1 (left: 8 13 8)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n",
                    "8 - 8 = 0 (left: 8 8 13)\n",
                    "8 / 8 = 1 (left: 8 13 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 + 8 = 16 (left: 8 16 13)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n",
                    "8 / 8 = 1 (left: 1 8 13)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n",
                    "8 - 8 = 0 (left: 8 8 13)\n",
                    "8 / 8 = 1 (left: 8 13 8)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "8 8 8 13",
                "ys": [
                    "8 + 8 = 16 (left: 8 16 13)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n",
                    "8 / 8 = 1 (left: 1 8 13)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n",
                    "8 - 8 = 0 (left: 8 8 13)\n",
                    "8 / 8 = 1 (left: 8 13 8)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n"
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 8 16 13)\n8 + 16 = 24 (left: 24 13)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n16 - 8 = 8 (left: 8 8 13)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 + 8 = 8 (left: 8 13)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 * 8 = 0 (left: 8 13)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 * 13 = 104 (left: 0 104)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n13 - 8 = 5 (left: 0 5)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n13 / 8 = 1.625 (left: 0 1.625)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n13 - 0 = 13 (left: 8 13)\n",
                    "8 / 8 = 1 (left: 1 8 13)\n1 + 8 = 9 (left: 9 13)\n",
                    "8 / 8 = 1 (left: 1 8 13)\n8 + 1 = 9 (left: 9 13)\n",
                    "8 / 8 = 1 (left: 1 8 13)\n1 * 8 = 8 (left: 8 13)\n",
                    "8 / 8 = 1 (left: 1 8 13)\n8 * 1 = 8 (left: 8 13)\n",
                    "8 / 8 = 1 (left: 1 8 13)\n8 - 1 = 7 (left: 7 13)\n",
                    "8 / 8 = 1 (left: 1 8 13)\n1 / 8 = 0.125 (left: 0.125 13)\n",
                    "8 / 8 = 1 (left: 1 8 13)\n8 / 1 = 8 (left: 8 13)\n",
                    "8 / 8 = 1 (left: 1 8 13)\n8 - 1 = 7 (left: 7 13)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n8 + 13 = 21 (left: 21 16)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n8 - 13 = -5 (left: -5 16)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n8 * 13 = 104 (left: 104 16)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 - 8 = 5 (left: 5 16)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 + 8 = 21 (left: 8 21)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n13 / 8 = 1.625 (left: 1.625 16)\n",
                    "8 + 8 = 16 (left: 8 13 16)\nInput: 3 6 4 2\n",
                    "8 + 8 = 16 (left: 8 13 16)\nPossible next steps:\n",
                    "8 + 8 = 16 (left: 8 13 16)\n3 + 6 = 9 (left: 9 4 2)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n3 - 6 = -3 (left: -3 4 2)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n3 * 6 = 18 (left: 18 4 2)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n6 - 4 = 2 (left: 3 2 2)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n6 / 3 = 2 (left: 2 4 2)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n6 + 4 = 10 (left: 3 10 2)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n6 - 2 = 4 (left: 3 4 4)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n6 * 4 = 24 (left: 3 24 2)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n4 / 2 = 2 (left: 3 6 2)\n",
                    "8 + 8 = 16 (left: 8 13 16)\n4 + 2 = 6 (left: 3 6 6)\n",
                    "8 - 8 = 0 (left: 8 8 13)\n8 + 8 = 16 (left: 16 13)\n",
                    "8 - 8 = 0 (left: 8 8 13)\n8 / 8 = 1 (left: 1 13)\n",
                    "8 - 8 = 0 (left: 8 8 13)\n8 - 8 = 0 (left: 0 13)\n",
                    "8 - 8 = 0 (left: 8 8 13)\n8 * 8 = 64 (left: 64 13)\n",
                    "8 - 8 = 0 (left: 8 8 13)\nInput: 3 3 5 8\n",
                    "8 - 8 = 0 (left: 8 8 13)\nPossible next steps:\n",
                    "8 - 8 = 0 (left: 8 8 13)\n3 + 3 = 6 (left: 6 5 8)\n",
                    "8 - 8 = 0 (left: 8 8 13)\n3 * 3 = 9 (left: 9 5 8)\n",
                    "8 - 8 = 0 (left: 8 8 13)\n3 / 3 = 1 (left: 1 5 8)\n",
                    "8 - 8 = 0 (left: 8 8 13)\n5 + 3 = 8 (left: 8 3 8)\n",
                    "8 - 8 = 0 (left: 8 8 13)\n8 - 3 = 5 (left: 5 3 8)\n",
                    "8 - 8 = 0 (left: 8 8 13)\n8 / 3 = 2 (left: 2 3 8)\n",
                    "8 - 8 = 0 (left: 8 8 13)\n5 + 3 = 8 (left: 8 8)\n",
                    "8 - 8 = 0 (left: 8 8 13)\n3 * 5 = 15 (left: 15 8)\n",
                    "8 - 8 = 0 (left: 8 8 13)\n3 / 5 = 0.6 (left: 0.6 8)\n",
                    "8 - 8 = 0 (left: 8 8 13)\n3 - 5 = -2 (left: -2 8)\n",
                    "8 - 8 = 0 (left: 8 8 13)\n\n",
                    "8 / 8 = 1 (left: 8 13 8)\n8 + 13 = 21 (left: 8 21)\n",
                    "8 / 8 = 1 (left: 8 13 8)\n8 - 13 = -5 (left: -5 8)\n",
                    "8 / 8 = 1 (left: 8 13 8)\n8 * 13 = 104 (left: 8 104)\n",
                    "8 / 8 = 1 (left: 8 13 8)\n8 / 13 = 0.6153846153846154 (left: 0.6153846153846154 8)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n16 + 8 = 24 (left: 8 13 24)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n16 * 8 = 128 (left: 13 128)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n16 / 8 = 2 (left: 2 13)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n8 + 13 = 21 (left: 16 21)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n16 - 8 = 8 (left: 8 13)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n16 - 13 = 3 (left: 3 16)\n",
                    "8 + 8 = 16 (left: 16 8 13)\nInput: 5 4 3 2\n",
                    "8 + 8 = 16 (left: 16 8 13)\nPossible next steps:\n",
                    "8 + 8 = 16 (left: 16 8 13)\n5 + 4 = 9 (left: 3 2 9)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n5 * 4 = 20 (left: 3 9 20)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n5 / 4 = 1.25 (left: 1.25 3 2)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n5 - 4 = 1 (left: 1 3 2)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n4 / 3 = 1.33 (left: 1.33 2)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n4 * 3 = 12 (left: 1.33 12)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n4 + 3 = 7 (left: 5 2 7)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n4 - 3 = 1 (left: 1 5 2)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n3 + 2 = 5 (left: 4 5)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n3 * 2 = 6 (left: 4 6)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n3 / 2 = 1.5 (left: 1.5 4)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n3 - 2 = 1 (left: 1 4)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    100,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 + 8 = 16 (left: 16 8 13)\n3 * 2 = 6 (left: 4 6)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n8 + 16 = 24 (left: 24 13)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 + 8 = 8 (left: 8 13)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 * 8 = 0 (left: 8 13)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n13 - 0 = 13 (left: 8 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "8 8 8 13",
                "ys": [
                    "8 + 8 = 16 (left: 16 8 13)\n3 * 2 = 6 (left: 4 6)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n8 + 16 = 24 (left: 24 13)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 + 8 = 8 (left: 8 13)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 * 8 = 0 (left: 8 13)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n13 - 0 = 13 (left: 8 13)\n"
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 16 8 13)\n3 * 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n3 * 2 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n3 * 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n3 * 2 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5 6)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n8 + 16 = 24 (left: 24 13)\n24 / 13 = 1 (left: 1 24)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n8 + 16 = 24 (left: 24 13)\n24 + 13 = 37 (left: 24 37)\n",
                    "8 + 8 = 16 (left: 8 16 13)\n8 + 16 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11 24)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 + 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 + 8 = 8 (left: 8 13)\n13 - 8 = 5 (left: 5 8)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 + 8 = 8 (left: 8 13)\n13 / 8 = 1.625 (left: 1.625 8)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 + 8 = 8 (left: 8 13)\n13 * 8 = 104 (left: 104)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 + 8 = 8 (left: 8 13)\n8 - 13 = -5 (left: -5 8)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 + 8 = 8 (left: 8 13)\n8 / 13 = 0.6153846153846154 (left: 0.6153846153846154 13)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 * 8 = 0 (left: 8 13)\n8 + 13 = 21 (left: 21)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 * 8 = 0 (left: 8 13)\n13 - 8 = 5 (left: 5)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 * 8 = 0 (left: 8 13)\n13 / 8 = 1.625 (left: 1.625)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 * 8 = 0 (left: 8 13)\n8 / 13 = 0.6153846153846154 (left: 0.6153846153846154)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n0 + 21 = 21 (left: 21)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 / 0 is undefined\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n13 - 8 = 5 (left: 5)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n13 / 8 = 1 (left: 1)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 - 13 = -5 (left: -5)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n13 - 0 = 13 (left: 8 13)\n8 + 13 = 21 (left: 21)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n13 - 0 = 13 (left: 8 13)\n13 - 8 = 5 (left: 5 8)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "8 + 8 = 16 (left: 16 8 13)\n3 * 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n3 * 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 + 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 * 8 = 0 (left: 8 13)\n8 + 13 = 21 (left: 21)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n0 + 21 = 21 (left: 21)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n"
                ]
            },
            {
                "step": 3,
                "x": "8 8 8 13",
                "ys": [
                    "8 + 8 = 16 (left: 16 8 13)\n3 * 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n3 * 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 + 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 * 8 = 0 (left: 8 13)\n8 + 13 = 21 (left: 21)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n0 + 21 = 21 (left: 21)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n"
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 16 8 13)\n3 * 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 8 + (8 * (8 + 13)) = 24\n",
                    "8 + 8 = 16 (left: 16 8 13)\n3 * 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 10 = 20 (left: 10 20)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n3 * 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 10 = 0 (left: 0 10)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n3 * 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 10 = 100 (left: 10 100)\n",
                    "8 + 8 = 16 (left: 16 8 13)\n3 * 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 / 10 = 1 (left: 1 10)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 + 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\nInput: 3 3 8 8\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 + 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\nPossible next steps:\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 + 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 + 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n3 * 3 = 9 (left: 8 8 9)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 + 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n8 - 3 = 5 (left: 3 8 8)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 + 8 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n8 * 3 = 24 (left: 8 8 24)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 * 8 = 0 (left: 8 13)\n8 + 13 = 21 (left: 21)\nInput: 5 5 5 5\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 * 8 = 0 (left: 8 13)\n8 + 13 = 21 (left: 21)\nPossible next steps:\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 * 8 = 0 (left: 8 13)\n8 + 13 = 21 (left: 21)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 * 8 = 0 (left: 8 13)\n8 + 13 = 21 (left: 21)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 * 8 = 0 (left: 8 13)\n8 + 13 = 21 (left: 21)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n0 * 8 = 0 (left: 8 13)\n8 + 13 = 21 (left: 21)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n0 + 21 = 21 (left: 21)\nThere are no possible next steps.\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\nInput: 3 3 3 3\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\nPossible next steps:\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\nInput: 6 6 6 6\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\nPossible next steps:\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n6 + 6 = 12 (left: 6 6 6 12)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n6 / 6 = 1 (left: 1 6 6 6)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n6 * 6 = 36 (left: 6 6 36 6)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n6 - 6 = 0 (left: 0 6 6 6)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n2 + 1 = 3 (left: 3)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n2 * 1 = 2 (left: 2)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n2 - 1 = 1 (left: 1)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n2 / 1 = 2 (left: 2)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\nInput: 3 5 7 9\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\nPossible next steps:\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n3 + 5 = 8 (left: 7 8 9)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n5 + 7 = 12 (left: 3 12 9)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n7 + 9 = 16 (left: 3 5 16)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n3 * 5 = 15 (left: 7 9 15)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n5 * 7 = 35 (left: 3 35 9)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n7 * 9 = 63 (left: 3 5 63)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n3 - 5 = -2 (left: -2 5 7)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n5 - 7 = -2 (left: 3 -2 9)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n7 - 9 = -2 (left: 3 5 -2)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n3 / 5 = 0.6 (left: 7 9 0.6)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n5 / 7 = 0.71 (left: 3 0.71 9)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 - 0 = 8 (left: 8 13)\n8 + 13 = 21 (left: 21)\n7 / 9 = 0.78 (left: 3 5 0.78)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n6 + 6 = 12 (left: 6 6 6 12)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n6 / 6 = 1 (left: 1 6 6 6)\n",
                    "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n6 * 6 = 36 (left: 6 6 36 6)\n"
                ]
            }
        ],
        "idx": 814,
        "ys": [
            "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 3 6)\n",
            "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n3 / 3 = 1 (left: 1 3 3 3)\n",
            "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9 3)\n",
            "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n3 - 3 = 0 (left: 0 3 3 3)\n",
            "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n6 + 6 = 12 (left: 6 6 6 12)\n",
            "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n6 / 6 = 1 (left: 1 6 6 6)\n",
            "8 - 8 = 0 (left: 0 8 13)\n8 + 13 = 21 (left: 0 21)\n21 - 0 = 21 (left: 21)\n6 * 6 = 36 (left: 6 6 36 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 28467,
            "prompt_tokens": 79951,
            "cost": 0.17686049999999998
        },
        "time_spent": 48.541558027267456
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 6 11",
                "ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 12 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 + 6 = 15 (left: 11 15)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 * 9 = 54 (left: 11 54)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 * 6 = 54 (left: 11 54)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n11 / 6 = 1 (left: 1 11)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n3 + 6 = 9 (left: 8 9)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n6 * 3 = 18 (left: 8 18)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n6 / 3 = 2 (left: 2 8)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n3 * 8 = 24 (left: 6 24)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n8 / 3 = 2.67 (left: 2.67 6)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "11 - 3 = 8 (left: 3 6 8)\n6 + 3 = 9 (left: 8 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 12 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 + 6 = 15 (left: 11 15)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 6 11",
                "ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 12 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 + 6 = 15 (left: 11 15)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 12 11)\n12 + 11 = 23 (left: 11 23)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 12 11)\n12 * 11 = 132 (left: 11 132)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 12 11)\n12 / 11 = 1 (left: 1 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 + 11 = 47 (left: 47)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 * 11 = 396 (left: 396)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 / 11 = 3.27 (left: 3.27)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 / 0 is undefined (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 + 5 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 * 5 = 30 (left: 30)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 / 5 = 1.2 (left: 1.2)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 - 5 = 1 (left: 1)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n15 - 11 = 4 (left: 4 15)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n15 / 11 = 1.36 (left: 1.36 15)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n15 * 11 = 165 (left: 165)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\nInput: 3 1 4 6\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\nPossible next steps:\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n3 + 1 = 4 (left: 4 4 6)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n3 - 1 = 2 (left: 2 4 6)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n3 / 1 = 3 (left: 3 4 6)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n3 * 1 = 3 (left: 3 4 6)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n1 + 4 = 5 (left: 3 5 6)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n1 - 4 = -3 (left: -3 4 6)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n1 / 4 = 0.25 (left: 0.25 4 6)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n1 * 4 = 4 (left: 3 4 6)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n4 + 6 = 10 (left: 3 10)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n4 - 6 = -2 (left: -2 4 6)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n4 / 6 = 0.67 (left: 0.67 4 6)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n4 * 6 = 24 (left: 3 24)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n6 + 3 = 9 (left: 4 9)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n6 - 3 = 3 (left: 3 4 6)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n6 / 3 = 2 (left: 2 4 6)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n6 * 3 = 18 (left: 4 18)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 + 6 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 + 6 = 15 (left: 11 15)\n11 * 15 = 165 (left: 165)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 + 6 = 15 (left: 11 15)\n15 - 11 = 4 (left: 4)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 + 6 = 15 (left: 11 15)\n15 / 11 = 1.36 (left: 1.36)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 + 6 = 15 (left: 11 15)\nInput: 3 3 7 7\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 + 6 = 15 (left: 11 15)\nPossible next steps:\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 + 6 = 15 (left: 11 15)\n3 + 3 = 6 (left: 6 7 7)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 + 6 = 15 (left: 11 15)\n3 * 3 = 9 (left: 7 7 9)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 + 6 = 15 (left: 11 15)\n7 - 3 = 4 (left: 4 7 7)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 + 6 = 15 (left: 11 15)\n7 / 3 = 2.33 (left: 2.33 7 7)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n11 - 3 = 8 (left: 8)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n11 / 3 = 3 (left: 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 + 5 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 * 5 = 30 (left: 30)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 6 11",
                "ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 + 5 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 * 5 = 30 (left: 30)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\nInput: 2 3 5 8\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n2 + 3 = 5 (left: 5 5 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n3 + 5 = 8 (left: 2 8 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n2 * 3 = 6 (left: 5 6 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n3 * 5 = 15 (left: 2 8 15)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n5 + 8 = 13 (left: 2 3 13)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n8 - 2 = 6 (left: 3 5 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n8 / 2 = 4 (left: 4 5 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n5 * 8 = 40 (left: 2 3 40)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\nInput: 3 3 3 3\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n2 * 11 = 22 (left: 11 22)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\nInput: 5 5 5 5\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\nInput: 3 3 3 3\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 + 5 = 11 (left: 11)\nInput: 11\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 + 5 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 + 5 = 11 (left: 11)\n11 + 11 = 22 (left: 11 22)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 + 5 = 11 (left: 11)\n11 - 11 = 0 (left: 0 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 + 5 = 11 (left: 11)\n11 * 11 = 121 (left: 11 121)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 + 5 = 11 (left: 11)\n11 / 11 = 1 (left: 1 11)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 * 5 = 30 (left: 30)\nInput: 3 3 4 8\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 * 5 = 30 (left: 30)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 * 5 = 30 (left: 30)\n3 + 3 = 6 (left: 4 6 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 * 5 = 30 (left: 30)\n3 * 3 = 9 (left: 4 8 9)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 * 5 = 30 (left: 30)\n3 + 4 = 7 (left: 3 7 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 * 5 = 30 (left: 30)\n3 / 3 = 1 (left: 1 4 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 * 5 = 30 (left: 30)\n3 - 3 = 0 (left: 0 4 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 * 5 = 30 (left: 30)\n4 + 8 = 12 (left: 3 4 12)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 * 5 = 30 (left: 30)\n4 * 3 = 12 (left: 8 12 3)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 * 5 = 30 (left: 30)\n4 / 3 = 1 (left: 1 3 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 * 5 = 30 (left: 30)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 * 5 = 30 (left: 30)\n8 / 3 = 2 (left: 2 3 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n11 - 6 = 5 (left: 6 5)\n6 * 5 = 30 (left: 30)\n8 - 4 = 4 (left: 3 4 8)\n",
                    "3 * 3 = 9 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\nNo possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\nInput: 2 3 5 8\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n2 + 3 = 5 (left: 5 5 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n3 + 5 = 8 (left: 2 8 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n2 * 3 = 6 (left: 5 6 8)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n3 * 5 = 15 (left: 2 8 15)\n",
                    "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n5 + 8 = 13 (left: 2 3 13)\n"
                ]
            }
        ],
        "idx": 815,
        "ys": [
            "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\nInput: 2 3 5 8\n",
            "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\nPossible next steps:\n",
            "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n2 + 3 = 5 (left: 5 5 8)\n",
            "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n3 + 5 = 8 (left: 2 8 8)\n",
            "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n2 * 3 = 6 (left: 5 6 8)\n",
            "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n3 * 5 = 15 (left: 2 8 15)\n",
            "3 + 3 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n5 + 8 = 13 (left: 2 3 13)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 30263,
            "prompt_tokens": 84069,
            "cost": 0.1866295
        },
        "time_spent": 36.02633500099182
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 7 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n",
                    "7 * 3 = 21 (left: 8 9 21)\n",
                    "7 - 3 = 4 (left: 4 8 9)\n",
                    "3 - 7 = -4 (left: -4 8 9)\n",
                    "7 / 3 = 2 (left: 2 8 9)\n",
                    "3 / 7 = 0 (left: 0 8 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n",
                    "7 * 3 = 21 (left: 8 9 21)\n",
                    "7 - 3 = 4 (left: 4 8 9)\n",
                    "3 - 7 = -4 (left: -4 8 9)\n",
                    "7 / 3 = 2 (left: 2 8 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 7 8 9",
                "ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n",
                    "7 * 3 = 21 (left: 8 9 21)\n",
                    "7 - 3 = 4 (left: 4 8 9)\n",
                    "3 - 7 = -4 (left: -4 8 9)\n",
                    "7 / 3 = 2 (left: 2 8 9)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 * 9 = 72 (left: 10 72)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 / 8 = 1.125 (left: 1.125 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\nInput: 2 3 5 7\n",
                    "3 + 7 = 10 (left: 8 9 10)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 8 9 10)\n2 + 3 = 5 (left: 5 5 7)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n3 + 5 = 8 (left: 2 8 7)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n5 + 7 = 12 (left: 2 3 12)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n2 * 3 = 6 (left: 6 5 7)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n3 * 5 = 15 (left: 2 15 7)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n5 * 7 = 35 (left: 2 3 35)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n2 - 3 = -1 (left: -1 5 7)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n3 - 5 = -2 (left: 2 -2 7)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n5 - 7 = -2 (left: 2 3 -2)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n2 / 3 = 0.6667 (left: 0.6667 5 7)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n3 / 5 = 0.6 (left: 2 0.6 7)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n5 / 7 = 0.7143 (left: 2 3 0.7143)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 * 9 = 72 (left: 10 72)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\nInput: 3 3 7 8\n",
                    "7 + 3 = 10 (left: 8 9 10)\nPossible next steps:\n",
                    "7 + 3 = 10 (left: 8 9 10)\n3 + 3 = 6 (left: 6 7 8)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n3 / 3 = 1 (left: 1 7 8)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n7 - 3 = 4 (left: 4 3 8)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n7 / 3 = 2 (left: 2 3 8)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n7 + 3 = 10 (left: 3 8 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n3 * 3 = 9 (left: 7 8 9)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n7 - 3 = 4 (left: 4 8 9)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n7 / 3 = 2 (left: 2 8 9)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n9 * 8 = 72 (left: 72 21)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n9 - 8 = 1 (left: 1 21)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n9 / 8 = 1.125 (left: 1.125 21)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n21 - 8 = 13 (left: 13 21)\n",
                    "7 * 3 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n",
                    "7 * 3 = 21 (left: 8 9 21)\n9 * 8 = 72 (left: 72 21)\n",
                    "7 * 3 = 21 (left: 8 9 21)\n9 - 8 = 1 (left: 1 21)\n",
                    "7 * 3 = 21 (left: 8 9 21)\n21 - 8 = 13 (left: 8 13)\n",
                    "7 - 3 = 4 (left: 4 8 9)\n4 + 8 = 12 (left: 9 12)\n",
                    "7 - 3 = 4 (left: 4 8 9)\n8 - 4 = 4 (left: 4 9)\n",
                    "7 - 3 = 4 (left: 4 8 9)\n9 - 4 = 5 (left: 5 8)\n",
                    "7 - 3 = 4 (left: 4 8 9)\n4 * 8 = 32 (left: 9 32)\n",
                    "7 - 3 = 4 (left: 4 8 9)\n8 / 4 = 2 (left: 2 9)\n",
                    "7 - 3 = 4 (left: 4 8 9)\n9 - 8 = 1 (left: 1 8)\n",
                    "3 - 7 = -4 (left: -4 8 9)\n-4 + 8 = 4 (left: 4 9)\n",
                    "3 - 7 = -4 (left: -4 8 9)\n8 - (-4) = 12 (left: 12 9)\n",
                    "3 - 7 = -4 (left: -4 8 9)\n-4 * 8 = -32 (left: -32 9)\n",
                    "3 - 7 = -4 (left: -4 8 9)\n8 / -4 = -2 (left: -2 9)\n",
                    "3 - 7 = -4 (left: -4 8 9)\n8 + 9 = 17 (left: -4 17)\n",
                    "3 - 7 = -4 (left: -4 8 9)\n9 - 8 = 1 (left: -4 1)\n",
                    "3 - 7 = -4 (left: -4 8 9)\n9 / 8 = 1 (left: -4 1)\n",
                    "3 - 7 = -4 (left: -4 8 9)\n9 - (-4) = 13 (left: 8 13)\n",
                    "7 / 3 = 2 (left: 2 8 9)\n2 + 8 = 10 (left: 9 10)\n",
                    "7 / 3 = 2 (left: 2 8 9)\n8 - 2 = 6 (left: 6 9)\n",
                    "7 / 3 = 2 (left: 2 8 9)\n9 - 2 = 7 (left: 7 8)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 7 8 9",
                "ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 / 10 = 1.7 (left: 1.7 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 - 17 = -7 (left: -7 17)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 + 1 = 11 (left: 1 11)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 - 1 = 9 (left: 1 9)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 1 10)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 * 1 = 10 (left: 1 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 / 10 = 1 (left: 1 17)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 * 10 = 170 (left: 170)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\nInput: 4 7 3 2\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\nPossible next steps:\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n4 + 7 = 11 (left: 11 3 2)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n7 - 4 = 3 (left: 3 3 2)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n7 / 4 = 1 (left: 1 3 2)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n7 * 4 = 28 (left: 28 3 2)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n4 * 7 = 28 (left: 28 3 2)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n7 + 3 = 10 (left: 4 10 2)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n7 - 3 = 4 (left: 4 4 2)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n7 / 3 = 2 (left: 4 2 2)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n7 * 3 = 21 (left: 4 21 2)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\nInput: 6 5 2 13\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\nPossible next steps:\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n6 + 5 = 11 (left: 11 2 13)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n5 - 2 = 3 (left: 6 3 13)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n5 / 2 = 2 (left: 6 2 13)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n5 * 2 = 10 (left: 6 10 13)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n6 * 5 = 30 (left: 30 2 13)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n6 + 2 = 8 (left: 8 5 13)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n6 - 2 = 4 (left: 4 5 13)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n6 / 2 = 3 (left: 3 5 13)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n6 * 2 = 12 (left: 12 5 13)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n6 + 13 = 19 (left: 5 2 19)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n6 - 13 = -7 (left: 5 2 -7)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n6 / 13 \u2248 0.46 (left: 0.46 5 2)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n10 - (-1) = 11 (left: -1 11)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n10 - 10 = 0 (left: -1 0)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n10 + (-1) = 9 (left: 9)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9 10)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n21 - 17 = 4 (left: 4 21)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n21 / 17 = 1 (left: 1 21)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n21 * 17 = 357 (left: 357)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\nInput: 3 5 5 6\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\nPossible next steps:\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n3 + 5 = 8 (left: 8 5 6)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n3 * 5 = 15 (left: 15 5 6)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n5 - 3 = 2 (left: 2 5 6)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n5 / 3 = 1 (left: 1 5 6)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n6 + 3 = 9 (left: 5 9 6)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n6 - 3 = 3 (left: 5 5 3)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n6 / 3 = 2 (left: 5 5 2)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n5 + 5 = 10 (left: 10 5 6)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n5 * 5 = 25 (left: 25 5 6)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n5 - 3 = 2 (left: 2 5 6)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n5 / 3 = 1 (left: 1 5 6)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n6 + 5 = 11 (left: 5 11 6)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n6 - 5 = 1 (left: 5 1 6)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n6 / 5 = 1 (left: 5 1 1)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\nInput: 2 3 4 5\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\nPossible next steps:\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n2 + 3 = 5 (left: 5 4 5)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n2 * 3 = 6 (left: 6 4 5)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n3 + 4 = 7 (left: 2 7 5)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n3 * 4 = 12 (left: 2 12 5)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n4 + 5 = 9 (left: 2 3 9)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n4 * 5 = 20 (left: 2 3 20)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 7 8 9",
                "ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n3 * 9 = 27 (left: 9)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 / 3 = 9 (left: 9)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 - 3 = 24 (left: 3)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 + 3 = 30 (left: 3)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 is the final number.\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nNo possible next steps.\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\nInput: 6 6 6 6\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\nPossible next steps:\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n6 + 6 = 12 (left: 6 6 12 6)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n6 / 6 = 1 (left: 1 6 6 6)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n6 * 6 = 36 (left: 6 6 36 6)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n6 - 6 = 0 (left: 0 6 6 6)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n2 + 8 = 10 (left: 8)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n8 + 2 = 10 (left: 2)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n5 + 5 = 10 (left: 5)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n10 - 2 = 8 (left: 2)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n10 / 2 = 5 (left: 2)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\nInput: 1 2 3 4\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\nPossible next steps:\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n1 + 3 = 4 (left: 2 4)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n3 + 1 = 4 (left: 2 4)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n3 - 1 = 2 (left: 2 2 4)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n4 - 1 = 3 (left: 2 3 4)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n4 / 2 = 2 (left: 2 2 3)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n4 - 2 = 2 (left: 2 3 2)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nInput: 11\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nPossible next steps:\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n11 + 1 = 12 (left: 1 12)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n11 - 1 = 10 (left: 1 10)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n11 / 1 = 11 (left: 1 11)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 / 8 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n11 * 1 = 11 (left: 1 11)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\nInput: 3 3 3 7\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\nPossible next steps:\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\n3 + 3 = 6 (left: 3 6 7)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\n3 * 3 = 9 (left: 3 9 7)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\n7 - 3 = 4 (left: 3 3 4)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\n7 / 3 = 2 (left: 2 3 3)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\n3 * 7 = 21 (left: 3 3 21)\n",
                    "3 * 7 = 21 (left: 8 9 21)\n8 + 9 = 17 (left: 17 21)\n17 + 21 = 38 (left: 38)\n3 - 3 = 0 (left: 0 3 7)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n6 + 6 = 12 (left: 6 6 12 6)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n6 / 6 = 1 (left: 1 6 6 6)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n6 * 6 = 36 (left: 6 6 36 6)\n",
                    "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n6 - 6 = 0 (left: 0 6 6 6)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n3 * 9 = 27 (left: 9)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 / 3 = 9 (left: 9)\n",
                    "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 - 3 = 24 (left: 3)\n"
                ]
            }
        ],
        "idx": 816,
        "ys": [
            "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n6 + 6 = 12 (left: 6 6 12 6)\n",
            "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n6 / 6 = 1 (left: 1 6 6 6)\n",
            "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n6 * 6 = 36 (left: 6 6 36 6)\n",
            "7 + 3 = 10 (left: 8 9 10)\n9 - 8 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n6 - 6 = 0 (left: 0 6 6 6)\n",
            "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n3 * 9 = 27 (left: 9)\n",
            "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 / 3 = 9 (left: 9)\n",
            "3 + 7 = 10 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 - 3 = 24 (left: 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 32978,
            "prompt_tokens": 89111,
            "cost": 0.19962250000000004
        },
        "time_spent": 51.41139101982117
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 8 8 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 8 = 10 (left: 8 10 10)\n",
                    "8 / 2 = 4 (left: 4 8 10)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n",
                    "2 + 8 = 10 (left: 8 10 10)\n",
                    "8 / 2 = 4 (left: 4 8 10)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 8 8 10",
                "ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n",
                    "2 + 8 = 10 (left: 8 10 10)\n",
                    "8 / 2 = 4 (left: 4 8 10)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n"
                ],
                "new_ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 * 8 = 48 (left: 10 48)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 / 6 = 1.33 (left: 1.33 10)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 / 8 = 0.75 (left: 0.75 10)\n",
                    "2 + 8 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10 10)\n",
                    "2 + 8 = 10 (left: 8 10 10)\n10 / 2 = 5 (left: 5 10 10)\n",
                    "2 + 8 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10 10)\n",
                    "2 + 8 = 10 (left: 8 10 10)\n10 / 2 = 5 (left: 5 10 10)\n",
                    "8 / 2 = 4 (left: 4 8 10)\n4 + 8 = 12 (left: 8 10 12)\n",
                    "8 / 2 = 4 (left: 4 8 10)\n4 * 8 = 32 (left: 8 10 32)\n",
                    "8 / 2 = 4 (left: 4 8 10)\n8 / 4 = 2 (left: 2 8 10)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 64 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n8 + 10 = 18 (left: 18 16)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n10 - 8 = 2 (left: 2 16)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n8 * 10 = 80 (left: 80 16)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n10 / 8 = 1 (left: 1 16)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n16 - 8 = 8 (left: 8 16)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n2 + 8 = 10 (left: 8 10)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n8 - 2 = 6 (left: 6 10)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n8 / 2 = 4 (left: 4 10)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n16 - 8 = 8 (left: 8 16)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 * 8 = 48 (left: 10 48)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 8 8 10",
                "ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n16 - 8 = 8 (left: 8 16)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 * 8 = 48 (left: 10 48)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n"
                ],
                "new_ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 - 14 = -4 (left: -4)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n14 * 10 = 140 (left: 140)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n16 - 8 = 8 (left: 8 16)\n8 * 2 = 16 (left: 16 16)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n16 - 8 = 8 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 128)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n16 * 8 = 128 (left: 128)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n16 + 8 = 24 (left: 24)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 8)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n8 / 16 = 0.5 (left: 0.5 8)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n10 - 2 = 8 (left: 8)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n10 / 2 = 5 (left: 5)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 * 8 = 48 (left: 10 48)\n10 + 48 = 58 (left: 58)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 * 8 = 48 (left: 10 48)\n48 - 10 = 38 (left: 38)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 * 8 = 48 (left: 10 48)\n10 * 48 = 480 (left: 480)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 * 8 = 48 (left: 10 48)\n48 / 10 = 4.8 (left: 4.8)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 * 8 = 48 (left: 10 48)\n\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 - 12 = 4 (left: 4)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 * 12 = 192 (left: 192)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 / 12 = 1.33 (left: 1.33)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n12 + 0 = 12 (left: 0 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n12 - 0 = 12 (left: 0 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n12 * 0 = 0 (left: 0 12)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n12 / 0 is undefined\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\nInput: 3 3 3 3\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\nPossible next steps:\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 - 3 = 0 (left: 0 3 3 3)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    100,
                    0,
                    0,
                    100,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n16 - 8 = 8 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n16 + 8 = 24 (left: 24)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 8 8 10",
                "ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "2 * 8 = 16 (left: 8 10 16)\n16 - 8 = 8 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n16 + 8 = 24 (left: 24)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (8 - 2) + 14 = 24\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (8 - 2) + ((6 + 8) + 10) = 24\n",
                    "2 * 8 = 16 (left: 8 10 16)\n16 - 8 = 8 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (2 * 8) + (8 + 10) = 24\n",
                    "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (10 - 8) * (2 * 8) = 24\n",
                    "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n16 + 8 = 24 (left: 24)\nAnswer: 10 - 8 * 2 + 8 = 24\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 6 6 3)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n3 * 3 = 9 (left: 9 6 3)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n6 / 3 = 2 (left: 2 6 3)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\nInput: 3 3 3 3\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\nPossible next steps:\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\nInput: 5 5 5 5\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\nPossible next steps:\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "8 - 2 = 6 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n5 * 5 = 25 (left: 5 5 25)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (8 - 2) + 14 = 24\n",
                    "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (8 - 2) + ((6 + 8) + 10) = 24\n",
                    "2 * 8 = 16 (left: 8 10 16)\n16 - 8 = 8 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (2 * 8) + (8 + 10) = 24\n",
                    "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (10 - 8) * (2 * 8) = 24\n",
                    "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n16 + 8 = 24 (left: 24)\nAnswer: 10 - 8 * 2 + 8 = 24\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n3 * 3 = 9 (left: 9 3 3)\n"
                ]
            }
        ],
        "idx": 817,
        "ys": [
            "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (8 - 2) + 14 = 24\n",
            "8 - 2 = 6 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (8 - 2) + ((6 + 8) + 10) = 24\n",
            "2 * 8 = 16 (left: 8 10 16)\n16 - 8 = 8 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (2 * 8) + (8 + 10) = 24\n",
            "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (10 - 8) * (2 * 8) = 24\n",
            "10 - 8 = 2 (left: 2 8 10)\n2 * 8 = 16 (left: 8 16)\n16 + 8 = 24 (left: 24)\nAnswer: 10 - 8 * 2 + 8 = 24\n",
            "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 3 6 3)\n",
            "10 + 2 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n3 * 3 = 9 (left: 9 3 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 34335,
            "prompt_tokens": 95663,
            "cost": 0.2121645
        },
        "time_spent": 31.968121767044067
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 7 7 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n",
                    "7 / 4 = 1 (left: 1 7 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n",
                    "7 / 4 = 1 (left: 1 7 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 7 7 11",
                "ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n",
                    "7 / 4 = 1 (left: 1 7 11)\n"
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 / 7 = 1 (left: 1 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 + 7 = 18 (left: 7 18)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 * 7 = 77 (left: 7 77)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 - 7 = 4 (left: 4 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 / 7 = 1 (left: 1 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n3 + 7 = 10 (left: 10 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n7 - 3 = 4 (left: 4 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n3 * 7 = 21 (left: 11 21)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n7 / 3 = 2 (left: 2 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n11 - 3 = 8 (left: 8 11)\n",
                    "7 / 4 = 1 (left: 1 7 11)\n1 + 7 = 8 (left: 8 11)\n",
                    "7 / 4 = 1 (left: 1 7 11)\n7 - 1 = 6 (left: 6 11)\n",
                    "7 / 4 = 1 (left: 1 7 11)\n1 * 7 = 7 (left: 7 11)\n",
                    "7 / 4 = 1 (left: 1 7 11)\n7 / 1 = 7 (left: 7 11)\n",
                    "7 / 4 = 1 (left: 1 7 11)\n11 - 1 = 10 (left: 10 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 / 7 = 1 (left: 1 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 + 7 = 18 (left: 7 18)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 * 7 = 77 (left: 7 77)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 - 7 = 4 (left: 4 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 7 7 11",
                "ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 / 7 = 1 (left: 1 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 + 7 = 18 (left: 7 18)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 * 7 = 77 (left: 7 77)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 - 7 = 4 (left: 4 11)\n"
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 * 14 = 154 (left: 154)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n14 - 11 = 3 (left: 3 14)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n14 / 11 = 1 (left: 1 14)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 - 14 = -3 (left: -3 14)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n11 + 49 = 60 (left: 60)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 - 11 = 38 (left: 38)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n11 * 49 = 539 (left: 539)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 / 11 = 4 (left: 4)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n11 / 0 = undefined (left: 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 / 7 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 / 7 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 / 7 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 / 7 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 + 7 = 18 (left: 7 18)\n7 * 2 = 14 (left: 14 18)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 + 7 = 18 (left: 7 18)\n18 - 7 = 11 (left: 7 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 + 7 = 18 (left: 7 18)\n7 + 18 = 25 (left: 25)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 + 7 = 18 (left: 7 18)\n18 / 7 = 2 (left: 2 18)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 * 7 = 77 (left: 7 77)\n7 * 7 = 49 (left: 49)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 * 7 = 77 (left: 7 77)\n7 + 7 = 14 (left: 14)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 * 7 = 77 (left: 7 77)\n7 - 7 = 0 (left: 0)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 * 7 = 77 (left: 7 77)\n7 / 7 = 1 (left: 1)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 * 7 = 77 (left: 7 77)\n77 / 7 = 11 (left: 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 - 7 = 4 (left: 4 11)\n4 + 11 = 15 (left: 11 15)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 - 7 = 4 (left: 4 11)\n11 - 4 = 7 (left: 4 7)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 - 7 = 4 (left: 4 11)\n11 / 4 = 2 (left: 2 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n11 - 7 = 4 (left: 4 11)\n4 * 11 = 44 (left: 11 44)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 - 11 = 38 (left: 38)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 / 7 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 7 7 11",
                "ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 - 11 = 38 (left: 38)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 / 7 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\nInput: 1 4 6 7\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\nPossible next steps:\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n1 + 4 = 5 (left: 5 6 7)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n4 * 6 = 24 (left: 1 7 24)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n6 + 7 = 13 (left: 1 4 13)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n1 * 7 = 7 (left: 4 6 7)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n7 - 6 = 1 (left: 1 4 7)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n6 - 4 = 2 (left: 1 2 7)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n7 - 4 = 3 (left: 1 3 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n7 - 1 = 6 (left: 4 6 7)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n49 - 11 = 38 (left: 38)\nNo possible next steps.\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n\n11 + 49 = 60 (left: 60)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n\n11 - 49 = -38 (left: -38)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n\n11 * 49 = 539 (left: 539)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n\n49 / 11 = 4 (left: 4)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n\n\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n1 + 1 = 2 (left: 2)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n11 / 1 = 11 (left: 1)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n11 - 1 = 10 (left: 10)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n11 * 1 = 11 (left: 1)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\nInput: 4 2 5 6\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\nPossible next steps:\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n4 + 2 = 6 (left: 5 6 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n4 / 2 = 2 (left: 2 5 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n4 * 2 = 8 (left: 5 6 8)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n4 - 2 = 2 (left: 2 5 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n6 + 2 = 8 (left: 4 6 8)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n6 / 2 = 3 (left: 3 4 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n6 - 2 = 4 (left: 4 4 6)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n6 * 2 = 12 (left: 4 5 12)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\nInput: 11\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\nPossible next steps:\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n11 + 1 = 12 (left: 1 11 12)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\nInput: 11\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\nPossible next steps:\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n11 + 1 = 12 (left: 1 12)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n11 - 1 = 10 (left: 1 10)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n11 * 1 = 11 (left: 1 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 - 7 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n11 / 1 = 11 (left: 1 11)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 / 7 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 * 1 = 12 (left: 1 12)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 / 7 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 / 1 = 12 (left: 1 12)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n\n\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\nInput: 1 4 6 7\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\nPossible next steps:\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n1 + 4 = 5 (left: 5 6 7)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n4 * 6 = 24 (left: 1 7 24)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n6 + 7 = 13 (left: 1 4 13)\n",
                    "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n1 * 7 = 7 (left: 4 6 7)\n"
                ]
            }
        ],
        "idx": 818,
        "ys": [
            "4 + 7 = 11 (left: 7 7 11)\n7 * 7 = 49 (left: 11 49)\n\n\n",
            "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\nInput: 1 4 6 7\n",
            "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\nPossible next steps:\n",
            "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n1 + 4 = 5 (left: 5 6 7)\n",
            "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n4 * 6 = 24 (left: 1 7 24)\n",
            "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n6 + 7 = 13 (left: 1 4 13)\n",
            "4 + 7 = 11 (left: 7 7 11)\n7 + 7 = 14 (left: 11 14)\n11 + 14 = 25 (left: 25)\n1 * 7 = 7 (left: 4 6 7)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 35601,
            "prompt_tokens": 99783,
            "cost": 0.22087650000000003
        },
        "time_spent": 28.451993227005005
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 8 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n",
                    "12 - 2 = 10 (left: 3 8 10)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "8 / 2 = 4 (left: 4 3 12)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n",
                    "12 - 2 = 10 (left: 3 8 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 8 12",
                "ys": [
                    "8 / 2 = 4 (left: 4 3 12)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n",
                    "12 - 2 = 10 (left: 3 8 10)\n"
                ],
                "new_ys": [
                    "8 / 2 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 / 3 = 1 (left: 1 12)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 8 12)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 13 12)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n8 - 5 = 3 (left: 3 12)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n5 * 8 = 40 (left: 40 12)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n8 / 5 = 1 (left: 1 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 14 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n6 * 8 = 48 (left: 48 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 / 6 = 1 (left: 1 12)\n",
                    "12 - 2 = 10 (left: 3 8 10)\n3 + 8 = 11 (left: 10 11)\n",
                    "12 - 2 = 10 (left: 3 8 10)\n8 - 3 = 5 (left: 5 10)\n",
                    "12 - 2 = 10 (left: 3 8 10)\n3 * 8 = 24 (left: 10 24)\n",
                    "12 - 2 = 10 (left: 3 8 10)\n8 / 3 = 2 (left: 2 10)\n",
                    "12 - 2 = 10 (left: 3 8 10)\nInput: 4 6 7 7\n",
                    "12 - 2 = 10 (left: 3 8 10)\nPossible next steps:\n",
                    "12 - 2 = 10 (left: 3 8 10)\n4 + 6 = 10 (left: 7 7 10)\n",
                    "12 - 2 = 10 (left: 3 8 10)\n4 * 6 = 24 (left: 7 7 24)\n",
                    "12 - 2 = 10 (left: 3 8 10)\n7 - 4 = 3 (left: 3 7 7)\n",
                    "12 - 2 = 10 (left: 3 8 10)\n7 - 4 = 3 (left: 3 7 7)\n",
                    "12 - 2 = 10 (left: 3 8 10)\n7 - 4 = 3 (left: 3 7 7)\n",
                    "12 - 2 = 10 (left: 3 8 10)\n7 - 4 = 3 (left: 3 7 7)\n",
                    "12 - 2 = 10 (left: 3 8 10)\n6 + 7 = 13 (left: 4 13 7)\n",
                    "12 - 2 = 10 (left: 3 8 10)\n7 + 4 = 11 (left: 6 7 11)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 / 2 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 / 3 = 1 (left: 1 12)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 8 12)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 13 12)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n8 - 5 = 3 (left: 3 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 8 12",
                "ys": [
                    "8 / 2 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 / 3 = 1 (left: 1 12)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 8 12)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 13 12)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n8 - 5 = 3 (left: 3 12)\n"
                ],
                "new_ys": [
                    "8 / 2 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)\n7 + 12 = 19 (left: 19)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)\n12 - 7 = 5 (left: 5 12)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)\n12 / 7 = 1 (left: 1 12)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 / 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 / 3 = 1 (left: 1 12)\n12 / 1 = 12 (left: 12)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 / 3 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 / 3 = 1 (left: 1 12)\n12 + 1 = 13 (left: 13)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n12 - 4 = 8 (left: 8 12)\n12 - 8 = 4 (left: 4)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 13 12)\n13 + 12 = 25 (left: 25)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 13 12)\n13 - 12 = 1 (left: 1)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n8 - 5 = 3 (left: 3 12)\n3 * 12 = 36 (left: 12 36)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n8 - 5 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n8 - 5 = 3 (left: 3 12)\n3 + 12 = 15 (left: 12 15)\n",
                    "2 + 3 = 5 (left: 5 8 12)\n8 - 5 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9 12)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    100,
                    100,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 / 2 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)\n7 + 12 = 19 (left: 19)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 / 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 8 12",
                "ys": [
                    "8 / 2 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)\n7 + 12 = 19 (left: 19)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 / 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "8 / 2 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (8 / 2) * (4 * 3) = 24\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 2) * (8 - 6) = 24\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 2) * (8 - 6) = 24\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n2 + 8 = 10 (left: 8 10)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n8 / 2 = 4 (left: 4 8)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 - 2 = 12 (left: 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nInput: 14\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nPossible next steps:\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\n14 - 14 = 0 (left: 0)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)\n7 + 12 = 19 (left: 19)\nInput: 5 5 5 5\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)\n7 + 12 = 19 (left: 19)\nPossible next steps:\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)\n7 + 12 = 19 (left: 19)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)\n7 + 12 = 19 (left: 19)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)\n7 + 12 = 19 (left: 19)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)\n7 + 12 = 19 (left: 19)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 + 3 = 7 (left: 7 12)\n7 + 12 = 19 (left: 19)\n5 - 5 = 0 (left: 5 0 5)\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 / 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\nPossible next steps:\n",
                    "8 / 2 = 4 (left: 4 3 12)\n4 / 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 = 12\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 / 2 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (8 / 2) * (4 * 3) = 24\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 2) * (8 - 6) = 24\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 2) * (8 - 6) = 24\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n2 + 8 = 10 (left: 8 10)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n8 / 2 = 4 (left: 4 8)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 - 2 = 12 (left: 12)\n",
                    "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nInput: 14\n"
                ]
            }
        ],
        "idx": 819,
        "ys": [
            "8 / 2 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (8 / 2) * (4 * 3) = 24\n",
            "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 2) * (8 - 6) = 24\n",
            "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 2) * (8 - 6) = 24\n",
            "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n2 + 8 = 10 (left: 8 10)\n",
            "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n8 / 2 = 4 (left: 4 8)\n",
            "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 - 2 = 12 (left: 12)\n",
            "3 * 2 = 6 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\nInput: 14\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 36628,
            "prompt_tokens": 105173,
            "cost": 0.23101549999999998
        },
        "time_spent": 23.06147599220276
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 5 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n",
                    "9 - 3 = 6 (left: 5 5 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n",
                    "9 - 3 = 6 (left: 5 5 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 5 5 9",
                "ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n",
                    "9 - 3 = 6 (left: 5 5 6)\n"
                ],
                "new_ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 / 5 = 1 (left: 1 9)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 * 5 = 25 (left: 15 25)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 / 5 = 1 (left: 1 15)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n15 - 5 = 10 (left: 5 10)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n15 - 5 = 10 (left: 5 10)\n",
                    "9 - 3 = 6 (left: 5 5 6)\n5 + 5 = 10 (left: 6 10)\n",
                    "9 - 3 = 6 (left: 5 5 6)\n5 * 5 = 25 (left: 25 6)\n",
                    "9 - 3 = 6 (left: 5 5 6)\n5 / 5 = 1 (left: 1 6)\n",
                    "9 - 3 = 6 (left: 5 5 6)\n5 - 5 = 0 (left: 0 6)\n",
                    "9 - 3 = 6 (left: 5 5 6)\nInput: 3 3 3 3\n",
                    "9 - 3 = 6 (left: 5 5 6)\nPossible next steps:\n",
                    "9 - 3 = 6 (left: 5 5 6)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "9 - 3 = 6 (left: 5 5 6)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "9 - 3 = 6 (left: 5 5 6)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "9 - 3 = 6 (left: 5 5 6)\n3 - 3 = 0 (left: 0 3 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 / 5 = 1 (left: 1 9)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 5 5 9",
                "ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 / 5 = 1 (left: 1 9)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n"
                ],
                "new_ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n13 / 9 = 1 (left: 1 13)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n13 * 9 = 117 (left: 117)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 - 13 = -4 (left: -4 13)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n9 + 40 = 49 (left: 49)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n40 - 9 = 31 (left: 31)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n9 * 40 = 360 (left: 360)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n40 / 9 = 4 (left: 4)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n3 + 9 = 12 (left: 9 12)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n3 * 9 = 27 (left: 9 27)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n14 - 8 = 6 (left: 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n14 / 8 = 1.75 (left: 1.75)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 * 14 = 112 (left: 112)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 / 5 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 / 5 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 / 5 = 1 (left: 1 9)\n9 / 1 = 9 (left: 9)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 / 5 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n10 - 15 = -5 (left: -5)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n10 * 15 = 150 (left: 150)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n10 / 15 = 0.67 (left: 0.67)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n40 - 9 = 31 (left: 31)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 / 5 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4 13)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 5 5 9",
                "ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n40 - 9 = 31 (left: 31)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 / 5 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4 13)\n"
                ],
                "new_ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\nThere are no possible next steps.\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n40 - 9 = 31 (left: 31)\nThere are no possible next steps.\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n\n9 + 40 = 49 (left: 49)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n\n40 - 9 = 31 (left: 31)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n\n9 * 40 = 360 (left: 360)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n\n40 / 9 = 4.44 (left: 4.44)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\nInput: 1 3 4 6\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\nPossible next steps:\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n1 * 3 = 3 (left: 3 4 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n1 / 3 = 0.3333333333333333 (left: 0.3333333333333333 3 4)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n1 - 3 = -2 (left: -2 3 4)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n3 + 4 = 7 (left: 1 7 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n3 * 4 = 12 (left: 1 12 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n3 / 4 = 0.75 (left: 0.75 3 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n3 - 4 = -1 (left: 1 -1 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n4 + 6 = 10 (left: 1 3 10)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n4 * 6 = 24 (left: 1 24 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 4 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n4 - 6 = -2 (left: 1 3 -2)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n1 * 3 = 3 (left: 3 4 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n1 / 3 = 0.3333333333333333 (left: 0.3333333333333333 3 4)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n1 - 3 = -2 (left: -2 3 4)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n3 + 4 = 7 (left: 1 7 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n3 * 4 = 12 (left: 1 12 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n3 / 4 = 0.75 (left: 0.75 3 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n3 - 4 = -1 (left: 1 -1 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n4 + 6 = 10 (left: 1 3 10)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n4 * 6 = 24 (left: 1 24 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 4 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\n4 - 6 = -2 (left: 1 3 -2)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 / 5 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n10 is the final result.\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\nInput: 3 3 4 6\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\nPossible next steps:\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n3 + 3 = 6 (left: 4 6 6)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n3 * 3 = 9 (left: 4 6 9)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n4 + 3 = 7 (left: 6 7 9)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n6 - 3 = 3 (left: 3 4 7)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n6 + 3 = 9 (left: 4 6 9)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n4 * 3 = 12 (left: 6 9 12)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n6 / 3 = 2 (left: 2 4 9)\n",
                    "5 * 3 = 15 (left: 5 5 15)\n5 + 5 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n6 - 3 = 3 (left: 3 4 6)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4 13)\n13 - 4 = 9 (left: 9)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4 13)\n4 * 13 = 52 (left: 52)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4 13)\n13 / 4 = 3.25 (left: 3.25)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\nThere are no possible next steps.\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n40 - 9 = 31 (left: 31)\nThere are no possible next steps.\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n\n9 + 40 = 49 (left: 49)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n\n40 - 9 = 31 (left: 31)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n\n9 * 40 = 360 (left: 360)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n\n40 / 9 = 4.44 (left: 4.44)\n",
                    "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\nInput: 1 3 4 6\n"
                ]
            }
        ],
        "idx": 820,
        "ys": [
            "3 + 5 = 8 (left: 5 8 9)\n5 + 8 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\nThere are no possible next steps.\n",
            "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n40 - 9 = 31 (left: 31)\nThere are no possible next steps.\n",
            "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n\n9 + 40 = 49 (left: 49)\n",
            "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n\n40 - 9 = 31 (left: 31)\n",
            "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n\n9 * 40 = 360 (left: 360)\n",
            "3 + 5 = 8 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)\n\n40 / 9 = 4.44 (left: 4.44)\n",
            "3 + 5 = 8 (left: 5 8 9)\n9 + 5 = 14 (left: 8 14)\n8 + 14 = 22 (left: 22)\nInput: 1 3 4 6\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 38164,
            "prompt_tokens": 109295,
            "cost": 0.24027050000000003
        },
        "time_spent": 31.67163896560669
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 7 11 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n",
                    "5 * 6 = 30 (left: 7 30 12)\n",
                    "6 / 5 = 1 (left: 1 7 12)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n",
                    "5 * 6 = 30 (left: 7 30 12)\n",
                    "6 / 5 = 1 (left: 1 7 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 7 12",
                "ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n",
                    "5 * 6 = 30 (left: 7 30 12)\n",
                    "6 / 5 = 1 (left: 1 7 12)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 2 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 2 6)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 * 6 = 72 (left: 12 72)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 11 12 18)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n7 * 11 = 77 (left: 12 77)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 + 12 = 23 (left: 7 23)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 11 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n1 + 7 = 8 (left: 8 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n7 * 1 = 7 (left: 7 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n7 + 1 = 8 (left: 8 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n7 - 1 = 6 (left: 6 12)\n",
                    "6 - 5 = 1 (left: 1 7 12)\n12 - 1 = 11 (left: 7 11)\n",
                    "5 * 6 = 30 (left: 7 30 12)\n7 * 4 = 28 (left: 28 30 12)\n",
                    "5 * 6 = 30 (left: 7 30 12)\n7 + 30 = 37 (left: 37 12)\n",
                    "5 * 6 = 30 (left: 7 30 12)\n30 - 7 = 23 (left: 23 12)\n",
                    "5 * 6 = 30 (left: 7 30 12)\n30 / 7 = 4 (left: 4 12)\n",
                    "5 * 6 = 30 (left: 7 30 12)\n7 - 4 = 3 (left: 3 30 12)\n",
                    "5 * 6 = 30 (left: 7 30 12)\n30 - 12 = 18 (left: 7 18)\n",
                    "5 * 6 = 30 (left: 7 30 12)\n30 / 12 = 2 (left: 7 2)\n",
                    "5 * 6 = 30 (left: 7 30 12)\n12 - 7 = 5 (left: 5 30)\n",
                    "5 * 6 = 30 (left: 7 30 12)\n12 / 7 = 1 (left: 1 30)\n",
                    "6 / 5 = 1 (left: 1 7 12)\n1 + 7 = 8 (left: 8 12)\n",
                    "6 / 5 = 1 (left: 1 7 12)\n7 * 1 = 7 (left: 7 12)\n",
                    "6 / 5 = 1 (left: 1 7 12)\n12 - 1 = 11 (left: 7 11)\n",
                    "6 / 5 = 1 (left: 1 7 12)\n7 + 1 = 8 (left: 8 12)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 2 12)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 2 6)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 + 12 = 23 (left: 7 23)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 7 12",
                "ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 2 12)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 2 6)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 + 12 = 23 (left: 7 23)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 * 2 = 12 (left: 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n12 / 6 = 2 (left: 2)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n12 - 6 = 6 (left: 6)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 2 6)\n2 + 6 = 8 (left: 8)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 2 6)\n6 - 2 = 4 (left: 4)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 2 6)\n6 / 2 = 3 (left: 3)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 * 18 = 216 (left: 216)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 / 12 = 1.5 (left: 1.5)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\nInput: 5 5 5 5\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\nPossible next steps:\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n5 * 5 = 25 (left: 25 5 5)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n5 * 5 = 25 (left: 5 25 5)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 12 = 72 (left: 72)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\nInput: 3 3 3 4\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\nPossible next steps:\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n3 + 3 = 6 (left: 3 6 4)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n3 * 3 = 9 (left: 9 3 4)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n3 + 4 = 7 (left: 3 3 7)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n3 * 4 = 12 (left: 3 12 4)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n4 - 3 = 1 (left: 1 3 3)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n4 / 3 = 1 (left: 1 3 3)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n3 - 3 = 0 (left: 0 3 4)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 + 12 = 23 (left: 7 23)\n7 + 23 = 30 (left: 30)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 + 12 = 23 (left: 7 23)\n23 - 7 = 16 (left: 16)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 + 12 = 23 (left: 7 23)\n7 * 23 = 161 (left: 161)\n",
                    "5 + 6 = 11 (left: 7 11 12)\n11 + 12 = 23 (left: 7 23)\n23 / 7 = 3.29 (left: 3.29)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 * 2 = 12 (left: 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 6 7 12",
                "ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 * 2 = 12 (left: 12)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (6 * (7 - 5)) = 24\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nThere are no more possible steps.\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nNo possible next steps.\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 * 2 = 12 (left: 12)\n12 is the final result.\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\nInput: 1 4 3 6\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\nPossible next steps:\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\n1 + 4 = 5 (left: 3 5 6)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\n4 - 1 = 3 (left: 3 3 6)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\n3 * 4 = 12 (left: 1 12 6)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\n6 / 3 = 2 (left: 1 4 2)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\n6 - 3 = 3 (left: 1 4 3)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\n4 * 1 = 4 (left: 3 4 6)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\n6 - 4 = 2 (left: 1 2 6)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\n6 / 1 = 6 (left: 4 3 6)\n",
                    "7 - 5 = 2 (left: 2 6 12)\n12 / 2 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\nThere are no possible next steps.\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nInput: 3 3 3 3\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nPossible next steps:\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "7 + 5 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 + 3 = 6 (left: 3 3 6)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (6 * (7 - 5)) = 24\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nThere are no more possible steps.\n",
                    "7 + 5 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nNo possible next steps.\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 * 2 = 12 (left: 12)\n12 is the final result.\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\nInput: 1 4 3 6\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\nPossible next steps:\n",
                    "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\n1 + 4 = 5 (left: 3 5 6)\n"
                ]
            }
        ],
        "idx": 821,
        "ys": [
            "7 - 5 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (6 * (7 - 5)) = 24\n",
            "7 + 5 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nThere are no more possible steps.\n",
            "7 + 5 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nNo possible next steps.\n",
            "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 * 2 = 12 (left: 12)\n12 is the final result.\n",
            "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\nInput: 1 4 3 6\n",
            "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\nPossible next steps:\n",
            "7 - 5 = 2 (left: 2 6 12)\n2 * 6 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\n1 + 4 = 5 (left: 3 5 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 39690,
            "prompt_tokens": 114453,
            "cost": 0.2510595
        },
        "time_spent": 35.21181893348694
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 4 4",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 4 4 5)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n",
                    "4 / 3 = 1 (left: 1 4 4)\n",
                    "4 + 3 = 7 (left: 4 4 7)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 4 4 5)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n",
                    "4 + 3 = 7 (left: 4 4 7)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n",
                    "4 / 3 = 1 (left: 1 4 4)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 4 4",
                "ys": [
                    "2 + 3 = 5 (left: 4 4 5)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n",
                    "4 + 3 = 7 (left: 4 4 7)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n",
                    "4 / 3 = 1 (left: 1 4 4)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 / 4 = 1 (left: 1 5)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 - 4 = 0 (left: 0 5)\n",
                    "2 + 3 = 5 (left: 4 4 5)\nInput: 3 6 8 12\n",
                    "2 + 3 = 5 (left: 4 4 5)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 4 4 5)\n3 + 6 = 9 (left: 8 9 12)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n3 * 6 = 18 (left: 8 12 18)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n3 / 6 = 0.5 (left: 0.5 8 12)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n3 - 6 = -3 (left: -3 8 12)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n6 + 8 = 14 (left: 3 14 12)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n6 * 8 = 48 (left: 3 12 48)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n6 / 8 = 0.75 (left: 3 0.75 12)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n6 - 8 = -2 (left: 3 -2 12)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n8 + 12 = 20 (left: 3 6 20)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n8 * 12 = 96 (left: 3 6 96)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n8 / 12 = 0.6666666666666666 (left: 3 0.6666666666666666 12)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n8 - 12 = -4 (left: 3 6 -4)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n12 + 3 = 15 (left: 6 8 15)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n12 * 3 = 36 (left: 6 8 36)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n12 / 3 = 4 (left: 4 8 12)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n12 - 3 = 9 (left: 6 8 9)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 16 7)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 / 4 = 1 (left: 1 7)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n7 / 4 = 1 (left: 1 4)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n7 + 4 = 11 (left: 4 11)\n",
                    "4 + 3 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n",
                    "4 + 3 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n",
                    "4 + 3 = 7 (left: 4 4 7)\n4 / 4 = 1 (left: 1 7)\n",
                    "4 + 3 = 7 (left: 4 4 7)\n7 + 4 = 11 (left: 4 11)\n",
                    "4 + 3 = 7 (left: 4 4 7)\n7 * 4 = 28 (left: 4 28)\n",
                    "4 + 3 = 7 (left: 4 4 7)\n7 / 4 = 1.75 (left: 1.75 7)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n4 / 2 = 2 (left: 2 4)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n4 * 2 = 8 (left: 4 8)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n4 - 2 = 2 (left: 2 4)\n",
                    "4 / 3 = 1 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n",
                    "4 / 3 = 1 (left: 1 4 4)\n4 / 1 = 4 (left: 4 4)\n",
                    "4 / 3 = 1 (left: 1 4 4)\n4 + 1 = 5 (left: 4 5)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n4 / 2 = 2 (left: 2 4)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n4 * 2 = 8 (left: 4 8)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n2 * 4 = 8 (left: 4 8)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n4 - 2 = 2 (left: 2 4)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n4 / 2 = 2 (left: 2 4)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    0,
                    100,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 3 = 7 (left: 4 4 7)\n7 * 4 = 28 (left: 4 28)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 16 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 4 4",
                "ys": [
                    "4 + 3 = 7 (left: 4 4 7)\n7 * 4 = 28 (left: 4 28)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 16 7)\n"
                ],
                "new_ys": [
                    "4 + 3 = 7 (left: 4 4 7)\n7 * 4 = 28 (left: 4 28)\n4 * 7 = 28 (left: 7)\n",
                    "4 + 3 = 7 (left: 4 4 7)\n7 * 4 = 28 (left: 4 28)\n28 / 4 = 7 (left: 7)\n",
                    "4 + 3 = 7 (left: 4 4 7)\n7 * 4 = 28 (left: 4 28)\n28 - 4 = 24 (left: 24)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5 6)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5 6)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 8 13)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 8 40)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 + 4 = 8 (left: 5 8)\n8 / 5 = 1 (left: 1 8)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 + 16 = 21 (left: 21)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n16 - 5 = 11 (left: 11)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 * 16 = 80 (left: 80)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n16 / 5 = 3 (left: 3)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n7 + 8 = 15 (left: 8 15)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n8 - 7 = 1 (left: 1 8)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n7 * 8 = 56 (left: 8 56)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n7 / 8 = 0.875 (left: 0.875 8)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 16 7)\n16 + 7 = 23 (left: 23)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 16 7)\n16 - 7 = 9 (left: 9)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 16 7)\n16 / 7 = 2 (left: 2)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 16 7)\n16 * 7 = 112 (left: 112)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 16 7)\n7 + 16 = 23 (left: 23)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 16 7)\n7 - 16 = -9 (left: -9)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 16 7)\n7 / 16 = 0 (left: 0)\n",
                    "3 + 4 = 7 (left: 4 4 7)\n4 * 4 = 16 (left: 16 7)\n7 * 16 = 112 (left: 112)\n"
                ],
                "values": [
                    0,
                    0,
                    100,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 3 = 7 (left: 4 4 7)\n7 * 4 = 28 (left: 4 28)\n28 - 4 = 24 (left: 24)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 + 16 = 21 (left: 21)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n16 - 5 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 4 4",
                "ys": [
                    "4 + 3 = 7 (left: 4 4 7)\n7 * 4 = 28 (left: 4 28)\n28 - 4 = 24 (left: 24)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 + 16 = 21 (left: 21)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n16 - 5 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "4 + 3 = 7 (left: 4 4 7)\n7 * 4 = 28 (left: 4 28)\n28 - 4 = 24 (left: 24)\nAnswer: (4 + 3) * 7 = 24\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 + 2) * (4 * 6) = 24\n",
                    "4 - 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 - 2) * (2 + 4) = 24\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 2 = 12 (left: 2 12)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 2 = 8 (left: 2 8)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 / 2 = 5 (left: 2 5)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 2 = 20 (left: 2 20)\n",
                    "4 - 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\nThere are no possible next steps.\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 + 16 = 21 (left: 21)\n3 + 21 = 24 (left: 3 21)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 + 16 = 21 (left: 21)\n21 - 3 = 18 (left: 3 18)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 + 16 = 21 (left: 21)\n3 * 21 = 63 (left: 3 63)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n5 + 16 = 21 (left: 21)\n21 / 3 = 7 (left: 7 21)\n",
                    "2 + 3 = 5 (left: 4 4 5)\n4 * 4 = 16 (left: 5 16)\n16 - 5 = 11 (left: 11)\nNo possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 3 = 7 (left: 4 4 7)\n7 * 4 = 28 (left: 4 28)\n28 - 4 = 24 (left: 24)\nAnswer: (4 + 3) * 7 = 24\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 + 2) * (4 * 6) = 24\n",
                    "4 - 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 - 2) * (2 + 4) = 24\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 2 = 12 (left: 2 12)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 2 = 8 (left: 2 8)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 / 2 = 5 (left: 2 5)\n",
                    "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 2 = 20 (left: 2 20)\n"
                ]
            }
        ],
        "idx": 822,
        "ys": [
            "4 + 3 = 7 (left: 4 4 7)\n7 * 4 = 28 (left: 4 28)\n28 - 4 = 24 (left: 24)\nAnswer: (4 + 3) * 7 = 24\n",
            "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 + 2) * (4 * 6) = 24\n",
            "4 - 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 - 2) * (2 + 4) = 24\n",
            "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 2 = 12 (left: 2 12)\n",
            "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 2 = 8 (left: 2 8)\n",
            "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 / 2 = 5 (left: 2 5)\n",
            "4 / 2 = 2 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 2 = 20 (left: 2 20)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 41161,
            "prompt_tokens": 120305,
            "cost": 0.26277950000000005
        },
        "time_spent": 32.7642560005188
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 3 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n"
                ],
                "values": [
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 3 9",
                "ys": [
                    "3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n3 * 1 = 3 (left: 3 9)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 - 3 = 6 (left: 1 6)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 / 3 = 3 (left: 1 3)\n",
                    "3 / 3 = 1 (left: 1 3 9)\n9 * 1 = 9 (left: 3 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 3 9",
                "ys": [
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 9)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 * 9 = 54 (left: 9 54)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 - 9 = 0 (left: 0)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 / 9 = 1 (left: 1)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n3 + 6 = 9 (left: 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n6 / 3 = 2 (left: 2 6)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n9 / 3 = 3 (left: 3 9)\n3 * 9 = 27 (left: 9 27)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n9 / 3 = 3 (left: 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 * 9 = 54 (left: 9 54)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n18 / 9 = 2 (left: 2 18)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 6 9)\n9 - 6 = 3 (left: 3 9)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 * 9 = 54 (left: 9 54)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 - 9 = 0 (left: 0)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 3 9",
                "ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 * 9 = 54 (left: 9 54)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 - 9 = 0 (left: 0)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\nInput: 3 3 3 3\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\nInput: 1 4 5 2\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n1 + 4 = 5 (left: 5 5 2)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n4 * 5 = 20 (left: 1 20 2)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n5 - 2 = 3 (left: 1 4 3)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n1 + 4 = 5 (left: 5 5 2)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n4 * 5 = 20 (left: 1 20 2)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n5 - 2 = 3 (left: 1 4 3)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 - 15 = -6 (left: -6 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n9 / 15 = 0.6 (left: 0.6 15)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 - 6 = 3 (left: 3 9)\n3 + 9 = 12 (left: 9 12)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 - 6 = 3 (left: 3 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n6 * 9 = 54 (left: 9 54)\n9 * 6 = 54 (left: 6)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n1.5 + 9 = 10.5 (left: 10.5)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n9 / 1.5 = 6 (left: 6 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n1.5 * 9 = 13.5 (left: 9 13.5)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n9 - 1.5 = 7.5 (left: 7.5 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\nInput: 3 3 3 3\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\nPossible next steps:\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 - 9 = 0 (left: 0)\nInput: 3 3 3 3\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 - 9 = 0 (left: 0)\nPossible next steps:\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 - 9 = 0 (left: 0)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 - 9 = 0 (left: 0)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 * 3 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 - 9 = 0 (left: 0)\n3 / 3 = 1 (left: 1 3 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\nInput: 3 3 3 3\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n3 + 3 = 6 (left: 3 3 6)\n"
                ]
            }
        ],
        "idx": 823,
        "ys": [
            "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\nInput: 3 3 3 3\n",
            "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\nPossible next steps:\n",
            "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n3 + 3 = 6 (left: 3 3 6)\n",
            "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n3 * 3 = 9 (left: 3 3 9)\n",
            "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n3 / 3 = 1 (left: 1 3 3)\n",
            "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n3 - 3 = 0 (left: 0 3 3)\n",
            "3 + 3 = 6 (left: 3 6 9)\n6 * 3 = 18 (left: 9 18)\n9 * 2 = 18 (left: 18)\n3 + 3 = 6 (left: 3 3 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 42303,
            "prompt_tokens": 124433,
            "cost": 0.27125550000000004
        },
        "time_spent": 25.38390827178955
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 7 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 3 7 9)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n"
                ],
                "values": [
                    50,
                    100,
                    100,
                    50
                ],
                "select_new_ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 7 9",
                "ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n"
                ],
                "new_ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 * 14 = 14 (left: 9 14)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 9 = 5 (left: 1 5 14)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 + 2 = 8 (left: 8 9)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 * 2 = 12 (left: 12 9)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 / 2 = 3 (left: 3 9)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n9 - 6 = 3 (left: 3 2)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n9 / 2 = 4.5 (left: 6 4.5)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n9 - 2 = 7 (left: 6 7)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n3 + 7 = 10 (left: 9 10)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n7 - 3 = 4 (left: 4 9)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n3 * 7 = 21 (left: 9 21)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n7 / 3 = 2 (left: 2 9)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n9 + 3 = 12 (left: 7 12)\n",
                    "1 + 2 = 3 (left: 3 7 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n2 + 7 = 9 (left: 8 9)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 + 2 = 9 (left: 8 9)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n2 * 7 = 14 (left: 8 14)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 * 2 = 14 (left: 8 14)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 - 2 = 5 (left: 5 8)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n",
                    "9 - 1 = 8 (left: 2 7 8)\nInput: 3 5 7 9\n",
                    "9 - 1 = 8 (left: 2 7 8)\nPossible next steps:\n",
                    "9 - 1 = 8 (left: 2 7 8)\n3 + 5 = 8 (left: 7 8 9)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n5 + 3 = 8 (left: 7 8 9)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n3 * 5 = 15 (left: 7 15 9)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n5 * 3 = 15 (left: 7 15 9)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n5 - 3 = 2 (left: 2 7 9)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n5 / 3 = 1 (left: 1 7 9)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n9 - 7 = 2 (left: 2 2 9)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n9 / 3 = 3 (left: 3 7 9)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 * 14 = 14 (left: 9 14)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 + 2 = 8 (left: 8 9)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 * 2 = 12 (left: 12 9)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 / 2 = 3 (left: 3 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 7 9",
                "ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 * 14 = 14 (left: 9 14)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 + 2 = 8 (left: 8 9)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 * 2 = 12 (left: 12 9)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 / 2 = 3 (left: 3 9)\n"
                ],
                "new_ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n14 - 10 = 4 (left: 4 14)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n14 / 10 = 1.4 (left: 1.4 14)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\nInput: 3 6 8\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\nPossible next steps:\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n3 * 8 = 24 (left: 6 24)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n6 * 4 = 24 (left: 4 24)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n8 * 3 = 24 (left: 6 24)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n8 / 3 = 2.67 (left: 2.67 8)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n8 + 6 = 14 (left: 14 8)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n8 - 6 = 2 (left: 2 8)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n6 + 8 = 14 (left: 14 6)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n8 / 3 = 2 (left: 2)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 * 14 = 14 (left: 9 14)\n9 + 14 = 23 (left: 23)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 * 14 = 14 (left: 9 14)\n14 - 9 = 5 (left: 5 14)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 * 14 = 14 (left: 9 14)\n14 / 9 = 1 (left: 1 14)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\n13 / 9 = 1 (left: 1 13)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\n13 * 9 = 117 (left: 13 117)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\nInput: 1 2 3 4\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\nPossible next steps:\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\n2 * 3 = 6 (left: 1 6 4)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\n3 + 4 = 7 (left: 1 2 7)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\n4 - 1 = 3 (left: 2 3 4)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\n4 / 2 = 2 (left: 1 2 4)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\n4 * 1 = 4 (left: 2 3 4)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\n3 - 2 = 1 (left: 1 1 4)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\n3 / 1 = 3 (left: 2 3 4)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 + 2 = 8 (left: 8 9)\n9 - 8 = 1 (left: 1)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 + 2 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 + 2 = 8 (left: 8 9)\n8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 * 2 = 12 (left: 12 9)\n12 + 9 = 21 (left: 9 21)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 * 2 = 12 (left: 12 9)\n12 / 9 = 1 (left: 1 9)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 * 2 = 12 (left: 12 9)\n12 * 9 = 108 (left: 9 108)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 * 2 = 12 (left: 12 9)\n12 - 9 = 3 (left: 3 9)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 / 2 = 3 (left: 3 9)\n3 * 9 = 27 (left: 9 27)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 / 2 = 3 (left: 3 9)\n9 / 3 = 3 (left: 3 9)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    100,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 * 14 = 14 (left: 9 14)\n9 + 14 = 23 (left: 23)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 2 7 9",
                "ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 * 14 = 14 (left: 9 14)\n9 + 14 = 23 (left: 23)\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n"
                ],
                "new_ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (1 + 9) + (1 * 2 * 7) = 24\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 / 2) * (9 - 1) = 24\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n\n3 + 8 = 11 (left: 8 11)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n\n8 - 3 = 5 (left: 5 8)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n\n3 * 8 = 24 (left: 8 24)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nThere are no possible next steps.\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 * 14 = 14 (left: 9 14)\n9 + 14 = 23 (left: 23)\nPossible next steps:\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 * 14 = 14 (left: 9 14)\n9 + 14 = 23 (left: 23)\nInput is invalid. Please provide 4 integers.\n",
                    "2 * 7 = 14 (left: 1 14 9)\n14 - 1 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\nThere are no possible next steps.\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n17 * 2 = 34 (left: 34)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n17 + 2 = 19 (left: 19)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n17 - 2 = 15 (left: 15)\n",
                    "7 - 1 = 6 (left: 6 2 9)\n6 + 2 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n17 / 2 = 8.5 (left: 8.5)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (1 + 9) + (1 * 2 * 7) = 24\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 / 2) * (9 - 1) = 24\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n\n3 + 8 = 11 (left: 8 11)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n\n8 - 3 = 5 (left: 5 8)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n\n3 * 8 = 24 (left: 8 24)\n",
                    "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nThere are no possible next steps.\n",
                    "2 * 7 = 14 (left: 1 14 9)\n1 * 14 = 14 (left: 9 14)\n9 + 14 = 23 (left: 23)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 824,
        "ys": [
            "2 * 7 = 14 (left: 1 14 9)\n1 + 9 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (1 + 9) + (1 * 2 * 7) = 24\n",
            "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 / 2) * (9 - 1) = 24\n",
            "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n\n3 + 8 = 11 (left: 8 11)\n",
            "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n\n8 - 3 = 5 (left: 5 8)\n",
            "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n\n3 * 8 = 24 (left: 8 24)\n",
            "9 - 1 = 8 (left: 2 7 8)\n7 / 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nThere are no possible next steps.\n",
            "2 * 7 = 14 (left: 1 14 9)\n1 * 14 = 14 (left: 9 14)\n9 + 14 = 23 (left: 23)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 43668,
            "prompt_tokens": 129478,
            "cost": 0.28155300000000005
        },
        "time_spent": 28.66669273376465
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 9 11 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n",
                    "9 / 1 = 9 (left: 9 11 13)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n",
                    "1 + 11 = 12 (left: 9 12 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n",
                    "1 - 11 = -10 (left: -10 11 13)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n",
                    "9 / 1 = 9 (left: 9 11 13)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n",
                    "1 + 11 = 12 (left: 9 12 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 9 11 13",
                "ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n",
                    "9 / 1 = 9 (left: 9 11 13)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n",
                    "1 + 11 = 12 (left: 9 12 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n"
                ],
                "new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 - 11 = -1 (left: -1 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 * 11 = 110 (left: 13 110)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 / 10 = 1 (left: 1 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\nInput: 3 3 3 3\n",
                    "1 + 9 = 10 (left: 10 11 13)\nPossible next steps:\n",
                    "1 + 9 = 10 (left: 10 11 13)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n3 + 3 = 6 (left: 6 3 3)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n3 - 3 = 0 (left: 3 0 3)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n3 / 3 = 1 (left: 3 1 3)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n10 * 11 = 110 (left: 13 110)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n13 - 10 = 3 (left: 3 11 13)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 10 2 13)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n13 / 10 = 1.3 (left: 1.3 11 13)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n9 + 11 = 20 (left: 13 20)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n9 * 11 = 99 (left: 13 99)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n11 + 9 = 20 (left: 13 20)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n11 * 9 = 99 (left: 13 99)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n11 - 9 = 2 (left: 2 13)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n11 / 9 = 1.22 (left: 1.22 13)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n9 - 11 = -2 (left: -2 13)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n9 / 11 = 0.82 (left: 0.82 13)\n",
                    "9 / 1 = 9 (left: 9 11 13)\n9 + 11 = 20 (left: 13 20)\n",
                    "9 / 1 = 9 (left: 9 11 13)\n11 + 13 = 24 (left: 9 24)\n",
                    "9 / 1 = 9 (left: 9 11 13)\n9 * 11 = 99 (left: 13 99)\n",
                    "9 / 1 = 9 (left: 9 11 13)\n11 * 13 = 143 (left: 9 143)\n",
                    "9 / 1 = 9 (left: 9 11 13)\n11 - 9 = 2 (left: 2 13)\n",
                    "9 / 1 = 9 (left: 9 11 13)\n13 - 9 = 4 (left: 4 11)\n",
                    "9 / 1 = 9 (left: 9 11 13)\n13 / 9 = 1 (left: 1 13)\n",
                    "9 / 1 = 9 (left: 9 11 13)\n13 - 11 = 2 (left: 2 13)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n9 * 12 = 108 (left: 108 13)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n12 - 9 = 3 (left: 3 12 13)\n",
                    "11 + 1 = 12 (left: 9 12 13)\n12 / 9 = 1 (left: 1 12 13)\n",
                    "1 + 11 = 12 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "1 + 11 = 12 (left: 9 12 13)\n9 * 12 = 108 (left: 13 108)\n",
                    "1 + 11 = 12 (left: 9 12 13)\n12 + 9 = 21 (left: 13 21)\n",
                    "1 + 11 = 12 (left: 9 12 13)\n12 - 9 = 3 (left: 3 12)\n",
                    "1 + 11 = 12 (left: 9 12 13)\n12 / 9 = 1 (left: 1 12)\n",
                    "1 + 11 = 12 (left: 9 12 13)\n13 + 9 = 22 (left: 12 22)\n",
                    "1 + 11 = 12 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "1 + 11 = 12 (left: 9 12 13)\n13 / 9 = 1.44 (left: 1.44 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 + 10 = 21 (left: 13 21)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n10 * 11 = 110 (left: 13 110)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 * 10 = 110 (left: 13 110)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n13 - 10 = 3 (left: 3 13)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 - 11 = -1 (left: -1 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 / 10 = 1 (left: 1 13)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n9 + 11 = 20 (left: 13 20)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 9 11 13",
                "ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 - 11 = -1 (left: -1 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 / 10 = 1 (left: 1 13)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n9 + 11 = 20 (left: 13 20)\n"
                ],
                "new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n21 - 13 = 8 (left: 8 21)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n21 / 13 = 1 (left: 1 21)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n21 * 13 = 273 (left: 273)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 - 21 = -8 (left: -8 13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 / 21 = 0.619 (left: 0.619 21)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 - 11 = -1 (left: -1 13)\n-1 + 13 = 12 (left: 12)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 - 11 = -1 (left: -1 13)\n13 - -1 = 14 (left: 14)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 - 11 = -1 (left: -1 13)\n-1 * 13 = -13 (left: -13)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 - 11 = -1 (left: -1 13)\n-1 / 13 = 0.077 (left: 0.077)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 / 10 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 / 10 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n21 - 13 = 8 (left: 8 21)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n21 / 13 = 1 (left: 1 21)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n10 * 24 = 240 (left: 240)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n24 / 10 = 2.4 (left: 2.4 10)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n24 - 10 = 14 (left: 14 10)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\nInput: 3 3 8 8\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\nPossible next steps:\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n3 * 3 = 9 (left: 8 8 9)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n8 / 3 = 2.67 (left: 2.67 8 8)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n3 * 8 = 24 (left: 8 24 8)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n8 - 3 = 5 (left: 3 8 5)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n8 / 3 = 2.67 (left: 3 2.67 8)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n8 * 3 = 24 (left: 24 8 8)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n9 + 11 = 20 (left: 13 20)\n13 + 20 = 33 (left: 33)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n9 + 11 = 20 (left: 13 20)\n20 - 13 = 7 (left: 7 20)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n9 + 11 = 20 (left: 13 20)\n20 / 13 = 1 (left: 1 20)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n9 + 11 = 20 (left: 13 20)\n20 * 13 = 260 (left: 260)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n9 + 11 = 20 (left: 13 20)\n13 - 20 = -7 (left: -7 13)\n",
                    "1 * 9 = 9 (left: 9 11 13)\n9 + 11 = 20 (left: 13 20)\n20 + 13 = 33 (left: 13 33)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 / 10 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 / 10 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 9 11 13",
                "ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 / 10 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 / 10 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\n"
                ],
                "new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n3 + 4 = 7 (left: 7)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n3 * 4 = 12 (left: 12)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n4 / 3 = 1.33 (left: 1.33)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n4 - 3 = 1 (left: 1)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\nInput: 5 5 5 5\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\nPossible next steps:\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n5 + 5 = 10 (left: 5 10 5)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n5 / 5 = 1 (left: 5 5 5)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\nThere are no possible next steps.\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\nThere are no more possible next steps.\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 / 10 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\nNo possible next steps.\n",
                    "1 + 9 = 10 (left: 10 11 13)\n11 / 10 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\nNo possible next steps.\n",
                    "9 + 1 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n2 * 17 = 34 (left: 17)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n34 - 2 = 32 (left: 2)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n34 / 2 = 17 (left: 17)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n34 - 17 = 17 (left: 17)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n34 + 2 = 36 (left: 2)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n34 / 17 = 2 (left: 17)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n34 - 34 = 0 (left: )\n",
                    "9 + 1 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n34 * 1 = 34 (left: 1)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\nInput: 3 6 6 8\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\nPossible next steps:\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\n3 + 6 = 9 (left: 6 8 9)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\n6 / 3 = 2 (left: 2 6 8)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\n8 - 3 = 5 (left: 5 6 8)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\n6 * 3 = 18 (left: 6 8 18)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\n8 - 6 = 2 (left: 2 6 8)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\n8 / 3 = 2 (left: 2 6 8)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\n6 + 6 = 12 (left: 8 12 8)\n",
                    "9 + 1 = 10 (left: 10 11 13)\n11 + 13 = 24 (left: 10 24)\n10 + 24 = 34 (left: 34)\n6 - 3 = 3 (left: 3 6 8)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n3 + 4 = 7 (left: 7)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n3 * 4 = 12 (left: 12)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n4 / 3 = 1.33 (left: 1.33)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n4 - 3 = 1 (left: 1)\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\nInput: 5 5 5 5\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\nPossible next steps:\n",
                    "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n5 + 5 = 10 (left: 5 10 5)\n"
                ]
            }
        ],
        "idx": 825,
        "ys": [
            "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n3 + 4 = 7 (left: 7)\n",
            "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n3 * 4 = 12 (left: 12)\n",
            "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n4 / 3 = 1.33 (left: 1.33)\n",
            "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n4 - 3 = 1 (left: 1)\n",
            "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\nInput: 5 5 5 5\n",
            "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\nPossible next steps:\n",
            "1 + 9 = 10 (left: 10 11 13)\n10 + 11 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n5 + 5 = 10 (left: 5 10 5)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 45622,
            "prompt_tokens": 134520,
            "cost": 0.293024
        },
        "time_spent": 37.974059104919434
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 4 6 8)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n",
                    "2 * 6 = 12 (left: 8 12 8)\n",
                    "2 / 6 = 0.3333333333333333 (left: 0.3333333333333333 6 8)\n",
                    "2 + 8 = 10 (left: 2 6 10)\n",
                    "2 * 8 = 16 (left: 6 8 16)\n",
                    "2 / 8 = 0.25 (left: 0.25 6 8)\n",
                    "6 + 2 = 8 (left: 2 8 8)\n",
                    "6 * 2 = 12 (left: 8 12 8)\n",
                    "6 / 2 = 3 (left: 3 8 8)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n",
                    "6 * 8 = 48 (left: 48 8 8)\n",
                    "6 / 8 = 0.75 (left: 0.75 8 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    100,
                    50,
                    0
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 2 8 8)\n",
                    "6 + 2 = 8 (left: 2 8 8)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n",
                    "2 * 6 = 12 (left: 8 12 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 6 8",
                "ys": [
                    "2 + 6 = 8 (left: 2 8 8)\n",
                    "6 + 2 = 8 (left: 2 8 8)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n",
                    "2 * 6 = 12 (left: 8 12 8)\n"
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "6 + 2 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 2 6 8)\n",
                    "6 + 2 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 2 4 8)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 * 14 = 28 (left: 28 8)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 / 2 = 7 (left: 7 8)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n6 / 4 = 1.5 (left: 1.5 8)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n8 + 4 = 12 (left: 6 12)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n",
                    "2 + 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n6 * 4 = 24 (left: 8 24)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n6 / 4 = 1.5 (left: 1.5 8)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "2 * 2 = 4 (left: 4 6 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n1 * 6 = 6 (left: 6 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n6 + 1 = 7 (left: 7 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n6 / 1 = 6 (left: 6 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n8 - 1 = 7 (left: 7 8)\n",
                    "2 / 2 = 1 (left: 1 6 8)\n8 / 1 = 8 (left: 8 8)\n",
                    "2 * 6 = 12 (left: 8 12 8)\n8 + 12 = 20 (left: 8 20)\n",
                    "2 * 6 = 12 (left: 8 12 8)\n12 - 8 = 4 (left: 4 8)\n",
                    "2 * 6 = 12 (left: 8 12 8)\n8 * 12 = 96 (left: 8 96)\n",
                    "2 * 6 = 12 (left: 8 12 8)\n12 / 8 = 1.5 (left: 1.5 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 * 14 = 28 (left: 28 8)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 / 2 = 7 (left: 7 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 6 8",
                "ys": [
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 * 14 = 28 (left: 28 8)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 / 2 = 7 (left: 7 8)\n"
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n8 * 16 = 128 (left: 128)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n10 - 8 = 2 (left: 2)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n8 - 6 = 2 (left: 2)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n8 / 6 = 1.33 (left: 1.33)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\n12 + 8 = 20 (left: 20)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\n12 - 8 = 4 (left: 4)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\n12 / 8 = 1.5 (left: 1.5)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\n12 * 8 = 96 (left: 96)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\nInput: 4 5 6\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\n4 + 5 = 9 (left: 6 9)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\n4 * 5 = 20 (left: 20 6)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\n5 + 6 = 11 (left: 4 11)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\n5 * 6 = 30 (left: 4 30)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\n6 + 4 = 10 (left: 10 6)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\n6 * 4 = 24 (left: 24 6)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 * 14 = 28 (left: 28 8)\n28 / 8 = 3 (left: 3 8)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 * 14 = 28 (left: 28 8)\n28 - 8 = 20 (left: 20 8)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 * 14 = 28 (left: 28 8)\n28 + 8 = 36 (left: 8 36)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 * 14 = 28 (left: 28 8)\n28 * 8 = 224 (left: 8 224)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 / 2 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 / 2 = 7 (left: 7 8)\n8 - 7 = 1 (left: 1 8)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 / 2 = 7 (left: 7 8)\n7 * 8 = 56 (left: 56)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 / 2 = 7 (left: 7 8)\n7 / 8 = 0.875 (left: 0.875 8)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\n12 + 8 = 20 (left: 20)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 / 2 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n8 * 16 = 128 (left: 128)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 6 8",
                "ys": [
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\n12 + 8 = 20 (left: 20)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 / 2 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n8 * 16 = 128 (left: 128)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n"
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (2 + 6 + 8) + 14 = 24\n",
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 is the final result.\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 is the final number.\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\n12 + 8 = 20 (left: 20)\nNo possible next steps.\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 / 2 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\nInput: 15\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 / 2 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 / 2 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\nNo more possible steps.\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n8 * 16 = 128 (left: 128)\n128 / 2 = 64 (left: 64)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n8 * 16 = 128 (left: 128)\n128 - 2 = 126 (left: 126)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n8 * 16 = 128 (left: 128)\n128 - 8 = 120 (left: 120)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n8 * 16 = 128 (left: 128)\n128 - 18 = 110 (left: 110)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n8 * 16 = 128 (left: 128)\n128 / 8 = 16 (left: 16)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n8 * 16 = 128 (left: 128)\n128 * 2 = 256 (left: 256)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n8 * 16 = 128 (left: 128)\n128 * 12 = 1536 (left: 1536)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n2 * 16 = 32 (left: 16 32)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n16 / 2 = 8 (left: 8 16)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\nInput: 3 3 3 3\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n3 + 3 = 6 (left: 6 3 3 3)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n3 - 3 = 0 (left: 3 3 0 3)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n3 - 3 = 0 (left: 3 0 3 3)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n3 / 3 = 1 (left: 3 1 3)\n",
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 16)\n3 / 3 = 1 (left: 3 3 1)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (2 + 6 + 8) + 14 = 24\n",
                    "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 is the final result.\n",
                    "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 is the final number.\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\n12 + 8 = 20 (left: 20)\nNo possible next steps.\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 / 2 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\nInput: 15\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 / 2 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 2 14 8)\n14 / 2 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\nNo more possible steps.\n"
                ]
            }
        ],
        "idx": 826,
        "ys": [
            "6 + 8 = 14 (left: 2 14 8)\n2 + 14 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (2 + 6 + 8) + 14 = 24\n",
            "2 + 6 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 is the final result.\n",
            "2 + 6 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 is the final number.\n",
            "6 + 8 = 14 (left: 2 14 8)\n14 - 2 = 12 (left: 12 8)\n12 + 8 = 20 (left: 20)\nNo possible next steps.\n",
            "6 + 8 = 14 (left: 2 14 8)\n14 / 2 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\nInput: 15\n",
            "6 + 8 = 14 (left: 2 14 8)\n14 / 2 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\nPossible next steps:\n",
            "6 + 8 = 14 (left: 2 14 8)\n14 / 2 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\nNo more possible steps.\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 47242,
            "prompt_tokens": 139911,
            "cost": 0.3043505
        },
        "time_spent": 31.529442071914673
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 8 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 8 = 13 (left: 9 12 13)\n",
                    "5 * 8 = 40 (left: 9 12 40)\n",
                    "8 - 5 = 3 (left: 3 9 12)\n",
                    "8 + 5 = 13 (left: 9 12 13)\n",
                    "9 + 5 = 14 (left: 8 12 14)\n",
                    "9 * 5 = 45 (left: 8 12 45)\n",
                    "12 + 5 = 17 (left: 8 9 17)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "8 - 5 = 3 (left: 3 9 12)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n",
                    "5 * 8 = 40 (left: 9 12 40)\n",
                    "8 + 5 = 13 (left: 9 12 13)\n",
                    "9 + 5 = 14 (left: 8 12 14)\n",
                    "9 * 5 = 45 (left: 8 12 45)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 8 9 12",
                "ys": [
                    "8 - 5 = 3 (left: 3 9 12)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n",
                    "5 * 8 = 40 (left: 9 12 40)\n",
                    "8 + 5 = 13 (left: 9 12 13)\n",
                    "9 + 5 = 14 (left: 8 12 14)\n",
                    "9 * 5 = 45 (left: 8 12 45)\n"
                ],
                "new_ys": [
                    "8 - 5 = 3 (left: 3 9 12)\n3 * 9 = 27 (left: 9 12 27)\n",
                    "8 - 5 = 3 (left: 3 9 12)\n9 / 3 = 3 (left: 3 12 9)\n",
                    "8 - 5 = 3 (left: 3 9 12)\n12 - 3 = 9 (left: 9 9 12)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 / 8 = 0 (left: 0 9)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 * 8 = 56 (left: 9 56)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 / 7 = 1 (left: 1 1)\n",
                    "12 - 5 = 7 (left: 7 8 9)\nInput: 1 2 3 4\n",
                    "12 - 5 = 7 (left: 7 8 9)\nPossible next steps:\n",
                    "12 - 5 = 7 (left: 7 8 9)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n1 / 2 = 0.5 (left: 0.5 3 4)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n3 + 4 = 7 (left: 1 2 7)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n3 - 1 = 2 (left: 2 2 4)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n4 - 3 = 1 (left: 1 2 4)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n3 * 4 = 12 (left: 1 2 12)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n4 / 3 = 1.3333333333333333 (left: 1 1.3333333333333333 4)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n9 * 12 = 108 (left: 13 108)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n12 - 9 = 3 (left: 3 12 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n12 / 9 = 1 (left: 1 12 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 13)\n",
                    "5 * 8 = 40 (left: 9 12 40)\n9 * 12 = 108 (left: 40 108)\n",
                    "5 * 8 = 40 (left: 9 12 40)\n12 / 9 = 1.33 (left: 1.33 40 12)\n",
                    "5 * 8 = 40 (left: 9 12 40)\n40 - 9 = 31 (left: 12 31)\n",
                    "5 * 8 = 40 (left: 9 12 40)\n40 / 9 = 4.44 (left: 4.44 40 12)\n",
                    "5 * 8 = 40 (left: 9 12 40)\n12 - 9 = 3 (left: 3 12 40)\n",
                    "5 * 8 = 40 (left: 9 12 40)\n40 - 12 = 28 (left: 9 28)\n",
                    "5 * 8 = 40 (left: 9 12 40)\n40 / 12 = 3.33 (left: 3.33 40 12)\n",
                    "8 + 5 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "8 + 5 = 13 (left: 9 12 13)\n12 - 9 = 3 (left: 3 12 13)\n",
                    "8 + 5 = 13 (left: 9 12 13)\n9 * 12 = 108 (left: 13 108)\n",
                    "8 + 5 = 13 (left: 9 12 13)\n12 / 9 = 1 (left: 1 12 13)\n",
                    "8 + 5 = 13 (left: 9 12 13)\n9 - 12 = -3 (left: -3 9 13)\n",
                    "8 + 5 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 12 13)\n",
                    "8 + 5 = 13 (left: 9 12 13)\n13 / 9 = 1.444 (left: 1.444 12 13)\n",
                    "9 + 5 = 14 (left: 8 12 14)\n8 + 12 = 20 (left: 14 20)\n",
                    "9 + 5 = 14 (left: 8 12 14)\n12 + 8 = 20 (left: 14 20)\n",
                    "9 + 5 = 14 (left: 8 12 14)\n12 / 8 = 1.5 (left: 1.5 14)\n",
                    "9 + 5 = 14 (left: 8 12 14)\n12 * 8 = 96 (left: 14 96)\n",
                    "9 + 5 = 14 (left: 8 12 14)\n12 - 8 = 4 (left: 4 14)\n",
                    "9 + 5 = 14 (left: 8 12 14)\n14 - 8 = 6 (left: 6 14)\n",
                    "9 + 5 = 14 (left: 8 12 14)\n14 / 8 = 1.75 (left: 1.75 14)\n",
                    "9 + 5 = 14 (left: 8 12 14)\n14 - 12 = 2 (left: 2 14)\n",
                    "9 * 5 = 45 (left: 8 12 45)\n8 + 12 = 20 (left: 20 45)\n",
                    "9 * 5 = 45 (left: 8 12 45)\n12 * 45 = 540 (left: 8 540)\n",
                    "9 * 5 = 45 (left: 8 12 45)\n45 - 8 = 37 (left: 12 37)\n",
                    "9 * 5 = 45 (left: 8 12 45)\n45 / 12 = 3.75 (left: 8 3.75)\n",
                    "9 * 5 = 45 (left: 8 12 45)\n12 + 8 = 20 (left: 20 45)\n",
                    "9 * 5 = 45 (left: 8 12 45)\n45 - 12 = 33 (left: 8 33)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    100,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 13)\n",
                    "5 * 8 = 40 (left: 9 12 40)\n40 - 9 = 31 (left: 12 31)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 8 9 12",
                "ys": [
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 13)\n",
                    "5 * 8 = 40 (left: 9 12 40)\n40 - 9 = 31 (left: 12 31)\n"
                ],
                "new_ys": [
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 - 15 = -6 (left: 9 -6)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 / 15 = 0 (left: 0 15)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n8 / 2 = 4 (left: 4)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n8 - 2 = 6 (left: 6)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n1 + 9 = 10 (left: 9 10)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8 9)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9 9)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n9 / 1 = 9 (left: 9 9)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 - 13 = 8 (left: 8 21)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 / 13 = 1 (left: 1 21)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 * 13 = 273 (left: 273)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 + 13 = 34 (left: 13 34)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n21 - 13 = 8 (left: 8 21)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n13 - 4 = 9 (left: 4 9)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 13)\n1 * 13 = 13 (left: 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 13)\n13 / 1 = 13 (left: 13)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\n",
                    "5 * 8 = 40 (left: 9 12 40)\n40 - 9 = 31 (left: 12 31)\n12 + 31 = 43 (left: 43)\n",
                    "5 * 8 = 40 (left: 9 12 40)\n40 - 9 = 31 (left: 12 31)\n12 - 31 = -19 (left: -19)\n",
                    "5 * 8 = 40 (left: 9 12 40)\n40 - 9 = 31 (left: 12 31)\n12 * 31 = 372 (left: 372)\n",
                    "5 * 8 = 40 (left: 9 12 40)\n40 - 9 = 31 (left: 12 31)\n12 / 31 = 0.3871 (left: 0.3871)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 13)\n1 * 13 = 13 (left: 13)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 8 9 12",
                "ys": [
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 13)\n1 * 13 = 13 (left: 13)\n"
                ],
                "new_ys": [
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((12 - 5) + 8) + 9 = 24\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((12 - 5) + 8) + 9 = 24\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\nInput: 3 6 6 8\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\nPossible next steps:\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n3 * 6 = 18 (left: 6 6 18)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n6 + 3 = 9 (left: 6 9 8)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n6 * 3 = 18 (left: 6 8 18)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n8 - 6 = 2 (left: 2 6 8)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n6 * 6 = 36 (left: 8 36)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n6 / 3 = 2 (left: 2 6 6)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n6 * 8 = 48 (left: 6 6 48)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n8 - 3 = 5 (left: 5 6 6)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\nInput: 16\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\nPossible next steps:\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 1 = 17 (left: 1 17)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\nThere are no possible next steps.\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\nInput: 17\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\nPossible next steps:\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n17 * 2 = 34 (left: 34)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n17 + 2 = 19 (left: 19)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n17 - 2 = 15 (left: 15)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n4 + 13 = 17 (left: 17)\n17 / 2 = 8.5 (left: 8.5)\n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 13)\n1 * 13 = 13 (left: 13)\nInput: 13  \n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 13)\n1 * 13 = 13 (left: 13)\nPossible next steps:  \n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 13)\n1 * 13 = 13 (left: 13)\n13 - 1 = 12 (left: 1)  \n",
                    "5 + 8 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 13)\n1 * 13 = 13 (left: 13)\n13 / 1 = 13 (left: 1)  \n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((12 - 5) + 8) + 9 = 24\n",
                    "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((12 - 5) + 8) + 9 = 24\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\nInput: 3 6 6 8\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\nPossible next steps:\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n3 * 6 = 18 (left: 6 6 18)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n6 + 3 = 9 (left: 6 9 8)\n",
                    "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n6 * 3 = 18 (left: 6 8 18)\n"
                ]
            }
        ],
        "idx": 827,
        "ys": [
            "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((12 - 5) + 8) + 9 = 24\n",
            "12 - 5 = 7 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((12 - 5) + 8) + 9 = 24\n",
            "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\nInput: 3 6 6 8\n",
            "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\nPossible next steps:\n",
            "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n3 * 6 = 18 (left: 6 6 18)\n",
            "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n6 + 3 = 9 (left: 6 9 8)\n",
            "12 - 5 = 7 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n6 * 3 = 18 (left: 6 8 18)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 48976,
            "prompt_tokens": 145647,
            "cost": 0.3164225
        },
        "time_spent": 39.80250692367554
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 1 4 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n",
                    "10 - 1 = 9 (left: 1 4 9)\n",
                    "10 / 1 = 10 (left: 1 4 10)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n",
                    "10 - 1 = 9 (left: 1 4 9)\n",
                    "10 / 1 = 10 (left: 1 4 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 1 4 10",
                "ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n",
                    "10 - 1 = 9 (left: 1 4 9)\n",
                    "10 / 1 = 10 (left: 1 4 10)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n4 * 1 = 4 (left: 4 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 - 1 = 9 (left: 4 9)\n",
                    "10 - 1 = 9 (left: 1 4 9)\n1 * 4 = 4 (left: 4 9)\n",
                    "10 - 1 = 9 (left: 1 4 9)\n4 + 1 = 5 (left: 5 9)\n",
                    "10 - 1 = 9 (left: 1 4 9)\n9 - 1 = 8 (left: 4 8)\n",
                    "10 / 1 = 10 (left: 1 4 10)\n4 * 1 = 4 (left: 4 4 10)\n",
                    "10 / 1 = 10 (left: 1 4 10)\n4 + 1 = 5 (left: 5 4 10)\n",
                    "10 / 1 = 10 (left: 1 4 10)\n10 - 4 = 6 (left: 4 6 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n4 * 1 = 4 (left: 4 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 1 4 10",
                "ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n4 * 1 = 4 (left: 4 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 / 6 = 1.67 (left: 1.67 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\nInput: 3 3 7 9\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\nPossible next steps:\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 6 7 9)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n7 - 3 = 4 (left: 4 3 9)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n9 - 7 = 2 (left: 3 2 9)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n3 * 3 = 9 (left: 9 7 9)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n7 + 3 = 10 (left: 3 9 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n9 / 3 = 3 (left: 3 7 9)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n3 - 3 = 0 (left: 0 7 9)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n9 + 3 = 12 (left: 3 7 12)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 / 10 = 0.8 (left: 0.8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 - 8 = 2 (left: 2)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 / 8 = 1.25 (left: 1.25)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 * 10 = 80 (left: 80)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 + 8 = 18 (left: 18)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\nInput: 3 4 6 12\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\nPossible next steps:\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n3 + 4 = 7 (left: 6 7 12)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n4 * 6 = 24 (left: 3 24 12)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n6 / 3 = 2 (left: 2 4 12)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n12 - 6 = 6 (left: 3 4 6)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 - 2 = 8 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n5 - 4 = 1 (left: 1 5)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n5 / 4 = 1.25 (left: 1.25 5)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n4 * 5 = 20 (left: 5 20)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n10 - 5 = 5 (left: 5)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n10 / 5 = 2 (left: 2)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n4 * 1 = 4 (left: 4 10)\n4 + 10 = 14 (left: 10 14)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n4 * 1 = 4 (left: 4 10)\n10 / 4 = 2 (left: 2 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n4 * 1 = 4 (left: 4 10)\n4 * 10 = 40 (left: 10 40)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n4 * 1 = 4 (left: 4 10)\n10 - 4 = 6 (left: 6 10)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n11 - 4 = 7 (left: 7)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n4 * 11 = 44 (left: 44)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n11 / 4 = 2.75 (left: 2.75)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 + 8 = 18 (left: 18)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 / 6 = 1.67 (left: 1.67 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 1 4 10",
                "ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 + 8 = 18 (left: 18)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 / 6 = 1.67 (left: 1.67 10)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\nInput: 2 4 6 8\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\nPossible next steps:\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n2 + 4 = 6 (left: 6 6 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n4 + 6 = 10 (left: 2 10 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n6 + 8 = 14 (left: 2 4 14)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n2 * 4 = 8 (left: 6 8 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n4 * 6 = 24 (left: 2 8 24)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n6 * 8 = 48 (left: 2 4 48)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n8 / 2 = 4 (left: 4 4 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n6 / 2 = 3 (left: 3 4 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n8 - 2 = 6 (left: 6 4 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n6 - 4 = 2 (left: 2 4 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n8 - 6 = 2 (left: 2 4 2)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n8 / 4 = 2 (left: 2 2 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n8 * 2 = 16 (left: 4 6 16)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 is the final result, no more steps can be made.\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 + 8 = 18 (left: 18)\nInput: 3 3 7 7\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 + 8 = 18 (left: 18)\nPossible next steps:\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 + 8 = 18 (left: 18)\n3 + 3 = 6 (left: 6 7 7)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 + 8 = 18 (left: 18)\n3 * 7 = 21 (left: 3 7 21)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 + 8 = 18 (left: 18)\n3 - 7 = -4 (left: -4 3 7)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n4 * 2 = 8 (left: 8 10)\n10 + 8 = 18 (left: 18)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\nInput: 15\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\nPossible next steps:\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n15 + 9 = 24 (left: 9)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n15 - 9 = 6 (left: 9)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n15 * 1 = 15 (left: 1)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n15 / 3 = 5 (left: 3)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\nInput: 3 5 6 7\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\nPossible next steps:\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n3 + 5 = 8 (left: 6 7 8)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n3 * 5 = 15 (left: 6 7 15)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n6 - 3 = 3 (left: 3 7 6)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n7 - 3 = 4 (left: 4 6 7)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n1 + 4 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n7 - 6 = 1 (left: 1 6 7)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\nInput: 3 3 5 7\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\nPossible next steps:\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\n3 + 3 = 6 (left: 5 6 7)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\n5 + 3 = 8 (left: 3 7 8)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\n3 * 3 = 9 (left: 5 7 9)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\n7 - 5 = 2 (left: 2 3 7)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\n7 / 7 = 1 (left: 3 5 1)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\n5 / 3 = 1 (left: 1 3 7)\n",
                    "1 * 1 = 1 (left: 1 4 10)\n10 + 1 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\n3 / 3 = 1 (left: 1 5 7)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n10 - 4 = 6 (left: 6 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n10 / 4 = 2.5 (left: 2.5 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 / 6 = 1.67 (left: 1.67 10)\n1.67 * 10 = 16.7 (left: 10 16.7)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 / 6 = 1.67 (left: 1.67 10)\n10 / 1.67 = 5.99 (left: 5.99 10)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 / 6 = 1.67 (left: 1.67 10)\n10 + 1.67 = 11.67 (left: 1.67 11.67)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n10 / 6 = 1.67 (left: 1.67 10)\n10 - 1.67 = 8.33 (left: 1.67 8.33)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\nInput: 2 4 6 8\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\nPossible next steps:\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n2 + 4 = 6 (left: 6 6 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n4 + 6 = 10 (left: 2 10 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n6 + 8 = 14 (left: 2 4 14)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n2 * 4 = 8 (left: 6 8 8)\n",
                    "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n4 * 6 = 24 (left: 2 8 24)\n"
                ]
            }
        ],
        "idx": 828,
        "ys": [
            "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\nInput: 2 4 6 8\n",
            "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\nPossible next steps:\n",
            "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n2 + 4 = 6 (left: 6 6 8)\n",
            "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n4 + 6 = 10 (left: 2 10 8)\n",
            "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n6 + 8 = 14 (left: 2 4 14)\n",
            "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n2 * 4 = 8 (left: 6 8 8)\n",
            "1 + 1 = 2 (left: 2 4 10)\n2 + 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n4 * 6 = 24 (left: 2 8 24)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 50724,
            "prompt_tokens": 150002,
            "cost": 0.326451
        },
        "time_spent": 31.962350130081177
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 9 10 13)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n",
                    "4 * 5 = 20 (left: 20 10 13)\n",
                    "10 / 5 = 2 (left: 4 2 13)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n",
                    "13 - 5 = 8 (left: 4 8 10)\n"
                ],
                "values": [
                    50,
                    100,
                    100,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "5 - 4 = 1 (left: 1 10 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n",
                    "4 * 5 = 20 (left: 20 10 13)\n",
                    "10 / 5 = 2 (left: 4 2 13)\n",
                    "13 - 5 = 8 (left: 4 8 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 10 13",
                "ys": [
                    "5 - 4 = 1 (left: 1 10 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n",
                    "4 * 5 = 20 (left: 20 10 13)\n",
                    "10 / 5 = 2 (left: 4 2 13)\n",
                    "13 - 5 = 8 (left: 4 8 10)\n"
                ],
                "new_ys": [
                    "5 - 4 = 1 (left: 1 10 13)\n1 * 10 = 10 (left: 10 13)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n13 - 10 = 3 (left: 1 3 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 - 5 = 1 (left: 1 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n13 - 6 = 7 (left: 6 7)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n13 - 5 = 8 (left: 5 8)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n10 - 5 = 5 (left: 5 10)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n9 + 10 = 19 (left: 13 19)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 - 9 = 1 (left: 1 13)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n10 / 9 = 1.11 (left: 1.11 13)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n9 * 10 = 90 (left: 13 90)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n13 / 9 = 1.44 (left: 1.44 13)\n",
                    "4 + 5 = 9 (left: 9 10 13)\nInput: 3 3 8 8\n",
                    "4 + 5 = 9 (left: 9 10 13)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 9 10 13)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n3 / 3 = 1 (left: 1 8 8)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n3 * 3 = 9 (left: 8 8 9)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n8 / 3 = 2.67 (left: 2.67 8 8)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n8 + 3 = 11 (left: 8 11 8)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "4 + 5 = 9 (left: 9 10 13)\n8 / 3 = 2.67 (left: 2.67 8 8)\n",
                    "4 * 5 = 20 (left: 20 10 13)\n20 + 10 = 30 (left: 13 30)\n",
                    "4 * 5 = 20 (left: 20 10 13)\n20 / 10 = 2 (left: 2 13)\n",
                    "4 * 5 = 20 (left: 20 10 13)\n20 - 10 = 10 (left: 10 13)\n",
                    "4 * 5 = 20 (left: 20 10 13)\n20 * 10 = 200 (left: 13 200)\n",
                    "4 * 5 = 20 (left: 20 10 13)\n10 + 13 = 23 (left: 20 23)\n",
                    "4 * 5 = 20 (left: 20 10 13)\n10 / 20 = 0.5 (left: 0.5 13)\n",
                    "4 * 5 = 20 (left: 20 10 13)\n10 - 20 = -10 (left: -10 13)\n",
                    "10 / 5 = 2 (left: 4 2 13)\n4 + 2 = 6 (left: 6 13)\n",
                    "10 / 5 = 2 (left: 4 2 13)\n4 * 2 = 8 (left: 8 13)\n",
                    "10 / 5 = 2 (left: 4 2 13)\n4 / 2 = 2 (left: 2 13)\n",
                    "10 / 5 = 2 (left: 4 2 13)\n13 - 2 = 11 (left: 4 11)\n",
                    "13 - 5 = 8 (left: 4 8 10)\n4 + 8 = 12 (left: 10 12)\n",
                    "13 - 5 = 8 (left: 4 8 10)\n4 * 2 = 8 (left: 8 10)\n",
                    "13 - 5 = 8 (left: 4 8 10)\n10 - 4 = 6 (left: 6 10)\n",
                    "13 - 5 = 8 (left: 4 8 10)\n8 + 2 = 10 (left: 10 10)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 - 4 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n1 * 10 = 10 (left: 10 13)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 10 13",
                "ys": [
                    "5 - 4 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n1 * 10 = 10 (left: 10 13)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n"
                ],
                "new_ys": [
                    "5 - 4 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n10 + 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 11 13)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n13 * 11 = 143 (left: 143)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n11 / 13 = 0 (left: 0)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 / 10 = 1.4 (left: 1.4 10)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4 14)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 / 14 = 0.7142857142857143 (left: 0.7142857142857143 14)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4 10)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 / 5 = 3 (left: 3 19)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n1 * 10 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n1 * 10 = 10 (left: 10 13)\n10 - 13 = -3 (left: -3)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n1 * 10 = 10 (left: 10 13)\n10 * 13 = 130 (left: 130)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n1 * 10 = 10 (left: 10 13)\n10 / 13 = 0.77 (left: 0.77)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n9 + 13 = 22 (left: 22)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n13 / 9 = 1 (left: 1 13)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n9 * 13 = 117 (left: 117)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\nInput: 1 2 3 4\n",
                    "5 - 4 = 1 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\nPossible next steps:\n",
                    "5 - 4 = 1 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n2 + 3 = 5 (left: 3 5 4)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n3 + 4 = 7 (left: 1 7 4)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n2 * 3 = 6 (left: 1 6 4)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n10 - 1 = 9 (left: 9 13)\n3 * 4 = 12 (left: 1 2 12)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n30 + 13 = 43 (left: 43)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n30 - 13 = 17 (left: 17)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n30 * 13 = 390 (left: 390)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n30 / 13 = 2.31 (left: 2.31)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\nInput: 9 9 8 8\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\nPossible next steps:\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n9 + 9 = 18 (left: 8 18 8)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n9 / 9 = 1 (left: 1 9 8)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n8 + 9 = 17 (left: 9 17 8)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n9 - 8 = 1 (left: 1 9 8)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n8 / 8 = 1 (left: 9 1 8)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n8 - 9 = -1 (left: -1 9 8)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 * 5 = 30 (left: 30 13)\n8 * 9 = 72 (left: 72 8)\n"
                ],
                "values": [
                    0,
                    0,
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    100,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n1 * 10 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 10 13",
                "ys": [
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n1 * 10 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n"
                ],
                "new_ys": [
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (10 - 4) + (6 + 5) = 24\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (10 - 4) + (5 + 5) = 24\n",
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (5 + (13 - 4)) = 24\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\nAnswer: (13 - 4) + (5 + 10) = 24\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (13 - 4) + (5 + 10) = 24\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14 2 3 7\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 + 2 = 16 (left: 3 7 16)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 + 3 = 17 (left: 2 7 17)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 * 2 = 28 (left: 3 7 28)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 / 2 = 7 (left: 7 3 7)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 - 2 = 12 (left: 3 7 12)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 - 3 = 11 (left: 2 7 11)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 * 3 = 42 (left: 2 7 42)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 / 3 = 4 (left: 2 7 4)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 + 7 = 21 (left: 2 3 21)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 * 7 = 98 (left: 2 3 98)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 / 7 = 2 (left: 2 3 2)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n2 + 3 = 5 (left: 5 14 7)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n2 * 3 = 6 (left: 6 14 7)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n2 / 3 = 0 (left: 0 14 7)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n2 - 3 = -1 (left: -1 14 7)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n3 + 7 = 10 (left: 2 10 14)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n3 * 7 = 21 (left: 2 21 14)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n3 / 7 = 0 (left: 0 14 7)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n3 - 7 = -4 (left: -4 14 7)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n7 + 2 = 9 (left: 3 9 14)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n7 * 2 = 14 (left: 3 14 14)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n7 / 2 = 3 (left: 3 3 14)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n7 - 2 = 5 (left: 5 14 7)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n7 * 3 = 21 (left: 2 7 21)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n7 / 3 = 2 (left: 2 2 14)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n7 - 3 = 4 (left: 4 14 7)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 + 2 = 16 (left: 3 7 16)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 + 3 = 17 (left: 2 7 17)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 * 2 = 28 (left: 3 7 28)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 / 2 = 7 (left: 7 3 7)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 - 2 = 12 (left: 3 7 12)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 - 3 = 11 (left: 2 7 11)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 * 3 = 42 (left: 2 7 42)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 / 3 = 4 (left: 2 7 4)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 + 7 = 21 (left: 2 3 21)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 * 7 = 98 (left: 2 3 98)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 / 7 = 2 (left: 2 3 2)\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 - 7 = 7 (left: 7 2 14)\n",
                    "5 - 4 = 1 (left: 1 10 13)\n1 * 10 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\nThere are no possible next steps for the input 23.\n"
                ],
                "values": [
                    0,
                    0,
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (5 + (13 - 4)) = 24\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\nAnswer: (13 - 4) + (5 + 10) = 24\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (13 - 4) + (5 + 10) = 24\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (10 - 4) + (6 + 5) = 24\n",
                    "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (10 - 4) + (5 + 5) = 24\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14 2 3 7\n",
                    "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 829,
        "ys": [
            "13 - 4 = 9 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (5 + (13 - 4)) = 24\n",
            "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\nAnswer: (13 - 4) + (5 + 10) = 24\n",
            "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (13 - 4) + (5 + 10) = 24\n",
            "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (10 - 4) + (6 + 5) = 24\n",
            "10 - 4 = 6 (left: 6 5 13)\n6 + 5 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (10 - 4) + (5 + 5) = 24\n",
            "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nInput: 14 2 3 7\n",
            "13 - 4 = 9 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 52986,
            "prompt_tokens": 156779,
            "cost": 0.3411405
        },
        "time_spent": 42.28323817253113
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 3 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n",
                    "3 * 2 = 6 (left: 3 6 9)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n",
                    "9 / 3 = 3 (left: 2 3 9)\n"
                ],
                "values": [
                    100,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n",
                    "3 * 2 = 6 (left: 3 6 9)\n",
                    "9 / 3 = 3 (left: 2 3 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 3 9",
                "ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n",
                    "3 * 2 = 6 (left: 3 6 9)\n",
                    "9 / 3 = 3 (left: 2 3 9)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 - 3 = 2 (left: 2 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n9 - 6 = 3 (left: 2 3 9)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n9 / 2 = 4.5 (left: 4.5 6)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n",
                    "3 * 2 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 9 9)\n",
                    "3 * 2 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n",
                    "3 * 2 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "3 * 2 = 6 (left: 3 6 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "9 / 3 = 3 (left: 2 3 9)\n3 - 2 = 1 (left: 1 3 9)\n",
                    "9 / 3 = 3 (left: 2 3 9)\n9 - 3 = 6 (left: 2 6 9)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 - 3 = 2 (left: 2 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 3 9",
                "ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 - 3 = 2 (left: 2 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 - 15 = -6 (left: -6 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 / 15 = 0 (left: 0 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n9 - 8 = 1 (left: 1)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 / 9 = 0.88 (left: 0.88)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 - 3 = 2 (left: 2 9)\n2 + 9 = 11 (left: 9 11)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 - 3 = 2 (left: 2 9)\n9 / 2 = 4 (left: 4 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n9 / 1 = 9 (left: 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 6 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 6 9)\n6 * 9 = 54 (left: 9 54)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n9 - 3 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n7 - 6 = 1 (left: 1)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 - 9 = -1 (left: -1)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 3 9",
                "ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\nInput: 15\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 + 1 = 16 (left: 1 16)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 - 1 = 14 (left: 1 14)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 / 1 = 15 (left: 1 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 * 1 = 15 (left: 1 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 4 5 6 7\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n5 + 6 = 11 (left: 4 7 11)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n6 + 7 = 13 (left: 4 5 13)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n4 * 5 = 20 (left: 6 7 20)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n5 * 6 = 30 (left: 4 7 30)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n6 * 7 = 42 (left: 4 5 42)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n7 - 6 = 1 (left: 4 5 1)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n6 - 5 = 1 (left: 4 1 7)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n6 / 4 = 1 (left: 1 5 7)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n7 - 5 = 2 (left: 4 2 6)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n7 / 4 = 1 (left: 1 5 6)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n7 - 4 = 3 (left: 3 5 6)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 3 6 9 12\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n3 * 6 = 18 (left: 9 12 18)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n6 * 9 = 54 (left: 3 12 54)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n9 * 12 = 108 (left: 3 6 108)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n12 - 9 = 3 (left: 3 6 3)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n9 - 6 = 3 (left: 3 3 12)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n9 / 3 = 3 (left: 3 6 12)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n12 / 3 = 4 (left: 4 6 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n12 - 6 = 6 (left: 3 6 6)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n2 + 8 = 10 (left: 8 10)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n8 * 2 = 16 (left: 10 16)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n10 + 8 = 18 (left: 8 18)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n8 - 2 = 6 (left: 6 10)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n10 - 8 = 2 (left: 2 10)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n10 / 2 = 5 (left: 5 10)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\nInput: 5 5 5 5\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n5 + 5 = 10 (left: 5 10 5)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n5 / 3 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)\n6 + 7 = 13 (left: 13)\n13 is the final result, no more steps possible.\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 3 5 5 7\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nPossible next steps:\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n3 + 5 = 8 (left: 5 7 8)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n5 * 3 = 15 (left: 5 7 15)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n5 - 3 = 2 (left: 2 5 7)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n7 - 5 = 2 (left: 2 5 5)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n5 + 3 = 8 (left: 5 7 8)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n7 - 3 = 4 (left: 4 5 7)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n7 / 3 = 2 (left: 2 5 7)\n",
                    "9 - 3 = 6 (left: 2 6 9)\n2 + 6 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n7 * 5 = 35 (left: 3 5 35)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9)\nInput: 3 3 3 8\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9)\n3 + 3 = 6 (left: 3 6 8)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9)\n3 / 3 = 1 (left: 1 3 8)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9)\n8 - 3 = 5 (left: 3 3 5)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 + 9 = 24 (left: 9)\n3 * 3 = 9 (left: 3 8 9)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n6 + 15 = 21 (left: 15 21)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n15 - 6 = 9 (left: 9 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n15 / 6 = 2.5 (left: 2.5 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 15 = 90 (left: 15 90)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\nInput: 15\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 + 1 = 16 (left: 1 16)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 - 1 = 14 (left: 1 14)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 / 1 = 15 (left: 1 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 * 1 = 15 (left: 1 15)\n",
                    "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 4 5 6 7\n"
                ]
            }
        ],
        "idx": 830,
        "ys": [
            "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\nInput: 15\n",
            "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\nPossible next steps:\n",
            "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 + 1 = 16 (left: 1 16)\n",
            "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 - 1 = 14 (left: 1 14)\n",
            "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 / 1 = 15 (left: 1 15)\n",
            "2 + 3 = 5 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: 15)\n15 * 1 = 15 (left: 1 15)\n",
            "2 + 3 = 5 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nInput: 4 5 6 7\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 54590,
            "prompt_tokens": 161130,
            "cost": 0.350875
        },
        "time_spent": 32.13485789299011
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 4 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 4 9",
                "ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n6 / 4 = 1.5 (left: 1.5 9)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 - 4 = 5 (left: 5 9)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n4 + 9 = 13 (left: 9 9 13)\n",
                    "3 * 3 = 9 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n3 * 6 = 18 (left: 6 9 18)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n9 * 3 = 27 (left: 6 9 27)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 - 4 = 5 (left: 5 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 4 9",
                "ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 - 4 = 5 (left: 5 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 * 10 = 90 (left: 90)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n10 / 9 = 1.11 (left: 1.11 10)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\nInput: 4 4 6 6\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n4 + 4 = 8 (left: 6 6 8)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n6 + 4 = 10 (left: 4 6 10)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n6 + 6 = 12 (left: 4 4 12)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n4 / 4 = 1 (left: 1 4 6)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n6 / 6 = 1 (left: 1 4 4)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n4 * 4 = 16 (left: 6 6 16)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n6 * 4 = 24 (left: 4 6 24)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n6 * 6 = 36 (left: 4 4 36)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 - 4 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 - 4 = 5 (left: 5 9)\n9 - 5 = 4 (left: 4)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 - 4 = 5 (left: 5 9)\n5 * 9 = 45 (left: 45)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 - 4 = 5 (left: 5 9)\n9 / 5 = 1.8 (left: 1.8)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n6 * 9 = 54 (left: 9 54)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n9 - 2 = 7 (left: 2 7)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n9 / 2 = 4.5 (left: 2 4.5)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n9 + 2 = 11 (left: 2 11)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6)\n3 + 6 = 9 (left: 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6)\n6 - 3 = 3 (left: 3)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n9 - 3 = 6 (left: 3 6)\n6 / 3 = 2 (left: 2)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 - 4 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 4 9",
                "ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 - 4 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 3 3 3 3\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 5 6 7 8\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n5 + 6 = 11 (left: 7 8 11)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n5 * 6 = 30 (left: 7 8 30)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n5 - 6 = -1 (left: -1 7 8)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n5 / 6 = 0.83 (left: 0.83 7 8)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n6 + 7 = 13 (left: 5 8 13)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n6 * 7 = 42 (left: 5 8 42)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n6 - 7 = -1 (left: 5 -1 8)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n6 / 7 = 0.86 (left: 5 0.86 8)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n7 + 8 = 15 (left: 5 7 15)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n7 * 8 = 56 (left: 5 8 56)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n7 - 8 = -1 (left: 5 7 -1)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n7 / 8 = 0.88 (left: 5 7 0.88)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 - 4 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n2 * 7 = 14 (left: 14)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 - 4 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n14 /  1 = 14 (left: 14)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 - 4 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n14 + 0 = 14 (left: 14)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n9 - 4 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n14 - 0 = 14 (left: 14)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\nInput: 4 6 6 5\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\nPossible next steps:\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n4 + 6 = 10 (left: 6 6 5 10)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n6 / 4 = 1.5 (left: 1.5 6 6 5)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n5 - 4 = 1 (left: 1 6 6 5)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 6 5)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n6 / 5 = 1.2 (left: 4 1.2 6 6)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n6 - 5 = 1 (left: 4 6 1 6)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n6 - 5 = 1 (left: 4 6 6 1)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n6 / 5 = 1.2 (left: 4 6 1.2 6)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 * 9 = 27 (left: 27)\n27 is the final result.\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\nInput: 3 3 7 7\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\nPossible next steps:\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n3 + 3 = 6 (left: 6 7 7)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n3 * 3 = 9 (left: 7 7 9)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n7 + 3 = 10 (left: 3 7 10)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n7 * 3 = 21 (left: 7 7 21)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n7 / 3 = 2 (left: 2 7 7)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n7 / 3 = 2 (left: 2 7 7)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n27 is the only number provided, so there are no possible next steps.\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 / 3 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 is the target number, no possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n5 - 4 = 1 (left: 1 6 6 5)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n4 + 6 = 10 (left: 6 6 5 10)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 6 5)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n6 - 5 = 1 (left: 4 6 1 6)\n",
                    "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n6 - 5 = 1 (left: 4 6 6 1)\n",
                    "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 3 3 3 3\n"
                ]
            }
        ],
        "idx": 831,
        "ys": [
            "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n5 - 4 = 1 (left: 1 6 6 5)\n",
            "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n\n",
            "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n4 + 6 = 10 (left: 6 6 5 10)\n",
            "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 6 5)\n",
            "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n6 - 5 = 1 (left: 4 6 1 6)\n",
            "9 - 3 = 6 (left: 3 6 9)\n6 + 3 = 9 (left: 3 9)\n3 + 9 = 12 (left: 12)\n6 - 5 = 1 (left: 4 6 6 1)\n",
            "3 + 3 = 6 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 3 3 3 3\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 1544,
            "prompt_tokens": 4118,
            "cost": 0.009265
        },
        "time_spent": 29.993199110031128
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n",
                    "4 - 3 = 1 (left: 1 6 10)\n",
                    "3 * 4 = 12 (left: 6 10 12)\n",
                    "10 - 3 = 7 (left: 4 7 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n",
                    "4 - 3 = 1 (left: 1 6 10)\n",
                    "3 * 4 = 12 (left: 6 10 12)\n",
                    "10 - 3 = 7 (left: 4 7 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 6 10",
                "ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n",
                    "4 - 3 = 1 (left: 1 6 10)\n",
                    "3 * 4 = 12 (left: 6 10 12)\n",
                    "10 - 3 = 7 (left: 4 7 10)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 * 7 = 42 (left: 10 42)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "4 - 3 = 1 (left: 1 6 10)\n6 + 10 = 16 (left: 1 16)\n",
                    "4 - 3 = 1 (left: 1 6 10)\n10 + 6 = 16 (left: 1 16)\n",
                    "4 - 3 = 1 (left: 1 6 10)\n6 * 10 = 60 (left: 1 60)\n",
                    "4 - 3 = 1 (left: 1 6 10)\n10 * 6 = 60 (left: 1 60)\n",
                    "4 - 3 = 1 (left: 1 6 10)\n10 - 6 = 4 (left: 1 4)\n",
                    "4 - 3 = 1 (left: 1 6 10)\n6 - 1 = 5 (left: 5 10)\n",
                    "4 - 3 = 1 (left: 1 6 10)\n10 - 1 = 9 (left: 9 6)\n",
                    "4 - 3 = 1 (left: 1 6 10)\n6 / 1 = 6 (left: 6 10)\n",
                    "4 - 3 = 1 (left: 1 6 10)\n10 / 1 = 10 (left: 10 6)\n",
                    "3 * 4 = 12 (left: 6 10 12)\n6 + 10 = 16 (left: 12 16)\n",
                    "3 * 4 = 12 (left: 6 10 12)\n6 * 10 = 60 (left: 12 60)\n",
                    "3 * 4 = 12 (left: 6 10 12)\n10 - 6 = 4 (left: 4 12)\n",
                    "3 * 4 = 12 (left: 6 10 12)\n10 / 6 = 1 (left: 1 12)\n",
                    "3 * 4 = 12 (left: 6 10 12)\n12 + 6 = 18 (left: 10 18)\n",
                    "3 * 4 = 12 (left: 6 10 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "10 - 3 = 7 (left: 4 7 10)\n4 * 7 = 28 (left: 10 28)\n",
                    "10 - 3 = 7 (left: 4 7 10)\n7 + 4 = 11 (left: 10 11)\n",
                    "10 - 3 = 7 (left: 4 7 10)\n10 + 4 = 14 (left: 7 14)\n",
                    "10 - 3 = 7 (left: 4 7 10)\n10 / 4 = 2 (left: 2 10)\n",
                    "10 - 3 = 7 (left: 4 7 10)\n7 - 4 = 3 (left: 3 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 * 7 = 42 (left: 10 42)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "4 - 3 = 1 (left: 1 6 10)\n6 + 10 = 16 (left: 1 16)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 6 10",
                "ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 * 7 = 42 (left: 10 42)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "4 - 3 = 1 (left: 1 6 10)\n6 + 10 = 16 (left: 1 16)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n13 - 10 = 3 (left: 3 13)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n13 / 10 = 1.3 (left: 1.3 13)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 * 13 = 130 (left: 130)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\nInput: 3 3 8 4\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n3 + 3 = 6 (left: 6 8 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n3 / 3 = 1 (left: 1 8 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n3 * 3 = 9 (left: 9 8 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n3 - 3 = 0 (left: 0 8 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n3 + 8 = 11 (left: 3 11 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n3 / 8 = 0.375 (left: 0.375 8 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n3 * 8 = 24 (left: 24 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n3 - 8 = -5 (left: -5 8 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n3 + 4 = 7 (left: 3 8 7)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n3 / 4 = 0.75 (left: 0.75 8 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n3 * 4 = 12 (left: 12 8 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n3 - 4 = -1 (left: -1 8 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n8 + 4 = 12 (left: 3 8 12)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n8 / 4 = 2 (left: 3 2 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n8 * 4 = 32 (left: 3 32 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n8 - 4 = 4 (left: 3 4 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n8 + 3 = 11 (left: 3 8 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n8 / 3 = 2.66667 (left: 2.66667 8 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n8 * 3 = 24 (left: 24 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n8 - 3 = 5 (left: 5 8 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n4 + 3 = 7 (left: 3 8 7)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n4 / 3 = 1.33333 (left: 1.33333 8 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n4 * 3 = 12 (left: 12 8 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n4 - 3 = 1 (left: 1 8 4)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 * 7 = 42 (left: 10 42)\n10 * 2 = 20 (left: 20 42)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 * 7 = 42 (left: 10 42)\n10 + 2 = 12 (left: 12 42)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 * 7 = 42 (left: 10 42)\n10 - 2 = 8 (left: 8 42)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 * 7 = 42 (left: 10 42)\n10 / 2 = 5 (left: 5 42)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n7 + 16 = 23 (left: 23)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n16 - 7 = 9 (left: 9 16)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n7 * 16 = 112 (left: 112)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n16 / 7 = 2 (left: 2 16)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\nInput: 3 4 6 12\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n3 + 4 = 7 (left: 6 7 12)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n4 / 3 = 1 (left: 1 6 12)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n6 + 3 = 9 (left: 4 9 12)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n3 * 4 = 12 (left: 6 12 12)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n6 / 3 = 2 (left: 2 4 12)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n12 - 3 = 9 (left: 4 6 9)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n12 / 4 = 3 (left: 3 6 12)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 + 6 = 16 (left: 7 16)\n12 - 6 = 6 (left: 3 4 6)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 10)\n10 - 4 = 6 (left: 6 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n10 - 6 = 4 (left: 4 10)\n10 / 4 = 2.5 (left: 2.5 10)\n",
                    "4 - 3 = 1 (left: 1 6 10)\n6 + 10 = 16 (left: 1 16)\n1 * 16 = 16 (left: 16)\n",
                    "4 - 3 = 1 (left: 1 6 10)\n6 + 10 = 16 (left: 1 16)\n16 / 1 = 16 (left: 16)\n",
                    "4 - 3 = 1 (left: 1 6 10)\n6 + 10 = 16 (left: 1 16)\n16 - 1 = 15 (left: 15)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 6 10",
                "ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n2 + 3 = 5 (left: 5)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n2 * 3 = 6 (left: 6)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 - 2 = 1 (left: 1)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 / 2 = 1.5 (left: 1.5)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nInput: 3 5 6 7\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 + 5 = 8 (left: 6 7 8)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 * 5 = 15 (left: 6 7 15)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n5 - 3 = 2 (left: 2 6 7)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n5 / 3 = 1.67 (left: 1.67 6 7)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n7 - 3 = 4 (left: 4 6 7)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n7 / 3 = 2.33 (left: 2.33 6 7)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n6 + 5 = 11 (left: 7 11 6)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n6 - 5 = 1 (left: 1 6 7)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n6 / 3 = 2 (left: 2 7 6)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n7 - 5 = 2 (left: 2 6 7)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nThere are no possible next steps.\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n10 is the target number, no next steps possible.\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nInput: 3 6 7 9\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n3 + 6 = 9 (left: 7 9 9)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n3 * 6 = 18 (left: 7 9 18)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n6 - 3 = 3 (left: 3 7 9)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n7 - 3 = 4 (left: 4 6 9)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n9 - 7 = 2 (left: 2 6 9)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n9 / 3 = 3 (left: 3 6 9)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 + 1 = 11 (left: 1 10)  \n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 - 1 = 9 (left: 1 9)  \n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 / 1 = 10 (left: 1 10)  \n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 * 1 = 10 (left: 1 10)  \n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n10 + 1 = 11 (left: 1 11)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n10 * 2 = 20 (left: 2 20)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n10 - 1 = 9 (left: 1 9)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n7 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n10 / 2 = 5 (left: 2 5)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n2 + 3 = 5 (left: 5)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n2 * 3 = 6 (left: 6)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 - 2 = 1 (left: 1)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 / 2 = 1.5 (left: 1.5)\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nInput: 3 5 6 7\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 + 5 = 8 (left: 6 7 8)\n"
                ]
            }
        ],
        "idx": 832,
        "ys": [
            "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n2 + 3 = 5 (left: 5)\n",
            "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n2 * 3 = 6 (left: 6)\n",
            "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 - 2 = 1 (left: 1)\n",
            "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 / 2 = 1.5 (left: 1.5)\n",
            "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nInput: 3 5 6 7\n",
            "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\nPossible next steps:\n",
            "3 + 4 = 7 (left: 6 7 10)\n6 + 7 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 + 5 = 8 (left: 6 7 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 3492,
            "prompt_tokens": 8467,
            "cost": 0.0196845
        },
        "time_spent": 37.95140099525452
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 6 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 * 4 = 12 (left: 6 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n",
                    "4 * 3 = 12 (left: 6 12)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n",
                    "12 - 6 = 6 (left: 3 6 12)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    100,
                    100
                ],
                "select_new_ys": [
                    "6 / 3 = 2 (left: 2 4 12)\n",
                    "12 - 6 = 6 (left: 3 6 12)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n",
                    "3 * 4 = 12 (left: 6 12)\n",
                    "4 * 3 = 12 (left: 6 12)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 6 12",
                "ys": [
                    "6 / 3 = 2 (left: 2 4 12)\n",
                    "12 - 6 = 6 (left: 3 6 12)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n",
                    "3 * 4 = 12 (left: 6 12)\n",
                    "4 * 3 = 12 (left: 6 12)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n"
                ],
                "new_ys": [
                    "6 / 3 = 2 (left: 2 4 12)\n2 * 4 = 8 (left: 8 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 + 2 = 6 (left: 6 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n12 / 4 = 3 (left: 2 3 12)\n",
                    "12 - 6 = 6 (left: 3 6 12)\n3 * 6 = 18 (left: 6 12 18)\n",
                    "12 - 6 = 6 (left: 3 6 12)\n6 / 3 = 2 (left: 2 6 12)\n",
                    "12 - 6 = 6 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6 12)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n8 * 4 = 32 (left: 32 12)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n",
                    "3 * 4 = 12 (left: 6 12)\n6 * 2 = 12 (left: 12)\n",
                    "3 * 4 = 12 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "4 * 3 = 12 (left: 6 12)\n6 * 2 = 12 (left: 12)\n",
                    "4 * 3 = 12 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "4 * 3 = 12 (left: 6 12)\n12 - 6 = 6 (left: 6)\n",
                    "4 * 3 = 12 (left: 6 12)\n12 / 6 = 2 (left: 2)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n6 / 4 = 1.5 (left: 1.5 12)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n12 - 4 = 8 (left: 8 12)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24 12)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n12 / 6 = 2 (left: 4 2)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    100,
                    0
                ],
                "select_new_ys": [
                    "12 - 4 = 8 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 * 4 = 8 (left: 8 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 + 2 = 6 (left: 6 12)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n8 * 4 = 32 (left: 32 12)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 6 12",
                "ys": [
                    "12 - 4 = 8 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 * 4 = 8 (left: 8 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 + 2 = 6 (left: 6 12)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n8 * 4 = 32 (left: 32 12)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n"
                ],
                "new_ys": [
                    "12 - 4 = 8 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 * 4 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 * 4 = 8 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 * 4 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 * 4 = 8 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 + 2 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 + 2 = 6 (left: 6 12)\n12 / 2 = 6 (left: 6)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 + 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n4 + 2 = 6 (left: 6 12)\n12 + 6 = 18 (left: 18)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n8 * 4 = 32 (left: 32 12)\n32 + 12 = 44 (left: 44)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n8 * 4 = 32 (left: 32 12)\n32 - 12 = 20 (left: 20)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n8 * 4 = 32 (left: 32 12)\n32 * 12 = 384 (left: 384)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n8 * 4 = 32 (left: 32 12)\n32 / 12 = 2.67 (left: 2.67)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\nInput: 3 3 3 3\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\nPossible next steps:\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 6 3 3 3)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 - 3 = 0 (left: 0 3 3 3)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 - 4 = 8 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 6 3 3 3)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 * 4 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 6 12",
                "ys": [
                    "12 - 4 = 8 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 6 3 3 3)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 * 4 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n"
                ],
                "new_ys": [
                    "12 - 4 = 8 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 + 12) = 24\n",
                    "12 - 4 = 8 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 - 4) * (4 / 8) = 24\n",
                    "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (12 - 6) = 24\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 6 9)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 6 3 3 3)\n6 + 3 = 9 (left: 3 3 9)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 6 3 3 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 6 3 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 6 3 3 3)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 is the final result.\n",
                    "6 / 3 = 2 (left: 2 4 12)\n2 * 4 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\nThere are no possible next steps.\n"
                ],
                "values": [
                    1000,
                    0,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 - 4 = 8 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 + 12) = 24\n",
                    "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (12 - 6) = 24\n",
                    "12 - 4 = 8 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 - 4) * (4 / 8) = 24\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 6 9)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 3)\n"
                ]
            }
        ],
        "idx": 833,
        "ys": [
            "12 - 4 = 8 (left: 4 8 12)\n4 + 8 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 + 12) = 24\n",
            "12 / 3 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (12 - 6) = 24\n",
            "12 - 4 = 8 (left: 4 8 12)\n8 / 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 - 4) * (4 / 8) = 24\n",
            "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
            "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 6 9)\n",
            "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
            "12 - 4 = 8 (left: 4 8 12)\n12 - 4 = 8 (left: 8 12)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 4692,
            "prompt_tokens": 14327,
            "cost": 0.0308745
        },
        "time_spent": 28.661329984664917
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 7 7 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n",
                    "10 - 3 = 7 (left: 7 7 7)\n"
                ],
                "values": [
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n",
                    "10 - 3 = 7 (left: 7 7 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 7 7 10",
                "ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n",
                    "10 - 3 = 7 (left: 7 7 7)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 * 7 = 49 (left: 10 49)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 - 7 = 0 (left: 0 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n4 + 7 = 11 (left: 10 11)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n7 - 4 = 3 (left: 3 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n4 * 7 = 28 (left: 10 28)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n7 / 4 = 1 (left: 1 10)\n",
                    "10 - 3 = 7 (left: 7 7 7)\n7 + 7 = 14 (left: 7 14)\n",
                    "10 - 3 = 7 (left: 7 7 7)\n7 / 7 = 1 (left: 1 7)\n",
                    "10 - 3 = 7 (left: 7 7 7)\n7 * 7 = 49 (left: 7 49)\n",
                    "10 - 3 = 7 (left: 7 7 7)\n7 - 7 = 0 (left: 0 7)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 * 7 = 49 (left: 10 49)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 - 7 = 0 (left: 0 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n4 + 7 = 11 (left: 10 11)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n7 - 4 = 3 (left: 3 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 7 7 10",
                "ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 * 7 = 49 (left: 10 49)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 - 7 = 0 (left: 0 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n4 + 7 = 11 (left: 10 11)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n7 - 4 = 3 (left: 3 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n14 * 10 = 140 (left: 140)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 * 7 = 49 (left: 10 49)\n10 * 49 = 490 (left: 490)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 * 7 = 49 (left: 10 49)\n49 / 10 = 4.9 (left: 4.9 49)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 * 7 = 49 (left: 10 49)\n49 - 10 = 39 (left: 10 39)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 - 10 = -9 (left: -9)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 / 10 = 0.1 (left: 0.1)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 - 7 = 0 (left: 0 10)\n0 + 10 = 10 (left: 10)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 - 7 = 0 (left: 0 10)\n10 - 0 = 10 (left: 10)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 - 7 = 0 (left: 0 10)\n10 / 0 is undefined\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 - 7 = 0 (left: 0 10)\n10 * 0 = 0 (left: 0)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n4 + 7 = 11 (left: 10 11)\n10 + 11 = 21 (left: 21)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n4 + 7 = 11 (left: 10 11)\n11 - 10 = 1 (left: 1 11)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n7 - 4 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n7 - 4 = 3 (left: 3 10)\n10 - 3 = 7 (left: 7)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n7 - 4 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n7 - 4 = 3 (left: 3 10)\n10 / 3 = 3 (left: 3)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n10 / 6 = 1.67 (left: 1.67 10)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\nInput: 3 3 3 3\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\nPossible next steps:\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 / 3 = 1 (left: 1 3 3 3)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    100,
                    0
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 - 7 = 0 (left: 0 10)\n0 + 10 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 7 7 10",
                "ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 - 7 = 0 (left: 0 10)\n0 + 10 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((3 + 7) + 7) + 10 = 24\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 + 7) + 7) + 10 = 24\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 3 3 6)\n3 + 3 = 6 (left: 3 6 6)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 3 3 6)\n3 / 3 = 1 (left: 1 3 6)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 3 3 6)\n3 * 3 = 9 (left: 3 6 9)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 3 3 6)\n3 - 3 = 0 (left: 0 3 6)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\nInput: 1 3 4 6\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n3 + 4 = 7 (left: 1 7 6)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n1 * 3 = 3 (left: 3 4 6)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n4 - 3 = 1 (left: 1 3 6)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n6 - 3 = 3 (left: 1 3 4)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n11 + 1 = 12 (left: 1 12)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n11 - 1 = 10 (left: 1 10)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n11 * 1 = 11 (left: 1 11)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 / 7 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n11 / 1 = 11 (left: 1 11)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 - 7 = 0 (left: 0 10)\n0 + 10 = 10 (left: 10)\n5 * 2 = 10 (left: 5 2)\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 - 7 = 0 (left: 0 10)\n0 + 10 = 10 (left: 10)\n10 / 5 = 2 (left: 2 5)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((3 + 7) + 7) + 10 = 24\n",
                    "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 + 7) + 7) + 10 = 24\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 3 3 6)\n3 + 3 = 6 (left: 3 6 6)\n"
                ]
            }
        ],
        "idx": 834,
        "ys": [
            "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((3 + 7) + 7) + 10 = 24\n",
            "3 + 7 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 + 7) + 7) + 10 = 24\n",
            "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
            "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
            "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
            "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
            "7 - 3 = 4 (left: 4 7 10)\n10 - 4 = 6 (left: 6 10)\n3 + 3 = 6 (left: 3 3 3 6)\n3 + 3 = 6 (left: 3 6 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 5770,
            "prompt_tokens": 19151,
            "cost": 0.040266500000000004
        },
        "time_spent": 23.332805156707764
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 9 11 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 12 11 12)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n",
                    "11 + 3 = 14 (left: 3 12 14)\n",
                    "3 * 9 = 27 (left: 11 12 27)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n",
                    "9 - 3 = 6 (left: 6 11 12)\n",
                    "11 - 3 = 8 (left: 8 9 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 9 = 12 (left: 12 11 12)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n",
                    "11 + 3 = 14 (left: 3 12 14)\n",
                    "3 * 9 = 27 (left: 11 12 27)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n",
                    "9 - 3 = 6 (left: 6 11 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 9 11 12",
                "ys": [
                    "3 + 9 = 12 (left: 12 11 12)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n",
                    "11 + 3 = 14 (left: 3 12 14)\n",
                    "3 * 9 = 27 (left: 11 12 27)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n",
                    "9 - 3 = 6 (left: 6 11 12)\n"
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 - 11 = 1 (left: 1 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 / 11 = 1 (left: 1 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 * 11 = 132 (left: 132)\n",
                    "3 + 9 = 12 (left: 12 11 12)\nInput: 4 7 6 9\n",
                    "3 + 9 = 12 (left: 12 11 12)\nPossible next steps:\n",
                    "3 + 9 = 12 (left: 12 11 12)\n4 + 7 = 11 (left: 11 6 9)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n4 * 7 = 28 (left: 28 6 9)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n7 - 4 = 3 (left: 3 6 9)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n7 / 4 = 1 (left: 1 6 9)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 + 6 = 15 (left: 4 15)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 - 6 = 3 (left: 4 3 9)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 / 6 = 1 (left: 4 1 9)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 * 6 = 54 (left: 4 54)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n3 + 11 = 14 (left: 12 14)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n3 * 11 = 33 (left: 12 33)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n11 - 3 = 8 (left: 8 12)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n11 / 3 = 3 (left: 3 12)\n",
                    "11 + 3 = 14 (left: 3 12 14)\n3 + 12 = 15 (left: 14 15)\n",
                    "11 + 3 = 14 (left: 3 12 14)\n12 - 3 = 9 (left: 9 14)\n",
                    "11 + 3 = 14 (left: 3 12 14)\n3 * 12 = 36 (left: 14 36)\n",
                    "11 + 3 = 14 (left: 3 12 14)\n12 / 3 = 4 (left: 4 14)\n",
                    "11 + 3 = 14 (left: 3 12 14)\n14 - 3 = 11 (left: 11 14)\n",
                    "3 * 9 = 27 (left: 11 12 27)\n11 + 12 = 23 (left: 23 27)\n",
                    "3 * 9 = 27 (left: 11 12 27)\n11 * 12 = 132 (left: 132 27)\n",
                    "3 * 9 = 27 (left: 11 12 27)\n12 * 11 = 132 (left: 132 27)\n",
                    "3 * 9 = 27 (left: 11 12 27)\n27 - 11 = 16 (left: 16 12)\n",
                    "3 * 9 = 27 (left: 11 12 27)\n27 - 12 = 15 (left: 11 15)\n",
                    "3 * 9 = 27 (left: 11 12 27)\n27 / 11 = 2 (left: 2 12 27)\n",
                    "3 * 9 = 27 (left: 11 12 27)\n27 / 12 = 2 (left: 11 2 27)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n6 + 9 = 15 (left: 11 15)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n9 - 6 = 3 (left: 3 11)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n9 * 6 = 54 (left: 11 54)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n9 / 6 = 1.5 (left: 1.5 11)\n",
                    "9 - 3 = 6 (left: 6 9 11)\nInput: 4 2 3 1\n",
                    "9 - 3 = 6 (left: 6 9 11)\nPossible next steps:\n",
                    "9 - 3 = 6 (left: 6 9 11)\n4 + 2 = 6 (left: 3 1 6)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n2 + 3 = 5 (left: 4 1 5)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n3 * 1 = 3 (left: 4 2 3)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n3 - 1 = 2 (left: 4 2 2)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n4 * 2 = 8 (left: 3 1 8)\n",
                    "9 - 3 = 6 (left: 6 9 11)\n4 / 2 = 2 (left: 3 2 2)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n8 * 9 = 72 (left: 72 11)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n9 + 11 = 20 (left: 8 20)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n11 - 9 = 2 (left: 8 2)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n8 * 11 = 88 (left: 88)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n11 / 8 = 1.375 (left: 1.375 11)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n9 * 11 = 99 (left: 8 99)\n",
                    "11 - 3 = 8 (left: 8 9 11)\nInput: 5 5 2 10\n",
                    "11 - 3 = 8 (left: 8 9 11)\nPossible next steps:\n",
                    "11 - 3 = 8 (left: 8 9 11)\n5 + 5 = 10 (left: 10 2 10)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n5 * 2 = 10 (left: 10 10 10)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n5 + 2 = 7 (left: 7 5 10)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n5 + 10 = 15 (left: 5 15 10)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n5 * 10 = 50 (left: 2 50 10)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n2 + 10 = 12 (left: 5 5 12)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n2 * 5 = 10 (left: 10 5 10)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n10 - 5 = 5 (left: 5 5 10)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n10 / 5 = 2 (left: 2 5 10)\n",
                    "9 - 3 = 6 (left: 6 11 12)\n6 + 11 = 17 (left: 12 17)\n",
                    "9 - 3 = 6 (left: 6 11 12)\n11 + 6 = 17 (left: 12 17)\n",
                    "9 - 3 = 6 (left: 6 11 12)\n6 * 11 = 66 (left: 12 66)\n",
                    "9 - 3 = 6 (left: 6 11 12)\n11 * 6 = 66 (left: 12 66)\n",
                    "9 - 3 = 6 (left: 6 11 12)\n11 - 6 = 5 (left: 5 12)\n",
                    "9 - 3 = 6 (left: 6 11 12)\n6 - 11 = -5 (left: -5 12)\n",
                    "9 - 3 = 6 (left: 6 11 12)\n11 / 6 = 1.83 (left: 1.83 12)\n",
                    "9 - 3 = 6 (left: 6 11 12)\n6 / 11 = 0.55 (left: 0.55 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 - 11 = 1 (left: 1 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 / 11 = 1 (left: 1 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 + 6 = 15 (left: 4 15)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 * 6 = 54 (left: 4 54)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n3 + 11 = 14 (left: 12 14)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n3 * 11 = 33 (left: 12 33)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 9 11 12",
                "ys": [
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 - 11 = 1 (left: 1 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 / 11 = 1 (left: 1 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 + 6 = 15 (left: 4 15)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 * 6 = 54 (left: 4 54)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n3 + 11 = 14 (left: 12 14)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n3 * 11 = 33 (left: 12 33)\n"
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 - 12 = 11 (left: 11)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 * 12 = 276 (left: 276)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 / 12 = 1.91 (left: 1.91)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 - 11 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 - 11 = 1 (left: 1 12)\n12 / 1 = 12 (left: 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 - 11 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 / 11 = 1 (left: 1 12)\n12 - 1 = 11 (left: 1 11)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 / 11 = 1 (left: 1 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 / 11 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 / 11 = 1 (left: 1 12)\n12 + 1 = 13 (left: 1 13)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 + 6 = 15 (left: 4 15)\n4 + 15 = 19 (left: 19)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 + 6 = 15 (left: 4 15)\n15 - 4 = 11 (left: 11)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 + 6 = 15 (left: 4 15)\n4 * 15 = 60 (left: 60)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 + 6 = 15 (left: 4 15)\n15 / 4 = 3.75 (left: 3.75)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 * 6 = 54 (left: 4 54)\n4 * 54 = 216 (left: 54 216)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 * 6 = 54 (left: 4 54)\n54 / 4 = 13.5 (left: 13.5 54)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 * 6 = 54 (left: 4 54)\n54 - 4 = 50 (left: 4 50)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n3 + 11 = 14 (left: 12 14)\n12 + 14 = 26 (left: 26)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n3 + 11 = 14 (left: 12 14)\n12 - 14 = -2 (left: -2)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n3 + 11 = 14 (left: 12 14)\n12 * 14 = 168 (left: 168)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n3 + 11 = 14 (left: 12 14)\n12 / 14 = 0.8571428571428571 (left: 0.8571428571428571)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n3 * 11 = 33 (left: 12 33)\n12 + 33 = 45 (left: 45)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n3 * 11 = 33 (left: 12 33)\n12 - 33 = -21 (left: -21)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n3 * 11 = 33 (left: 12 33)\n12 * 33 = 396 (left: 396)\n",
                    "9 / 3 = 3 (left: 3 11 12)\n3 * 11 = 33 (left: 12 33)\n12 / 33 = 0.36 (left: 0.36)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 - 12 = 11 (left: 11)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 - 11 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 - 11 = 1 (left: 1 12)\n12 / 1 = 12 (left: 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 - 11 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 / 11 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 + 6 = 15 (left: 4 15)\n4 + 15 = 19 (left: 19)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 9 11 12",
                "ys": [
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 - 12 = 11 (left: 11)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 - 11 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 - 11 = 1 (left: 1 12)\n12 / 1 = 12 (left: 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 - 11 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 / 11 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 + 6 = 15 (left: 4 15)\n4 + 15 = 19 (left: 19)\n"
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\nInput: 4 6 6 8\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\nPossible next steps:\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n6 / 4 = 1 (left: 1 6 8)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n8 + 4 = 12 (left: 6 6 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n4 * 6 = 24 (left: 6 8 24)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n6 - 4 = 2 (left: 2 6 8)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n8 - 4 = 4 (left: 4 6 6)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n6 / 4 = 1 (left: 1 6 6)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n6 - 4 = 2 (left: 2 6 6)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 - 12 = 11 (left: 11)\nNo possible next steps.\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 - 11 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 + 1 = 13 (left: 1 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 - 11 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 - 1 = 11 (left: 1 11)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 - 11 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 - 11 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 * 1 = 12 (left: 1 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 - 11 = 1 (left: 1 12)\n12 / 1 = 12 (left: 12)\nThere are no possible next steps.\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 - 11 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\nThere are no possible next steps.\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 / 11 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\nNo possible next steps.\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 + 6 = 15 (left: 4 15)\n4 + 15 = 19 (left: 19)\nInput: 19\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 + 6 = 15 (left: 4 15)\n4 + 15 = 19 (left: 19)\nPossible next steps:\n",
                    "3 + 9 = 12 (left: 12 11 12)\n9 + 6 = 15 (left: 4 15)\n4 + 15 = 19 (left: 19)\nN/A\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\nInput: 4 6 6 8\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\nPossible next steps:\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n4 + 6 = 10 (left: 6 8 10)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n6 / 4 = 1 (left: 1 6 8)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n8 + 4 = 12 (left: 6 6 12)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n4 * 6 = 24 (left: 6 8 24)\n",
                    "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n6 - 4 = 2 (left: 2 6 8)\n"
                ]
            }
        ],
        "idx": 835,
        "ys": [
            "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\nInput: 4 6 6 8\n",
            "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\nPossible next steps:\n",
            "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n4 + 6 = 10 (left: 6 8 10)\n",
            "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n6 / 4 = 1 (left: 1 6 8)\n",
            "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n8 + 4 = 12 (left: 6 6 12)\n",
            "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n4 * 6 = 24 (left: 6 8 24)\n",
            "3 + 9 = 12 (left: 12 11 12)\n12 + 11 = 23 (left: 23 12)\n23 + 12 = 35 (left: 35)\n6 - 4 = 2 (left: 2 6 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 7595,
            "prompt_tokens": 24193,
            "cost": 0.051479500000000004
        },
        "time_spent": 39.71326422691345
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 4 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 - 2 = 2 (left: 2 4 7)  \n",
                    "4 + 2 = 6 (left: 4 6 7)  \n",
                    "4 / 2 = 2 (left: 2 4 7)  \n",
                    "7 - 4 = 3 (left: 2 4 3)  \n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "7 - 4 = 3 (left: 2 4 3)  \n",
                    "4 - 2 = 2 (left: 2 4 7)  \n",
                    "4 + 2 = 6 (left: 4 6 7)  \n",
                    "4 / 2 = 2 (left: 2 4 7)  \n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 4 7",
                "ys": [
                    "7 - 4 = 3 (left: 2 4 3)  \n",
                    "4 - 2 = 2 (left: 2 4 7)  \n",
                    "4 + 2 = 6 (left: 4 6 7)  \n",
                    "4 / 2 = 2 (left: 2 4 7)  \n"
                ],
                "new_ys": [
                    "7 - 4 = 3 (left: 2 4 3)  \n1. 2 + 4 = 6 (left: 3 6)\n",
                    "7 - 4 = 3 (left: 2 4 3)  \n2. 4 - 2 = 2 (left: 2 3)\n",
                    "7 - 4 = 3 (left: 2 4 3)  \n3. 2 * 4 = 8 (left: 3 8)\n",
                    "7 - 4 = 3 (left: 2 4 3)  \n4. 4 / 2 = 2 (left: 2 3)\n",
                    "7 - 4 = 3 (left: 2 4 3)  \n5. 3 + 2 = 5 (left: 5)\n",
                    "7 - 4 = 3 (left: 2 4 3)  \n6. 3 - 2 = 1 (left: 1)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n4 + 2 = 6 (left: 6 7)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 4 = 3 (left: 2 3)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n4 - 2 = 2 (left: 2 7)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 / 2 = 3.5 (left: 2 3.5)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 6 = 10 (left: 7 10)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n6 + 7 = 13 (left: 4 13)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 7 = 11 (left: 6 11)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 - 6 = -2 (left: -2 7)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n6 - 4 = 2 (left: 2 7)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n7 - 4 = 3 (left: 3 6)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n7 - 6 = 1 (left: 1 7)\n",
                    "4 / 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n",
                    "4 / 2 = 2 (left: 2 4 7)  \n4 * 2 = 8 (left: 8 7)\n",
                    "4 / 2 = 2 (left: 2 4 7)  \n7 - 4 = 3 (left: 2 3)\n",
                    "4 / 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n4 + 2 = 6 (left: 6 7)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n4 - 2 = 2 (left: 2 7)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 6 = 10 (left: 7 10)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n6 + 7 = 13 (left: 4 13)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 7 = 11 (left: 6 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 4 7",
                "ys": [
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n4 + 2 = 6 (left: 6 7)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n4 - 2 = 2 (left: 2 7)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 6 = 10 (left: 7 10)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n6 + 7 = 13 (left: 4 13)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 7 = 11 (left: 6 11)\n"
                ],
                "new_ys": [
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n7 - 6 = 1 (left: 1)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n6 * 7 = 42 (left: 42)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n7 / 6 = 1.17 (left: 1.17)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n4 + 2 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n4 + 2 = 6 (left: 6 7)\n6 - 7 = -1 (left: -1)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n4 + 2 = 6 (left: 6 7)\n6 * 7 = 42 (left: 42)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n4 + 2 = 6 (left: 6 7)\n6 / 7 = 0.857 (left: 0.857)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n4 - 2 = 2 (left: 2 7)\n3.5 + 3.5 = 7 (left: 2 7)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n4 - 2 = 2 (left: 2 7)\n7 - 2 = 5 (left: 5 7)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5 9)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n5 - 4 = 1 (left: 1 5)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n4 * 5 = 20 (left: 5 20)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n5 / 4 = 1.25 (left: 1.25 5)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 6 = 10 (left: 7 10)\n7 + 10 = 17 (left: 10 17)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 6 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 6 = 10 (left: 7 10)\n7 * 10 = 70 (left: 10 70)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 6 = 10 (left: 7 10)\n10 / 7 = 1.43 (left: 1.43 10)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n6 + 7 = 13 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n6 + 7 = 13 (left: 4 13)\n13 - 4 = 9 (left: 9)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n6 + 7 = 13 (left: 4 13)\n4 * 13 = 52 (left: 52)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n6 + 7 = 13 (left: 4 13)\n13 / 4 = 3 (left: 3)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 7 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 7 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 7 = 11 (left: 6 11)\n11 / 6 = 1 (left: 1 11)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 7 = 11 (left: 6 11)\n6 - 11 = -5 (left: 6 -5)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n4 + 2 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n6 + 7 = 13 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 7 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n7 - 6 = 1 (left: 1)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n6 * 7 = 42 (left: 42)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 4 7",
                "ys": [
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n4 + 2 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n6 + 7 = 13 (left: 4 13)\n4 + 13 = 17 (left: 17)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 7 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n7 - 6 = 1 (left: 1)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n6 * 7 = 42 (left: 42)\n"
                ],
                "new_ys": [
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\nThere are no possible next steps.\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n4 + 2 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n13 is the only number, the game is completed.\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n\n4 + 5 = 9 (left: 5 9)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n\n4 * 5 = 20 (left: 5 20)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n\n5 / 4 = 1.25 (left: 1.25 4)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n\n5 - 4 = 1 (left: 1 4)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n6 + 7 = 13 (left: 4 13)\n4 + 13 = 17 (left: 17)\nInput: 17\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n6 + 7 = 13 (left: 4 13)\n4 + 13 = 17 (left: 17)\nPossible next steps:\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n6 + 7 = 13 (left: 4 13)\n4 + 13 = 17 (left: 17)\nNo possible next steps.\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 7 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\nInput: 3 3 3 3\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 7 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\nPossible next steps:\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 7 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 7 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 7 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n4 + 7 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n7 - 6 = 1 (left: 1)\nInput: 3 3 3 3\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n7 - 6 = 1 (left: 1)\nPossible next steps:\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n7 - 6 = 1 (left: 1)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n7 - 6 = 1 (left: 1)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n7 - 6 = 1 (left: 1)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n7 - 6 = 1 (left: 1)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n6 * 7 = 42 (left: 42)\n1 + 42 = 43 (left: 42)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n6 * 7 = 42 (left: 42)\n42 / 1 = 42 (left: 1)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n6 * 7 = 42 (left: 42)\n42 - 1 = 41 (left: 1)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n6 * 7 = 42 (left: 42)\n42 * 1 = 42 (left: 1)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\nThere are no possible next steps.\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n4 + 2 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n13 is the only number, the game is completed.\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n\n4 + 5 = 9 (left: 5 9)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n\n4 * 5 = 20 (left: 5 20)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n\n5 / 4 = 1.25 (left: 1.25 4)\n",
                    "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n\n5 - 4 = 1 (left: 1 4)\n",
                    "4 + 2 = 6 (left: 4 6 7)  \n6 + 7 = 13 (left: 4 13)\n4 + 13 = 17 (left: 17)\nInput: 17\n"
                ]
            }
        ],
        "idx": 836,
        "ys": [
            "4 - 2 = 2 (left: 2 4 7)  \n2 + 4 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\nThere are no possible next steps.\n",
            "4 - 2 = 2 (left: 2 4 7)  \n4 + 2 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n13 is the only number, the game is completed.\n",
            "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n\n4 + 5 = 9 (left: 5 9)\n",
            "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n\n4 * 5 = 20 (left: 5 20)\n",
            "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n\n5 / 4 = 1.25 (left: 1.25 4)\n",
            "4 - 2 = 2 (left: 2 4 7)  \n7 - 2 = 5 (left: 4 5)\n\n5 - 4 = 1 (left: 1 4)\n",
            "4 + 2 = 6 (left: 4 6 7)  \n6 + 7 = 13 (left: 4 13)\n4 + 13 = 17 (left: 17)\nInput: 17\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 8728,
            "prompt_tokens": 28544,
            "cost": 0.060272
        },
        "time_spent": 26.83054494857788
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n",
                    "4 / 3 = 1 (left: 1 5 9)\n",
                    "9 - 3 = 6 (left: 4 5 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n",
                    "4 / 3 = 1 (left: 1 5 9)\n",
                    "9 - 3 = 6 (left: 4 5 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 5 9",
                "ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n",
                    "4 / 3 = 1 (left: 1 5 9)\n",
                    "9 - 3 = 6 (left: 4 5 6)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 + 9 = 16 (left: 5 16)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 - 7 = -2 (left: -2 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 * 9 = 63 (left: 5 63)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 / 9 = 0.7777777777777778 (left: 5 0.7777777777777778)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n5 + 12 = 17 (left: 9 17)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n5 * 12 = 60 (left: 9 60)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n12 - 5 = 7 (left: 7 9)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n12 / 5 = 2 (left: 2 9)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n9 + 5 = 14 (left: 14)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n9 * 5 = 45 (left: 45)\n",
                    "3 * 4 = 12 (left: 5 12 9)\n9 - 5 = 4 (left: 4 9)\n",
                    "4 / 3 = 1 (left: 1 5 9)\n1 + 5 = 6 (left: 6 9)\n",
                    "4 / 3 = 1 (left: 1 5 9)\n5 * 1 = 5 (left: 5 9)\n",
                    "4 / 3 = 1 (left: 1 5 9)\n9 - 1 = 8 (left: 8 5)\n",
                    "4 / 3 = 1 (left: 1 5 9)\n9 / 1 = 9 (left: 9 5)\n",
                    "9 - 3 = 6 (left: 4 5 6)\n4 + 5 = 9 (left: 6 9)\n",
                    "9 - 3 = 6 (left: 4 5 6)\n5 + 6 = 11 (left: 4 11)\n",
                    "9 - 3 = 6 (left: 4 5 6)\n4 * 5 = 20 (left: 6 20)\n",
                    "9 - 3 = 6 (left: 4 5 6)\n5 * 6 = 30 (left: 4 30)\n",
                    "9 - 3 = 6 (left: 4 5 6)\n4 / 5 = 0.8 (left: 0.8 6)\n",
                    "9 - 3 = 6 (left: 4 5 6)\n5 / 6 = 0.83 (left: 4 0.83)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 + 9 = 16 (left: 5 16)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 - 7 = -2 (left: -2 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 * 9 = 63 (left: 5 63)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 5 9",
                "ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 + 9 = 16 (left: 5 16)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 - 7 = -2 (left: -2 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 * 9 = 63 (left: 5 63)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 / 9 = 1 (left: 1 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 - 12 = -3 (left: -3 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 + 9 = 16 (left: 5 16)\n5 * 16 = 80 (left: 80)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 + 9 = 16 (left: 5 16)\n16 / 5 = 3.2 (left: 3.2)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 - 7 = -2 (left: -2 9)\n9 - (-2) = 11 (left: 9 11)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 - 7 = -2 (left: -2 9)\n9 + (-2) = 7 (left: 7 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 - 7 = -2 (left: -2 9)\n9 * (-2) = -18 (left: -18 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 - 7 = -2 (left: -2 9)\n9 / (-2) = -4.5 (left: -4.5 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n2 + 9 = 11 (left: 9 11)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 - 5 = 2 (left: 2 9)\n9 / 2 = 4 (left: 4 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n9 * 35 = 315 (left: 315)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 / 9 = 3 (left: 3 35)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 * 7 = 35 (left: 9 35)\n35 - 9 = 26 (left: 9 26)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 * 9 = 63 (left: 5 63)\n5 * 63 = 315 (left: 315)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 * 9 = 63 (left: 5 63)\n63 / 5 = 12.6 (left: 12.6 63)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 * 9 = 63 (left: 5 63)\n63 - 5 = 58 (left: 58 5)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 * 9 = 63 (left: 5 63)\n63 + 5 = 68 (left: 68 5)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n7 - 4 = 3 (left: 3)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 / 9 = 1 (left: 1 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 - 12 = -3 (left: -3 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 + 9 = 16 (left: 5 16)\n5 * 16 = 80 (left: 80)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 + 9 = 16 (left: 5 16)\n16 / 5 = 3.2 (left: 3.2)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 5 9",
                "ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 / 9 = 1 (left: 1 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 - 12 = -3 (left: -3 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 + 9 = 16 (left: 5 16)\n5 * 16 = 80 (left: 80)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 + 9 = 16 (left: 5 16)\n16 / 5 = 3.2 (left: 3.2)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 3 3 3 3\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 4 5 5 6\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n4 + 5 = 9 (left: 5 5 6)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n5 + 6 = 11 (left: 4 5 11)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n6 - 4 = 2 (left: 2 5 5)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n5 - 4 = 1 (left: 1 5 6)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n6 - 5 = 1 (left: 4 1 5)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n4 * 6 = 24 (left: 5 5 24)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n6 / 5 = 1 (left: 4 1 5)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n5 / 4 = 1 (left: 4 1 6)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nInput: 11\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n11 + 1 = 12 (left: 1 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n11 - 1 = 10 (left: 1 10)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n3 + 12 = 15 (left: 15)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 - 9 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 / 9 = 1 (left: 1 12)\n1 + 12 = 13 (left: 13)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 / 9 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 / 9 = 1 (left: 1 12)\n12 / 1 = 12 (left: 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n12 / 9 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 - 12 = -3 (left: -3 12)\n12 + -3 = 9 (left: -3 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 - 12 = -3 (left: -3 12)\n-3 - 12 = -15 (left: -15 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 - 12 = -3 (left: -3 12)\n-3 * 12 = -36 (left: -36 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 - 12 = -3 (left: -3 12)\n-3 / 12 = 0.25 (left: 0.25 12)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 + 9 = 16 (left: 5 16)\n5 * 16 = 80 (left: 80)\nThere are no possible next steps for the input 80.\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 + 9 = 16 (left: 5 16)\n16 / 5 = 3.2 (left: 3.2)\n3.2 * 0 = 0 (left: 0 3.2)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 + 9 = 16 (left: 5 16)\n16 / 5 = 3.2 (left: 3.2)\n3.2 + 0 = 3.2 (left: 0 3.2)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 + 9 = 16 (left: 5 16)\n16 / 5 = 3.2 (left: 3.2)\n3.2 - 0 = 3.2 (left: 0 3.2)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n7 + 9 = 16 (left: 5 16)\n16 / 5 = 3.2 (left: 3.2)\n3.2 / 1 = 3.2 (left: 1 3.2)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 3 3 3 3\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 4 5 5 6\n"
                ]
            }
        ],
        "idx": 837,
        "ys": [
            "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 3 3 3 3\n",
            "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
            "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n",
            "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 + 3 = 6 (left: 3 6 3)\n",
            "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 / 3 = 1 (left: 1 3 3)\n",
            "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n3 - 3 = 0 (left: 0 3 3)\n",
            "3 + 4 = 7 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 4 5 5 6\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 10035,
            "prompt_tokens": 32901,
            "cost": 0.06942150000000001
        },
        "time_spent": 28.230185985565186
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 7 9 12)\n",
                    "5 - 4 = 1 (left: 1 7 12)\n",
                    "7 - 5 = 2 (left: 2 7 12)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "12 - 7 = 5 (left: 5 7 12)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n",
                    "5 - 4 = 1 (left: 1 7 12)\n",
                    "7 - 5 = 2 (left: 2 7 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 7 12",
                "ys": [
                    "12 - 7 = 5 (left: 5 7 12)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n",
                    "5 - 4 = 1 (left: 1 7 12)\n",
                    "7 - 5 = 2 (left: 2 7 12)\n"
                ],
                "new_ys": [
                    "12 - 7 = 5 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n7 / 5 = 1 (left: 1 12)\n",
                    "12 - 7 = 5 (left: 5 7 12)\nInput: 3 3 3 3\n",
                    "12 - 7 = 5 (left: 5 7 12)\nPossible next steps:\n",
                    "12 - 7 = 5 (left: 5 7 12)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 16 12)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 + 12 = 21 (left: 7 21)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 * 9 = 63 (left: 63 12)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n12 - 7 = 5 (left: 7 5)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 / 3 = 3 (left: 7 3)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 - 3 = 4 (left: 4 12)\n",
                    "5 - 4 = 1 (left: 1 7 12)\n1 + 7 = 8 (left: 8 12)\n",
                    "5 - 4 = 1 (left: 1 7 12)\n7 * 1 = 7 (left: 7 12)\n",
                    "5 - 4 = 1 (left: 1 7 12)\n12 - 7 = 5 (left: 5 12)\n",
                    "5 - 4 = 1 (left: 1 7 12)\n12 / 1 = 12 (left: 12)\n",
                    "5 - 4 = 1 (left: 1 7 12)\n7 - 1 = 6 (left: 6 12)\n",
                    "7 - 5 = 2 (left: 2 7 12)\n2 * 7 = 14 (left: 12 14)\n",
                    "7 - 5 = 2 (left: 2 7 12)\n7 + 2 = 9 (left: 9 12)\n",
                    "7 - 5 = 2 (left: 2 7 12)\n12 - 2 = 10 (left: 10 12)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "12 - 7 = 5 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n7 / 5 = 1 (left: 1 12)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 16 12)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 + 12 = 21 (left: 7 21)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 7 12",
                "ys": [
                    "12 - 7 = 5 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n7 / 5 = 1 (left: 1 12)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 16 12)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 + 12 = 21 (left: 7 21)\n"
                ],
                "new_ys": [
                    "12 - 7 = 5 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n12 + 35 = 47 (left: 47)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n35 - 12 = 23 (left: 23)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n12 * 35 = 420 (left: 420)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n35 / 12 = 2.92 (left: 2.92)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\nInput: 3 3 8 8\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\nPossible next steps:\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n3 + 8 = 11 (left: 3 11 8)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n8 - 3 = 5 (left: 3 8 5)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n3 * 3 = 9 (left: 9 8 8)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n3 * 8 = 24 (left: 3 8 24)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n8 * 3 = 24 (left: 3 24 8)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n8 * 8 = 64 (left: 3 8 64)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n7 / 5 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n7 / 5 = 1 (left: 1 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 16 12)\n16 - 12 = 4 (left: 4)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 16 12)\n16 * 12 = 192 (left: 192)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 16 12)\n16 / 12 = 1.33 (left: 1.33)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 + 12 = 21 (left: 7 21)\n7 * 3 = 21 (left: 7 21)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 + 12 = 21 (left: 7 21)\n21 / 7 = 3 (left: 3 21)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 + 12 = 21 (left: 7 21)\n21 - 7 = 14 (left: 7 14)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    100,
                    50,
                    50,
                    100,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 - 7 = 5 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n35 - 12 = 23 (left: 23)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n7 / 5 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 7 12",
                "ys": [
                    "12 - 7 = 5 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n35 - 12 = 23 (left: 23)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n7 / 5 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "12 - 7 = 5 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: 12 + (12 + (12 - 7)) = 24\n",
                    "12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 - 5) * (12 - 2) = 24\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 + 5) * (7 - 2) = 24\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n2 + 8 = 10 (left: 8 10)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 * 1 = 10 (left: 1 10)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 + 0 = 10 (left: 0 10)\n",
                    "12 - 7 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 12 35)\n35 - 12 = 23 (left: 23)\nThere are no possible next steps for the input 23.\n",
                    "12 - 7 = 5 (left: 5 7 12)\n7 / 5 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\nThere are no possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 - 7 = 5 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: 12 + (12 + (12 - 7)) = 24\n",
                    "12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 - 5) * (12 - 2) = 24\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 + 5) * (7 - 2) = 24\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n2 + 8 = 10 (left: 8 10)\n",
                    "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 * 1 = 10 (left: 1 10)\n"
                ]
            }
        ],
        "idx": 838,
        "ys": [
            "12 - 7 = 5 (left: 5 7 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: 12 + (12 + (12 - 7)) = 24\n",
            "12 - 7 = 5 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 - 5) * (12 - 2) = 24\n",
            "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (4 + 5) * (7 - 2) = 24\n",
            "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nInput: 14\n",
            "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nPossible next steps:\n",
            "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n2 + 8 = 10 (left: 8 10)\n",
            "4 + 5 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n10 * 1 = 10 (left: 1 10)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 11035,
            "prompt_tokens": 38291,
            "cost": 0.0795065
        },
        "time_spent": 23.847168684005737
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 7 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 + 2 = 9 (left: 9 9 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n",
                    "9 + 2 = 11 (left: 7 9 11)\n",
                    "9 - 2 = 7 (left: 7 7 13)\n",
                    "9 / 2 = 4 (left: 4 9 13)\n",
                    "13 - 9 = 4 (left: 2 7 4)\n",
                    "13 - 2 = 11 (left: 7 9 11)\n",
                    "13 - 7 = 6 (left: 6 7 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "7 + 2 = 9 (left: 9 9 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n",
                    "9 + 2 = 11 (left: 7 9 11)\n",
                    "9 - 2 = 7 (left: 7 7 13)\n",
                    "9 / 2 = 4 (left: 4 9 13)\n",
                    "13 - 9 = 4 (left: 2 7 4)\n",
                    "13 - 2 = 11 (left: 7 9 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 7 9 13",
                "ys": [
                    "7 + 2 = 9 (left: 9 9 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n",
                    "9 + 2 = 11 (left: 7 9 11)\n",
                    "9 - 2 = 7 (left: 7 7 13)\n",
                    "9 / 2 = 4 (left: 4 9 13)\n",
                    "13 - 9 = 4 (left: 2 7 4)\n",
                    "13 - 2 = 11 (left: 7 9 11)\n"
                ],
                "new_ys": [
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 * 9 = 81 (left: 13 81)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 / 9 = 1 (left: 1 13)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 * 7 = 35 (left: 13 35)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n7 - 5 = 2 (left: 2 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n7 / 5 = 1.4 (left: 1.4 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\nInput: 2 3 5 7\n",
                    "7 - 2 = 5 (left: 5 7 13)\nPossible next steps:\n",
                    "7 - 2 = 5 (left: 5 7 13)\n2 + 3 = 5 (left: 5 5 7)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n3 * 2 = 6 (left: 6 5 7)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 2 = 7 (left: 3 7 7)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n2 * 5 = 10 (left: 3 10 7)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n7 - 2 = 5 (left: 3 5 7)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n7 - 5 = 2 (left: 2 5 7)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n7 / 2 = 3.5 (left: 3.5 5 7)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n3 * 7 = 21 (left: 5 21 7)\n",
                    "9 + 2 = 11 (left: 7 9 11)\n7 + 9 = 16 (left: 16 11)\n",
                    "9 + 2 = 11 (left: 7 9 11)\n7 * 9 = 63 (left: 63 11)\n",
                    "9 + 2 = 11 (left: 7 9 11)\n9 + 11 = 20 (left: 7 20)\n",
                    "9 + 2 = 11 (left: 7 9 11)\n9 * 11 = 99 (left: 7 99)\n",
                    "9 + 2 = 11 (left: 7 9 11)\n11 - 7 = 4 (left: 4 11)\n",
                    "9 + 2 = 11 (left: 7 9 11)\n11 / 7 = 1 (left: 1 11)\n",
                    "9 - 2 = 7 (left: 7 7 13)\n7 + 7 = 14 (left: 14 13)\n",
                    "9 - 2 = 7 (left: 7 7 13)\n7 - 7 = 0 (left: 0 13)\n",
                    "9 - 2 = 7 (left: 7 7 13)\n7 * 7 = 49 (left: 49 13)\n",
                    "9 - 2 = 7 (left: 7 7 13)\n7 / 7 = 1 (left: 1 13)\n",
                    "9 - 2 = 7 (left: 7 7 13)\n7 - 13 = -6 (left: 7 -6)\n",
                    "9 - 2 = 7 (left: 7 7 13)\n7 + 13 = 20 (left: 20 7)\n",
                    "9 - 2 = 7 (left: 7 7 13)\n7 * 13 = 91 (left: 91 7)\n",
                    "9 / 2 = 4 (left: 4 9 13)\n4 + 9 = 13 (left: 13)\n",
                    "9 / 2 = 4 (left: 4 9 13)\n9 - 4 = 5 (left: 5 13)\n",
                    "13 - 9 = 4 (left: 2 7 4)\n2 + 7 = 9 (left: 4 9)\n",
                    "13 - 9 = 4 (left: 2 7 4)\n7 - 2 = 5 (left: 4 5)\n",
                    "13 - 9 = 4 (left: 2 7 4)\n2 * 7 = 14 (left: 4 14)\n",
                    "13 - 2 = 11 (left: 7 9 11)\n7 + 9 = 16 (left: 16 11)\n",
                    "13 - 2 = 11 (left: 7 9 11)\n9 + 11 = 20 (left: 7 20)\n",
                    "13 - 2 = 11 (left: 7 9 11)\n7 * 9 = 63 (left: 63 11)\n",
                    "13 - 2 = 11 (left: 7 9 11)\n9 * 11 = 99 (left: 7 99)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 / 9 = 1 (left: 1 13)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 * 7 = 35 (left: 13 35)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n7 - 5 = 2 (left: 2 13)\n",
                    "9 + 2 = 11 (left: 7 9 11)\n7 + 9 = 16 (left: 16 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 7 9 13",
                "ys": [
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 / 9 = 1 (left: 1 13)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 * 7 = 35 (left: 13 35)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n7 - 5 = 2 (left: 2 13)\n",
                    "9 + 2 = 11 (left: 7 9 11)\n7 + 9 = 16 (left: 16 11)\n"
                ],
                "new_ys": [
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n18 - 13 = 5 (left: 5 18)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n18 / 13 = 1.38461538462 (left: 1.38461538462 18)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n18 * 13 = 234 (left: 234)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n13 - 18 = -5 (left: -5 18)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n13 / 18 = 0.722222222222 (left: 0.722222222222 18)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 / 9 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 / 9 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 / 9 = 1 (left: 1 13)\n13 / 1 = 13 (left: 13)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 / 9 = 1 (left: 1 13)\n13 * 1 = 13 (left: 13)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n0 + 13 = 13 (left: 13)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n13 - 0 = 13 (left: 13)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n13 / 0 = undefined (left: 0 13)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n13 * 0 = 0 (left: 0)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\nInput: 3 3 3 3\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\nPossible next steps:\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n1 + 12 = 13 (left: 12 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n12 - 1 = 11 (left: 11 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n12 * 1 = 12 (left: 12 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n12 / 1 = 12 (left: 12 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\nInput: 3 3 3 3\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\nPossible next steps:\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 6 3 3 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 - 3 = 0 (left: 3 3 0 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 - 3 = 0 (left: 3 0 3 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 / 3 = 1 (left: 3 1 3 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 * 7 = 35 (left: 13 35)\n13 + 35 = 48 (left: 48)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 * 7 = 35 (left: 13 35)\n35 - 13 = 22 (left: 22)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 * 7 = 35 (left: 13 35)\n13 * 35 = 455 (left: 455)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 * 7 = 35 (left: 13 35)\n35 / 13 = 2.69 (left: 2.69)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 * 7 = 35 (left: 13 35)\nInput: 4 6 6 7\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 * 7 = 35 (left: 13 35)\nPossible next steps:\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 * 7 = 35 (left: 13 35)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 * 7 = 35 (left: 13 35)\n6 / 4 = 1.5 (left: 1.5 6 7)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 * 7 = 35 (left: 13 35)\n7 - 4 = 3 (left: 3 6 6)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 * 7 = 35 (left: 13 35)\n6 - 4 = 2 (left: 2 6 7)  \n",
                    "7 - 2 = 5 (left: 5 7 13)\n7 - 5 = 2 (left: 2 13)\n3 * 2 = 6 (left: 6 13)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n7 - 5 = 2 (left: 2 13)\n2 + 13 = 15 (left: 2 15)\n",
                    "9 + 2 = 11 (left: 7 9 11)\n7 + 9 = 16 (left: 16 11)\n16 + 11 = 27 (left: 27)\n",
                    "9 + 2 = 11 (left: 7 9 11)\n7 + 9 = 16 (left: 16 11)\n16 - 11 = 5 (left: 5)\n",
                    "9 + 2 = 11 (left: 7 9 11)\n7 + 9 = 16 (left: 16 11)\n16 * 11 = 176 (left: 176)\n",
                    "9 + 2 = 11 (left: 7 9 11)\n7 + 9 = 16 (left: 16 11)\n16 / 11 = 1.45 (left: 1.45)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    100,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 6 3 3 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 / 9 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 7 9 13",
                "ys": [
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 6 3 3 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 / 9 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n"
                ],
                "new_ys": [
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 - 3 = 0 (left: 0 3 6)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 / 3 = 1 (left: 1 3 6)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n6 / 3 = 2 (left: 3 3 2)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 6 9)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 3 3 1)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 6 3 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 6 3 3 3)\n3 * 3 = 9 (left: 6 3 9)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 6 3 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 6 3 3 3)\n3 + 3 = 6 (left: 6 3 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 6 3 3 3)\n3 / 3 = 1 (left: 6 3 1)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 6 3 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 3 6)\n3 + 3 = 6 (left: 3 6 6)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 3 6)\n3 * 3 = 9 (left: 3 6 9)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 3 6)\n3 / 3 = 1 (left: 1 3 6)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 3 6)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\nInput: 3 3 7 7\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\nPossible next steps:\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n3 + 3 = 6 (left: 6 7 7)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n7 + 3 = 10 (left: 3 7 10)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n3 * 7 = 21 (left: 7 7 21)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n7 * 3 = 21 (left: 3 7 21)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n7 / 3 = 2 (left: 2 3 7)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n7 / 3 = 2 (left: 2 3 7)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 / 9 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n14 is the only number provided. Please provide at least three numbers to play the 24 puzzle.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 - 3 = 0 (left: 0 3 6)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 / 3 = 1 (left: 1 3 6)\n",
                    "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n6 - 3 = 3 (left: 3 3 3)\n"
                ]
            }
        ],
        "idx": 839,
        "ys": [
            "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
            "7 + 2 = 9 (left: 9 9 13)\n9 - 9 = 0 (left: 0 13)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 3 9)\n",
            "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 3 6 3)\n",
            "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 - 3 = 0 (left: 0 3 6)\n",
            "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 3 3 6)\n",
            "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 / 3 = 1 (left: 1 3 6)\n",
            "7 - 2 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n3 + 3 = 6 (left: 3 3 6 3)\n6 - 3 = 3 (left: 3 3 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 13082,
            "prompt_tokens": 43363,
            "cost": 0.09120850000000001
        },
        "time_spent": 42.37569618225098
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 9 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 9 = 14 (left: 9 11 14)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n",
                    "5 * 9 = 45 (left: 9 11 45)\n"
                ],
                "values": [
                    50,
                    100,
                    100,
                    50
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 4 9 11)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n",
                    "5 * 9 = 45 (left: 9 11 45)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 9 9 11",
                "ys": [
                    "9 - 5 = 4 (left: 4 9 11)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n",
                    "5 * 9 = 45 (left: 9 11 45)\n"
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 + 4 = 13 (left: 13 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 / 4 = 2.25 (left: 2.25 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 - 9 = -5 (left: -5 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\nInput: 3 3 3 3\n",
                    "9 - 5 = 4 (left: 4 9 11)\nPossible next steps:\n",
                    "9 - 5 = 4 (left: 4 9 11)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n9 * 6 = 54 (left: 9 9 54)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n9 + 6 = 15 (left: 6 9 15)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n9 / 6 = 1 (left: 1 9 9)\n",
                    "11 - 5 = 6 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 14)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 * 11 = 99 (left: 14 99)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n11 * 9 = 99 (left: 14 99)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n11 / 9 = 1.22 (left: 1.22 14)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 / 11 = 0.82 (left: 0.82 14)\n",
                    "5 * 9 = 45 (left: 9 11 45)\n9 * 11 = 99 (left: 45 99)\n",
                    "5 * 9 = 45 (left: 9 11 45)\n11 - 9 = 2 (left: 2 45)\n",
                    "5 * 9 = 45 (left: 9 11 45)\n45 - 9 = 36 (left: 11 36)\n",
                    "5 * 9 = 45 (left: 9 11 45)\n11 * 9 = 99 (left: 45 99)\n",
                    "5 * 9 = 45 (left: 9 11 45)\n11 + 9 = 20 (left: 20 45)\n",
                    "5 * 9 = 45 (left: 9 11 45)\n45 / 9 = 5 (left: 11 5)\n",
                    "5 * 9 = 45 (left: 9 11 45)\n45 - 11 = 34 (left: 9 34)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 + 4 = 13 (left: 13 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 - 9 = -5 (left: -5 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 9 9 11",
                "ys": [
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 + 4 = 13 (left: 13 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 - 9 = -5 (left: -5 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n"
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 - 11 = 2 (left: 2 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 * 11 = 143 (left: 143)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 / 11 = 1.18 (left: 1.18 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n11 - 13 = -2 (left: -2 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n11 / 13 = 0.85 (left: 0.85 13)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 + 4 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 + 4 = 13 (left: 13 11)\n13 * 11 = 143 (left: 143)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 + 4 = 13 (left: 13 11)\n13 - 11 = 2 (left: 2)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 + 4 = 13 (left: 13 11)\n13 / 11 = 1 (left: 1)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n11 / 5 = 2.2 (left: 2.2 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n11 * 5 = 55 (left: 11 55)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\nInput: 3 3 9 12\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\nPossible next steps:\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 + 3 = 6 (left: 6 9 12)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 3 = 9 (left: 9 9 12)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 9 = 27 (left: 3 27 12)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 + 9 = 12 (left: 3 12 12)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 - 3 = 0 (left: 0 3 9)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 / 3 = 1 (left: 1 3 9)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 + 12 = 15 (left: 3 9 15)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n3 * 12 = 36 (left: 3 9 36)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n9 + 12 = 21 (left: 3 3 21)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n9 - 3 = 6 (left: 3 6 12)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n9 / 3 = 3 (left: 3 3 12)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n9 * 3 = 27 (left: 3 27 12)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n9 + 12 = 21 (left: 3 9 21)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n9 - 12 = -3 (left: -3 9 12)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n9 / 12 = 0.75 (left: 0.75 9 12)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n12 - 3 = 9 (left: 3 9 12)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n12 / 3 = 4 (left: 4 9 12)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n12 + 3 = 15 (left: 3 9 15)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n12 * 3 = 36 (left: 3 9 36)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 - 9 = -5 (left: -5 11)\n11 - (-5) = 16 (left: -5 16)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 - 9 = -5 (left: -5 11)\n11 + (-5) = 6 (left: 6)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 - 9 = -5 (left: -5 11)\n11 * (-5) = -55 (left: -5 -55)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 - 9 = -5 (left: -5 11)\n11 / (-5) = -2.2 (left: -5 -2.2)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 / 11 = 3.27 (left: 3.27)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 * 11 = 396 (left: 396)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 + 11 = 47 (left: 47)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 / 36 = 0.31 (left: 0.31)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n20 - 14 = 6 (left: 6 20)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n20 / 14 = 1 (left: 1 20)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n2 * 7 = 14 (left: 7 20)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n20 - 14 = 6 (left: 14 6)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 + 4 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 - 11 = 2 (left: 2 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 9 9 11",
                "ys": [
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 + 4 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 - 11 = 2 (left: 2 11)\n"
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\nAnswer: ((9 - 5) + 9) + 11 = 24\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 + 4 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\nAnswer: (9 + (9 - 5)) + 11 = 24\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n2 * 8 = 16 (left: 16)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n8 + 8 = 16 (left: 16)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 / 1 = 16 (left: 16)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 - 0 = 16 (left: 16)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n2 + 5 = 7 (left: 7)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n2 * 5 = 10 (left: 10)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n5 - 2 = 3 (left: 3)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n5 / 2 = 2.5 (left: 2.5)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\nInput: 3 3 8 8\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\nPossible next steps:\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n3 * 3 = 9 (left: 8 9 8)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n3 / 3 = 1 (left: 1 8 8)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n8 / 3 = 2.67 (left: 2.67 8 8)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n8 + 3 = 11 (left: 3 8 11)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n8 * 3 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\nInput: -5 -1 4 7\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\nPossible next steps:\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n-5 + -1 = -6 (left: -6 4 7)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n-5 - -1 = -4 (left: -4 4 7)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n-5 * -1 = 5 (left: 5 4 7)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n-1 + 4 = 3 (left: -5 3 7)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n-1 * 4 = -4 (left: -5 -4 7)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n-1 - 4 = -5 (left: -5 -5 7)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n-1 * -1 = 1 (left: -5 1 7)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n4 + 7 = 11 (left: -5 11 4)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n4 - 7 = -3 (left: -5 -3 7)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n4 * 7 = 28 (left: -5 28 7)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\nInput: 1 8 8 3\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\nPossible next steps:\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n1 + 8 = 9 (left: 9 8 3)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n1 / 8 = 0 (left: 0 8 3)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n1 * 8 = 8 (left: 8 8 3)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n1 - 8 = -7 (left: -7 8 3)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n8 + 8 = 16 (left: 1 16 3)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n8 / 8 = 1 (left: 1 1 3)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n8 - 8 = 0 (left: 1 0 3)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n11 - 36 = -25 (left: -25)\n8 * 8 = 64 (left: 1 64 3)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nInput: 3 6 8 12\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nPossible next steps:\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n3 + 6 = 9 (left: 8 9 12)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n6 / 3 = 2 (left: 2 8 12)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n12 - 8 = 4 (left: 3 4 8)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n8 - 6 = 2 (left: 2 3 12)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n8 + 6 = 14 (left: 3 12 14)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n12 / 3 = 4 (left: 4 8 12)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n12 - 6 = 6 (left: 3 6 12)\n",
                    "5 + 9 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n12 - 3 = 9 (left: 6 8 9)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 - 11 = 2 (left: 2 11)\n11 - 2 = 9 (left: 2 9)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 - 11 = 2 (left: 2 11)\n11 / 2 = 5 (left: 2 5)\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\nAnswer: ((9 - 5) + 9) + 11 = 24\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 + 4 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\nAnswer: (9 + (9 - 5)) + 11 = 24\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n2 * 8 = 16 (left: 16)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n8 + 8 = 16 (left: 16)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 / 1 = 16 (left: 16)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 - 0 = 16 (left: 16)\n",
                    "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n2 + 5 = 7 (left: 7)\n"
                ]
            }
        ],
        "idx": 840,
        "ys": [
            "9 - 5 = 4 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\nAnswer: ((9 - 5) + 9) + 11 = 24\n",
            "9 - 5 = 4 (left: 4 9 11)\n9 + 4 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\nAnswer: (9 + (9 - 5)) + 11 = 24\n",
            "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n2 * 8 = 16 (left: 16)\n",
            "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n8 + 8 = 16 (left: 16)\n",
            "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 / 1 = 16 (left: 16)\n",
            "9 - 5 = 4 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 - 0 = 16 (left: 16)\n",
            "9 - 5 = 4 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)\n36 - 11 = 25 (left: 25)\n2 + 5 = 7 (left: 7)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 15206,
            "prompt_tokens": 48408,
            "cost": 0.103024
        },
        "time_spent": 39.4537672996521
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 6 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n",
                    "6 + 8 = 14 (left: 6 6 14)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n",
                    "6 + 8 = 14 (left: 6 6 14)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 6 6 8",
                "ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n",
                    "6 + 8 = 14 (left: 6 6 14)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n"
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n6 + 8 = 14 (left: 8 12 14)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 / 6 = 1 (left: 1 8 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n6 * 8 = 48 (left: 12 48)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 8 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 + 1 = 7 (left: 7 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 - 1 = 5 (left: 5 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 / 1 = 6 (left: 6 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 * 6 = 6 (left: 6 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n8 - 1 = 7 (left: 7 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n8 / 1 = 8 (left: 8 8)\n",
                    "6 + 8 = 14 (left: 6 6 14)\n6 + 6 = 12 (left: 12 14)\n",
                    "6 + 8 = 14 (left: 6 6 14)\n6 * 6 = 36 (left: 36 14)\n",
                    "6 + 8 = 14 (left: 6 6 14)\n6 / 6 = 1 (left: 1 14)\n",
                    "6 + 8 = 14 (left: 6 6 14)\n6 - 6 = 0 (left: 0 14)\n",
                    "6 + 8 = 14 (left: 6 6 14)\n14 + 6 = 20 (left: 6 20)\n",
                    "6 + 8 = 14 (left: 6 6 14)\n14 - 6 = 8 (left: 6 8)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n2 + 6 = 8 (left: 6 8)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 / 2 = 3 (left: 3 6)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n2 * 6 = 12 (left: 6 12)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n6 + 8 = 14 (left: 14 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n6 * 8 = 48 (left: 48 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 / 6 = 1 (left: 1 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 + 1 = 7 (left: 7 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 - 1 = 5 (left: 5 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 * 1 = 6 (left: 6 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 / 1 = 6 (left: 6 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n8 - 1 = 7 (left: 6 7)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n8 / 1 = 8 (left: 8 8)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n6 + 8 = 14 (left: 14 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n6 * 8 = 48 (left: 48 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 / 6 = 1 (left: 1 12)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n6 * 8 = 48 (left: 12 48)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 + 1 = 7 (left: 7 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 - 1 = 5 (left: 5 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 / 1 = 6 (left: 6 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 6 6 8",
                "ys": [
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n6 * 8 = 48 (left: 12 48)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 + 1 = 7 (left: 7 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 - 1 = 5 (left: 5 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 / 1 = 6 (left: 6 8)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n6 * 8 = 48 (left: 12 48)\n12 * 2 = 24 (left: 24 48)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n6 * 8 = 48 (left: 12 48)\n12 + 48 = 60 (left: 60)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n6 * 8 = 48 (left: 12 48)\n48 / 12 = 4 (left: 4 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n8 - 7 = 1 (left: 1 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n7 * 8 = 56 (left: 56)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n7 / 8 = 0.875 (left: 0.875 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 + 1 = 7 (left: 7 8)\n7 + 8 = 15 (left: 8 15)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 + 1 = 7 (left: 7 8)\n8 / 7 = 1 (left: 1 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 + 1 = 7 (left: 7 8)\n7 * 8 = 56 (left: 56)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 + 1 = 7 (left: 7 8)\n7 - 8 = -1 (left: -1)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 + 1 = 7 (left: 7 8)\n\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 - 1 = 5 (left: 5 8)\n5 + 8 = 13 (left: 8 13)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 - 1 = 5 (left: 5 8)\n5 - 8 = -3 (left: -3 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 - 1 = 5 (left: 5 8)\n5 * 8 = 40 (left: 8 40)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 - 1 = 5 (left: 5 8)\n5 / 8 = 0.625 (left: 0.625 8)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 / 1 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 / 1 = 6 (left: 6 8)\n6 - 8 = -2 (left: -2)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 / 1 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 / 1 = 6 (left: 6 8)\n6 / 8 = 0.75 (left: 0.75)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 + 1 = 7 (left: 7 8)\n\n"
                ]
            },
            {
                "step": 3,
                "x": "6 6 6 8",
                "ys": [
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 + 1 = 7 (left: 7 8)\n\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (6 - (8 - 6)) = 24\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - 6) * (6 + 6) = 24\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 1 = 10 (left: 1)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 / 1 = 10 (left: 1)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 1 = 11 (left: 1)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 1 = 9 (left: 1)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 is the final number, no more steps can be taken.\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 3 3 3 3\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nPossible next steps:\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 5 5 5 5\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\nPossible next steps:\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n5 + 5 = 10 (left: 5 10 5)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\nInput: 3 6 8 12\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\nPossible next steps:\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\n3 + 6 = 9 (left: 8 9 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\n6 * 3 = 18 (left: 8 12 18)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\n8 - 3 = 5 (left: 5 8 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\n12 / 3 = 4 (left: 4 8 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\n12 - 6 = 6 (left: 3 6 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n7 + 8 = 15 (left: 15)\n8 / 3 = 2 (left: 2 6 12)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 + 1 = 7 (left: 7 8)\n\n7 + 8 = 15 (left: 15)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 + 1 = 7 (left: 7 8)\n\n7 - 8 = -1 (left: -1)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 + 1 = 7 (left: 7 8)\n\n7 * 8 = 56 (left: 56)\n",
                    "6 / 6 = 1 (left: 1 6 8)\n6 + 1 = 7 (left: 7 8)\n\n7 / 8 = 0.875 (left: 0.875)\n"
                ],
                "values": [
                    0,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - 6) * (6 + 6) = 24\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (6 - (8 - 6)) = 24\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 1 = 10 (left: 1)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 / 1 = 10 (left: 1)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 1 = 11 (left: 1)\n",
                    "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 1 = 9 (left: 1)\n",
                    "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 is the final number, no more steps can be taken.\n"
                ]
            }
        ],
        "idx": 841,
        "ys": [
            "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - 6) * (6 + 6) = 24\n",
            "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (6 - (8 - 6)) = 24\n",
            "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 1 = 10 (left: 1)\n",
            "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 / 1 = 10 (left: 1)\n",
            "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 + 1 = 11 (left: 1)\n",
            "8 - 6 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 - 1 = 9 (left: 1)\n",
            "6 + 6 = 12 (left: 6 8 12)\n8 - 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 is the final number, no more steps can be taken.\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 16871,
            "prompt_tokens": 54146,
            "cost": 0.11496100000000001
        },
        "time_spent": 35.77758193016052
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 7 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 + 1 = 8 (left: 8 12 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n",
                    "12 / 1 = 12 (left: 7 12 12)\n",
                    "7 + 12 = 19 (left: 1 12 19)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n",
                    "12 / 1 = 12 (left: 7 12 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 + 1 = 8 (left: 8 12 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n",
                    "12 / 1 = 12 (left: 7 12 12)\n",
                    "7 + 12 = 19 (left: 1 12 19)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 7 12 12",
                "ys": [
                    "7 + 1 = 8 (left: 8 12 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n",
                    "12 / 1 = 12 (left: 7 12 12)\n",
                    "7 + 12 = 19 (left: 1 12 19)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n"
                ],
                "new_ys": [
                    "7 + 1 = 8 (left: 8 12 12)\n8 / 12 = 0.67 (left: 0.67 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 12 18)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 * 11 = 77 (left: 12 77)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 / 7 = 1.57 (left: 1.57 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 - 11 = -4 (left: -4 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 - 7 = 5 (left: 5 12)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n1 + 5 = 6 (left: 6 12)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n5 * 1 = 5 (left: 5 12)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n12 - 1 = 11 (left: 11 5)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n12 / 1 = 12 (left: 5 12)\n",
                    "12 / 1 = 12 (left: 7 12 12)\n12 - 7 = 5 (left: 5 12)\n",
                    "12 / 1 = 12 (left: 7 12 12)\n12 - 7 = 5 (left: 5 12)\n",
                    "12 / 1 = 12 (left: 7 12 12)\n12 / 7 = 1 (left: 1 12)\n",
                    "12 / 1 = 12 (left: 7 12 12)\n12 + 7 = 19 (left: 12 19)\n",
                    "12 / 1 = 12 (left: 7 12 12)\n7 * 12 = 84 (left: 12 84)\n",
                    "12 / 1 = 12 (left: 7 12 12)\n12 - 7 = 5 (left: 5 12)\n",
                    "7 + 12 = 19 (left: 1 12 19)\n1 + 12 = 13 (left: 13 19)\n",
                    "7 + 12 = 19 (left: 1 12 19)\n12 - 1 = 11 (left: 11 19)\n",
                    "7 + 12 = 19 (left: 1 12 19)\n12 / 1 = 12 (left: 12 19)\n",
                    "7 + 12 = 19 (left: 1 12 19)\n12 * 1 = 12 (left: 12 19)\n",
                    "7 + 12 = 19 (left: 1 12 19)\n19 - 1 = 18 (left: 12 18)\n",
                    "7 + 12 = 19 (left: 1 12 19)\n19 / 1 = 19 (left: 12 19)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 12 18)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 - 11 = -4 (left: -4 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 * 11 = 77 (left: 12 77)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 / 7 = 1.57 (left: 1.57 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n5 * 12 = 60 (left: 1 60)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n12 / 5 = 2.4 (left: 1 2.4 12)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n12 - 5 = 7 (left: 1 7 12)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n12 - 1 = 11 (left: 11 5)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n5 + 12 = 17 (left: 1 17)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n5 / 1 = 5 (left: 5 12)\n",
                    "12 - 7 = 5 (left: 1 5 12)\nInput: 3 3 3 3\n",
                    "12 - 7 = 5 (left: 1 5 12)\nPossible next steps:\n",
                    "12 - 7 = 5 (left: 1 5 12)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "12 - 7 = 5 (left: 1 5 12)\n3 - 3 = 0 (left: 0 3 3)\n"
                ],
                "values": [
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 12 18)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 - 11 = -4 (left: -4 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 7 12 12",
                "ys": [
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 12 18)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 - 11 = -4 (left: -4 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n"
                ],
                "new_ys": [
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 / 12 = 1.67 (left: 1.67)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\nInput: 3 5 7\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\nPossible next steps:\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n3 + 5 = 8 (left: 8 7)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n3 * 5 = 15 (left: 15 7)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n5 - 3 = 2 (left: 2 7)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n5 + 7 = 12 (left: 3 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n7 - 3 = 4 (left: 4 7)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n7 + 3 = 10 (left: 10 7)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\nInput: 1 2 3 4\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\nPossible next steps:\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n2 + 3 = 5 (left: 1 5 4)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n2 * 3 = 6 (left: 1 6 4)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n3 + 4 = 7 (left: 1 2 7)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n3 * 4 = 12 (left: 1 2 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n4 - 2 = 2 (left: 1 3 4)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n4 / 2 = 2 (left: 1 2 4)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n4 * 12 = 48 (left: 12 48)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8 12)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n4 + 12 = 16 (left: 12 16)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 12 18)\n12 + 18 = 30 (left: 18 30)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 12 18)\n12 * 18 = 216 (left: 18 216)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 + 11 = 18 (left: 12 18)\n18 / 12 = 1.5 (left: 1.5 18)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n12 * 18 = 216 (left: 216)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n18 / 12 = 1.5 (left: 1.5 18)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\nInput: 3 3 3 3\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\nPossible next steps:\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n3 + 3 = 6 (left: 6 3 3)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 12)\n4 * 12 = 48 (left: 12 48)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 - 7 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 - 11 = -4 (left: -4 12)\n12 - -4 = 16 (left: 16)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 - 11 = -4 (left: -4 12)\n12 + -4 = 8 (left: 8)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 - 11 = -4 (left: -4 12)\n12 / -4 = -3 (left: -3)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n7 - 11 = -4 (left: -4 12)\n12 * -4 = -48 (left: -48)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n11 + 19 = 30 (left: 30)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n19 - 11 = 8 (left: 8 19)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n19 / 11 = 1 (left: 1 19)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n19 * 11 = 209 (left: 209)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n11 - 19 = -8 (left: -8 11)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n19 + 11 = 30 (left: 11 30)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n11 + 19 = 30 (left: 30)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 / 12 = 1.67 (left: 1.67)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\nInput: 3 5 7\n"
                ]
            },
            {
                "step": 3,
                "x": "1 7 12 12",
                "ys": [
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n11 + 19 = 30 (left: 30)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 / 12 = 1.67 (left: 1.67)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\nInput: 3 5 7\n"
                ],
                "new_ys": [
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n2 * 16 = 32 (left: 16)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n32 / 2 = 16 (left: 16)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n16 * 2 = 32 (left: 32)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n32 / 2 = 16 (left: 16)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nInput: 3 3 3 3\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nPossible next steps:\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n11 + 19 = 30 (left: 30)\nInput: 3 3 4 9\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n11 + 19 = 30 (left: 30)\nPossible next steps:\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n11 + 19 = 30 (left: 30)\n3 + 3 = 6 (left: 4 6 9)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n11 + 19 = 30 (left: 30)\n3 * 4 = 12 (left: 9 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n11 + 19 = 30 (left: 30)\n4 + 3 = 7 (left: 7 9)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n11 + 19 = 30 (left: 30)\n9 - 3 = 6 (left: 6 9)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n11 + 19 = 30 (left: 30)\n9 - 4 = 5 (left: 5 9)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n11 + 19 = 30 (left: 30)\n4 * 3 = 12 (left: 9 12)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n11 + 19 = 30 (left: 30)\n9 / 3 = 3 (left: 3 9)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n12 + 7 = 19 (left: 11 19)\n11 + 19 = 30 (left: 30)\n9 / 4 = 2 (left: 2 9)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n2 * 240 = 480 (left: 240 480)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n240 / 2 = 120 (left: 120 240)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n240 - 2 = 238 (left: 2 238)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n240 - 240 = 0 (left: 0)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n240 + 2 = 242 (left: 2 242)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8)\n8 is the final number.\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 / 12 = 1.67 (left: 1.67)\n1.67 * 1.67 = 2.7889 (left: 1.67 2.7889)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 / 12 = 1.67 (left: 1.67)\n1.67 + 1.67 = 3.34 (left: 1.67 3.34)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 / 12 = 1.67 (left: 1.67)\n1.67 - 1.67 = 0 (left: 0 1.67)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 / 12 = 1.67 (left: 1.67)\n1.67 / 1.67 = 1 (left: 1 1.67)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\nInput: 3 5 7\n3 + 5 = 8 (left: 7 8)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\nInput: 3 5 7\n5 - 3 = 2 (left: 2 7)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\nInput: 3 5 7\n3 * 5 = 15 (left: 7 15)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\nInput: 3 5 7\n5 / 3 = 1 (left: 1 7)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\nInput: 3 5 7\n7 + 3 = 10 (left: 5 10)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\nInput: 3 5 7\n7 - 3 = 4 (left: 4 7)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n2 * 16 = 32 (left: 16)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n32 / 2 = 16 (left: 16)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n16 * 2 = 32 (left: 32)\n",
                    "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n32 / 2 = 16 (left: 16)\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nInput: 3 3 3 3\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nPossible next steps:\n",
                    "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 + 3 = 6 (left: 3 3 6)\n"
                ]
            }
        ],
        "idx": 842,
        "ys": [
            "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n2 * 16 = 32 (left: 16)\n",
            "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n32 / 2 = 16 (left: 16)\n",
            "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n16 * 2 = 32 (left: 32)\n",
            "7 + 1 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n32 / 2 = 16 (left: 16)\n",
            "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nInput: 3 3 3 3\n",
            "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nPossible next steps:\n",
            "12 - 1 = 11 (left: 7 11 12)\n11 + 7 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 + 3 = 6 (left: 3 3 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 19062,
            "prompt_tokens": 59196,
            "cost": 0.126918
        },
        "time_spent": 42.89085006713867
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 6 9 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 6 = 7 (left: 7 9 10)\n",
                    "1 + 9 = 10 (left: 6 10 10)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n",
                    "9 + 1 = 10 (left: 6 10 10)\n",
                    "6 + 1 = 7 (left: 7 9 10)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n",
                    "9 / 1 = 9 (left: 6 9 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50
                ],
                "select_new_ys": [
                    "9 - 1 = 8 (left: 6 8 10)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n",
                    "1 + 9 = 10 (left: 6 10 10)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n",
                    "9 + 1 = 10 (left: 6 10 10)\n",
                    "6 + 1 = 7 (left: 7 9 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 6 9 10",
                "ys": [
                    "9 - 1 = 8 (left: 6 8 10)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n",
                    "1 + 9 = 10 (left: 6 10 10)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n",
                    "9 + 1 = 10 (left: 6 10 10)\n",
                    "6 + 1 = 7 (left: 7 9 10)\n"
                ],
                "new_ys": [
                    "9 - 1 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n6 / 8 = 0.75 (left: 0.75 10)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n10 - 6 = 4 (left: 4 10)  \n",
                    "10 - 1 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n",
                    "10 - 1 = 9 (left: 6 9 9)\n9 / 6 = 1 (left: 1 9 9)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 * 9 = 63 (left: 10 63)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "1 + 9 = 10 (left: 6 10 10)\n6 + 10 = 16 (left: 10 10 16)\n",
                    "1 + 9 = 10 (left: 6 10 10)\n10 / 6 = 1 (left: 1 10 10)\n",
                    "1 + 9 = 10 (left: 6 10 10)\n10 + 6 = 16 (left: 6 10 16)\n",
                    "1 + 9 = 10 (left: 6 10 10)\n6 * 10 = 60 (left: 10 10 60)\n",
                    "1 + 9 = 10 (left: 6 10 10)\n10 - 6 = 4 (left: 4 10 10)\n",
                    "1 + 9 = 10 (left: 6 10 10)\n10 /  6 = 1 (left: 1 10 10)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n9 + 6 = 15 (left: 10 15)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n6 * 9 = 54 (left: 10 54)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n9 * 6 = 54 (left: 10 54)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n9 / 6 = 1.5 (left: 1.5 10)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n6 / 9 = 0.67 (left: 0.67 10)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n9 - 6 = 3 (left: 3 10)\n",
                    "1 * 6 = 6 (left: 6 9 10)\n6 - 9 = -3 (left: -3 10)\n",
                    "9 + 1 = 10 (left: 6 10 10)\n6 + 10 = 16 (left: 10 10 16)\n",
                    "9 + 1 = 10 (left: 6 10 10)\n10 - 6 = 4 (left: 4 10 10)\n",
                    "9 + 1 = 10 (left: 6 10 10)\n10 / 6 = 1 (left: 1 10 10)\n",
                    "9 + 1 = 10 (left: 6 10 10)\n6 * 10 = 60 (left: 10 10 60)\n",
                    "6 + 1 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n",
                    "6 + 1 = 7 (left: 7 9 10)\n7 / 9 = 0.7777777777777778 (left: 0.7777777777777778 10)\n",
                    "6 + 1 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n",
                    "6 + 1 = 7 (left: 7 9 10)\n7 * 9 = 63 (left: 10 63)\n",
                    "6 + 1 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n",
                    "6 + 1 = 7 (left: 7 9 10)\n10 - 7 = 3 (left: 3 10)\n"
                ],
                "values": [
                    100,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 - 1 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n10 - 6 = 4 (left: 4 10)  \n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n10 - 7 = 3 (left: 3 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 6 9 10",
                "ys": [
                    "9 - 1 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n10 - 6 = 4 (left: 4 10)  \n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n10 - 7 = 3 (left: 3 10)\n"
                ],
                "new_ys": [
                    "9 - 1 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n14 / 10 = 1.4 (left: 1.4)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n10 / 2 = 5 (left: 5)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n10 - 6 = 4 (left: 4 10)  \n4 + 10 = 14 (left: 14)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n10 - 6 = 4 (left: 4 10)  \n10 - 4 = 6 (left: 6 10)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n10 * 16 = 160 (left: 160)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n10 - 16 = -6 (left: -6)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n16 - 10 = 6 (left: 6)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n19 - 7 = 12 (left: 12)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n19 / 7 = 2 (left: 2)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n19 * 7 = 133 (left: 133)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n10 - 2 = 8 (left: 8)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n10 / 2 = 5 (left: 5)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n10 - 7 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n10 - 7 = 3 (left: 3 10)\n10 - 3 = 7 (left: 7)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n10 - 7 = 3 (left: 3 10)\n10 / 3 = 3 (left: 3)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "9 - 1 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n10 - 6 = 4 (left: 4 10)  \n4 + 10 = 14 (left: 14)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n19 - 7 = 12 (left: 12)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 6 9 10",
                "ys": [
                    "9 - 1 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n10 - 6 = 4 (left: 4 10)  \n4 + 10 = 14 (left: 14)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n19 - 7 = 12 (left: 12)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n"
                ],
                "new_ys": [
                    "9 - 1 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (6 + 9 - 1) = 24\n",
                    "9 - 1 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n2 * 10 = 20 (left: 10 20)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 / 2 = 10 (left: 10 10)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 - 2 = 18 (left: 2 18)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n10 - 6 = 4 (left: 4 10)  \n4 + 10 = 14 (left: 14)\n2 + 8 = 10 (left: 10)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n10 - 6 = 4 (left: 4 10)  \n4 + 10 = 14 (left: 14)\n8 - 2 = 6 (left: 6)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n10 - 6 = 4 (left: 4 10)  \n4 + 10 = 14 (left: 14)\n14 / 2 = 7 (left: 7)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n10 - 6 = 4 (left: 4 10)  \n4 + 10 = 14 (left: 14)\n14 - 2 = 12 (left: 12)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\nInput: 5 5 15 20\n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\nPossible next steps:\n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n5 * 5 = 25 (left: 15 20 25)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n5 + 15 = 20 (left: 20 20 25)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n5 * 3 = 15 (left: 15 20 20)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n10 + 16 = 26 (left: 26)\n15 + 5 = 20 (left: 5 20 20)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n2 * 6 = 12 (left: 12)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n2 + 6 = 8 (left: 8)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n6 / 2 = 3 (left: 3)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n6 - 2 = 4 (left: 4)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\nInput: 3 3 7 8\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\nPossible next steps:\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n3 + 3 = 6 (left: 6 7 8)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n3 * 3 = 9 (left: 9 7 8)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n3 - 3 = 0 (left: 0 7 8)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n3 / 3 = 1 (left: 1 7 8)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n7 + 3 = 10 (left: 3 8 10)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n7 * 3 = 21 (left: 3 8 21)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n7 - 3 = 4 (left: 3 4 8)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n7 / 3 = 2 (left: 2 3 8)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n8 + 3 = 11 (left: 3 7 11)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n8 * 3 = 24 (left: 3 7 24)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n8 - 3 = 5 (left: 3 5 7)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n7 + 19 = 26 (left: 26)\n8 / 3 = 2 (left: 2 3 7)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n19 - 7 = 12 (left: 12)\nInput: 12\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n19 - 7 = 12 (left: 12)\nPossible next steps:\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n19 - 7 = 12 (left: 12)\n12 + 1 = 13 (left: 1 13)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n19 - 7 = 12 (left: 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\nInput: 3 3 3 3\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\nPossible next steps:\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\nInput: 5 8 1 3\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\nPossible next steps:\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n5 + 8 = 13 (left: 1 3 13)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n8 - 1 = 7 (left: 5 7 3)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n3 * 1 = 3 (left: 3 5 8)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n5 - 3 = 2 (left: 2 3 8)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n8 - 1 = 7 (left: 5 7 3)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n1 * 3 = 3 (left: 3 5 8)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n3 - 1 = 2 (left: 2 3 8)\n",
                    "1 + 6 = 7 (left: 7 9 10)\n9 - 7 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n8 - 1 = 7 (left: 5 7 3)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 - 1 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (6 + 9 - 1) = 24\n",
                    "9 - 1 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n2 * 10 = 20 (left: 10 20)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 / 2 = 10 (left: 10 10)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 - 2 = 18 (left: 2 18)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n10 - 6 = 4 (left: 4 10)  \n4 + 10 = 14 (left: 14)\n2 + 8 = 10 (left: 10)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n10 - 6 = 4 (left: 4 10)  \n4 + 10 = 14 (left: 14)\n8 - 2 = 6 (left: 6)\n",
                    "9 - 1 = 8 (left: 6 8 10)\n10 - 6 = 4 (left: 4 10)  \n4 + 10 = 14 (left: 14)\n14 / 2 = 7 (left: 7)\n"
                ]
            }
        ],
        "idx": 843,
        "ys": [
            "9 - 1 = 8 (left: 6 8 10)\n6 + 8 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: 10 + (6 + 9 - 1) = 24\n",
            "9 - 1 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n2 * 10 = 20 (left: 10 20)\n",
            "9 - 1 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 / 2 = 10 (left: 10 10)\n",
            "9 - 1 = 8 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 - 2 = 18 (left: 2 18)\n",
            "9 - 1 = 8 (left: 6 8 10)\n10 - 6 = 4 (left: 4 10)  \n4 + 10 = 14 (left: 14)\n2 + 8 = 10 (left: 10)\n",
            "9 - 1 = 8 (left: 6 8 10)\n10 - 6 = 4 (left: 4 10)  \n4 + 10 = 14 (left: 14)\n8 - 2 = 6 (left: 6)\n",
            "9 - 1 = 8 (left: 6 8 10)\n10 - 6 = 4 (left: 4 10)  \n4 + 10 = 14 (left: 14)\n14 / 2 = 7 (left: 7)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 20921,
            "prompt_tokens": 64585,
            "cost": 0.1387195
        },
        "time_spent": 39.916804790496826
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 * 2 = 10 (left: 10 6 10)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n",
                    "10 - 6 = 4 (left: 2 5 4)\n",
                    "10 / 2 = 5 (left: 5 5 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 * 2 = 10 (left: 10 6 10)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n",
                    "10 - 6 = 4 (left: 2 5 4)\n",
                    "10 / 2 = 5 (left: 5 5 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 6 10",
                "ys": [
                    "5 * 2 = 10 (left: 10 6 10)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n",
                    "10 - 6 = 4 (left: 2 5 4)\n",
                    "10 / 2 = 5 (left: 5 5 6)\n"
                ],
                "new_ys": [
                    "5 * 2 = 10 (left: 10 6 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 / 6 = 1 (left: 1 10)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 * 6 = 60 (left: 10 60)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n6 / 10 = 0.6 (left: 0.6 10)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 * 5 = 40 (left: 10 40)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 / 5 = 1.6 (left: 1.6 10)\n",
                    "6 + 2 = 8 (left: 8 5 10)\nInput: 3 3 3 6\n",
                    "6 + 2 = 8 (left: 8 5 10)\nPossible next steps:\n",
                    "6 + 2 = 8 (left: 8 5 10)\n3 + 3 = 6 (left: 3 6 6)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n3 / 3 = 1 (left: 1 3 6)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n3 * 3 = 9 (left: 3 6 9)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n6 - 3 = 3 (left: 3 3 6)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n6 / 3 = 2 (left: 2 3 6)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n3 * 6 = 18 (left: 3 6 18)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n3 - 3 = 0 (left: 0 3 6)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n6 / 3 = 2 (left: 2 3 6)\n",
                    "10 - 6 = 4 (left: 2 5 4)\n2 + 5 = 7 (left: 4 7)\n",
                    "10 - 6 = 4 (left: 2 5 4)\n5 - 2 = 3 (left: 3 4)\n",
                    "10 - 6 = 4 (left: 2 5 4)\n2 * 5 = 10 (left: 4 10)\n",
                    "10 - 6 = 4 (left: 2 5 4)\n5 / 2 = 2.5 (left: 2.5 4)\n",
                    "10 / 2 = 5 (left: 5 5 6)\n5 + 5 = 10 (left: 6 10)\n",
                    "10 / 2 = 5 (left: 5 5 6)\n5 * 5 = 25 (left: 25 6)\n",
                    "10 / 2 = 5 (left: 5 5 6)\n5 / 5 = 1 (left: 1 6)\n",
                    "10 / 2 = 5 (left: 5 5 6)\nInput: 3 3 3 3\n",
                    "10 / 2 = 5 (left: 5 5 6)\nPossible next steps:\n",
                    "10 / 2 = 5 (left: 5 5 6)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "10 / 2 = 5 (left: 5 5 6)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "10 / 2 = 5 (left: 5 5 6)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "10 / 2 = 5 (left: 5 5 6)\n3 - 3 = 0 (left: 0 3 3)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 * 2 = 10 (left: 10 6 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 / 6 = 1 (left: 1 10)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 * 5 = 40 (left: 10 40)\n",
                    "10 - 6 = 4 (left: 2 5 4)\n2 + 5 = 7 (left: 4 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 6 10",
                "ys": [
                    "5 * 2 = 10 (left: 10 6 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 / 6 = 1 (left: 1 10)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 * 5 = 40 (left: 10 40)\n",
                    "10 - 6 = 4 (left: 2 5 4)\n2 + 5 = 7 (left: 4 7)\n"
                ],
                "new_ys": [
                    "5 * 2 = 10 (left: 10 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 - 6 = 4 (left: 4 10)\n10 - 4 = 6 (left: 6 10)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 1 10)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n16 + 10 = 26 (left: 26)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n16 - 10 = 6 (left: 6)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n16 / 10 = 1.6 (left: 1.6)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n16 * 10 = 160 (left: 160)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n13 - 10 = 3 (left: 3 13)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n13 / 10 = 1 (left: 1 13)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n10 * 13 = 130 (left: 130)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\nInput: 3 1 4 6\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\nPossible next steps:\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n3 + 1 = 4 (left: 4 4 6)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n3 * 1 = 3 (left: 3 4 6)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n6 + 4 = 10 (left: 3 10)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n6 * 4 = 24 (left: 3 24)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n6 / 3 = 2 (left: 2 4 6)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n6 - 4 = 2 (left: 3 2 6)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n6 - 1 = 5 (left: 3 4 5)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n10 - 3 = 7 (left: 7)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n10 / 3 = 3 (left: 3)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 * 5 = 40 (left: 10 40)\n10 * 2 = 20 (left: 20 40)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 * 5 = 40 (left: 10 40)\n40 / 10 = 4 (left: 4 10)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 * 5 = 40 (left: 10 40)\n10 + 40 = 50 (left: 10 50)\n",
                    "10 - 6 = 4 (left: 2 5 4)\n2 + 5 = 7 (left: 4 7)\n4 + 7 = 11 (left: 11)\n",
                    "10 - 6 = 4 (left: 2 5 4)\n2 + 5 = 7 (left: 4 7)\n4 - 7 = -3 (left: -3)\n",
                    "10 - 6 = 4 (left: 2 5 4)\n2 + 5 = 7 (left: 4 7)\n4 * 7 = 28 (left: 28)\n",
                    "10 - 6 = 4 (left: 2 5 4)\n2 + 5 = 7 (left: 4 7)\n4 / 7 = 0.57 (left: 0.57)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "5 * 2 = 10 (left: 10 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n16 + 10 = 26 (left: 26)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "10 - 6 = 4 (left: 2 5 4)\n2 + 5 = 7 (left: 4 7)\n4 + 7 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 5 6 10",
                "ys": [
                    "5 * 2 = 10 (left: 10 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n16 + 10 = 26 (left: 26)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "10 - 6 = 4 (left: 2 5 4)\n2 + 5 = 7 (left: 4 7)\n4 + 7 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "5 * 2 = 10 (left: 10 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n14 is the final result.\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n3 + 7 = 10 (left: 3 7)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n16 + 10 = 26 (left: 26)\nInput: 3 3 9 12\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n16 + 10 = 26 (left: 26)\nPossible next steps:\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n16 + 10 = 26 (left: 26)\n3 + 3 = 6 (left: 6 9 12)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n16 + 10 = 26 (left: 26)\n9 / 3 = 3 (left: 3 3 12)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n16 + 10 = 26 (left: 26)\n12 - 3 = 9 (left: 3 9 12)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n16 + 10 = 26 (left: 26)\n3 * 3 = 9 (left: 9 9 12)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n16 + 10 = 26 (left: 26)\n9 - 3 = 6 (left: 3 6 12)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n16 + 10 = 26 (left: 26)\n12 - 3 = 9 (left: 3 9 12)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n16 + 10 = 26 (left: 26)\n9 / 3 = 3 (left: 3 9 12)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n16 + 10 = 26 (left: 26)\n12 - 3 = 9 (left: 3 9 12)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n2 + 3 = 5 (left: 5)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 / 2 = 1 (left: 1)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n2 * 3 = 6 (left: 6)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 + 5 = 13 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 - 2 = 1 (left: 1)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\nInput: 13\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\nPossible next steps:\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\nInput: 6 6 6 6\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\nPossible next steps:\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 + 6 = 12 (left: 6 6 12 6)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 * 6 = 36 (left: 6 6 36 6)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 - 6 = 0 (left: 0 6 6 6)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 / 6 = 1 (left: 1 6 6 6)\n",
                    "10 - 6 = 4 (left: 2 5 4)\n2 + 5 = 7 (left: 4 7)\n4 + 7 = 11 (left: 11)\nNo possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 + 6 = 12 (left: 6 6 12 6)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 * 6 = 36 (left: 6 6 36 6)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 - 6 = 0 (left: 0 6 6 6)\n",
                    "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 / 6 = 1 (left: 1 6 6 6)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n14 is the final result.\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n3 + 7 = 10 (left: 3 7)\n",
                    "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n16 + 10 = 26 (left: 26)\nInput: 3 3 9 12\n"
                ]
            }
        ],
        "idx": 844,
        "ys": [
            "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 + 6 = 12 (left: 6 6 12 6)\n",
            "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 * 6 = 36 (left: 6 6 36 6)\n",
            "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 - 6 = 0 (left: 0 6 6 6)\n",
            "6 + 2 = 8 (left: 8 5 10)\n8 - 5 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 / 6 = 1 (left: 1 6 6 6)\n",
            "5 * 2 = 10 (left: 10 6 10)\n10 - 6 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)\n14 is the final result.\n",
            "5 * 2 = 10 (left: 10 6 10)\n10 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n3 + 7 = 10 (left: 3 7)\n",
            "5 * 2 = 10 (left: 10 6 10)\n10 + 6 = 16 (left: 16 10)\n16 + 10 = 26 (left: 26)\nInput: 3 3 9 12\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 22270,
            "prompt_tokens": 68934,
            "cost": 0.147941
        },
        "time_spent": 31.153788805007935
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 8 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n",
                    "12 - 3 = 9 (left: 8 9 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n",
                    "12 - 3 = 9 (left: 8 9 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 8 9 12",
                "ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n",
                    "12 - 3 = 9 (left: 8 9 9)\n"
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 + 9 = 20 (left: 12 20)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 * 11 = 99 (left: 12 99)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 * 9 = 99 (left: 12 99)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 / 9 = 1.22 (left: 1.22 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 / 11 = 0.82 (left: 0.82 12)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n8 - 5 = 3 (left: 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 * 8 = 40 (left: 12 40)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n8 / 5 = 1 (left: 1 12)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n12 - 5 = 7 (left: 7 12)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n12 / 8 = 1 (left: 1 12)\n",
                    "8 - 3 = 5 (left: 5 8 12)\nInput: 3 3 3 4\n",
                    "8 - 3 = 5 (left: 5 8 12)\nPossible next steps:\n",
                    "8 - 3 = 5 (left: 5 8 12)\n3 + 3 = 6 (left: 3 4 6)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n3 / 3 = 1 (left: 1 3 4)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n4 - 3 = 1 (left: 1 3 3)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n6 + 9 = 15 (left: 12 15)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n9 / 3 = 3 (left: 3 12)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n9 * 3 = 27 (left: 6 27)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n9 - 3 = 6 (left: 6 9)\n",
                    "9 - 3 = 6 (left: 6 9 12)\n12 - 9 = 3 (left: 3 12)\n",
                    "12 - 3 = 9 (left: 8 9 9)\n8 + 9 = 17 (left: 9 9 17)\n",
                    "12 - 3 = 9 (left: 8 9 9)\n8 / 9 = 0.89 (left: 0.89 9 9)\n",
                    "12 - 3 = 9 (left: 8 9 9)\n9 + 8 = 17 (left: 8 9 17)\n",
                    "12 - 3 = 9 (left: 8 9 9)\n8 * 9 = 72 (left: 9 9 72)\n",
                    "12 - 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9 9)\n",
                    "12 - 3 = 9 (left: 8 9 9)\n9 / 8 = 1.13 (left: 1.13 9 9)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    100,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 + 9 = 20 (left: 12 20)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n8 - 5 = 3 (left: 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 * 8 = 40 (left: 12 40)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 8 9 12",
                "ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 + 9 = 20 (left: 12 20)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n8 - 5 = 3 (left: 3 12)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 * 8 = 40 (left: 12 40)\n"
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\nInput: 3 3 6 7\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\nPossible next steps:\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n3 + 3 = 6 (left: 6 6 7)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n3 * 3 = 9 (left: 6 9 7)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n7 - 3 = 4 (left: 4 6 7)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n7 - 6 = 1 (left: 1 6 7)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n3 * 6 = 18 (left: 7 18)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n7 - 3 = 4 (left: 4 7 18)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n7 - 6 = 1 (left: 1 7 18)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n3 + 6 = 9 (left: 9 7 6)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n20 / 12 = 1.67 (left: 1.67 20)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\nInput: 3 3 3 3\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\nPossible next steps:\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 + 9 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 + 9 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 + 9 = 20 (left: 12 20)\n12 / 20 = 0.6 (left: 0.6 20)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 - (-2) = 14 (left: 12 14)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 / (-2) = -6 (left: -6 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 -  (-2) = 10 (left: 10 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 * (-2) = -24 (left: -24 12)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\nInput: 5 5 1\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\nPossible next steps:\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n5 + 5 = 10 (left: 1 10)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n5 - 1 = 4 (left: 4 5)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n5 - 1 = 4 (left: 4 5)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n5 + 1 = 6 (left: 5 6)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n5 / 1 = 5 (left: 5 5)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n5 * 1 = 5 (left: 5 5)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n13 - 12 = 1 (left: 1 13)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n13 / 12 = 1.08 (left: 1.08 13)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n13 * 12 = 156 (left: 156)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\nInput: 4 7 1 8\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\nPossible next steps:\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n4 + 7 = 11 (left: 1 8 11)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n7 * 4 = 28 (left: 28 1 8)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n7 / 4 = 1.75 (left: 1.75 1 8)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n7 - 4 = 3 (left: 3 1 8)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n8 - 1 = 7 (left: 4 7 7)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n8 - 5 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n8 - 5 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n8 - 5 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9 12)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 * 8 = 40 (left: 12 40)\n12 + 40 = 52 (left: 40 52)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 * 8 = 40 (left: 12 40)\n12 - 40 = -28 (left: -28 40)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 * 8 = 40 (left: 12 40)\n12 * 40 = 480 (left: 40 480)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 * 8 = 40 (left: 12 40)\n40 / 12 = 3.33 (left: 3.33 40)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 + 9 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 8 9 12",
                "ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 + 9 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n"
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 + 8) * (9 - 2) = 24\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (12 * 2) * (11 - 9) = 24\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nThere are no possible next steps.\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\n14 is the final result.\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\nInput: 4 4 7 7\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\nPossible next steps:\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n4 + 4 = 8 (left: 7 7 8)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n7 + 4 = 11 (left: 4 7 11)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n4 * 4 = 16 (left: 7 7 16)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n7 * 4 = 28 (left: 4 7 28)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n7 - 4 = 3 (left: 3 4 7)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n7 / 4 = 1 (left: 1 4 7)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n7 - 4 = 3 (left: 3 4 7)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n7 / 4 = 1 (left: 1 4 7)\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 + 9 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\nInput: 32\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 + 9 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\nPossible next steps:\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 + 9 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\nNone\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\nInput: 1 3 4 6\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\nPossible next steps:\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n3 + 1 = 4 (left: 4 4 6)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n4 * 1 = 4 (left: 4 4 6)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n1 * 4 = 4 (left: 4 4 6)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 - 4 = 2 (left: 1 4 6)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 - 1 = 5 (left: 3 4 5)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 / 3 = 2 (left: 1 4 2)\n",
                    "8 - 3 = 5 (left: 5 8 12)\n5 + 8 = 13 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 / 4 = 1 (left: 1 3 6)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 + 8) * (9 - 2) = 24\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (12 * 2) * (11 - 9) = 24\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nThere are no possible next steps.\n",
                    "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\n14 is the final result.\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\nInput: 4 4 7 7\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\nPossible next steps:\n",
                    "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n4 + 4 = 8 (left: 7 7 8)\n"
                ]
            }
        ],
        "idx": 845,
        "ys": [
            "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 + 8) * (9 - 2) = 24\n",
            "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (12 * 2) * (11 - 9) = 24\n",
            "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\nThere are no possible next steps.\n",
            "3 + 8 = 11 (left: 9 11 12)\n11 - 9 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\n14 is the final result.\n",
            "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\nInput: 4 4 7 7\n",
            "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\nPossible next steps:\n",
            "3 + 8 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n4 + 4 = 8 (left: 7 7 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 24043,
            "prompt_tokens": 73977,
            "cost": 0.1590515
        },
        "time_spent": 37.22699213027954
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 * 2 = 6 (left: 6 6 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 * 2 = 6 (left: 6 6 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 11",
                "ys": [
                    "3 * 2 = 6 (left: 6 6 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n"
                ],
                "new_ys": [
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n4 + 6 = 10 (left: 10 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n6 + 4 = 10 (left: 10 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n4 * 6 = 24 (left: 24 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n6 * 4 = 24 (left: 24 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n6 - 4 = 2 (left: 2 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n11 - 4 = 7 (left: 7 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n11 - 6 = 5 (left: 4 5)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n11 / 4 = 2.75 (left: 2.75 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n11 / 6 = 1.83333 (left: 1.83333 11)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n5 + 6 = 11 (left: 2 11)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n5 * 6 = 30 (left: 2 30)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n6 / 5 = 1.2 (left: 2 1.2)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n6 - 5 = 1 (left: 2 1)\n",
                    "11 - 6 = 5 (left: 2 5 6)\nInput: 3 3 6 7\n",
                    "11 - 6 = 5 (left: 2 5 6)\nPossible next steps:\n",
                    "11 - 6 = 5 (left: 2 5 6)\n3 + 3 = 6 (left: 6 6 7)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n3 * 3 = 9 (left: 6 9 7)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n3 + 6 = 9 (left: 3 9 7)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n3 * 6 = 18 (left: 3 18 7)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n3 + 7 = 10 (left: 3 6 10)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n3 * 7 = 21 (left: 3 21 6)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n6 / 3 = 2 (left: 2 3 7)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n6 + 3 = 9 (left: 3 9 7)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n6 * 3 = 18 (left: 6 18 7)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n6 + 7 = 13 (left: 3 6 13)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n6 * 7 = 42 (left: 3 42 6)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n7 / 3 = 2.33 (left: 3 2.33 6)\n",
                    "11 - 6 = 5 (left: 2 5 6)\n7 - 3 = 4 (left: 3 6 4)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n4 + 6 = 10 (left: 10 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n6 + 4 = 10 (left: 10 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n4 * 6 = 24 (left: 24 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 6 11",
                "ys": [
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n4 + 6 = 10 (left: 10 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n6 + 4 = 10 (left: 10 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n4 * 6 = 24 (left: 24 11)\n"
                ],
                "new_ys": [
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n12 - 11 = 1 (left: 1 12)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 * 12 = 132 (left: 132)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n12 / 11 = 1 (left: 1 12)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n11 + 36 = 47 (left: 47)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n11 * 36 = 396 (left: 396)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 / 11 = 3.27 (left: 3.27)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 / 0 = undefined (left: 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 * 0 = 0 (left: 0)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n4 + 6 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n4 + 6 = 10 (left: 10 11)\n11 - 10 = 1 (left: 1 11)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n6 + 4 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n6 + 4 = 10 (left: 10 11)\n11 - 10 = 1 (left: 1)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n6 + 4 = 10 (left: 10 11)\n10 * 11 = 110 (left: 110)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n6 + 4 = 10 (left: 10 11)\n11 / 10 = 1.1 (left: 1.1)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n4 * 6 = 24 (left: 24 11)\n24 + 11 = 35 (left: 35)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n4 * 6 = 24 (left: 24 11)\n24 - 11 = 13 (left: 13)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n4 * 6 = 24 (left: 24 11)\n24 * 11 = 264 (left: 264)\n",
                    "6 - 2 = 4 (left: 4 6 11)\n4 * 6 = 24 (left: 24 11)\n24 / 11 = 2.18 (left: 2.18)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 6 11",
                "ys": [
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nInput: 3 3 3 3\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nPossible next steps:\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\nInput: 25\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\nPossible next steps:\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\n25 + 1 = 26 (left: 1 25 26)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\nInput: 3 6 9 12\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\nPossible next steps:\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n3 + 6 = 9 (left: 9 9 12)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n3 * 6 = 18 (left: 9 12 18)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n9 - 3 = 6 (left: 6 9 12)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n12 - 9 = 3 (left: 3 6 12)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n9 / 3 = 3 (left: 3 6 12)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n12 / 3 = 4 (left: 3 6 4)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n6 + 9 = 15 (left: 3 12 15)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n9 * 3 = 27 (left: 6 12 27)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n11 * 1 = 11 (left: 1)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n11 / 1 = 11 (left: 1)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\nInput: 4 5 6 7\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\nPossible next steps:\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n6 + 7 = 13 (left: 4 5 13)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n4 * 5 = 20 (left: 6 7 20)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n6 * 7 = 42 (left: 4 5 42)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n5 + 6 = 11 (left: 4 7 11)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n7 - 4 = 3 (left: 3 5 6)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n4 - 5 = -1 (left: -1 6 7)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 - 6 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n5 * 6 = 30 (left: 4 7 30)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\nPossible next steps:\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 / 2 = 6 (left: 6)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 - 2 = 10 (left: 10)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 is the final result.\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 / 6 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n11 is the final number, no more steps possible.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nInput: 3 3 3 3\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nPossible next steps:\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 * 2 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\nInput: 25\n"
                ]
            }
        ],
        "idx": 846,
        "ys": [
            "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nInput: 3 3 3 3\n",
            "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nPossible next steps:\n",
            "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 + 3 = 6 (left: 3 3 6)\n",
            "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 * 3 = 9 (left: 3 3 9)\n",
            "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 / 3 = 1 (left: 1 3 3)\n",
            "3 * 2 = 6 (left: 6 6 11)\n6 + 6 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n3 - 3 = 0 (left: 0 3 3)\n",
            "3 * 2 = 6 (left: 6 6 11)\n6 * 6 = 36 (left: 11 36)\n36 - 11 = 25 (left: 25)\nInput: 25\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 25442,
            "prompt_tokens": 78095,
            "cost": 0.1680265
        },
        "time_spent": 30.083552837371826
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 2 9 9)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n",
                    "5 * 2 = 10 (left: 4 9 10)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "9 / 3 = 3 (left: 2 4 3)\n",
                    "4 + 5 = 9 (left: 2 9 9)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n",
                    "5 * 2 = 10 (left: 4 9 10)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 5 9",
                "ys": [
                    "9 / 3 = 3 (left: 2 4 3)\n",
                    "4 + 5 = 9 (left: 2 9 9)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n",
                    "5 * 2 = 10 (left: 4 9 10)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n"
                ],
                "new_ys": [
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n4 / 2 = 2 (left: 2 3)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 + 2 = 5 (left: 2 4)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n4 - 2 = 2 (left: 2 2)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n4 / 3 = 1 (left: 1 3)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 + 4 = 7 (left: 2 7)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 * 2 = 6 (left: 4 6)\n",
                    "4 + 5 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 2 7 9)\n",
                    "4 + 5 = 9 (left: 2 9 9)\n9 / 2 = 4 (left: 4 9 9)\n",
                    "4 + 5 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 2 7 9)\n",
                    "4 + 5 = 9 (left: 2 9 9)\n9 / 2 = 4 (left: 4 9 9)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n4 * 1 = 4 (left: 4 9)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n9 - 4 = 5 (left: 5 9)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n9 / 1 = 9 (left: 4 9)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 / 4 = 1 (left: 1 4)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 + 2 = 6 (left: 4 6)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 * 2 = 8 (left: 4 8)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 - 2 = 2 (left: 2 4)\n",
                    "5 * 2 = 10 (left: 4 9 10)\n4 + 9 = 13 (left: 13 10)\n",
                    "5 * 2 = 10 (left: 4 9 10)\n4 * 9 = 36 (left: 36 10)\n",
                    "5 * 2 = 10 (left: 4 9 10)\n9 - 4 = 5 (left: 5 10)\n",
                    "5 * 2 = 10 (left: 4 9 10)\n9 / 4 = 2.25 (left: 2 10)\n",
                    "5 * 2 = 10 (left: 4 9 10)\n10 + 4 = 14 (left: 4 14)\n",
                    "5 * 2 = 10 (left: 4 9 10)\n10 - 4 = 6 (left: 6 10)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n5 + 9 = 14 (left: 2 14)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n9 - 5 = 4 (left: 2 4 9)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n5 * 9 = 45 (left: 2 45)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n9 / 5 = 1.8 (left: 2 1.8 9)\n",
                    "9 - 4 = 5 (left: 2 5 9)\nInput: 3 6 6 12\n",
                    "9 - 4 = 5 (left: 2 5 9)\nPossible next steps:\n",
                    "9 - 4 = 5 (left: 2 5 9)\n6 + 6 = 12 (left: 3 12 12)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n6 / 3 = 2 (left: 2 6 12)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n12 + 3 = 15 (left: 6 6 15)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n3 * 6 = 18 (left: 6 12 18)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n6 - 3 = 3 (left: 3 6 12)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n12 - 6 = 6 (left: 3 6 6)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n12 / 3 = 4 (left: 4 6 6)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n6 * 6 = 36 (left: 3 36)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n6 / 6 = 1 (left: 3 1 6)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    100,
                    0,
                    0,
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 * 2 = 6 (left: 4 6)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 + 2 = 6 (left: 4 6)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 + 4 = 7 (left: 2 7)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n4 * 1 = 4 (left: 4 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 5 9",
                "ys": [
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 * 2 = 6 (left: 4 6)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 + 2 = 6 (left: 4 6)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 + 4 = 7 (left: 2 7)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n4 * 1 = 4 (left: 4 9)\n"
                ],
                "new_ys": [
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n8 / 3 = 2 (left: 2)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 * 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 * 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 * 2 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 * 2 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 + 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 + 2 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 + 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 + 2 = 6 (left: 4 6)\n6 / 4 = 1 (left: 1)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n3 + 6 = 9 (left: 6 9)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 3 6)\n6 / 3 = 2 (left: 2 6)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 + 4 = 7 (left: 2 7)\n2 * 7 = 14 (left: 7 14)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 + 4 = 7 (left: 2 7)\n7 / 2 = 3.5 (left: 2 3.5)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)\n9 - 5 = 4 (left: 4)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)\n5 * 9 = 45 (left: 45)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)\n9 / 5 = 1.8 (left: 1.8)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)\nInput: 3 3 3 3\n",
                    "5 - 4 = 1 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)\nPossible next steps:\n",
                    "5 - 4 = 1 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n4 * 1 = 4 (left: 4 9)\n4 + 9 = 13 (left: 9 13)\n",
                    "5 - 4 = 1 (left: 1 4 9)\n4 * 1 = 4 (left: 4 9)\n9 - 4 = 5 (left: 5 9)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    100,
                    50,
                    100,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 * 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 + 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 * 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 + 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 5 9",
                "ys": [
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 * 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 + 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 * 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 + 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 2 * (4 + (5 * 9)) = 24\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n\n3 + 8 = 11 (left: 11)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n\n8 - 3 = 5 (left: 5)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 * 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (9 - (5 + 2)) = 24\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 + 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 5) * (4 + 2) = 24\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nThere are no possible next steps.\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 * 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 is the final result.\n",
                    "9 - 5 = 4 (left: 2 4 4)\n4 + 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\nThere are no possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    1000,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 2 4 4)\n4 + 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 5) * (4 + 2) = 24\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 2 * (4 + (5 * 9)) = 24\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n\n3 + 8 = 11 (left: 11)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n\n8 - 3 = 5 (left: 5)\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 * 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (9 - (5 + 2)) = 24\n",
                    "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nThere are no possible next steps.\n",
                    "9 / 3 = 3 (left: 2 4 3)\n3 * 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 is the final result.\n"
                ]
            }
        ],
        "idx": 847,
        "ys": [
            "9 - 5 = 4 (left: 2 4 4)\n4 + 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 5) * (4 + 2) = 24\n",
            "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 2 * (4 + (5 * 9)) = 24\n",
            "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n\n3 + 8 = 11 (left: 11)\n",
            "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n\n8 - 3 = 5 (left: 5)\n",
            "9 / 3 = 3 (left: 2 4 3)\n3 * 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (9 - (5 + 2)) = 24\n",
            "9 / 3 = 3 (left: 2 4 3)\n2 * 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\nThere are no possible next steps.\n",
            "9 / 3 = 3 (left: 2 4 3)\n3 * 2 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 is the final result.\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 26669,
            "prompt_tokens": 83949,
            "cost": 0.1792615
        },
        "time_spent": 26.83628511428833
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 7 11 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n",
                    "7 - 4 = 3 (left: 3 11 12)\n",
                    "12 - 11 = 1 (left: 4 1 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n",
                    "7 - 4 = 3 (left: 3 11 12)\n",
                    "12 - 11 = 1 (left: 4 1 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 7 11 12",
                "ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n",
                    "7 - 4 = 3 (left: 3 11 12)\n",
                    "12 - 11 = 1 (left: 4 1 12)\n"
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 / 11 = 1 (left: 1 12)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n11 + 12 = 23 (left: 23 28)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n11 - 12 = -1 (left: -1 28)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n11 * 12 = 132 (left: 28 132)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n12 - 11 = 1 (left: 1 28)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n12 / 11 = 1 (left: 1 28)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n28 - 11 = 17 (left: 17 28)\n",
                    "7 - 4 = 3 (left: 3 11 12)\n3 + 11 = 14 (left: 12 14)\n",
                    "7 - 4 = 3 (left: 3 11 12)\n3 * 11 = 33 (left: 12 33)\n",
                    "7 - 4 = 3 (left: 3 11 12)\n11 - 3 = 8 (left: 8 12)\n",
                    "7 - 4 = 3 (left: 3 11 12)\n11 / 3 = 3 (left: 3 12)\n",
                    "7 - 4 = 3 (left: 3 11 12)\n12 + 3 = 15 (left: 11 15)\n",
                    "7 - 4 = 3 (left: 3 11 12)\n12 - 3 = 9 (left: 9 12)\n",
                    "12 - 11 = 1 (left: 4 1 12)\n4 + 1 = 5 (left: 5 12)\n",
                    "12 - 11 = 1 (left: 4 1 12)\n4 * 1 = 4 (left: 4 12)\n",
                    "12 - 11 = 1 (left: 4 1 12)\n4 - 1 = 3 (left: 3 12)\n",
                    "12 - 11 = 1 (left: 4 1 12)\n4 / 1 = 4 (left: 4 12)\n",
                    "12 - 11 = 1 (left: 4 1 12)\n12 - 1 = 11 (left: 4 11)\n",
                    "12 - 11 = 1 (left: 4 1 12)\n12 / 1 = 12 (left: 4 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 / 11 = 1 (left: 1 12)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n11 - 12 = -1 (left: -1 28)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n12 - 11 = 1 (left: 1 28)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n12 / 11 = 1 (left: 1 28)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 7 11 12",
                "ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 / 11 = 1 (left: 1 12)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n11 - 12 = -1 (left: -1 28)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n12 - 11 = 1 (left: 1 28)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n12 / 11 = 1 (left: 1 28)\n"
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n22 - 12 = 10 (left: 10 22)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 * 22 = 264 (left: 264)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n22 / 12 = 1.83 (left: 1.83 22)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\nInput: 5 5 1\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\nPossible next steps:\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n5 + 5 = 10 (left: 1 10)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n5 - 5 = 0 (left: 0 5)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n5 / 5 = 1 (left: 1 5)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n5 * 5 = 25 (left: 25)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\nInput: 10 20 30 40\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\nPossible next steps:\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n10 + 20 = 30 (left: 30 30 40)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n20 + 30 = 50 (left: 10 50 40)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n30 + 40 = 70 (left: 10 20 70)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n10 / 20 = 0.5 (left: 0.5 20 30 40)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n20 / 30 = 0.67 (left: 10 0.67 30 40)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n30 / 40 = 0.75 (left: 10 20 0.75 40)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n10 * 20 = 200 (left: 200 30 40)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n20 * 30 = 600 (left: 10 600 40)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n30 * 40 = 1200 (left: 10 20 1200)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n12 + 121 = 133 (left: 133)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n121 - 12 = 109 (left: 109)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n12 * 121 = 1452 (left: 1452)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 * 11 = 121 (left: 12 121)\n121 / 12 = 10.0833 (left: 10.0833)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n0 + 12 = 12 (left: 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n12 / 1 = 12 (left: 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n12 - 0 = 12 (left: 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n12 * 0 = 0 (left: 0)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 / 11 = 1 (left: 1 12)\n12 - 1 = 11 (left: 1 11)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 / 11 = 1 (left: 1 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 / 11 = 1 (left: 1 12)\n12 + 1 = 13 (left: 1 13)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 / 11 = 1 (left: 1 12)\n12 * 1 = 12 (left: 1 12)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n11 - 12 = -1 (left: -1 28)\n28 - (-1) = 29 (left: -1 29)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n11 - 12 = -1 (left: -1 28)\n28 + (-1) = 27 (left: -1 27)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n12 - 11 = 1 (left: 1 28)\n1 * 28 = 28 (left: 28)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n12 - 11 = 1 (left: 1 28)\n28 / 1 = 28 (left: 1 28)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n12 / 11 = 1 (left: 1 28)\n1 * 28 = 28 (left: 28)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n12 / 11 = 1 (left: 1 28)\n28 / 1 = 28 (left: 1 28)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n5 * 5 = 25 (left: 25)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n0 + 12 = 12 (left: 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n12 / 1 = 12 (left: 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n12 - 0 = 12 (left: 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n\n",
                    "4 * 7 = 28 (left: 11 12 28)\n12 - 11 = 1 (left: 1 28)\n1 * 28 = 28 (left: 28)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 7 11 12",
                "ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n5 * 5 = 25 (left: 25)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n0 + 12 = 12 (left: 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n12 / 1 = 12 (left: 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n12 - 0 = 12 (left: 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n\n",
                    "4 * 7 = 28 (left: 11 12 28)\n12 - 11 = 1 (left: 1 28)\n1 * 28 = 28 (left: 28)\n"
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\nInput: 3 3 8 8\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\nPossible next steps:\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n8 / 3 = 2 (left: 2 3 8)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n3 * 8 = 24 (left: 8 8 24)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n3 - 8 = -5 (left: 3 8 -5)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n8 + 3 = 11 (left: 3 8 11)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n8 * 3 = 24 (left: 3 24 8)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n3 / 8 = 0.375 (left: 0.375 3 8)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n5 * 5 = 25 (left: 25)\nInput: 3 3 8 8\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n5 * 5 = 25 (left: 25)\nPossible next steps:\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n5 * 5 = 25 (left: 25)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n5 * 5 = 25 (left: 25)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n5 * 5 = 25 (left: 25)\n8 - 3 = 5 (left: 3 8 5)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n5 * 5 = 25 (left: 25)\n3 * 3 = 9 (left: 8 9 8)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n5 * 5 = 25 (left: 25)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n5 * 5 = 25 (left: 25)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n5 * 5 = 25 (left: 25)\n3 * 3 = 9 (left: 8 8 9)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n5 * 5 = 25 (left: 25)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n0 + 12 = 12 (left: 12)\nThere are no possible next steps.\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n12 / 1 = 12 (left: 12)\nPossible next steps:\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n12 / 1 = 12 (left: 12)\n12 + 12 = 24 (left: 24)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n12 - 0 = 12 (left: 12)\nPossible next steps:\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n12 - 0 = 12 (left: 12)\n12 + 2 = 14 (left: 2 14)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n12 - 0 = 12 (left: 12)\n12 * 2 = 24 (left: 2 24)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n12 - 0 = 12 (left: 12)\n12 - 2 = 10 (left: 2 10)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n12 - 0 = 12 (left: 12)\n12 / 2 = 6 (left: 2 6)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n\n0 + 12 = 12 (left: 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n\n12 - 0 = 12 (left: 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n\n12 / 0 = Error (left: 0 12)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 - 11 = 0 (left: 0 12)\n\n12 * 0 = 0 (left: 0)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n12 - 11 = 1 (left: 1 28)\n1 * 28 = 28 (left: 28)\n28 + 1 = 29 (left: 1 28)\n",
                    "4 * 7 = 28 (left: 11 12 28)\n12 - 11 = 1 (left: 1 28)\n1 * 28 = 28 (left: 28)\n28 / 2 = 14 (left: 14 28)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\nInput: 3 3 8 8\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\nPossible next steps:\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n8 / 3 = 2 (left: 2 3 8)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n3 * 8 = 24 (left: 8 8 24)\n",
                    "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n3 - 8 = -5 (left: 3 8 -5)\n"
                ]
            }
        ],
        "idx": 848,
        "ys": [
            "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\nInput: 3 3 8 8\n",
            "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\nPossible next steps:\n",
            "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n3 + 3 = 6 (left: 6 8 8)\n",
            "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n8 - 3 = 5 (left: 3 5 8)\n",
            "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n8 / 3 = 2 (left: 2 3 8)\n",
            "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n3 * 8 = 24 (left: 8 8 24)\n",
            "4 + 7 = 11 (left: 11 11 12)\n11 + 11 = 22 (left: 12 22)\n12 + 22 = 34 (left: 34)\n3 - 8 = -5 (left: 3 8 -5)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 28123,
            "prompt_tokens": 88300,
            "cost": 0.18869600000000003
        },
        "time_spent": 32.110962867736816
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 4 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 * 2 = 4 (left: 4 2 9)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n",
                    "9 / 2 = 4 (left: 2 4 4)\n",
                    "4 * 2 = 8 (left: 2 4 8)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 * 2 = 4 (left: 4 2 9)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n",
                    "9 / 2 = 4 (left: 2 4 4)\n",
                    "4 * 2 = 8 (left: 2 4 8)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 4 9",
                "ys": [
                    "2 * 2 = 4 (left: 4 2 9)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n",
                    "9 / 2 = 4 (left: 2 4 4)\n",
                    "4 * 2 = 8 (left: 2 4 8)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n"
                ],
                "new_ys": [
                    "2 * 2 = 4 (left: 4 2 9)\n4 + 2 = 6 (left: 6 9)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n4 / 2 = 2 (left: 2 9)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 - 4 = 5 (left: 5 9)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n9 / 4 = 2 (left: 4 2)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 - 4 = 0 (left: 0 9)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n4 - 2 = 2 (left: 2 2 7)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n7 - 4 = 3 (left: 2 3 4)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n4 * 2 = 8 (left: 2 7 8)\n",
                    "9 - 2 = 7 (left: 2 4 7)\n7 - 2 = 5 (left: 4 5 7)\n",
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n",
                    "9 / 2 = 4 (left: 2 4 4)\n4 / 2 = 2 (left: 2 4)\n",
                    "9 / 2 = 4 (left: 2 4 4)\n2 * 4 = 8 (left: 4 8)\n",
                    "9 / 2 = 4 (left: 2 4 4)\n4 - 2 = 2 (left: 2 4)\n",
                    "4 * 2 = 8 (left: 2 4 8)\n6 * 2 = 12 (left: 4 8 12)\n",
                    "4 * 2 = 8 (left: 2 4 8)\n8 - 4 = 4 (left: 2 4 8)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n2 + 5 = 7 (left: 7 9)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n5 * 2 = 10 (left: 10 9)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n9 - 5 = 4 (left: 2 4)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n9 / 2 = 4 (left: 4 5)\n",
                    "9 - 4 = 5 (left: 2 5 9)\n9 - 2 = 7 (left: 5 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n4 + 2 = 6 (left: 6 9)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n4 / 2 = 2 (left: 2 9)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 - 4 = 5 (left: 5 9)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 4 9",
                "ys": [
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n4 + 2 = 6 (left: 6 9)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n4 / 2 = 2 (left: 2 9)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 - 4 = 5 (left: 5 9)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)\n"
                ],
                "new_ys": [
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n4 + 2 = 6 (left: 6 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n4 + 2 = 6 (left: 6 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n4 + 2 = 6 (left: 6 9)\n6 * 9 = 54 (left: 9 54)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n4 + 2 = 6 (left: 6 9)\n9 / 6 = 1.5 (left: 1.5 9)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n4 / 2 = 2 (left: 2 9)\n9 - 2 = 7 (left: 2 7)  \n",
                    "2 * 2 = 4 (left: 4 2 9)\n4 / 2 = 2 (left: 2 9)\n9 / 2 = 4.5 (left: 4.5 9)  \n",
                    "2 * 2 = 4 (left: 4 2 9)\n4 / 2 = 2 (left: 2 9)\n2 * 9 = 18 (left: 9 18)  \n",
                    "2 * 2 = 4 (left: 4 2 9)\n4 / 2 = 2 (left: 2 9)\nInput: 5 5 5 5\n",
                    "2 * 2 = 4 (left: 4 2 9)\n4 / 2 = 2 (left: 2 9)\nPossible next steps:  \n",
                    "2 * 2 = 4 (left: 4 2 9)\n4 / 2 = 2 (left: 2 9)\n5 + 5 = 10 (left: 5 10 5)  \n",
                    "2 * 2 = 4 (left: 4 2 9)\n4 / 2 = 2 (left: 2 9)\n5 / 5 = 1 (left: 1 5 5)  \n",
                    "2 * 2 = 4 (left: 4 2 9)\n4 / 2 = 2 (left: 2 9)\n5 * 5 = 25 (left: 5 5 25)  \n",
                    "2 * 2 = 4 (left: 4 2 9)\n4 / 2 = 2 (left: 2 9)\n5 - 5 = 0 (left: 0 5 5)  \n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 - 4 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 - 4 = 5 (left: 5 9)\n9 - 5 = 4 (left: 4 9)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 - 4 = 5 (left: 5 9)\n5 * 9 = 45 (left: 45)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 - 4 = 5 (left: 5 9)\n9 / 5 = 1.8 (left: 1.8 9)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 - 4 = 5 (left: 5 9)\n9 + 5 = 14 (left: 14)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n4 + 9 = 13 (left: 9 13)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n9 - 4 = 5 (left: 5 9)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25 9)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n8 - 9 = -1 (left: -1)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n8 / 9 = 0.89 (left: 0.89)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)\n16 + 9 = 25 (left: 9 25)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)\n16 - 9 = 7 (left: 7 16)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)\n16 * 9 = 144 (left: 144)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)\n16 / 9 = 1.78 (left: 1.78 16)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)\nInput: 5 2 3 7\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)\n5 + 2 = 7 (left: 3 7 7)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)\n5 - 2 = 3 (left: 3 3 7)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)\n5 * 2 = 10 (left: 3 7 10)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)\n5 / 2 = 2.5 (left: 2.5 3 7)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)\n7 + 2 = 9 (left: 5 3 9)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)\n7 - 2 = 5 (left: 3 5 7)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)\n7 * 2 = 14 (left: 3 5 14)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)\n7 / 2 = 3.5 (left: 3 3.5 7)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 - 4 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 - 4 = 5 (left: 5 9)\n9 + 5 = 14 (left: 14)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 4 9",
                "ys": [
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 - 4 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 - 4 = 5 (left: 5 9)\n9 + 5 = 14 (left: 14)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n"
                ],
                "new_ys": [
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 + 4) * 6 = 24\n",
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 is the final result.\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 - 4 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n14 is the final number.\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 - 4 = 5 (left: 5 9)\n9 + 5 = 14 (left: 14)\n14 is the only number, no possible next steps.\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n\n4 + 9 = 13 (left: 13)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n\n9 - 4 = 5 (left: 5)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n\n9 / 4 = 2.25 (left: 2.25)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n\n4 * 9 = 36 (left: 36)\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n17 - 1 = 16\n",
                    "2 + 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n17 / 1 = 17\n",
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\nPossible next steps:\n",
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\nInput cannot form a valid equation.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 + 4) * 6 = 24\n",
                    "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 is the final result.\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 - 4 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n14 is the final number.\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 - 4 = 5 (left: 5 9)\n9 + 5 = 14 (left: 14)\n14 is the only number, no possible next steps.\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n\n4 + 9 = 13 (left: 13)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n\n9 - 4 = 5 (left: 5)\n",
                    "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n\n9 / 4 = 2.25 (left: 2.25)\n"
                ]
            }
        ],
        "idx": 849,
        "ys": [
            "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 + 4) * 6 = 24\n",
            "9 / 2 = 4 (left: 2 4 4)\n2 + 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 is the final result.\n",
            "2 * 2 = 4 (left: 4 2 9)\n9 - 4 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n14 is the final number.\n",
            "2 * 2 = 4 (left: 4 2 9)\n9 - 4 = 5 (left: 5 9)\n9 + 5 = 14 (left: 14)\n14 is the only number, no possible next steps.\n",
            "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n\n4 + 9 = 13 (left: 13)\n",
            "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n\n9 - 4 = 5 (left: 5)\n",
            "2 * 2 = 4 (left: 4 2 9)\n9 / 2 = 4 (left: 4 9)\n\n9 / 4 = 2.25 (left: 2.25)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 29390,
            "prompt_tokens": 93460,
            "cost": 0.19896999999999998
        },
        "time_spent": 27.321002960205078
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 6 8 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n",
                    "6 / 2 = 3 (left: 3 8 8)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n",
                    "2 * 6 = 12 (left: 8 8 12)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n"
                ],
                "values": [
                    100,
                    50,
                    100,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n",
                    "6 / 2 = 3 (left: 3 8 8)\n",
                    "2 * 6 = 12 (left: 8 8 12)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 6 8 8",
                "ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n",
                    "6 / 2 = 3 (left: 3 8 8)\n",
                    "2 * 6 = 12 (left: 8 8 12)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n"
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 14 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n6 * 8 = 48 (left: 48 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "6 / 2 = 3 (left: 3 8 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "6 / 2 = 3 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "6 / 2 = 3 (left: 3 8 8)\n8 + 3 = 11 (left: 8 11)\n",
                    "6 / 2 = 3 (left: 3 8 8)\n3 * 8 = 24 (left: 8 24)\n",
                    "6 / 2 = 3 (left: 3 8 8)\n8 / 3 = 2 (left: 2 8)\n",
                    "6 / 2 = 3 (left: 3 8 8)\n3 - 8 = -5 (left: -5 8)\n",
                    "2 * 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 12 16)\n",
                    "2 * 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n",
                    "2 * 6 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 12 64)\n",
                    "2 * 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 / 4 = 1.5 (left: 1.5 8)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n4 * 6 = 24 (left: 8 24)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n",
                    "6 - 2 = 4 (left: 4 6 8)\n8 / 4 = 2 (left: 2 8)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 14 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n6 * 8 = 48 (left: 48 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 6 8 8",
                "ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 14 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n6 * 8 = 48 (left: 48 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n"
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 14 10)\n14 + 10 = 24\n",
                    "8 + 2 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 14 10)\n14 * 10 = 140\n",
                    "8 + 2 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 14 10)\n14 - 10 = 4\n",
                    "8 + 2 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 14 10)\n14 / 10 = 1\n",
                    "8 + 2 = 10 (left: 6 8 10)\n6 * 8 = 48 (left: 48 10)\n10 * 48 = 480 (left: 480)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n6 * 8 = 48 (left: 48 10)\n48 / 10 = 4 (left: 4 48)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n6 * 8 = 48 (left: 48 10)\n48 - 10 = 38 (left: 38 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n10 / 2 = 5 (left: 5)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 1 10)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n10 - 8 = 2 (left: 2)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 * 10 = 80 (left: 80)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n10 / 8 = 1.25 (left: 1.25)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\nInput: 5 5 1 12\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\nPossible next steps:\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n5 + 5 = 10 (left: 10 1 12)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n5 + 1 = 6 (left: 6 5 12)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n5 * 5 = 25 (left: 25 1 12)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n5 / 5 = 1 (left: 1 5 12)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n5 - 1 = 4 (left: 4 5 12)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n5 + 12 = 17 (left: 5 1 17)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n5 - 5 = 0 (left: 0 5 12)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n5 * 1 = 5 (left: 5 5 12)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n5 / 1 = 5 (left: 5 1 12)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n1 + 12 = 13 (left: 5 5 13)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n1 - 5 = -4 (left: -4 5 12)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n1 * 12 = 12 (left: 5 12)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n1 / 5 = 0.2 (left: 0.2 5 12)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n12 - 5 = 7 (left: 5 7)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 14 10)\n14 + 10 = 24\n"
                ]
            },
            {
                "step": 3,
                "x": "2 6 8 8",
                "ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 14 10)\n14 + 10 = 24\n"
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: ((2 + 6) + 8) + 8 = 24\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\nInput: 3 5 9 10\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\nPossible next steps:\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n3 + 5 = 8 (left: 8 9 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n5 - 3 = 2 (left: 2 9 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n10 - 3 = 7 (left: 7 9 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n9 - 5 = 4 (left: 3 4 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n10 / 5 = 2 (left: 2 9 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n9 / 3 = 3 (left: 3 5 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n10 - 5 = 5 (left: 3 5 5)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n3 * 5 = 15 (left: 9 10 15)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n9 + 3 = 12 (left: 5 10 12)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n2 * 8 = 16 (left: 8 14 16)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n8 + 2 = 10 (left: 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n8 - 2 = 6 (left: 6 8)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n2 + 8 = 10 (left: 8 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n8 / 2 = 4 (left: 4 8)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n8 - 2 = 6 (left: 6 8)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n2 * 8 = 16 (left: 8 16)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n2 + 8 = 10 (left: 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n2 / 8 = 0.25 (left: 0.25 8)\n",
                    "8 - 6 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\nNo possible next steps.\n",
                    "8 - 6 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 12)\n12 is the final result.\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n",
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n8 - 8 = 0 (left: 0)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 14 10)\n14 + 10 = 24\n14 + 10 = 24 (left: 24)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100
                ],
                "select_new_ys": [
                    "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: ((2 + 6) + 8) + 8 = 24\n",
                    "8 + 2 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 14 10)\n14 + 10 = 24\n14 + 10 = 24 (left: 24)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\nInput: 3 5 9 10\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\nPossible next steps:\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n3 + 5 = 8 (left: 8 9 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n5 - 3 = 2 (left: 2 9 10)\n",
                    "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n10 - 3 = 7 (left: 7 9 10)\n"
                ]
            }
        ],
        "idx": 850,
        "ys": [
            "2 + 6 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: ((2 + 6) + 8) + 8 = 24\n",
            "8 + 2 = 10 (left: 6 8 10)\n6 + 8 = 14 (left: 14 10)\n14 + 10 = 24\n14 + 10 = 24 (left: 24)\n",
            "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\nInput: 3 5 9 10\n",
            "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\nPossible next steps:\n",
            "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n3 + 5 = 8 (left: 8 9 10)\n",
            "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n5 - 3 = 2 (left: 2 9 10)\n",
            "8 + 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n10 - 3 = 7 (left: 7 9 10)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 30750,
            "prompt_tokens": 98626,
            "cost": 0.20943900000000001
        },
        "time_spent": 27.160888671875
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 5 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 5 7)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n"
                ],
                "values": [
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 5 7)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 5 7",
                "ys": [
                    "4 + 5 = 9 (left: 5 5 7)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 - 5 = 0 (left: 0 7)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 / 5 = 1 (left: 1 7)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n7 - 5 = 2 (left: 2 5)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n7 / 5 = 1.4 (left: 1.4 5)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 * 7 = 35 (left: 1 35)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n7 - 5 = 2 (left: 1 2)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n7 / 5 = 1.4 (left: 1 1.4)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n7 - 5 = 2 (left: 2 5)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 * 7 = 35 (left: 1 35)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 - 5 = 0 (left: 0 7)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 / 5 = 1 (left: 1 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 5 7",
                "ys": [
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n7 - 5 = 2 (left: 2 5)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 * 7 = 35 (left: 1 35)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 - 5 = 0 (left: 0 7)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 / 5 = 1 (left: 1 7)\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n7 * 10 = 70 (left: 70)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 / 7 = 1.43 (left: 1.43 10)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\nInput: 4 5 6 7\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n5 - 4 = 1 (left: 1 6 7)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n4 * 5 = 20 (left: 6 7 20)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n5 / 4 = 1.25 (left: 1.25 6 7)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n6 + 7 = 13 (left: 4 13)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n7 - 6 = 1 (left: 1 4 7)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n6 * 7 = 42 (left: 4 42)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n7 / 6 = 1.17 (left: 4 1.17)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\nInput: 3 3 1 8\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n3 + 3 = 6 (left: 1 6 8)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n3 / 3 = 1 (left: 1 1 8)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n3 * 3 = 9 (left: 1 8 9)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n3 - 1 = 2 (left: 2 3 8)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n3 * 1 = 3 (left: 3 3 8)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n3 - 3 = 0 (left: 0 3 8)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n3 + 1 = 4 (left: 4 3 8)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n3 / 1 = 3 (left: 3 3 8)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n7 * 25 = 175 (left: 175)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n25 / 7 = 3 (left: 3 25)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n25 - 7 = 18 (left: 7 18)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n25 + 7 = 32 (left: 32)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n7 / 25 = 0.28 (left: 0.28)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\nInput: 10 5 3 6\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n10 + 5 = 15 (left: 15 3 6)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n5 * 3 = 15 (left: 10 15 6)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n6 * 3 = 18 (left: 10 5 18)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n6 + 3 = 9 (left: 10 5 9)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n10 + 6 = 16 (left: 16 5 3)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n6 / 3 = 2 (left: 10 5 2)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n6 - 3 = 3 (left: 10 5 3)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n10 * 5 = 50 (left: 50 3 6)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n10 - 5 = 5 (left: 5 3 6)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\nInput: 4 2 1\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\nPossible next steps:\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n4 + 2 = 6 (left: 6 1)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n2 * 1 = 2 (left: 4 2)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n4 * 1 = 4 (left: 4 2)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n4 / 2 = 2 (left: 2 2)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n4 - 2 = 2 (left: 2 1)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n2 + 1 = 3 (left: 4 3)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n7 - 5 = 2 (left: 2 5)\n5 - 2 = 3 (left: 3 5)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n7 - 5 = 2 (left: 2 5)\n5 / 2 = 2.5 (left: 2.5 5)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n7 - 5 = 2 (left: 2 5)\n2 + 5 = 7 (left: 5 7)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n7 - 5 = 2 (left: 2 5)\n2 * 5 = 10 (left: 5 10)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 * 7 = 35 (left: 1 35)\n35 - 1 = 34 (left: 1 34)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 * 7 = 35 (left: 1 35)\n35 / 1 = 35 (left: 1 35)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 * 7 = 35 (left: 1 35)\n35 - 1 = 34 (left: 1 34)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 - 5 = 0 (left: 0 7)\n0 + 7 = 7 (left: 7)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 - 5 = 0 (left: 0 7)\n7 - 0 = 7 (left: 7)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 - 5 = 0 (left: 0 7)\n7 / 0 = undefined (left: 7)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 - 5 = 0 (left: 0 7)\n7 * 0 = 0 (left: 0)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 / 5 = 1 (left: 1 7)\n7 - 1 = 6 (left: 6 7)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 / 5 = 1 (left: 1 7)\n7 / 1 = 7 (left: 7 7)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 / 5 = 1 (left: 1 7)\n7 + 1 = 8 (left: 7 8)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 / 5 = 1 (left: 1 7)\n1 * 7 = 7 (left: 7 7)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n25 + 7 = 32 (left: 32)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n7 * 10 = 70 (left: 70)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 / 7 = 1.43 (left: 1.43 10)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\nInput: 4 5 6 7\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 5 7",
                "ys": [
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n25 + 7 = 32 (left: 32)\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n7 * 10 = 70 (left: 70)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 / 7 = 1.43 (left: 1.43 10)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\nInput: 4 5 6 7\n"
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n17 is the final result.\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n25 + 7 = 32 (left: 32)\nNo possible next steps.\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n1 * 12 = 12 (left: 12)\nPossible next steps:\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n1 * 12 = 12 (left: 12)\nNo possible next steps.\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n10 - 3 = 7 (left: 7)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n10 / 3 = 3 (left: 3)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n7 * 10 = 70 (left: 70)\nNo possible next steps.\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 / 7 = 1.43 (left: 1.43 10)\n1.43 + 10 = 11.43 (left: 11.43)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 / 7 = 1.43 (left: 1.43 10)\n10 - 1.43 = 8.57 (left: 8.57)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 / 7 = 1.43 (left: 1.43 10)\n1.43 * 10 = 14.3 (left: 14.3)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 / 7 = 1.43 (left: 1.43 10)\n10 / 1.43 = 6.993 (left: 6.993)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\nInput: 4 5 6 7\n4 + 5 = 9 (left: 6 7 9)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\nInput: 4 5 6 7\n5 - 4 = 1 (left: 1 6 7)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\nInput: 4 5 6 7\n6 + 5 = 11 (left: 4 7 11)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\nInput: 4 5 6 7\n5 * 4 = 20 (left: 6 7 20)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\nInput: 4 5 6 7\n7 + 4 = 11 (left: 6 11 7)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\nInput: 4 5 6 7\n7 - 4 = 3 (left: 3 6 7)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n17 is the final result.\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n25 + 7 = 32 (left: 32)\nNo possible next steps.\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n1 * 12 = 12 (left: 12)\nPossible next steps:\n",
                    "5 - 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n1 * 12 = 12 (left: 12)\nNo possible next steps.\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n10 - 3 = 7 (left: 7)\n",
                    "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n"
                ]
            }
        ],
        "idx": 851,
        "ys": [
            "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n7 + 10 = 17 (left: 17)\n17 is the final result.\n",
            "4 + 5 = 9 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n25 + 7 = 32 (left: 32)\nNo possible next steps.\n",
            "5 - 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n1 * 12 = 12 (left: 12)\nPossible next steps:\n",
            "5 - 4 = 1 (left: 1 5 7)\n5 + 7 = 12 (left: 1 12)\n1 * 12 = 12 (left: 12)\nNo possible next steps.\n",
            "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
            "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n10 - 3 = 7 (left: 7)\n",
            "4 + 5 = 9 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 32153,
            "prompt_tokens": 102527,
            "cost": 0.2180965
        },
        "time_spent": 26.669907808303833
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n",
                    "3 * 2 = 6 (left: 6 8 11)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n"
                ],
                "values": [
                    100,
                    50,
                    100
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n",
                    "3 * 2 = 6 (left: 6 8 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 8 11",
                "ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n",
                    "3 * 2 = 6 (left: 6 8 11)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n5 * 8 = 40 (left: 40 11)\n",
                    "2 + 3 = 5 (left: 5 8 11)\nInput: 1 3 4 6\n",
                    "2 + 3 = 5 (left: 5 8 11)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 5 8 11)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n3 + 4 = 7 (left: 1 7 6)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n6 - 4 = 2 (left: 1 3 2)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n4 * 6 = 24 (left: 1 3 24)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n",
                    "3 * 2 = 6 (left: 6 8 11)\n6 + 8 = 14 (left: 14 11)\n",
                    "3 * 2 = 6 (left: 6 8 11)\n8 - 6 = 2 (left: 2 11)\n",
                    "3 * 2 = 6 (left: 6 8 11)\n6 * 8 = 48 (left: 48 11)\n",
                    "3 * 2 = 6 (left: 6 8 11)\n8 / 6 = 1.33 (left: 1.33 11)\n",
                    "3 * 2 = 6 (left: 6 8 11)\n11 + 6 = 17 (left: 6 17)\n",
                    "3 * 2 = 6 (left: 6 8 11)\n11 - 6 = 5 (left: 5 11)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n5 * 8 = 40 (left: 40 11)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 8 11",
                "ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n5 * 8 = 40 (left: 40 11)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n13 - 11 = 2 (left: 2 11)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n13 * 11 = 143 (left: 143)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n13 / 11 = 1.18 (left: 1.18 11)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 16 = 128 (left: 8 128)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 * 8 = 128 (left: 8 128)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 + 8 = 24 (left: 8 24)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 8)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 / 16 = 0.5 (left: 0.5 16)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\nInput: 3 3 8 8\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\nPossible next steps:\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n3 * 3 = 9 (left: 9 8 8)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n3 / 3 = 1 (left: 1 8 8)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 + 3 = 11 (left: 3 8 11)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n3 * 8 = 24 (left: 24 8)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 * 3 = 24 (left: 24 8)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 / 3 = 2.67 (left: 2.67 8)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n3 - 8 = -5 (left: -5 8)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 / 8 = 1 (left: 3 3 1)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n11 - 3 = 8 (left: 8)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n11 / 3 = 3 (left: 3)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n5 * 8 = 40 (left: 40 11)\n40 + 11 = 51 (left: 11 51)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n5 * 8 = 40 (left: 40 11)\n40 - 11 = 29 (left: 29 11)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n5 * 8 = 40 (left: 40 11)\n40 / 11 = 3.64 (left: 3.64 11)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n5 * 8 = 40 (left: 40 11)\n40 * 11 = 440 (left: 440 11)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n10 - 8 = 2 (left: 2)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 * 10 = 80 (left: 80)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n10 / 8 = 1.25 (left: 1.25)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n\n",
                    "11 - 3 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 8 11",
                "ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n\n"
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\nAnswer: ((2 + 3) + 8) + 11 = 24\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (11 - 3) * (2 * 8) = 24\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n14 is the final result.\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\nInput: 3 3\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n3 + 3 = 6 (left: 6)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n3 - 3 = 0 (left: 0)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n3 * 3 = 9 (left: 9)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n3 / 3 = 1 (left: 1)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\nThere are no possible next steps.\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 is the final number, no possible next steps.\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n\n8 + 10 = 18 (left: 18)\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)\n\n10 - 8 = 2 (left: 2)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\nAnswer: ((2 + 3) + 8) + 11 = 24\n",
                    "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (11 - 3) * (2 * 8) = 24\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n14 is the final result.\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\nInput: 3 3\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\nPossible next steps:\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n3 + 3 = 6 (left: 6)\n",
                    "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n3 - 3 = 0 (left: 0)\n"
                ]
            }
        ],
        "idx": 852,
        "ys": [
            "2 + 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\nAnswer: ((2 + 3) + 8) + 11 = 24\n",
            "11 - 3 = 8 (left: 2 8 8)\n2 * 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (11 - 3) * (2 * 8) = 24\n",
            "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n14 is the final result.\n",
            "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\nInput: 3 3\n",
            "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\nPossible next steps:\n",
            "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n3 + 3 = 6 (left: 6)\n",
            "2 + 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n3 - 3 = 0 (left: 0)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 33260,
            "prompt_tokens": 107341,
            "cost": 0.2275315
        },
        "time_spent": 25.680449962615967
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 7 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 7 = 11 (left: 8 11 13)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n"
                ],
                "values": [
                    50,
                    100,
                    100
                ],
                "select_new_ys": [
                    "7 - 4 = 3 (left: 3 8 13)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 7 8 13",
                "ys": [
                    "7 - 4 = 3 (left: 3 8 13)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n"
                ],
                "new_ys": [
                    "7 - 4 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 8 11 13)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n8 - 3 = 5 (left: 5 8 13)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10 13)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 8 13 24)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n13 - 8 = 5 (left: 3 5 13)\n",
                    "7 - 4 = 3 (left: 3 8 13)\n13 / 3 = 4 (left: 4 8 13)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 / 8 = 0.875 (left: 0.875 9)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 * 8 = 56 (left: 56 9)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 * 11 = 88 (left: 13 88)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 * 8 = 88 (left: 13 88)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 - 8 = 3 (left: 3 13)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n13 - 8 = 5 (left: 5 13)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n13 / 8 = 1.625 (left: 1.625 13)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n13 - 8 = 5 (left: 5 13)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 - 8 = 3 (left: 3 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 7 8 13",
                "ys": [
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 - 8 = 3 (left: 3 13)\n"
                ],
                "new_ys": [
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 * 9 = 135 (left: 135)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 / 9 = 1.67 (left: 1.67 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 / 15 = 0.6 (left: 0.6 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 * 15 = 135 (left: 135)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\nInput: 4 4 4 4\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\nPossible next steps:\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 + 4 = 8 (left: 4 8 4)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 / 4 = 1 (left: 1 4 4 4)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 * 4 = 16 (left: 4 16 4)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 - 4 = 0 (left: 0 4 4 4)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10 17)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 - 7 = 10 (left: 7 10)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n17 / 7 = 2 (left: 2 17)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 * 17 = 119 (left: 119)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\nInput: 3 7 8\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\nPossible next steps:\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n3 + 7 = 10 (left: 10 8)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n3 * 7 = 21 (left: 21 8)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 8 = 15 (left: 3 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 * 8 = 56 (left: 3 56)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n8 - 3 = 5 (left: 5 7)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n8 - 3 = 5 (left: 3 5)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n8 / 3 = 2 (left: 2 7)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 * 8 = 56 (left: 56)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n1 + 9 = 10 (left: 9 10)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8 9)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n7 + 2 = 9 (left: 9)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n7 - 2 = 5 (left: 5)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n7 * 2 = 14 (left: 14)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n7 / 2 = 3 (left: 3)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\nInput: 5 5 10 2\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\nPossible next steps:\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n5 + 5 = 10 (left: 10 10 2)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n5 * 5 = 25 (left: 25 10 2)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n5 / 5 = 1 (left: 1 10 2)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n5 - 5 = 0 (left: 0 10 2)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n10 + 2 = 12 (left: 5 12 2)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n10 * 2 = 20 (left: 5 10 20)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n10 / 2 = 5 (left: 5 5 2)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n10 - 2 = 8 (left: 5 10 8)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 + 19 = 32 (left: 32)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n19 - 13 = 6 (left: 6 19)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n19 / 13 = 1 (left: 1 19)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n19 * 13 = 247 (left: 247)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 - 19 = -6 (left: -6 13)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n19 + 13 = 32 (left: 32)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\nInput: 5 5 5 5\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\nPossible next steps:\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n5 + 5 = 10 (left: 5 10 5)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n13 + 19 = 32 (left: 32)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n19 - 13 = 6 (left: 6 19)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n19 / 13 = 1 (left: 1 19)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n19 * 13 = 247 (left: 247)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n13 - 19 = -6 (left: -6 19)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n19 + 13 = 32 (left: 32)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\nInput: 5 9 1 3\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\nPossible next steps:\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n5 + 9 = 14 (left: 14 1 3)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n9 - 5 = 4 (left: 4 1 3)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n5 / 9 = 0 (left: 0 1 3)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n5 * 9 = 45 (left: 45 1 3)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n9 + 1 = 10 (left: 5 10 3)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n9 / 1 = 9 (left: 5 9 3)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n9 * 1 = 9 (left: 5 9 3)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n9 - 1 = 8 (left: 5 8 3)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n9 + 3 = 12 (left: 5 12 1)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n9 / 3 = 3 (left: 5 3 3)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n9 * 3 = 27 (left: 5 27 1)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n1 + 3 = 4 (left: 5 9 4)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n3 - 1 = 2 (left: 5 9 2)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n3 / 1 = 3 (left: 5 9 3)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n3 * 1 = 3 (left: 5 9 3)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n3 + 5 = 8 (left: 8 1 3)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n3 - 5 = -2 (left: -2 1 3)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n3 / 5 = 0 (left: 0 1 3)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n3 * 5 = 15 (left: 15 1 3)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n5 - 9 = -4 (left: -4 1 3)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n5 / 9 = 0 (left: 0 1 3)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 + 8 = 19 (left: 13 19)\n5 * 9 = 45 (left: 45 1 3)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 - 8 = 3 (left: 3 13)\n3 * 13 = 39 (left: 13 39)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 - 8 = 3 (left: 3 13)\n13 / 3 = 4 (left: 3 4)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n11 - 8 = 3 (left: 3 13)\n13 - 3 = 10 (left: 3 10)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 / 4 = 1 (left: 1 4 4 4)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 - 4 = 0 (left: 0 4 4 4)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n7 * 2 = 14 (left: 14)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 + 19 = 32 (left: 32)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 7 8 13",
                "ys": [
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 / 4 = 1 (left: 1 4 4 4)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 - 4 = 0 (left: 0 4 4 4)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n7 * 2 = 14 (left: 14)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 + 19 = 32 (left: 32)\n"
                ],
                "new_ys": [
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((13 - 4) + 7) + 8 = 24\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((13 - 4) + 7) + 8 = 24\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (7 + 17) + 8 = 24\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 / 4 = 1 (left: 1 4 4 4)\n1 + 4 = 5 (left: 4 4 5)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 / 4 = 1 (left: 1 4 4 4)\n4 / 1 = 4 (left: 4 4 4)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 / 4 = 1 (left: 1 4 4 4)\n4 + 1 = 5 (left: 4 4 5)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 / 4 = 1 (left: 1 4 4 4)\n1 * 4 = 4 (left: 4 4 4)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 / 4 = 1 (left: 1 4 4 4)\n4 - 1 = 3 (left: 3 4 4)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 / 4 = 1 (left: 1 4 4 4)\n4 - 1 = 3 (left: 3 4 4)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 / 4 = 1 (left: 1 4 4 4)\n4 / 1 = 4 (left: 4 4 4)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 - 4 = 0 (left: 0 4 4 4)\n0 + 4 = 4 (left: 4 4 4)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 - 4 = 0 (left: 0 4 4 4)\n4 * 4 = 16 (left: 0 4 16)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 - 4 = 0 (left: 0 4 4 4)\n4 / 4 = 1 (left: 0 1 4)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n7 * 2 = 14 (left: 14)\nInput: 14\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n7 * 2 = 14 (left: 14)\nPossible next steps:\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n7 * 2 = 14 (left: 14)\n14 + 1 = 15 (left: 1 15)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 7 2)\n7 * 2 = 14 (left: 14)\n14 - 1 = 13 (left: 1 13)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 + 19 = 32 (left: 32)\nInput: 4 6 6 7\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 + 19 = 32 (left: 32)\nPossible next steps:\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 + 19 = 32 (left: 32)\n4 + 6 = 10 (left: 6 7 10)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 + 19 = 32 (left: 32)\n6 / 4 = 1.5 (left: 1.5 6 7)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 + 19 = 32 (left: 32)\n7 - 4 = 3 (left: 3 6 6)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 + 19 = 32 (left: 32)\n6 * 4 = 24 (left: 6 7 24)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 + 19 = 32 (left: 32)\n6 / 4 = 1.5 (left: 1.5 6 7)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 + 19 = 32 (left: 32)\n7 - 4 = 3 (left: 3 6 6)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 + 19 = 32 (left: 32)\n7 - 6 = 1 (left: 1 6 6)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 + 19 = 32 (left: 32)\n7 / 6 = 1.17 (left: 1 1.17 6)\n",
                    "4 + 7 = 11 (left: 8 11 13)\n8 + 11 = 19 (left: 13 19)\n13 + 19 = 32 (left: 32)\n7 - 4 = 3 (left: 3 6 6)\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((13 - 4) + 7) + 8 = 24\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((13 - 4) + 7) + 8 = 24\n",
                    "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (7 + 17) + 8 = 24\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 / 4 = 1 (left: 1 4 4 4)\n1 + 4 = 5 (left: 4 4 5)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 / 4 = 1 (left: 1 4 4 4)\n4 / 1 = 4 (left: 4 4 4)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 / 4 = 1 (left: 1 4 4 4)\n4 + 1 = 5 (left: 4 4 5)\n",
                    "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 / 4 = 1 (left: 1 4 4 4)\n1 * 4 = 4 (left: 4 4 4)\n"
                ]
            }
        ],
        "idx": 853,
        "ys": [
            "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((13 - 4) + 7) + 8 = 24\n",
            "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((13 - 4) + 7) + 8 = 24\n",
            "13 - 4 = 9 (left: 7 8 9)\n8 + 9 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (7 + 17) + 8 = 24\n",
            "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 / 4 = 1 (left: 1 4 4 4)\n1 + 4 = 5 (left: 4 4 5)\n",
            "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 / 4 = 1 (left: 1 4 4 4)\n4 / 1 = 4 (left: 4 4 4)\n",
            "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 / 4 = 1 (left: 1 4 4 4)\n4 + 1 = 5 (left: 4 4 5)\n",
            "13 - 4 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n4 / 4 = 1 (left: 1 4 4 4)\n1 * 4 = 4 (left: 4 4 4)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 35367,
            "prompt_tokens": 112512,
            "cost": 0.239502
        },
        "time_spent": 36.24602222442627
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 6 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 8 12 12)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n"
                ],
                "values": [
                    50,
                    100,
                    100,
                    50
                ],
                "select_new_ys": [
                    "6 * 6 = 36 (left: 8 12 36)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 6 8 12",
                "ys": [
                    "6 * 6 = 36 (left: 8 12 36)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n"
                ],
                "new_ys": [
                    "6 * 6 = 36 (left: 8 12 36)\n8 + 12 = 20 (left: 20 36)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n12 * 8 = 96 (left: 96 36)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n12 / 8 = 1.5 (left: 1.5 36)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 / 12 = 3 (left: 3 36)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 12 = 24 (left: 8 24)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 / 8 = 1 (left: 1 12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n6 + 6 = 12 (left: 8 12)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n6 * 6 = 36 (left: 8 36)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n6 / 6 = 1 (left: 1 8)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n8 + 6 = 14 (left: 6 14)\n",
                    "12 - 6 = 6 (left: 6 6 8)\n8 - 6 = 2 (left: 2 8)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n8 + 12 = 20 (left: 20 36)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 / 12 = 3 (left: 3 36)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 12 = 24 (left: 8 24)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 6 8 12",
                "ys": [
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n8 + 12 = 20 (left: 20 36)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 / 12 = 3 (left: 3 36)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 12 = 24 (left: 8 24)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n8 + 12 = 20 (left: 20 36)\n20 + 36 = 56 (left: 56)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n8 + 12 = 20 (left: 20 36)\n20 - 36 = -16 (left: -16)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n8 + 12 = 20 (left: 20 36)\n20 * 36 = 720 (left: 720)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n8 + 12 = 20 (left: 20 36)\n20 / 36 = 0.56 (left: 0.56)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n28 - 12 = 16 (left: 16)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 * 28 = 336 (left: 336)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n28 / 12 = 2 (left: 2)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 / 12 = 3 (left: 3 36)\n3 * 12 = 36 (left: 12)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 / 12 = 3 (left: 3 36)\n3 / 36 = 12 (left: 12)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 / 12 = 3 (left: 3 36)\n36 / 3 = 12 (left: 12)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 12 = 24 (left: 8 24)\n8 * 3 = 24 (left: 3 8 24)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 12 = 24 (left: 8 24)\n8 / 2 = 4 (left: 4 8 24)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n12 * 8 = 96 (left: 96)\n",
                    "8 - 6 = 2 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 / 12 = 1.67 (left: 12 1.67)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n",
                    "6 + 6 = 12 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n8 + 12 = 20 (left: 20 36)\n20 - 36 = -16 (left: -16)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n28 - 12 = 16 (left: 16)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 / 12 = 3 (left: 3 36)\n3 * 12 = 36 (left: 12)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 / 12 = 3 (left: 3 36)\n3 / 36 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 6 8 12",
                "ys": [
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n8 + 12 = 20 (left: 20 36)\n20 - 36 = -16 (left: -16)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n28 - 12 = 16 (left: 16)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 / 12 = 3 (left: 3 36)\n3 * 12 = 36 (left: 12)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 / 12 = 3 (left: 3 36)\n3 / 36 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (8 - 6) * (6 * 2) = 24\n",
                    "6 * 6 = 36 (left: 8 12 36)\n8 + 12 = 20 (left: 20 36)\n20 - 36 = -16 (left: -16)\nThere are no possible next steps.\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\nInput: 3 3 3 8\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\nPossible next steps:\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n3 + 3 = 6 (left: 3 6 8)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n3 * 3 = 9 (left: 9 3 8)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n3 + 8 = 11 (left: 3 3 11)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n3 * 8 = 24 (left: 3 24 3)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n8 - 3 = 5 (left: 3 3 5)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n8 / 3 = 2 (left: 2 3 3)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n8 - 3 = 5 (left: 3 3 5)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n28 - 12 = 16 (left: 16)\n16 is the target number, no possible next steps.\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n\n12 + 28 = 40 (left: 40)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n\n12 * 28 = 336 (left: 336)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n\n28 / 12 = 2.33 (left: 2.33 28)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n\n28 - 12 = 16 (left: 16 28)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 / 12 = 3 (left: 3 36)\n3 * 12 = 36 (left: 12)\n12 + 1 = 13 (left: 1 13)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 / 12 = 3 (left: 3 36)\n3 * 12 = 36 (left: 12)\n12 - 1 = 11 (left: 1 11)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 / 12 = 3 (left: 3 36)\n3 * 12 = 36 (left: 12)\n12 * 1 = 12 (left: 1 12)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 / 12 = 3 (left: 3 36)\n3 * 12 = 36 (left: 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 / 12 = 3 (left: 3 36)\n3 / 36 = 12 (left: 12)\n12 is the final result.\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (8 - 6) * (6 * 2) = 24\n",
                    "6 * 6 = 36 (left: 8 12 36)\n8 + 12 = 20 (left: 20 36)\n20 - 36 = -16 (left: -16)\nThere are no possible next steps.\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\nInput: 3 3 3 8\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\nPossible next steps:\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n3 + 3 = 6 (left: 3 6 8)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n3 * 3 = 9 (left: 9 3 8)\n",
                    "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n3 + 8 = 11 (left: 3 3 11)\n"
                ]
            }
        ],
        "idx": 854,
        "ys": [
            "8 - 6 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (8 - 6) * (6 * 2) = 24\n",
            "6 * 6 = 36 (left: 8 12 36)\n8 + 12 = 20 (left: 20 36)\n20 - 36 = -16 (left: -16)\nThere are no possible next steps.\n",
            "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\nInput: 3 3 3 8\n",
            "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\nPossible next steps:\n",
            "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n3 + 3 = 6 (left: 3 6 8)\n",
            "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n3 * 3 = 9 (left: 9 3 8)\n",
            "6 * 6 = 36 (left: 8 12 36)\n36 - 8 = 28 (left: 12 28)\n12 + 28 = 40 (left: 40)\n3 + 8 = 11 (left: 3 3 11)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 36349,
            "prompt_tokens": 117210,
            "cost": 0.24851299999999998
        },
        "time_spent": 22.092675924301147
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 8 9 11)\n",
                    "6 / 5 = 1 (left: 1 8 9)\n",
                    "9 - 5 = 4 (left: 4 8 9)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n",
                    "8 + 6 = 14 (left: 8 9 14)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n",
                    "9 / 5 = 1.8 (left: 1.8 8 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    100
                ],
                "select_new_ys": [
                    "9 - 6 = 3 (left: 3 8 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n",
                    "6 / 5 = 1 (left: 1 8 9)\n",
                    "9 - 5 = 4 (left: 4 8 9)\n",
                    "8 + 6 = 14 (left: 8 9 14)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 8 9",
                "ys": [
                    "9 - 6 = 3 (left: 3 8 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n",
                    "6 / 5 = 1 (left: 1 8 9)\n",
                    "9 - 5 = 4 (left: 4 8 9)\n",
                    "8 + 6 = 14 (left: 8 9 14)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n"
                ],
                "new_ys": [
                    "9 - 6 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n",
                    "9 - 6 = 3 (left: 3 8 9)\n9 + 3 = 12 (left: 8 12 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 / 3 = 2 (left: 2 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 - 9 = -1 (left: -1 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 + 9 = 17 (left: 11 17)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 8 = 3 (left: 3 9)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n9 + 8 = 17 (left: 11 17)\n",
                    "6 / 5 = 1 (left: 1 8 9)\n1 + 8 = 9 (left: 8 9)\n",
                    "6 / 5 = 1 (left: 1 8 9)\n8 - 1 = 7 (left: 7 9)\n",
                    "6 / 5 = 1 (left: 1 8 9)\n9 - 1 = 8 (left: 8 9)\n",
                    "9 - 5 = 4 (left: 4 8 9)\n4 + 8 = 12 (left: 9 12)\n",
                    "9 - 5 = 4 (left: 4 8 9)\n4 * 8 = 32 (left: 32 9)\n",
                    "9 - 5 = 4 (left: 4 8 9)\n8 - 4 = 4 (left: 4 9)\n",
                    "9 - 5 = 4 (left: 4 8 9)\n8 / 4 = 2 (left: 2 9)\n",
                    "9 - 5 = 4 (left: 4 8 9)\n9 + 4 = 13 (left: 8 13)\n",
                    "9 - 5 = 4 (left: 4 8 9)\n9 - 4 = 5 (left: 5 9)\n",
                    "8 + 6 = 14 (left: 8 9 14)\n8 + 9 = 17 (left: 17 14)\n",
                    "8 + 6 = 14 (left: 8 9 14)\n8 / 9 = 0.8888888888888888 (left: 0.8888888888888888 14)\n",
                    "8 + 6 = 14 (left: 8 9 14)\n9 + 8 = 17 (left: 17 14)\n",
                    "8 + 6 = 14 (left: 8 9 14)\n8 * 9 = 72 (left: 72 14)\n",
                    "8 + 6 = 14 (left: 8 9 14)\n9 - 8 = 1 (left: 1 14)\n",
                    "8 + 6 = 14 (left: 8 9 14)\n14 - 9 = 5 (left: 8 5)\n",
                    "8 + 6 = 14 (left: 8 9 14)\n14 - 8 = 6 (left: 6 14)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n8 + 9 = 17 (left: 17 30)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n8 * 9 = 72 (left: 72 30)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n9 * 3 = 27 (left: 8 27)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n9 - 8 = 1 (left: 1 9 30)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n30 - 9 = 21 (left: 8 21)\n",
                    "5 * 6 = 30 (left: 8 9 30)\n30 / 3 = 10 (left: 8 10 9)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 / 3 = 2 (left: 2 9)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 - 9 = -1 (left: -1 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 8 9",
                "ys": [
                    "8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 / 3 = 2 (left: 2 9)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 - 9 = -1 (left: -1 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n"
                ],
                "new_ys": [
                    "8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n9 + 24 = 33 (left: 33)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n9 * 24 = 216 (left: 216)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 / 9 = 2 (left: 2)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n5 + 9 = 14 (left: 9 14)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n9 - 5 = 4 (left: 4 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n9 / 5 = 1 (left: 1 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n5 * 9 = 45 (left: 9 45)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\nInput: 3 3 6 8\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\nPossible next steps:\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n3 + 3 = 6 (left: 6 6 8)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n3 / 3 = 1 (left: 1 6 8)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n3 - 3 = 0 (left: 0 6 8)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n3 * 3 = 9 (left: 6 8 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n3 + 6 = 9 (left: 8 9 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n3 / 6 = 0 (left: 0 6 8)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n3 * 6 = 18 (left: 8 18)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n3 - 6 = -3 (left: -3 6 8)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n3 + 8 = 11 (left: 6 11)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n3 / 8 = 0.375 (left: 0.375 6 8)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n3 * 8 = 24 (left: 6 8 24)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n3 - 8 = -5 (left: -5 3 8)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n6 + 8 = 14 (left: 3 14)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n6 / 8 = 0.75 (left: 0.75 6 8)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n6 * 8 = 48 (left: 6 8 48)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n6 - 8 = -2 (left: -2 6 8)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n8 + 6 = 14 (left: 6 14)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n8 / 6 = 1.33333 (left: 1.33333 8)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n8 * 6 = 48 (left: 8 48)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n8 - 6 = 2 (left: 2 8)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\nInput: 1 5 5 9\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\nPossible next steps:\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n1 + 5 = 6 (left: 5 6 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n1 / 5 = 0.2 (left: 0.2 5 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n1 * 5 = 5 (left: 5 5 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n1 - 5 = -4 (left: -4 5 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n5 + 5 = 10 (left: 5 9 10)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n5 / 5 = 1 (left: 1 5 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n5 * 5 = 25 (left: 5 9 25)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n5 - 5 = 0 (left: 0 5 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n5 + 9 = 14 (left: 5 14)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n5 / 9 = 0.555556 (left: 0.555556 5 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n5 * 9 = 45 (left: 5 9 45)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n5 - 9 = -4 (left: -4 5 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n9 + 5 = 14 (left: 5 14)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n9 / 5 = 1.8 (left: 1.8 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n9 * 5 = 45 (left: 9 45)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n9 - 5 = 4 (left: 4 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n8 - 6 = 2 (left: 2)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n8 / 6 = 1.33 (left: 1.33)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 / 3 = 2 (left: 2 9)\n2 + 9 = 11 (left: 9 11)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 / 3 = 2 (left: 2 9)\n9 / 2 = 4.5 (left: 2 4.5)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 / 3 = 2 (left: 2 9)\n2 * 9 = 18 (left: 9 18)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n8 / 3 = 2 (left: 2 9)\n9 - 2 = 7 (left: 7 9)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 - 9 = -1 (left: -1 11)\n11 - (-1) = 12 (left: 11 12)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n8 - 9 = -1 (left: -1 11)\n11 + (-1) = 10 (left: 10 11)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n8 - 2 = 6 (left: 6)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n8 / 2 = 4 (left: 4)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n9 + 24 = 33 (left: 33)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 6 8 9",
                "ys": [
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n9 + 24 = 33 (left: 33)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n"
                ],
                "new_ys": [
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n9 + 24 = 33 (left: 33)\nThere are no possible next steps.\n",
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15)\nInput: 15\n",
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15)\nPossible next steps:\n",
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15)\n15 + 9 = 24 (left: 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15)\n15 - 9 = 6 (left: 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 is the final result.\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n\n6 + 8 = 14 (left: 8 14)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n\n8 - 6 = 2 (left: 2 8)\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\nNo more steps possible.\n",
                    "5 + 6 = 11 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 is the final result.\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 + 11 = 19 (left: 19)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n11 - 8 = 3 (left: 3)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n8 * 11 = 88 (left: 88)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n11 / 8 = 1.375 (left: 1.375)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n9 + 24 = 33 (left: 33)\nThere are no possible next steps.\n",
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15)\nInput: 15\n",
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15)\nPossible next steps:\n",
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15)\n15 + 9 = 24 (left: 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15)\n15 - 9 = 6 (left: 9)\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 is the final result.\n",
                    "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n\n6 + 8 = 14 (left: 8 14)\n"
                ]
            }
        ],
        "idx": 855,
        "ys": [
            "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n9 + 24 = 33 (left: 33)\nThere are no possible next steps.\n",
            "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15)\nInput: 15\n",
            "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15)\nPossible next steps:\n",
            "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15)\n15 + 9 = 24 (left: 9)\n",
            "8 - 5 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)\n24 - 9 = 15 (left: 15)\n15 - 9 = 6 (left: 9)\n",
            "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 is the final result.\n",
            "8 - 5 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n\n6 + 8 = 14 (left: 8 14)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 38228,
            "prompt_tokens": 122256,
            "cost": 0.25984
        },
        "time_spent": 38.06940507888794
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 5 6 9)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n",
                    "3 * 5 = 15 (left: 15 3 9)\n",
                    "3 - 3 = 0 (left: 0 3 9)\n",
                    "5 - 3 = 2 (left: 3 2 9)\n",
                    "5 * 3 = 15 (left: 15 5 9)\n",
                    "5 + 9 = 14 (left: 3 14 9)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n",
                    "3 + 9 = 12 (left: 12 3 9)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100
                ],
                "select_new_ys": [
                    "3 + 5 = 8 (left: 8 3 9)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n",
                    "3 + 9 = 12 (left: 12 3 9)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n",
                    "3 * 5 = 15 (left: 15 3 9)\n",
                    "3 - 3 = 0 (left: 0 3 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 5 9",
                "ys": [
                    "3 + 5 = 8 (left: 8 3 9)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n",
                    "3 + 9 = 12 (left: 12 3 9)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n",
                    "3 * 5 = 15 (left: 15 3 9)\n",
                    "3 - 3 = 0 (left: 0 3 9)\n"
                ],
                "new_ys": [
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 / 3 = 2 (left: 2 9)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n9 - 8 = 1 (left: 1 9)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 / 3 = 9 (left: 9 9)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 9 = 18 (left: 18 9)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 * 3 = 81 (left: 81 9)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n9 + 3 = 12 (left: 12 9)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n9 * 3 = 27 (left: 27 9)\n",
                    "3 + 9 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 9 15)\n",
                    "3 + 9 = 12 (left: 12 3 9)\n12 / 3 = 4 (left: 4 9)\n",
                    "3 + 9 = 12 (left: 12 3 9)\n12 - 3 = 9 (left: 9 9)\n",
                    "3 + 9 = 12 (left: 12 3 9)\n9 + 3 = 12 (left: 12 9)\n",
                    "3 + 9 = 12 (left: 12 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "3 + 9 = 12 (left: 12 3 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n5 * 6 = 30 (left: 30 9)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n6 - 5 = 1 (left: 1 9)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n6 / 5 = 1 (left: 1 9)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 + 5 = 14 (left: 6 14)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 * 5 = 45 (left: 45)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 - 5 = 4 (left: 4 9)\n",
                    "3 + 3 = 6 (left: 5 6 9)\n9 / 5 = 1.8 (left: 1.8 9)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n5 + 9 = 14 (left: 9 14)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n9 - 5 = 4 (left: 4 9)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n9 / 5 = 1.8 (left: 1.8 9)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n5 * 9 = 45 (left: 9 45)\n",
                    "3 * 3 = 9 (left: 5 9 9)\n9 + 5 = 14 (left: 14 9)\n",
                    "3 * 5 = 15 (left: 15 3 9)\n15 / 3 = 5 (left: 5 9)\n",
                    "3 * 5 = 15 (left: 15 3 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "3 * 5 = 15 (left: 15 3 9)\n15 + 3 = 18 (left: 9 18)\n",
                    "3 * 5 = 15 (left: 15 3 9)\n15 - 3 = 12 (left: 12 9)\n",
                    "3 - 3 = 0 (left: 0 3 9)\n0 + 3 = 3 (left: 3 9)\n",
                    "3 - 3 = 0 (left: 0 3 9)\n3 * 3 = 9 (left: 0 9)\n",
                    "3 - 3 = 0 (left: 0 3 9)\n3 / 3 = 1 (left: 0 9)\n",
                    "3 - 3 = 0 (left: 0 3 9)\nInput: 1 5 6 10\n",
                    "3 - 3 = 0 (left: 0 3 9)\nPossible next steps:\n",
                    "3 - 3 = 0 (left: 0 3 9)\n1 + 5 = 6 (left: 6 6 10)\n",
                    "3 - 3 = 0 (left: 0 3 9)\n5 * 1 = 5 (left: 5 6 10)\n",
                    "3 - 3 = 0 (left: 0 3 9)\n10 - 6 = 4 (left: 1 4 6)\n",
                    "3 - 3 = 0 (left: 0 3 9)\n1 * 5 = 5 (left: 5 6 10)\n",
                    "3 - 3 = 0 (left: 0 3 9)\n6 - 1 = 5 (left: 5 5 10)\n",
                    "3 - 3 = 0 (left: 0 3 9)\n10 - 5 = 5 (left: 1 5 5)\n",
                    "3 - 3 = 0 (left: 0 3 9)\n10 / 5 = 2 (left: 1 5 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 9 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 9 15)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 / 3 = 2 (left: 2 9)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n9 - 8 = 1 (left: 1 9)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 / 3 = 9 (left: 9 9)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 9 = 18 (left: 18 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 5 9",
                "ys": [
                    "3 + 9 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 9 15)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 / 3 = 2 (left: 2 9)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n9 - 8 = 1 (left: 1 9)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 / 3 = 9 (left: 9 9)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 9 = 18 (left: 18 9)\n"
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 + 9 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "3 + 9 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 9 15)\n15 * 9 = 135 (left: 135)\n",
                    "3 + 9 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 - 9 = 2 (left: 2)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 * 9 = 99 (left: 99)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 / 9 = 1.22 (left: 1.22)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 / 3 = 2 (left: 2 9)\n2 + 9 = 11 (left: 9 11)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 / 3 = 2 (left: 2 9)\n9 - 2 = 7 (left: 7 9)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n9 - 8 = 1 (left: 1 9)\n9 / 1 = 9 (left: 9)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n9 - 8 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 / 3 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 / 3 = 9 (left: 9 9)\n9 - 9 = 0 (left: 0)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 / 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 / 3 = 9 (left: 9 9)\n9 / 9 = 1 (left: 1)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n24 - 9 = 15 (left: 15)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n24 / 9 = 2 (left: 2 9)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n24 * 9 = 216 (left: 216)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n24 + 9 = 33 (left: 33)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n9 - 24 = -15 (left: -15)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n9 / 24 = 0 (left: 0 24)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n9 * 24 = 216 (left: 216)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 9 = 18 (left: 18 9)\n18 + 9 = 27 (left: 9 27)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 9 = 18 (left: 18 9)\n18 - 9 = 9 (left: 9 9)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 9 = 18 (left: 18 9)\n18 / 9 = 2 (left: 2 9)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 9 = 18 (left: 18 9)\n18 * 9 = 162 (left: 9 162)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 9 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 + 9 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 / 3 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n24 - 9 = 15 (left: 15)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n24 + 9 = 33 (left: 33)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n9 - 24 = -15 (left: -15)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 5 9",
                "ys": [
                    "3 + 9 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 + 9 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 / 3 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n24 - 9 = 15 (left: 15)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n24 + 9 = 33 (left: 33)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n9 - 24 = -15 (left: -15)\n"
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (3 + 9) + (3 + 5) = 24\n",
                    "3 + 9 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 + 9) + 3) + 5 = 24\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\nInput: 3 5 10 15\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\nPossible next steps:\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n3 + 5 = 8 (left: 8 10 15)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n5 * 3 = 15 (left: 10 15 15)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n10 - 3 = 7 (left: 7 10 15)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n15 - 5 = 10 (left: 3 10 15)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n3 * 5 = 15 (left: 10 15 15)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n15 / 3 = 5 (left: 5 10 15)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n10 + 5 = 15 (left: 3 15 15)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n15 - 10 = 5 (left: 3 5 15)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\nInput: 1 3 7 21\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\nPossible next steps:\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n1 * 3 = 3 (left: 3 7 21)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n21 - 7 = 14 (left: 1 3 14)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 / 3 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\nThere are no possible next steps.\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n24 - 9 = 15 (left: 15)\nInput: 15\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n24 - 9 = 15 (left: 15)\nPossible next steps:\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n24 - 9 = 15 (left: 15)\n15 + 15 = 30 (left: 15 30)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n24 - 9 = 15 (left: 15)\n15 - 15 = 0 (left: 0 15)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n24 - 9 = 15 (left: 15)\n15 * 15 = 225 (left: 15 225)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n24 - 9 = 15 (left: 15)\n15 / 15 = 1 (left: 1 15)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n24 + 9 = 33 (left: 33)\n2 * 8 = 16 (left: 16)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n24 + 9 = 33 (left: 33)\n33 - 2 = 31 (left: 31)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n24 + 9 = 33 (left: 33)\n33 + 2 = 35 (left: 35)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n24 + 9 = 33 (left: 33)\n33 / 2 = 16 (left: 16)\n",
                    "3 * 9 = 27 (left: 27 3 9)\n27 - 3 = 24 (left: 24 9)\n9 - 24 = -15 (left: -15)\nNo possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n\n",
                    "3 + 9 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (3 + 9) + (3 + 5) = 24\n",
                    "3 + 9 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 + 9) + 3) + 5 = 24\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\nInput: 3 5 10 15\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\nPossible next steps:\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n3 + 5 = 8 (left: 8 10 15)\n",
                    "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n5 * 3 = 15 (left: 10 15 15)\n"
                ]
            }
        ],
        "idx": 856,
        "ys": [
            "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n\n",
            "3 + 9 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (3 + 9) + (3 + 5) = 24\n",
            "3 + 9 = 12 (left: 12 3 9)\n12 + 3 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 + 9) + 3) + 5 = 24\n",
            "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\nInput: 3 5 10 15\n",
            "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\nPossible next steps:\n",
            "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n3 + 5 = 8 (left: 8 10 15)\n",
            "3 + 5 = 8 (left: 8 3 9)\n8 + 3 = 11 (left: 11 9)\n11 + 9 = 20 (left: 20)\n5 * 3 = 15 (left: 10 15 15)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 39818,
            "prompt_tokens": 127992,
            "cost": 0.27162400000000003
        },
        "time_spent": 33.30053400993347
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 7 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 7 9 11)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n",
                    "7 + 4 = 11 (left: 5 11 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n",
                    "11 - 7 = 4 (left: 4 5 11)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n",
                    "7 / 4 = 1 (left: 1 4 11)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "4 * 5 = 20 (left: 7 11 20)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n",
                    "7 + 4 = 11 (left: 5 11 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n",
                    "11 - 7 = 4 (left: 4 5 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 7 11",
                "ys": [
                    "4 * 5 = 20 (left: 7 11 20)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n",
                    "7 + 4 = 11 (left: 5 11 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n",
                    "11 - 7 = 4 (left: 4 5 11)\n"
                ],
                "new_ys": [
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 - 7 = 4 (left: 4 11 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 / 7 = 1 (left: 1 11 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n20 - 7 = 13 (left: 7 13 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n20 - 11 = 9 (left: 7 9 20)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 + 7 = 12 (left: 12 11)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 * 5 = 35 (left: 35 11)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 / 5 = 1 (left: 1 11)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n7 + 9 = 16 (left: 16 11)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n7 * 9 = 63 (left: 63 11)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n9 + 11 = 20 (left: 7 20)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n7 - 9 = -2 (left: -2 11)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n9 - 7 = 2 (left: 2 11)\n",
                    "4 + 5 = 9 (left: 7 9 11)\n11 - 7 = 4 (left: 7 4)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n4 + 11 = 15 (left: 12 15)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n11 - 4 = 7 (left: 7 12)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n4 * 11 = 44 (left: 12 44)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n11 / 4 = 2 (left: 2 12)\n",
                    "5 + 7 = 12 (left: 4 11 12)\nInput: 3 6 10 15\n",
                    "5 + 7 = 12 (left: 4 11 12)\nPossible next steps:\n",
                    "5 + 7 = 12 (left: 4 11 12)\n3 + 6 = 9 (left: 9 10 15)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n6 - 3 = 3 (left: 3 10 15)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n3 * 6 = 18 (left: 10 15 18)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n6 / 3 = 2 (left: 2 10 15)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n15 - 10 = 5 (left: 5 10)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n15 - 6 = 9 (left: 9 10 15)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n10 + 3 = 13 (left: 13 15)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n10 - 3 = 7 (left: 7 15)\n",
                    "7 + 4 = 11 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n",
                    "7 + 4 = 11 (left: 5 11 11)\n11 + 5 = 16 (left: 5 16)\n",
                    "7 + 4 = 11 (left: 5 11 11)\n11 / 5 = 2 (left: 2 11)\n",
                    "7 + 4 = 11 (left: 5 11 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n3 + 7 = 10 (left: 10 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n7 - 3 = 4 (left: 4 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n11 + 3 = 14 (left: 7 14)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n3 * 7 = 21 (left: 11 21)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n7 / 3 = 2 (left: 2 11)\n",
                    "7 - 4 = 3 (left: 3 7 11)\n11 - 3 = 8 (left: 7 8)\n",
                    "11 - 7 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "11 - 7 = 4 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n",
                    "11 - 7 = 4 (left: 4 5 11)\n4 * 5 = 20 (left: 20 11)\n",
                    "11 - 7 = 4 (left: 4 5 11)\n5 + 11 = 16 (left: 4 16)\n",
                    "11 - 7 = 4 (left: 4 5 11)\n11 - 4 = 7 (left: 7 11)\n",
                    "11 - 7 = 4 (left: 4 5 11)\n11 / 4 = 2 (left: 2 11)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "11 - 4 = 7 (left: 5 7 11)\n7 * 5 = 35 (left: 35 11)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n11 / 4 = 2 (left: 2 12)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 + 7 = 12 (left: 12 11)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 / 5 = 1 (left: 1 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 7 11",
                "ys": [
                    "11 - 4 = 7 (left: 5 7 11)\n7 * 5 = 35 (left: 35 11)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n11 / 4 = 2 (left: 2 12)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 + 7 = 12 (left: 12 11)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 / 5 = 1 (left: 1 11)\n"
                ],
                "new_ys": [
                    "11 - 4 = 7 (left: 5 7 11)\n7 * 5 = 35 (left: 35 11)\n35 + 11 = 46 (left: 11 46)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 * 5 = 35 (left: 35 11)\n35 - 11 = 24 (left: 24 11)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 * 5 = 35 (left: 35 11)\n35 / 11 = 3 (left: 3 11)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 * 5 = 35 (left: 35 11)\n35 * 11 = 385 (left: 385 11)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n11 / 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n11 / 4 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n11 / 4 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "5 + 7 = 12 (left: 4 11 12)\n11 / 4 = 2 (left: 2 12)\n12 + 2 = 14 (left: 2 14)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 - 20 = -2 (left: -2)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 * 20 = 360 (left: 360)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n20 / 18 = 1.11 (left: 1.11)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 * 20 = 360 (left: 360)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n20 - 18 = 2 (left: 2)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n20 / 18 = 1.11 (left: 1.11)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\nInput: 1 2 3 4\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\nPossible next steps:\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n1 / 2 = 0.5 (left: 0.5 3 4)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n2 + 3 = 5 (left: 1 5 4)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n2 * 3 = 6 (left: 1 6 4)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n2 / 3 = 0.67 (left: 1 0.67 4)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n3 + 4 = 7 (left: 1 2 7)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n3 * 4 = 12 (left: 1 2 12)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n3 / 4 = 0.75 (left: 1 2 0.75)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 + 7 = 12 (left: 12 11)\n12 + 11 = 23 (left: 11 23)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 + 7 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1 11)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 + 7 = 12 (left: 12 11)\n12 * 11 = 132 (left: 11 132)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n5 + 7 = 12 (left: 12 11)\n12 / 11 = 1 (left: 1 11)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 + 11 = 13 (left: 13)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n11 - 2 = 9 (left: 9)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n11 / 2 = 5.5 (left: 5.5)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 / 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 / 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 / 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 / 5 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 7 = 12 (left: 4 11 12)\n11 / 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 + 11 = 13 (left: 13)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 / 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 / 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 7 11",
                "ys": [
                    "5 + 7 = 12 (left: 4 11 12)\n11 / 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 + 11 = 13 (left: 13)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 / 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 / 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "5 + 7 = 12 (left: 4 11 12)\n11 / 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (11 / 4) * (5 + 7) = 24\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\nInput: 1 3 4 6\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\nPossible next steps:\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n1 * 3 = 3 (left: 3 4 6)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n3 + 4 = 7 (left: 1 7 6)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n3 * 4 = 12 (left: 1 6 12)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n4 + 6 = 10 (left: 1 3 10)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n4 * 6 = 24 (left: 1 3 24)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n6 / 3 = 2 (left: 1 2 4)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n6 - 4 = 2 (left: 1 3 2)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n38 / 2 = 19 (left: 19)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n38 - 2 = 36 (left: 36)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n38 + 2 = 40 (left: 40)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n38 * 2 = 76 (left: 76)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\nInput: 6 3 2 8\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\nPossible next steps:\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n6 + 3 = 9 (left: 2 8 9)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n3 * 2 = 6 (left: 6 8 8)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n6 / 3 = 2 (left: 2 2 8)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n8 - 6 = 2 (left: 2 2 8)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n8 / 2 = 4 (left: 4 2 8)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n8 + 6 = 14 (left: 2 8 14)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n6 * 3 = 18 (left: 2 8 18)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n11 + 7 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n3 + 2 = 5 (left: 5 8 8)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 + 11 = 13 (left: 13)\n2 + 8 = 10 (left: 10)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 + 11 = 13 (left: 13)\n8 - 2 = 6 (left: 6)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 + 11 = 13 (left: 13)\n2 * 8 = 16 (left: 16)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 + 11 = 13 (left: 13)\n8 / 2 = 4 (left: 4)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 + 11 = 13 (left: 13)\nInput: 3 5 9 3\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 + 11 = 13 (left: 13)\nPossible next steps:\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 + 11 = 13 (left: 13)\n3 + 5 = 8 (left: 8 9 3)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 + 11 = 13 (left: 13)\n9 - 3 = 6 (left: 3 5 6)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 + 11 = 13 (left: 13)\n3 * 5 = 15 (left: 15 9 3)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 + 11 = 13 (left: 13)\n5 - 3 = 2 (left: 2 9 3)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 + 11 = 13 (left: 13)\n9 - 3 = 6 (left: 3 5 6)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 + 11 = 13 (left: 13)\n3 / 5 = 0.6 (left: 0.6 9 3)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 + 11 = 13 (left: 13)\n9 - 3 = 6 (left: 3 5 6)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 + 11 = 13 (left: 13)\n3 * 5 = 15 (left: 15 9 3)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 - 5 = 2 (left: 2 11)\n2 * 11 = 22 (left: 22)\nThere are no possible next steps.\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 / 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n4 + 8 = 12 (left: 4 8)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 / 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n8 * 2 = 16 (left: 4 16)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 / 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n8 / 4 = 2 (left: 2 8)\n",
                    "11 - 4 = 7 (left: 5 7 11)\n7 / 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 is the target number. No possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 7 = 12 (left: 4 11 12)\n11 / 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (11 / 4) * (5 + 7) = 24\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\nInput: 1 3 4 6\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\nPossible next steps:\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n1 * 3 = 3 (left: 3 4 6)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n3 + 4 = 7 (left: 1 7 6)\n",
                    "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n3 * 4 = 12 (left: 1 6 12)\n"
                ]
            }
        ],
        "idx": 857,
        "ys": [
            "5 + 7 = 12 (left: 4 11 12)\n11 / 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (11 / 4) * (5 + 7) = 24\n",
            "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\nInput: 1 3 4 6\n",
            "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\nPossible next steps:\n",
            "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n1 + 3 = 4 (left: 4 4 6)\n",
            "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n1 * 3 = 3 (left: 3 4 6)\n",
            "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n3 + 4 = 7 (left: 1 7 6)\n",
            "4 * 5 = 20 (left: 7 11 20)\n7 + 11 = 18 (left: 18 20)\n18 + 20 = 38 (left: 38)\n3 * 4 = 12 (left: 1 6 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 41882,
            "prompt_tokens": 133381,
            "cost": 0.2838355
        },
        "time_spent": 37.397212982177734
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 9 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 9 = 13 (left: 12 12 13)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n",
                    "12 + 4 = 16 (left: 12 12 16)\n",
                    "4 * 9 = 36 (left: 12 12 36)\n",
                    "9 / 4 = 2 (left: 2 12 12)\n",
                    "12 - 4 = 8 (left: 8 12 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 9 = 13 (left: 12 12 13)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n",
                    "12 + 4 = 16 (left: 12 12 16)\n",
                    "4 * 9 = 36 (left: 12 12 36)\n",
                    "9 / 4 = 2 (left: 2 12 12)\n",
                    "12 - 4 = 8 (left: 8 12 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 9 12 12",
                "ys": [
                    "4 + 9 = 13 (left: 12 12 13)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n",
                    "12 + 4 = 16 (left: 12 12 16)\n",
                    "4 * 9 = 36 (left: 12 12 36)\n",
                    "9 / 4 = 2 (left: 2 12 12)\n",
                    "12 - 4 = 8 (left: 8 12 12)\n"
                ],
                "new_ys": [
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 * 12 = 144 (left: 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 / 12 = 1 (left: 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\nNo more possible steps.\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 - 5 = 7 (left: 7 12)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 / 5 = 2.4 (left: 2.4 12)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 * 12 = 60 (left: 12 60)\n",
                    "9 - 4 = 5 (left: 5 12 12)\nInput: 3 3 3 3\n",
                    "9 - 4 = 5 (left: 5 12 12)\nPossible next steps:\n",
                    "9 - 4 = 5 (left: 5 12 12)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "9 - 4 = 5 (left: 5 12 12)\nInput: 1 4 5 7\n",
                    "9 - 4 = 5 (left: 5 12 12)\nPossible next steps:\n",
                    "9 - 4 = 5 (left: 5 12 12)\n1 + 4 = 5 (left: 5 5 7)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n4 / 1 = 4 (left: 4 5 7)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n7 - 5 = 2 (left: 2 4 7)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n7 - 4 = 3 (left: 3 5 7)\n",
                    "12 + 4 = 16 (left: 12 12 16)\n12 + 12 = 24 (left: 16)\n",
                    "12 + 4 = 16 (left: 12 12 16)\n12 * 12 = 144 (left: 16)\n",
                    "12 + 4 = 16 (left: 12 12 16)\n12 - 12 = 0 (left: 16)\n",
                    "12 + 4 = 16 (left: 12 12 16)\n12 / 12 = 1 (left: 16)\n",
                    "12 + 4 = 16 (left: 12 12 16)\n16 + 12 = 28 (left: 12)\n",
                    "12 + 4 = 16 (left: 12 12 16)\n16 * 12 = 192 (left: 12)\n",
                    "12 + 4 = 16 (left: 12 12 16)\n16 - 12 = 4 (left: 12)\n",
                    "12 + 4 = 16 (left: 12 12 16)\n16 / 12 = 1.33 (left: 12)\n",
                    "4 * 9 = 36 (left: 12 12 36)\n12 + 12 = 24 (left: 24 36)\n",
                    "4 * 9 = 36 (left: 12 12 36)\n12 * 12 = 144 (left: 36 144)\n",
                    "4 * 9 = 36 (left: 12 12 36)\n12 / 12 = 1 (left: 1 36)\n",
                    "4 * 9 = 36 (left: 12 12 36)\n12 - 12 = 0 (left: 0 36)\n",
                    "4 * 9 = 36 (left: 12 12 36)\n36 / 12 = 3 (left: 12 3)\n",
                    "4 * 9 = 36 (left: 12 12 36)\n36 - 12 = 24 (left: 12 24)\n",
                    "9 / 4 = 2 (left: 2 12 12)\n2 + 12 = 14 (left: 12 14)\n",
                    "9 / 4 = 2 (left: 2 12 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "9 / 4 = 2 (left: 2 12 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "12 - 4 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "12 - 4 = 8 (left: 8 12 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "12 - 4 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "12 - 4 = 8 (left: 8 12 12)\n12 + 8 = 20 (left: 8 20)\n",
                    "12 - 4 = 8 (left: 8 12 12)\n8 / 12 = 0.6666666666666666 (left: 0.6666666666666666 12)\n",
                    "12 - 4 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 * 12 = 144 (left: 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 / 12 = 1 (left: 13)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 - 5 = 7 (left: 7 12)\n",
                    "12 + 4 = 16 (left: 12 12 16)\n12 + 12 = 24 (left: 16)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 9 12 12",
                "ys": [
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 * 12 = 144 (left: 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 / 12 = 1 (left: 13)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 - 5 = 7 (left: 7 12)\n",
                    "12 + 4 = 16 (left: 12 12 16)\n12 + 12 = 24 (left: 16)\n"
                ],
                "new_ys": [
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n13 - 3 = 10 (left: 10 3)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\nInput: 13\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\nPossible next steps:\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 - 1 = 12 (left: 1 12)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 / 1 = 13 (left: 1 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 + 1 = 14 (left: 1 14)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 * 1 = 13 (left: 1 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 * 12 = 144 (left: 13)\nInput: 13\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 * 12 = 144 (left: 13)\nPossible next steps:\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 * 12 = 144 (left: 13)\n13 + 1 = 14 (left: 1 13 14)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 * 12 = 144 (left: 13)\n13 - 1 = 12 (left: 1 12 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 / 12 = 1 (left: 13)\nInput: 13\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 / 12 = 1 (left: 13)\nPossible next steps:\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 / 12 = 1 (left: 13)\n13 cannot be split into 4 numbers.\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n17 - 12 = 5 (left: 5 17)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n17 / 12 = 1 (left: 1 17)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n17 * 12 = 204 (left: 204)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n12 - 17 = -5 (left: -5 17)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 - 5 = 7 (left: 7 12)\n7 + 12 = 19 (left: 19)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 - 5 = 7 (left: 7 12)\n12 - 7 = 5 (left: 5 12)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 - 5 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n12 - 5 = 7 (left: 7 12)\n12 / 7 = 1 (left: 1 12)\n",
                    "12 + 4 = 16 (left: 12 12 16)\n12 + 12 = 24 (left: 16)\n2 * 8 = 16 (left: 16)\n",
                    "12 + 4 = 16 (left: 12 12 16)\n12 + 12 = 24 (left: 16)\n8 * 2 = 16 (left: 16)\n",
                    "12 + 4 = 16 (left: 12 12 16)\n12 + 12 = 24 (left: 16)\n16 + 0 = 16 (left: 16)\n",
                    "12 + 4 = 16 (left: 12 12 16)\n12 + 12 = 24 (left: 16)\n16 - 0 = 16 (left: 16)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n13 - 3 = 10 (left: 10 3)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 - 1 = 12 (left: 1 12)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 / 1 = 13 (left: 1 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 + 1 = 14 (left: 1 14)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 * 1 = 13 (left: 1 13)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 9 12 12",
                "ys": [
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n13 - 3 = 10 (left: 10 3)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 - 1 = 12 (left: 1 12)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 / 1 = 13 (left: 1 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 + 1 = 14 (left: 1 14)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 * 1 = 13 (left: 1 13)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n"
                ],
                "new_ys": [
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\nInput: 3 16\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\nPossible next steps:\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\n3 + 16 = 19 (left: 19)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\n16 / 3 = 5 (left: 5)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n13 - 3 = 10 (left: 10 3)\n2 * 7 = 14 (left: 10 8 14)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n13 - 3 = 10 (left: 10 3)\n10 - 8 = 2 (left: 2 8 14)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 - 1 = 12 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 - 1 = 12 (left: 1 12)\n12 / 1 = 12 (left: 12)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 - 1 = 12 (left: 1 12)\n12 - 1 = 11 (left: 11)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 / 1 = 13 (left: 1 13)\n1 + 13 = 14 (left: 14)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 / 1 = 13 (left: 1 13)\n13 - 1 = 12 (left: 12)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 / 1 = 13 (left: 1 13)\n13 / 1 = 13 (left: 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 / 1 = 13 (left: 1 13)\n13 - 13 = 0 (left: 0)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 + 1 = 14 (left: 1 14)\n1 + 14 = 15 (left: 15)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 + 1 = 14 (left: 1 14)\n14 - 1 = 13 (left: 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 * 1 = 13 (left: 1 13)\n1 + 13 = 14 (left: 14)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 - 12 = 0 (left: 13)\n13 * 1 = 13 (left: 1 13)\n13 - 1 = 12 (left: 12)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\nInput: 3 3 7 7\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\nPossible next steps:\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n3 + 3 = 6 (left: 6 7 7)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n7 - 3 = 4 (left: 3 7 4)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n3 * 7 = 21 (left: 7 4 21)\n",
                    "9 - 4 = 5 (left: 5 12 12)\n5 + 12 = 17 (left: 12 17)\n12 + 17 = 29 (left: 29)\n7 / 3 = 2 (left: 2 3 7)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\nInput: 3 16\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\nPossible next steps:\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\n3 + 16 = 19 (left: 19)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\n16 / 3 = 5 (left: 5)\n",
                    "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n13 - 3 = 10 (left: 10 3)\n2 * 7 = 14 (left: 10 8 14)\n"
                ]
            }
        ],
        "idx": 858,
        "ys": [
            "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\nInput: 3 16\n",
            "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\nPossible next steps:\n",
            "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\n3 + 16 = 19 (left: 19)\n",
            "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n",
            "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\n",
            "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n3 + 13 = 16 (left: 3 16)\n16 / 3 = 5 (left: 5)\n",
            "4 + 9 = 13 (left: 12 12 13)\n12 + 12 = 24 (left: 13)\n13 - 3 = 10 (left: 10 3)\n2 * 7 = 14 (left: 10 8 14)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 43299,
            "prompt_tokens": 138194,
            "cost": 0.29388899999999996
        },
        "time_spent": 28.884620904922485
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 6 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n"
                ],
                "values": [
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 6 9",
                "ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 / 6 = 1 (left: 1 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 * 6 = 36 (left: 9 36)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 - 6 = 0 (left: 0 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 * 6 = 54 (left: 54 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 / 6 = 1 (left: 1 9)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n3 + 6 = 9 (left: 6 9)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n6 - 3 = 3 (left: 3 9)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n3 * 3 = 9 (left: 6 9)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n9 / 3 = 3 (left: 3 6)\n",
                    "9 / 3 = 3 (left: 3 6 9)\nInput: 4 5 6 7\n",
                    "9 / 3 = 3 (left: 3 6 9)\nPossible next steps:\n",
                    "9 / 3 = 3 (left: 3 6 9)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n5 - 4 = 1 (left: 1 6 7)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n6 - 4 = 2 (left: 2 5 7)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n7 - 4 = 3 (left: 3 5 6)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n4 * 5 = 20 (left: 6 7 20)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n5 + 6 = 11 (left: 4 7 11)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n6 + 7 = 13 (left: 4 5 13)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n7 / 4 = 1 (left: 1 5 6)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n7 - 5 = 2 (left: 2 4 6)\n",
                    "9 / 3 = 3 (left: 3 6 9)\n7 - 6 = 1 (left: 1 4 5)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 / 6 = 1 (left: 1 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 * 6 = 36 (left: 9 36)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 / 6 = 1 (left: 1 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 6 9",
                "ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 / 6 = 1 (left: 1 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 * 6 = 36 (left: 9 36)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 / 6 = 1 (left: 1 9)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 - 15 = -6 (left: -6 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 / 15 = 0.6 (left: 0.6 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\nInput: 4 5 5 5\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\nPossible next steps:\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n4 + 5 = 9 (left: 5 5 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n5 * 5 = 25 (left: 4 25 5)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n5 + 5 = 10 (left: 4 10 5)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n5 / 5 = 1 (left: 4 5 1)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n5 - 4 = 1 (left: 1 5 5)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n5 * 4 = 20 (left: 5 5 20)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n4 + 5 = 9 (left: 5 5 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n4 / 5 = 0.8 (left: 0.8 5 5)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 / 6 = 1 (left: 1 9)\n1 + 9 = 10 (left: 9 10)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 / 6 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 / 6 = 1 (left: 1 9)\n9 / 1 = 9 (left: 9 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 / 6 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n3 + 9 = 12 (left: 9 12)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 - 12 = -3 (left: -3)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 * 12 = 108 (left: 108)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 / 12 = 0.75 (left: 0.75)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 * 6 = 36 (left: 9 36)\n9 * 2 = 18 (left: 18 36)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 * 6 = 36 (left: 9 36)\n9 + 36 = 45 (left: 9 45)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 * 6 = 36 (left: 9 36)\n36 / 9 = 4 (left: 4 36)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 * 6 = 36 (left: 9 36)\n36 - 9 = 27 (left: 9 27)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 - 6 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 - 6 = 3 (left: 3 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 / 6 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 / 6 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 / 6 = 1 (left: 1 9)\n9 / 1 = 9 (left: 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 / 6 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 - 6 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 / 6 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 6 9",
                "ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 - 6 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 / 6 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n"
                ],
                "new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (3 * 3) + (6 + 9) = 24\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: (3 * 3) + (6 + 9) = 24\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 1 5 6 10\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n1 + 5 = 6 (left: 6 6 10)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n5 + 6 = 11 (left: 1 11 10)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n1 * 5 = 5 (left: 5 6 10)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n5 * 6 = 30 (left: 1 30 10)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n5 + 1 = 6 (left: 6 6 10)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n10 - 6 = 4 (left: 1 5 4)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n6 - 1 = 5 (left: 5 6 10)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n6 / 1 = 6 (left: 6 6 10)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 - 6 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n27 / 3 = 9 (left: 9)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 - 6 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n9 / 6 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n10 is the goal!\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n6 + 15 = 21 (left: 21)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n15 - 6 = 9 (left: 9)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 15 = 90 (left: 90)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n15 / 6 = 2 (left: 2)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\nInput: 3 3 3 3\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\nPossible next steps:\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n1 + 15 = 16 (left: 16)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n15 - 1 = 14 (left: 14)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n15 / 1 = 15 (left: 15)\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n15 * 1 = 15 (left: 15)\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (3 * 3) + (6 + 9) = 24\n",
                    "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: (3 * 3) + (6 + 9) = 24\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 1 5 6 10\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n1 + 5 = 6 (left: 6 6 10)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n5 + 6 = 11 (left: 1 11 10)\n",
                    "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n1 * 5 = 5 (left: 5 6 10)\n"
                ]
            }
        ],
        "idx": 859,
        "ys": [
            "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (3 * 3) + (6 + 9) = 24\n",
            "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: (3 * 3) + (6 + 9) = 24\n",
            "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nInput: 1 5 6 10\n",
            "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\nPossible next steps:\n",
            "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n1 + 5 = 6 (left: 6 6 10)\n",
            "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n5 + 6 = 11 (left: 1 11 10)\n",
            "3 + 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n1 * 5 = 5 (left: 5 6 10)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 44668,
            "prompt_tokens": 143010,
            "cost": 0.303851
        },
        "time_spent": 27.835251331329346
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 5 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 5 = 8 (left: 8 9 13)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n",
                    "9 / 3 = 3 (left: 5 3 13)\n",
                    "9 - 3 = 6 (left: 5 6 13)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n",
                    "13 - 9 = 4 (left: 5 4 9)\n"
                ],
                "values": [
                    50,
                    100,
                    100,
                    50,
                    100,
                    100,
                    50
                ],
                "select_new_ys": [
                    "5 - 3 = 2 (left: 2 9 13)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n",
                    "9 - 3 = 6 (left: 5 6 13)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n",
                    "9 / 3 = 3 (left: 5 3 13)\n",
                    "13 - 9 = 4 (left: 5 4 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 5 9 13",
                "ys": [
                    "5 - 3 = 2 (left: 2 9 13)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n",
                    "9 - 3 = 6 (left: 5 6 13)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n",
                    "9 / 3 = 3 (left: 5 3 13)\n",
                    "13 - 9 = 4 (left: 5 4 9)\n"
                ],
                "new_ys": [
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 2 11)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 + 2 = 11 (left: 11 13)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n13 - 9 = 4 (left: 2 4)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n13 / 2 = 6 (left: 6 13)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 * 5 = 45 (left: 10 45)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 - 9 = -4 (left: -4 10)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 / 9 = 0.56 (left: 0.56 10)\n",
                    "9 - 3 = 6 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n",
                    "9 - 3 = 6 (left: 5 6 13)\n6 - 5 = 1 (left: 1 6 13)\n",
                    "9 - 3 = 6 (left: 5 6 13)\n13 - 5 = 8 (left: 6 8 13)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)\n",
                    "13 - 5 = 8 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8 9)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n8 - 9 = -1 (left: -1 13)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n8 + 9 = 17 (left: 13 17)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n9 - 8 = 1 (left: 1 13)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n9 / 8 = 1 (left: 1 13)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n9 + 8 = 17 (left: 8 17)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n8 / 9 = 0.8888888888888888 (left: 0.8888888888888888 13)\n",
                    "3 + 5 = 8 (left: 8 9 13)\n8 * 9 = 72 (left: 13 72)\n",
                    "9 / 3 = 3 (left: 5 3 13)\n5 + 3 = 8 (left: 8 13)\n",
                    "9 / 3 = 3 (left: 5 3 13)\n5 * 3 = 15 (left: 15 13)\n",
                    "9 / 3 = 3 (left: 5 3 13)\n5 - 3 = 2 (left: 2 13)\n",
                    "9 / 3 = 3 (left: 5 3 13)\n3 / 5 = 0.6 (left: 0.6 13)\n",
                    "9 / 3 = 3 (left: 5 3 13)\nInput: 4 6 3 1\n",
                    "9 / 3 = 3 (left: 5 3 13)\nPossible next steps:\n",
                    "9 / 3 = 3 (left: 5 3 13)\n4 + 6 = 10 (left: 3 1 10)\n",
                    "9 / 3 = 3 (left: 5 3 13)\n4 * 6 = 24 (left: 3 1 24)\n",
                    "9 / 3 = 3 (left: 5 3 13)\n4 / 6 = 0.67 (left: 3 1 0.67)\n",
                    "9 / 3 = 3 (left: 5 3 13)\n4 - 6 = -2 (left: 3 1 -2)\n",
                    "9 / 3 = 3 (left: 5 3 13)\n6 * 3 = 18 (left: 4 1 18)\n",
                    "13 - 9 = 4 (left: 5 4 9)\n5 + 4 = 9 (left: 9 9)\n",
                    "13 - 9 = 4 (left: 5 4 9)\n5 * 4 = 20 (left: 20 9)\n",
                    "13 - 9 = 4 (left: 5 4 9)\n5 - 4 = 1 (left: 1 9)\n",
                    "13 - 9 = 4 (left: 5 4 9)\n4 + 5 = 9 (left: 9 9)\n",
                    "13 - 9 = 4 (left: 5 4 9)\n4 * 5 = 20 (left: 20 9)\n",
                    "13 - 9 = 4 (left: 5 4 9)\n4 / 5 = 0.8 (left: 0.8 9)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    100,
                    0,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 + 2 = 11 (left: 11 13)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n",
                    "9 - 3 = 6 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 2 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 5 9 13",
                "ys": [
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 + 2 = 11 (left: 11 13)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n",
                    "9 - 3 = 6 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 2 11)\n"
                ],
                "new_ys": [
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n13 * 11 = 143 (left: 143)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 11)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2 11)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n13 / 11 = 1.18 (left: 1.18 11)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11 / 13 = 0.85 (left: 0.85 13)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 + 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 + 2 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 + 2 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 11)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 + 2 = 11 (left: 11 13)\n13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 11)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 / 10 = 1.4 (left: 1.4 14)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 * 10 = 140 (left: 140)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "9 - 3 = 6 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "9 - 3 = 6 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)\n",
                    "9 - 3 = 6 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 11)\n",
                    "9 - 3 = 6 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 11)\n",
                    "9 - 3 = 6 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2 11)\n",
                    "9 - 3 = 6 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 / 13 = 0.8461538461538461 (left: 0.8461538461538461 13)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n7 + 13 = 20 (left: 20)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n13 - 7 = 6 (left: 6 13)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n13 / 7 = 1 (left: 1 13)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n13 * 7 = 91 (left: 91)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\nInput: 5 5 5 5\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\nPossible next steps:\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n5 - 5 = 0 (left: 0 5 5 5)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n5 * 5 = 25 (left: 5 5 25 5)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 - 2 = 7 (left: 7 13)\n5 / 5 = 1 (left: 1 5 5 5)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 2 11)\n2 + 11 = 13 (left: 13)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 2 11)\n11 - 2 = 9 (left: 9)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n13 - 2 = 11 (left: 2 11)\n11 / 2 = 5 (left: 5)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    100,
                    100,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 + 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "9 - 3 = 6 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 5 9 13",
                "ys": [
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 + 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "9 - 3 = 6 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (5 - 3 + 9) + 13 = 24\n",
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (5 - 3 + 9) * 13 = 24\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 + 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (5 - 3) + (9 + 13) = 24\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((13 - 3) + 5) + 9 = 24\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (13 - 3) + (9 + 5) = 24\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (13 - 3) + (9 + 5) = 24\n",
                    "9 - 3 = 6 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (5 + 6) + (11 + 13) = 24\n"
                ],
                "values": [
                    1000,
                    0,
                    1000,
                    1000,
                    1000,
                    1000,
                    0
                ],
                "select_new_ys": [
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (5 - 3 + 9) + 13 = 24\n",
                    "5 - 3 = 2 (left: 2 9 13)\n9 + 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (5 - 3) + (9 + 13) = 24\n",
                    "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((13 - 3) + 5) + 9 = 24\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (13 - 3) + (9 + 5) = 24\n",
                    "13 - 3 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (13 - 3) + (9 + 5) = 24\n",
                    "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (5 - 3 + 9) * 13 = 24\n",
                    "9 - 3 = 6 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (5 + 6) + (11 + 13) = 24\n"
                ]
            }
        ],
        "idx": 860,
        "ys": [
            "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (5 - 3 + 9) + 13 = 24\n",
            "5 - 3 = 2 (left: 2 9 13)\n9 + 2 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (5 - 3) + (9 + 13) = 24\n",
            "13 - 3 = 10 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((13 - 3) + 5) + 9 = 24\n",
            "13 - 3 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (13 - 3) + (9 + 5) = 24\n",
            "13 - 3 = 10 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (13 - 3) + (9 + 5) = 24\n",
            "5 - 3 = 2 (left: 2 9 13)\n2 + 9 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (5 - 3 + 9) * 13 = 24\n",
            "9 - 3 = 6 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (5 + 6) + (11 + 13) = 24\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 46242,
            "prompt_tokens": 150481,
            "cost": 0.3182055
        },
        "time_spent": 32.85949683189392
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 7 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 7 = 10 (left: 8 10 13)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 7 8 13",
                "ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n"
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 * 10 = 80 (left: 80 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 / 8 = 1.25 (left: 1.25 13)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n8 + 13 = 21 (left: 21)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n13 - 8 = 5 (left: 5 21)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n8 * 13 = 104 (left: 21 104)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n13 / 8 = 1.625 (left: 1.625 21)\n",
                    "3 * 7 = 21 (left: 8 13 21)\nInput: 3 3 3 3\n",
                    "3 * 7 = 21 (left: 8 13 21)\nPossible next steps:\n",
                    "3 * 7 = 21 (left: 8 13 21)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n7 - 8 = -1 (left: -1 10)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n7 + 8 = 15 (left: 15 10)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n7 * 8 = 56 (left: 56 10)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n8 - 7 = 1 (left: 1 10)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n8 + 7 = 15 (left: 15 10)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n8 * 7 = 56 (left: 56 10)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 + 7 = 17 (left: 17 10)\n",
                    "13 - 3 = 10 (left: 7 8 10)\n10 * 7 = 70 (left: 70 10)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n8 + 13 = 21 (left: 21)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 7 8 13",
                "ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n8 + 13 = 21 (left: 21)\n"
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\nInput: 3 3 7 7\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\nPossible next steps:\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n3 * 7 = 21 (left: 3 7 21)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n7 * 3 = 21 (left: 3 7 21)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n7 + 3 = 10 (left: 3 7 10)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n3 + 7 = 10 (left: 3 7 10)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n7 + 3 = 10 (left: 3 7 10)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n3 + 7 = 10 (left: 3 7 10)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n13 - 3 = 10 (left: 10)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n13 / 3 = 4 (left: 4)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)\n9 - 7 = 2 (left: 2 9)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)\n9 / 7 = 1 (left: 1 7)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)\n7 * 9 = 63 (left: 63)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)\nInput: 3 3 3 3\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)\nPossible next steps:\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n6 + 13 = 19 (left: 13 19)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n13 - 6 = 7 (left: 7 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n13 / 6 = 2 (left: 2 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n13 * 6 = 78 (left: 6 78)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\nInput: 3 3 3 3\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\nPossible next steps:\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 6 6 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 6 3 6 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 / 3 = 1 (left: 3 1 3 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 / 3 = 1 (left: 3 3 1 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 / 3 = 1 (left: 3 3 3 1)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n18 + 13 = 31 (left: 31)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n18 - 13 = 5 (left: 5)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n18 * 13 = 234 (left: 234)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n18 / 13 = 1.38461538462 (left: 1.38461538462)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\nInput: 6 3 7\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\nPossible next steps:\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n6 + 3 = 9 (left: 9 7)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n6 * 3 = 18 (left: 18 7)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n6 / 3 = 2 (left: 2 7)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n6 - 3 = 3 (left: 3 7)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n3 + 7 = 10 (left: 6 10)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n3 * 7 = 21 (left: 6 21)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n3 / 7 = 0.428571428571 (left: 0.428571428571)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n3 - 7 = -4 (left: -4 7)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n7 + 6 = 13 (left: 3 13)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n7 * 6 = 42 (left: 3 42)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n7 / 6 = 1.16666666667 (left: 1.16666666667)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n8 + 10 = 18 (left: 18 13)\n7 - 6 = 1 (left: 1 7)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n2 + 13 = 15 (left: 15)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n",
                    "3 + 7 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n13 / 2 = 6 (left: 6)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n8 + 13 = 21 (left: 21)\nInput: 3 4 6 12\n",
                    "3 * 7 = 21 (left: 8 13 21)\n8 + 13 = 21 (left: 21)\nPossible next steps:\n",
                    "3 * 7 = 21 (left: 8 13 21)\n8 + 13 = 21 (left: 21)\n3 + 4 = 7 (left: 6 7 12)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n8 + 13 = 21 (left: 21)\n3 * 4 = 12 (left: 6 12 12)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n8 + 13 = 21 (left: 21)\n4 * 3 = 12 (left: 6 12 12)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n8 + 13 = 21 (left: 21)\n6 * 2 = 12 (left: 4 12 12)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n8 + 13 = 21 (left: 21)\n12 + 3 = 15 (left: 4 6 15)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n8 + 13 = 21 (left: 21)\n12 / 3 = 4 (left: 4 4 12)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n8 + 13 = 21 (left: 21)\n12 - 6 = 6 (left: 4 6 12)\n",
                    "3 * 7 = 21 (left: 8 13 21)\n8 + 13 = 21 (left: 21)\n6 * 2 = 12 (left: 4 12 12)\n"
                ],
                "values": [
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n13 - 3 = 10 (left: 10)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 7 8 13",
                "ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n13 - 3 = 10 (left: 10)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n"
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n\n11 + 13 = 24 (left: 11 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n\n11 - 13 = -2 (left: -2 11 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n\n11 * 13 = 143 (left: 11 13 143)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n\n13 - 11 = 2 (left: 2 11 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 6 3)\n6 / 3 = 2 (left: 3 2 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 3 6)\n3 + 3 = 6 (left: 3 6 6)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 3 6)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 3 6)\n6 / 3 = 2 (left: 2 3 6)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 3 6)\n3 + 3 = 6 (left: 3 6 6)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n2 + 8 = 10 (left: 8 10)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n8 / 2 = 4 (left: 4 8)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n16 / 2 = 8 (left: 8 8)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n2 * 8 = 16 (left: 8 16)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n8 - 2 = 6 (left: 6 8)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n16 / 2 = 8 (left: 8 8)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n16 - 2 = 14 (left: 14 2)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n13 - 3 = 10 (left: 10)\n10 is the final answer.\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\nInput: 4 7 9 23\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\nPossible next steps:\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n4 + 7 = 11 (left: 9 11 23)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n7 * 4 = 28 (left: 9 23 28)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n23 - 4 = 19 (left: 7 9 19)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n9 * 4 = 36 (left: 7 19 36)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n23 + 4 = 27 (left: 7 9 27)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n23 / 4 = 5 (left: 5 7 9)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n23 - 7 = 16 (left: 9 16 23)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n9 + 7 = 16 (left: 16 16 23)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n16 is the goal! No more moves.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n\n11 + 13 = 24 (left: 11 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n\n11 - 13 = -2 (left: -2 11 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n\n11 * 13 = 143 (left: 11 13 143)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n\n13 - 11 = 2 (left: 2 11 13)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 6 3)\n6 / 3 = 2 (left: 3 2 3)\n"
                ]
            }
        ],
        "idx": 861,
        "ys": [
            "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n\n11 + 13 = 24 (left: 11 13)\n",
            "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n\n11 - 13 = -2 (left: -2 11 13)\n",
            "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n\n11 * 13 = 143 (left: 11 13 143)\n",
            "7 - 3 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n\n13 - 11 = 2 (left: 2 11 13)\n",
            "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 3 6 3)\n",
            "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 6 3)\n3 * 3 = 9 (left: 9 3 3)\n",
            "7 - 3 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n3 + 3 = 6 (left: 3 3 6 3)\n6 / 3 = 2 (left: 3 2 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 48243,
            "prompt_tokens": 154842,
            "cost": 0.328749
        },
        "time_spent": 42.2630832195282
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 4 5 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 4 5 7",
                "ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n"
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 / 5 = 1.4 (left: 1.4 8)\n",
                    "4 + 4 = 8 (left: 5 7 8)\nInput: 3 3 3 3\n",
                    "4 + 4 = 8 (left: 5 7 8)\nPossible next steps:\n",
                    "4 + 4 = 8 (left: 5 7 8)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 / 1 = 5 (left: 5 7)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n7 - 5 = 2 (left: 1 2)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n7 - 1 = 6 (left: 5 6)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n3 + 4 = 7 (left: 5 7)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n4 + 5 = 9 (left: 3 9)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n3 * 4 = 12 (left: 5 12)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n4 * 5 = 20 (left: 3 20)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n5 + 3 = 8 (left: 4 8)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n5 * 4 = 20 (left: 3 20)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n3 + 4 = 7 (left: 5 7)\n",
                    "7 - 4 = 3 (left: 3 4 5)\n3 * 5 = 15 (left: 4 15)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 / 1 = 5 (left: 5 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 4 5 7",
                "ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 / 1 = 5 (left: 5 7)\n"
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 + 7 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n8 * 35 = 280 (left: 280)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n35 * 8 = 280 (left: 280)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n35 / 8 = 4.375 (left: 4.375)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n35 - 8 = 27 (left: 27)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n8 / 35 = 0.22857 (left: 0.22857)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n8 - 35 = -27 (left: -27)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n8 / 2 = 4 (left: 4)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n8 - 2 = 6 (left: 6)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n6 + 7 = 13 (left: 7 13)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n6 - 7 = -1 (left: -1 7)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n6 * 7 = 42 (left: 7 42)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n6 / 7 = 0.8571428571428571 (left: 0.8571428571428571 7)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\nInput: 3 3 8 9\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\nPossible next steps:\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n3 + 3 = 6 (left: 6 8 9)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n3 + 8 = 11 (left: 3 11 9)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n3 + 9 = 12 (left: 3 8 12)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n3 / 3 = 1 (left: 1 8 9)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n3 * 3 = 9 (left: 8 9 9)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n3 - 3 = 0 (left: 0 8 9)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n3 - 8 = -5 (left: -5 3 9)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n3 - 9 = -6 (left: -6 3 8)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n3 * 8 = 24 (left: 3 24 9)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n3 * 9 = 27 (left: 3 8 27)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n8 + 3 = 11 (left: 3 11 9)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n8 + 9 = 17 (left: 3 8 17)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 3 9)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n8 / 9 = 0.8888888888888888 (left: 0.8888888888888888 3 8)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n8 * 3 = 24 (left: 24 3 9)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n8 * 9 = 72 (left: 3 72 9)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n8 - 3 = 5 (left: 5 3 9)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n8 - 9 = -1 (left: -1 3 8)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n9 + 3 = 12 (left: 3 8 12)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n9 - 3 = 6 (left: 6 8 9)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n9 - 8 = 1 (left: 1 8 9)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n9 / 3 = 3 (left: 3 8 9)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n9 * 3 = 27 (left: 3 8 27)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n9 / 8 = 1.125 (left: 1.125 8 9)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n1 + 5 = 6 (left: 6 7)\n9 * 8 = 72 (left: 8 72 9)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n7 + 6 = 13 (left: 13)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n7 - 6 = 1 (left: 1)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n6 - 7 = -1 (left: -1)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n7 * 6 = 42 (left: 42)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n6 * 7 = 42 (left: 42)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n7 / 6 = 1.17 (left: 1.17)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n6 / 7 = 0.86 (left: 0.86)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\n7 - 4 = 3 (left: 3 7)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\n7 / 4 = 1.75 (left: 1.75 7)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\nInput: 5 5 5 5\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\nPossible next steps:\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\n5 + 5 = 10 (left: 5 10 5)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 / 1 = 5 (left: 5 7)\n5 + 7 = 12 (left: 7 12)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 / 1 = 5 (left: 5 7)\n7 - 5 = 2 (left: 2 7)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 / 1 = 5 (left: 5 7)\n5 * 7 = 35 (left: 7 35)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 / 1 = 5 (left: 5 7)\n7 / 5 = 1.4 (left: 1.4 7)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n35 - 8 = 27 (left: 27)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n8 - 35 = -27 (left: -27)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n7 + 6 = 13 (left: 13)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 4 5 7",
                "ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n35 - 8 = 27 (left: 27)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n8 - 35 = -27 (left: -27)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n7 + 6 = 13 (left: 13)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n35 - 8 = 27 (left: 27)\n27 is the final result.\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n8 - 35 = -27 (left: -27)\nNo possible next steps.\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\nThere are no possible next steps.\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\nInput: 16\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\nPossible next steps:\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 8)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 / 2 = 8 (left: 8)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 - 8 = 8 (left: 8)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\nInput: 1 3\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\nPossible next steps:\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n1 + 3 = 4 (left: 4)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n3 - 1 = 2 (left: 2)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n1 * 3 = 3 (left: 3)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n3 / 1 = 3 (left: 3)\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 + 1 = 6 (left: 6 7)\n7 + 6 = 13 (left: 13)\n13 is the final number, no possible next steps.\n",
                    "4 / 4 = 1 (left: 1 5 7)\n5 - 1 = 4 (left: 4 7)\n4 + 7 = 11 (left: 11)\nNo possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n35 - 8 = 27 (left: 27)\n27 is the final result.\n",
                    "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n8 - 35 = -27 (left: -27)\nNo possible next steps.\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\nThere are no possible next steps.\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\nInput: 16\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\nPossible next steps:\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 8)\n",
                    "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 / 2 = 8 (left: 8)\n"
                ]
            }
        ],
        "idx": 862,
        "ys": [
            "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n35 - 8 = 27 (left: 27)\n27 is the final result.\n",
            "4 + 4 = 8 (left: 5 7 8)\n5 * 7 = 35 (left: 8 35)\n8 - 35 = -27 (left: -27)\nNo possible next steps.\n",
            "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 + 8 = 10 (left: 10)\nThere are no possible next steps.\n",
            "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\nInput: 16\n",
            "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\nPossible next steps:\n",
            "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 8)\n",
            "4 + 4 = 8 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 / 2 = 8 (left: 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 49931,
            "prompt_tokens": 158960,
            "cost": 0.338302
        },
        "time_spent": 35.81744599342346
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 5 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 5 11",
                "ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 + 5 = 10 (left: 10 11)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 * 5 = 25 (left: 11 25)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 - 5 = 0 (left: 0 11)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n11 - 5 = 6 (left: 5 6)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n11 / 5 = 2 (left: 2 11)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n5 + 5 = 10 (left: 5 10)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n5 / 5 = 1 (left: 1 10)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n5 * 5 = 25 (left: 10 25)\n",
                    "11 - 1 = 10 (left: 5 5 10)\n5 - 5 = 0 (left: 0 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 + 5 = 10 (left: 10 11)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 * 5 = 25 (left: 11 25)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 - 5 = 0 (left: 0 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 5 11",
                "ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 + 5 = 10 (left: 10 11)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 * 5 = 25 (left: 11 25)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 - 5 = 0 (left: 0 11)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 * 11 = 66 (left: 66)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 / 6 = 1.83 (left: 1.83 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\nInput: 4 4 7 2\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n4 + 4 = 8 (left: 8 7 2)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n7 - 4 = 3 (left: 3 4 2)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n4 * 4 = 16 (left: 16 7 2)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n7 - 2 = 5 (left: 4 5 2)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n7 + 2 = 9 (left: 4 9 2)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n4 * 7 = 28 (left: 28 4 2)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n4 - 2 = 2 (left: 2 7 2)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n4 / 2 = 2 (left: 2 7 2)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n7 * 2 = 14 (left: 4 14 2)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n7 - 4 = 3 (left: 3 4 2)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n7 / 2 = 3.5 (left: 4 3.5 2)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n11 + 30 = 41 (left: 41)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n11 * 30 = 330 (left: 330)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 / 11 = 2.73 (left: 2.73)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 + 5 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 + 5 = 10 (left: 10 11)\n11 - 10 = 1 (left: 1 11)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 + 5 = 10 (left: 10 11)\n11 / 10 = 1.1 (left: 1.1 11)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 + 5 = 10 (left: 10 11)\n10 - 11 = -1 (left: -1 11)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 * 5 = 25 (left: 11 25)\n11 + 25 = 36 (left: 36)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 * 5 = 25 (left: 11 25)\n25 - 11 = 14 (left: 11 14)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 * 5 = 25 (left: 11 25)\n11 * 25 = 275 (left: 275)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 * 5 = 25 (left: 11 25)\n25 / 11 = 2.27 (left: 11 2.27)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 - 5 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 - 5 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 - 5 = 0 (left: 0 11)\n11 / 0 is undefined\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 - 5 = 0 (left: 0 11)\n11 * 0 = 0 (left: 0)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 - 5 = 0 (left: 0 11)\nInput: 3 5 2 7\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 - 5 = 0 (left: 0 11)\nPossible next steps:\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 - 5 = 0 (left: 0 11)\n3 + 5 = 8 (left: 2 7 8)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 - 5 = 0 (left: 0 11)\n5 - 3 = 2 (left: 2 2 7)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 - 5 = 0 (left: 0 11)\n7 - 3 = 4 (left: 2 4 5)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 - 5 = 0 (left: 0 11)\n7 - 5 = 2 (left: 2 2 7)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 - 5 = 0 (left: 0 11)\n7 / 2 = 3 (left: 3 5 7)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 - 5 = 0 (left: 0 11)\n7 + 2 = 9 (left: 3 5 9)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 - 5 = 0 (left: 0 11)\n5 * 2 = 10 (left: 3 7 10)\n",
                    "5 / 1 = 5 (left: 5 5 11)\n5 - 5 = 0 (left: 0 11)\n7 * 2 = 14 (left: 3 5 14)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 5 11",
                "ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n17 is the final result.\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 * 1 = 12 (left: 1)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 / 1 = 12 (left: 1)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 - 1 = 11 (left: 1)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 + 1 = 13 (left: 1)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 + 1 = 11 (left: 1 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 - 1 = 9 (left: 1 9)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 / 1 = 10 (left: 1 10)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 * 1 = 10 (left: 1 10)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\nInput: 3 3 3 8\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n3 + 3 = 6 (left: 3 6 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n3 * 3 = 9 (left: 3 8 9)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n3 + 3 = 6 (left: 6 3 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n3 - 3 = 0 (left: 0 3 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n8 - 3 = 5 (left: 3 3 5)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 is the final result.\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 / 2 = 5 (left: 5)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 - 2 = 8 (left: 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 * 2 = 20 (left: 20)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 + 2 = 12 (left: 12)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\nInput: 4 6 7 8\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\nPossible next steps:\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n4 + 6 = 10 (left: 7 8 10)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n6 / 4 = 1.5 (left: 1.5 7 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n7 - 4 = 3 (left: 3 6 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n8 - 4 = 4 (left: 4 6 7)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n4 * 6 = 24 (left: 7 8 24)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n6 - 4 = 2 (left: 2 7 8)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n8 - 6 = 2 (left: 2 4 7)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n6 + 4 = 10 (left: 7 8 10)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n17 is the final result.\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 * 1 = 12 (left: 1)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 / 1 = 12 (left: 1)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 - 1 = 11 (left: 1)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 + 1 = 13 (left: 1)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 + 1 = 11 (left: 1 11)\n",
                    "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 - 1 = 9 (left: 1 9)\n"
                ]
            }
        ],
        "idx": 863,
        "ys": [
            "1 + 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n17 is the final result.\n",
            "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 * 1 = 12 (left: 1)\n",
            "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 / 1 = 12 (left: 1)\n",
            "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 - 1 = 11 (left: 1)\n",
            "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 + 1 = 13 (left: 1)\n",
            "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 + 1 = 11 (left: 1 11)\n",
            "1 + 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 - 1 = 9 (left: 1 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 51327,
            "prompt_tokens": 163078,
            "cost": 0.347271
        },
        "time_spent": 28.609732151031494
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 6 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 - 2 = 2 (left: 2 2 6 13)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n",
                    "13 - 6 = 7 (left: 2 4 7 13)\n",
                    "6 + 2 = 8 (left: 2 8 13)\n",
                    "13 - 4 = 9 (left: 2 6 9 13)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "4 - 2 = 2 (left: 2 2 6 13)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n",
                    "13 - 6 = 7 (left: 2 4 7 13)\n",
                    "6 + 2 = 8 (left: 2 8 13)\n",
                    "13 - 4 = 9 (left: 2 6 9 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 6 13",
                "ys": [
                    "4 - 2 = 2 (left: 2 2 6 13)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n",
                    "13 - 6 = 7 (left: 2 4 7 13)\n",
                    "6 + 2 = 8 (left: 2 8 13)\n",
                    "13 - 4 = 9 (left: 2 6 9 13)\n"
                ],
                "new_ys": [
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 + 2 = 4 (left: 4 6 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 * 2 = 4 (left: 4 6 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 / 2 = 1 (left: 1 6 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 - 2 = 0 (left: 0 6 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n6 * 2 = 12 (left: 2 12 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n13 - 6 = 7 (left: 2 7 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n13 - 2 = 11 (left: 2 6 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n2 + 2 = 4 (left: 2 4 13)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n2 / 2 = 1 (left: 1 2 13)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 + 2 = 15 (left: 2 2 15)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n2 * 2 = 4 (left: 4 2 13)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n2 - 2 = 0 (left: 0 2 13)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 / 2 = 6 (left: 2 6 13)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n",
                    "13 - 6 = 7 (left: 2 4 7 13)\n2 + 4 = 6 (left: 6 7 13)\n",
                    "13 - 6 = 7 (left: 2 4 7 13)\n4 + 7 = 11 (left: 2 11 13)\n",
                    "13 - 6 = 7 (left: 2 4 7 13)\n7 * 2 = 14 (left: 4 14 13)\n",
                    "13 - 6 = 7 (left: 2 4 7 13)\n13 - 2 = 11 (left: 4 7 11)\n",
                    "6 + 2 = 8 (left: 2 8 13)\n2 + 8 = 10 (left: 10 13)\n",
                    "6 + 2 = 8 (left: 2 8 13)\n8 * 2 = 16 (left: 16 13)\n",
                    "6 + 2 = 8 (left: 2 8 13)\n13 - 2 = 11 (left: 11 8)\n",
                    "13 - 4 = 9 (left: 2 6 9 13)\n2 + 6 = 8 (left: 8 9 13)\n",
                    "13 - 4 = 9 (left: 2 6 9 13)\n6 + 2 = 8 (left: 8 9 13)\n",
                    "13 - 4 = 9 (left: 2 6 9 13)\n9 - 2 = 7 (left: 7 6 13)\n",
                    "13 - 4 = 9 (left: 2 6 9 13)\n13 - 2 = 11 (left: 6 9 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 + 2 = 4 (left: 4 6 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 * 2 = 4 (left: 4 6 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 / 2 = 1 (left: 1 6 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 - 2 = 0 (left: 0 6 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n6 * 2 = 12 (left: 2 12 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n13 - 6 = 7 (left: 2 7 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 6 13",
                "ys": [
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 + 2 = 4 (left: 4 6 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 * 2 = 4 (left: 4 6 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 / 2 = 1 (left: 1 6 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 - 2 = 0 (left: 0 6 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n6 * 2 = 12 (left: 2 12 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n13 - 6 = 7 (left: 2 7 13)\n"
                ],
                "new_ys": [
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 + 2 = 4 (left: 4 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 - 2 = 0 (left: 0 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 * 2 = 4 (left: 4 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 / 2 = 1 (left: 1 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 - 2 = 9 (left: 2 9)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 * 2 = 22 (left: 2 22)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 / 2 = 5 (left: 2 5)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 + 2 = 4 (left: 4 6 13)\n4 + 6 = 10 (left: 10 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 + 2 = 4 (left: 4 6 13)\n6 / 4 = 1.5 (left: 1.5 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 + 2 = 4 (left: 4 6 13)\n13 - 4 = 9 (left: 4 9)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 + 2 = 4 (left: 4 6 13)\n13 - 6 = 7 (left: 4 7)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 * 2 = 4 (left: 4 6 13)\n4 + 6 = 10 (left: 10 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 * 2 = 4 (left: 4 6 13)\n6 - 4 = 2 (left: 2 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 * 2 = 4 (left: 4 6 13)\n13 - 4 = 9 (left: 4 9)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 / 2 = 1 (left: 1 6 13)\n1 * 6 = 6 (left: 6 6 13)  \n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 / 2 = 1 (left: 1 6 13)\n6 + 1 = 7 (left: 7 6 13)  \n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 / 2 = 1 (left: 1 6 13)\n13 - 1 = 12 (left: 6 12 13)  \n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 - 2 = 0 (left: 0 6 13)\n0 + 6 = 6 (left: 6 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 - 2 = 0 (left: 0 6 13)\n6 * 2 = 12 (left: 0 12 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n2 - 2 = 0 (left: 0 6 13)\n13 - 6 = 7 (left: 0 7 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n6 * 2 = 12 (left: 2 12 13)\n2 + 12 = 14 (left: 14 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n6 * 2 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n6 * 2 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 2 11)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n6 * 2 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n13 - 6 = 7 (left: 2 7 13)\n2 + 7 = 9 (left: 9 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n13 - 6 = 7 (left: 2 7 13)\n7 * 2 = 14 (left: 14 13)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n13 - 6 = 7 (left: 2 7 13)\n13 - 2 = 11 (left: 11 7)\n",
                    "4 - 2 = 2 (left: 2 2 6 13)\n13 - 6 = 7 (left: 2 7 13)\n13 - 7 = 6 (left: 6 13)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 * 2 = 22 (left: 2 22)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 + 2 = 4 (left: 4 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 - 2 = 0 (left: 0 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 * 2 = 4 (left: 4 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 / 2 = 1 (left: 1 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 - 2 = 9 (left: 2 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 6 13",
                "ys": [
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 * 2 = 22 (left: 2 22)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 + 2 = 4 (left: 4 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 - 2 = 0 (left: 0 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 * 2 = 4 (left: 4 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 / 2 = 1 (left: 1 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 - 2 = 9 (left: 2 9)\n"
                ],
                "new_ys": [
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 * 2 = 22 (left: 2 22)\n2 * 22 = 44 (left: 44)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 * 2 = 22 (left: 2 22)\n22 / 2 = 11 (left: 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 * 2 = 22 (left: 2 22)\n22 - 2 = 20 (left: 20)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 * 2 = 22 (left: 2 22)\n22 + 2 = 24 (left: 24)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 + 2 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 + 2 = 4 (left: 4 11)\n11 - 4 = 7 (left: 7)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 + 2 = 4 (left: 4 11)\n11 / 4 = 2.75 (left: 2.75)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 + 2 = 4 (left: 4 11)\n4 * 11 = 44 (left: 44)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 - 2 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 - 2 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 - 2 = 0 (left: 0 11)\n11 / 0 = undefined (left: 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 - 2 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 * 2 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 * 2 = 4 (left: 4 11)\n11 - 4 = 7 (left: 7)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 * 2 = 4 (left: 4 11)\n11 / 4 = 2 (left: 2)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 * 2 = 4 (left: 4 11)\n4 * 11 = 44 (left: 44)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 / 2 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 / 2 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 / 2 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 / 2 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n2 * 13 = 26 (left: 13 26)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 + 2 = 13 (left: 2 13)\n13 / 2 = 6 (left: 2 6)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 - 2 = 9 (left: 2 9)\n9 - 2 = 7 (left: 2 7)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 - 2 = 9 (left: 2 9)\n9 / 2 = 4.5 (left: 2 4.5)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 - 2 = 9 (left: 2 9)\n2 * 9 = 18 (left: 18)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 - 2 = 9 (left: 2 9)\n9 + 2 = 11 (left: 2 11)\n"
                ],
                "values": [
                    0,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 * 2 = 22 (left: 2 22)\n22 + 2 = 24 (left: 24)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 * 2 = 22 (left: 2 22)\n22 / 2 = 11 (left: 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 * 2 = 22 (left: 2 22)\n22 - 2 = 20 (left: 20)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 + 2 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 - 2 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 - 2 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n",
                    "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 - 2 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n"
                ]
            }
        ],
        "idx": 864,
        "ys": [
            "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 * 2 = 22 (left: 2 22)\n22 + 2 = 24 (left: 24)\n",
            "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 * 2 = 22 (left: 2 22)\n22 / 2 = 11 (left: 11)\n",
            "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n11 * 2 = 22 (left: 2 22)\n22 - 2 = 20 (left: 20)\n",
            "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 + 2 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
            "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 - 2 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n",
            "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 - 2 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n",
            "6 - 4 = 2 (left: 2 2 2 13)\n13 - 2 = 11 (left: 2 2 11)\n2 - 2 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 52663,
            "prompt_tokens": 167694,
            "cost": 0.356867
        },
        "time_spent": 27.556424856185913
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 7 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n",
                    "7 * 9 = 63 (left: 6 12 63)\n",
                    "12 + 6 = 18 (left: 7 9 18)\n",
                    "6 - 7 = -1 (left: -1 7 9)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n",
                    "12 - 6 = 6 (left: 6 7 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n",
                    "7 * 9 = 63 (left: 6 12 63)\n",
                    "12 + 6 = 18 (left: 7 9 18)\n",
                    "6 - 7 = -1 (left: -1 7 9)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 7 9 12",
                "ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n",
                    "7 * 9 = 63 (left: 6 12 63)\n",
                    "12 + 6 = 18 (left: 7 9 18)\n",
                    "6 - 7 = -1 (left: -1 7 9)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n"
                ],
                "new_ys": [
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 - 9 = 3 (left: 3 13)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 * 12 = 108 (left: 13 108)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 / 9 = 1.33 (left: 1.33 13)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 + 9 = 21 (left: 13 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 13)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n13 / 9 = 1.44 (left: 1.44 13)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n9 * 12 = 108 (left: 42 108)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n12 - 9 = 3 (left: 3 42)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n42 / 9 = 4 (left: 4 12)\n",
                    "6 * 7 = 42 (left: 9 12 42)\n9 + 12 = 21 (left: 21 42)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n7 + 12 = 19 (left: 19 15)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n7 * 12 = 84 (left: 84 15)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n12 - 7 = 5 (left: 5 15)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n15 - 7 = 8 (left: 8 12)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n12 / 7 = 1 (left: 1 15)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n15 - 12 = 3 (left: 3 12)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n15 / 7 = 2 (left: 2 12)\n",
                    "7 * 9 = 63 (left: 6 12 63)\n6 * 12 = 72 (left: 63 72)\n",
                    "7 * 9 = 63 (left: 6 12 63)\n12 + 6 = 18 (left: 18 63)\n",
                    "7 * 9 = 63 (left: 6 12 63)\n63 / 6 = 10.5 (left: 10.5 12 63)\n",
                    "7 * 9 = 63 (left: 6 12 63)\n63 - 6 = 57 (left: 12 57)\n",
                    "12 + 6 = 18 (left: 7 9 18)\n7 + 9 = 16 (left: 16 18)\n",
                    "12 + 6 = 18 (left: 7 9 18)\n9 * 7 = 63 (left: 18 63)\n",
                    "12 + 6 = 18 (left: 7 9 18)\n9 - 7 = 2 (left: 2 18)\n",
                    "12 + 6 = 18 (left: 7 9 18)\n9 / 7 = 1 (left: 1 18)\n",
                    "12 + 6 = 18 (left: 7 9 18)\n18 - 7 = 11 (left: 11 9)\n",
                    "12 + 6 = 18 (left: 7 9 18)\n18 / 9 = 2 (left: 2 9)\n",
                    "6 - 7 = -1 (left: -1 7 9)\n7 - (-1) = 8 (left: -1 8 9)\n",
                    "6 - 7 = -1 (left: -1 7 9)\n7 + 9 = 16 (left: -1 16 9)\n",
                    "6 - 7 = -1 (left: -1 7 9)\n7 * 9 = 63 (left: -1 63 9)\n",
                    "6 - 7 = -1 (left: -1 7 9)\n9 - 7 = 2 (left: -1 7 2)\n",
                    "6 - 7 = -1 (left: -1 7 9)\n9 / 7 = 1 (left: -1 1 9)\n",
                    "6 - 7 = -1 (left: -1 7 9)\n9 + 7 = 16 (left: -1 16 9)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n3 + 7 = 10 (left: 10 12)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n3 * 7 = 21 (left: 21 12)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n12 - 3 = 9 (left: 9 12)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n12 / 3 = 4 (left: 4 12)\n",
                    "9 - 6 = 3 (left: 3 7 12)\nInput: 4 5 6 7\n",
                    "9 - 6 = 3 (left: 3 7 12)\nPossible next steps:\n",
                    "9 - 6 = 3 (left: 3 7 12)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n5 - 4 = 1 (left: 1 6 7)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n4 * 5 = 20 (left: 6 7 20)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n5 / 4 = 1 (left: 1 6 7)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 - 4 = 3 (left: 3 6 7)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 4 = 1 (left: 1 6 7)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n6 + 7 = 13 (left: 4 13)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n6 - 4 = 2 (left: 2 7)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 + 6 = 15 (left: 7 12 15)\n15 / 7 = 2 (left: 2 12)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 - 9 = 3 (left: 3 13)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 + 9 = 21 (left: 13 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 7 9 12",
                "ys": [
                    "9 + 6 = 15 (left: 7 12 15)\n15 / 7 = 2 (left: 2 12)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 - 9 = 3 (left: 3 13)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 + 9 = 21 (left: 13 21)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 13)\n"
                ],
                "new_ys": [
                    "9 + 6 = 15 (left: 7 12 15)\n15 / 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n15 / 7 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n15 / 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "9 + 6 = 15 (left: 7 12 15)\n15 / 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 12 14)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\nInput: 3 3 3 3\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\nPossible next steps:\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 * 3 = 9 (left: 3 9 3 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 - 21 = -8 (left: -8)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 * 21 = 273 (left: 273)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 / 21 = 0.619 (left: 0.619)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 - 9 = 3 (left: 3 13)\n3 + 13 = 16 (left: 13 16)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 - 9 = 3 (left: 3 13)\n13 - 3 = 10 (left: 3 10)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 + 9 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 + 9 = 21 (left: 13 21)\n13 - 21 = -8 (left: -8)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 + 9 = 21 (left: 13 21)\n13 * 21 = 273 (left: 273)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n12 + 9 = 21 (left: 13 21)\n13 / 21 = 0.619 (left: 0.619)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n4 + 13 = 17 (left: 13 17)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n13 - 9 = 4 (left: 4 13)\n13 - 4 = 9 (left: 4 9)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n13 - 12 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "9 + 6 = 15 (left: 7 12 15)\n15 / 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 * 3 = 9 (left: 3 9 3 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 7 9 12",
                "ys": [
                    "9 + 6 = 15 (left: 7 12 15)\n15 / 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 * 3 = 9 (left: 3 9 3 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\n"
                ],
                "new_ys": [
                    "9 + 6 = 15 (left: 7 12 15)\n15 / 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 6) * (15 / 7) = 24\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 / (9 - 6)) * 12 = 24\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (7 / (9 - 6)) * 12 = 24\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 * 3 = 9 (left: 3 9 3 3)\n3 + 9 = 12 (left: 3 12 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 * 3 = 9 (left: 3 9 3 3)\n3 * 9 = 27 (left: 3 27 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 * 3 = 9 (left: 3 9 3 3)\n9 / 3 = 3 (left: 3 3 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 * 3 = 9 (left: 3 9 3 3)\n9 - 3 = 6 (left: 3 6 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 * 3 = 9 (left: 3 9 3 3)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 - 3 = 0 (left: 0 3 3 3)\n0 + 3 = 3 (left: 3 3 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 - 3 = 0 (left: 0 3 3 3)\n3 * 3 = 9 (left: 0 3 9)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 - 3 = 0 (left: 0 3 3 3)\n3 - 0 = 3 (left: 3 3 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 - 3 = 0 (left: 0 3 3 3)\n3 / 3 = 1 (left: 0 3 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 / 3 = 1 (left: 1 3 3 3)\n1 + 3 = 4 (left: 3 3 4)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 / 3 = 1 (left: 1 3 3 3)\n3 + 1 = 4 (left: 3 3 4)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 / 3 = 1 (left: 1 3 3 3)\n1 * 3 = 3 (left: 3 3 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 / 3 = 1 (left: 1 3 3 3)\n3 * 1 = 3 (left: 3 3 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 / 3 = 1 (left: 1 3 3 3)\n3 / 1 = 3 (left: 3 3 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 / 3 = 1 (left: 1 3 3 3)\n1 / 3 = 0 (left: 0 3 3)\n",
                    "6 + 7 = 13 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n13 + 21 = 34 (left: 34)\nThere are no possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "9 + 6 = 15 (left: 7 12 15)\n15 / 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 6) * (15 / 7) = 24\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 / (9 - 6)) * 12 = 24\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (7 / (9 - 6)) * 12 = 24\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 * 3 = 9 (left: 3 9 3 3)\n3 + 9 = 12 (left: 3 12 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 * 3 = 9 (left: 3 9 3 3)\n3 * 9 = 27 (left: 3 27 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 * 3 = 9 (left: 3 9 3 3)\n9 / 3 = 3 (left: 3 3 3)\n",
                    "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 * 3 = 9 (left: 3 9 3 3)\n9 - 3 = 6 (left: 3 6 3)\n"
                ]
            }
        ],
        "idx": 865,
        "ys": [
            "9 + 6 = 15 (left: 7 12 15)\n15 / 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 6) * (15 / 7) = 24\n",
            "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 / (9 - 6)) * 12 = 24\n",
            "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (7 / (9 - 6)) * 12 = 24\n",
            "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 * 3 = 9 (left: 3 9 3 3)\n3 + 9 = 12 (left: 3 12 3)\n",
            "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 * 3 = 9 (left: 3 9 3 3)\n3 * 9 = 27 (left: 3 27 3)\n",
            "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 * 3 = 9 (left: 3 9 3 3)\n9 / 3 = 3 (left: 3 3 3)\n",
            "9 - 6 = 3 (left: 3 7 12)\n7 / 3 = 2 (left: 2 12)\n3 * 3 = 9 (left: 3 9 3 3)\n9 - 3 = 6 (left: 3 6 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 54286,
            "prompt_tokens": 173795,
            "cost": 0.3692645
        },
        "time_spent": 35.733930826187134
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 6 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 6 13)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n"
                ],
                "values": [
                    50,
                    100,
                    100,
                    50
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 1 11 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 6 13",
                "ys": [
                    "5 + 6 = 11 (left: 1 11 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 - 1 = 10 (left: 10 13)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n13 - 1 = 12 (left: 1 12)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 - 5 = 1 (left: 1 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 * 6 = 30 (left: 30 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 5 = 11 (left: 11 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 / 5 = 1 (left: 1 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n13 - 5 = 8 (left: 8 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n13 - 6 = 7 (left: 7 13)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n6 / 6 = 1 (left: 1 13)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n6 - 6 = 0 (left: 0 13)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n",
                    "1 + 5 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n5 * 6 = 30 (left: 30 12)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n6 - 5 = 1 (left: 1 12)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n6 / 5 = 1.2 (left: 1.2 12)\n",
                    "13 - 1 = 12 (left: 5 6 12)\nInput: 4 4 4 4\n",
                    "13 - 1 = 12 (left: 5 6 12)\nPossible next steps:\n",
                    "13 - 1 = 12 (left: 5 6 12)\n4 + 4 = 8 (left: 4 8 4 4)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n4 / 4 = 1 (left: 1 4 4 4)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n4 * 4 = 16 (left: 4 16 4)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n4 - 4 = 0 (left: 0 4 4 4)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    100,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    100,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 5 = 11 (left: 11 13)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n4 + 4 = 8 (left: 4 8 4 4)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 6 13",
                "ys": [
                    "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 5 = 11 (left: 11 13)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n4 + 4 = 8 (left: 4 8 4 4)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n13 * 11 = 143 (left: 143)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 11 13)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2 13)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n13 / 11 = 1 (left: 1 13)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 / 1 = 11 (left: 11 13)\n11 - 13 = -2 (left: 11 -2)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n13 * 11 = 143 (left: 143)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n13 - 11 = 2 (left: 2)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n6 + 5 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n4 + 4 = 8 (left: 4 8 4 4)\n4 * 8 = 32 (left: 4 4 32)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n4 + 4 = 8 (left: 4 8 4 4)\n4 + 8 = 12 (left: 4 12 4)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n4 + 4 = 8 (left: 4 8 4 4)\n8 * 4 = 32 (left: 4 4 32)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n4 + 4 = 8 (left: 4 8 4 4)\n4 / 8 = 0.5 (left: 0.5 4 4)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n4 + 4 = 8 (left: 4 8 4 4)\n8 / 4 = 2 (left: 2 4 4)\n",
                    "13 - 1 = 12 (left: 5 6 12)\n4 + 4 = 8 (left: 4 8 4 4)\n8 - 4 = 4 (left: 4 4 4)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 - 13 = -1 (left: -1)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 * 13 = 156 (left: 156)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 / 13 = 0.92 (left: 0.92)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n13 - 12 = 1 (left: 1 13)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n13 / 12 = 1.08 (left: 1.08 13)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n12 - 13 = -1 (left: -1 13)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n13 * 11 = 143 (left: 143)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 6 13",
                "ys": [
                    "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n13 * 11 = 143 (left: 143)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (5 + 6) * (1 + 13) = 24\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (5 + 6) * (1 + 13) = 24\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 * 5) + (6 + 13) = 24\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (1 * 5) + (6 + 13) = 24\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\nInput: 4 5 6 7\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n5 - 4 = 1 (left: 1 6 7)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 * 4 = 24 (left: 7 24)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n7 - 4 = 3 (left: 3 6 7)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n7 - 6 = 1 (left: 1 6 7)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 + 4 = 10 (left: 7 10)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n7 - 5 = 2 (left: 2 6 7)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n5 + 4 = 9 (left: 6 7 9)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n5 * 4 = 20 (left: 6 7 20)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 - 4 = 2 (left: 2 7 6)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 / 4 = 1 (left: 1 7 6)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n7 - 4 = 3 (left: 3 6 7)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n7 - 6 = 1 (left: 1 6 7)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n6 + 4 = 10 (left: 7 10)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n7 - 5 = 2 (left: 2 6 7)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\nInput: 3 3 3 3\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 + 1 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n13 * 11 = 143 (left: 143)\n143 is not a valid input for the 24 puzzle.\n"
                ],
                "values": [
                    0,
                    0,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 * 5) + (6 + 13) = 24\n",
                    "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (1 * 5) + (6 + 13) = 24\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (5 + 6) * (1 + 13) = 24\n",
                    "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (5 + 6) * (1 + 13) = 24\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\nInput: 4 5 6 7\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n4 + 5 = 9 (left: 6 7 9)\n"
                ]
            }
        ],
        "idx": 866,
        "ys": [
            "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (1 * 5) + (6 + 13) = 24\n",
            "1 * 5 = 5 (left: 5 6 13)\n5 + 6 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (1 * 5) + (6 + 13) = 24\n",
            "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (5 + 6) * (1 + 13) = 24\n",
            "5 + 6 = 11 (left: 1 11 13)\n11 * 1 = 11 (left: 11 13)\n13 + 11 = 24 (left: 24)\nAnswer: (5 + 6) * (1 + 13) = 24\n",
            "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\nInput: 4 5 6 7\n",
            "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\nPossible next steps:\n",
            "5 + 6 = 11 (left: 1 11 13)\n1 + 11 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n4 + 5 = 9 (left: 6 7 9)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 55654,
            "prompt_tokens": 179536,
            "cost": 0.380612
        },
        "time_spent": 27.196078062057495
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 8 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 8 = 11 (left: 8 8 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n",
                    "11 - 3 = 8 (left: 3 8 8)\n"
                ],
                "values": [
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n",
                    "11 - 3 = 8 (left: 3 8 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 8 8 11",
                "ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n",
                    "11 - 3 = 8 (left: 3 8 8)\n"
                ],
                "new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n5 * 8 = 40 (left: 40 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 + 8 = 16 (left: 16 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 * 8 = 64 (left: 64 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 / 8 = 1 (left: 1 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 - 8 = 0 (left: 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 + 8 = 19 (left: 8)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 / 8 = 1.375 (left: 1.375 8)\n",
                    "11 - 3 = 8 (left: 3 8 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "11 - 3 = 8 (left: 3 8 8)\n8 / 3 = 2 (left: 2 8)\n",
                    "11 - 3 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    100,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n5 * 8 = 40 (left: 40 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 + 8 = 16 (left: 16 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 / 8 = 1 (left: 1 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 8 8 11",
                "ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n5 * 8 = 40 (left: 40 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 + 8 = 16 (left: 16 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 / 8 = 1 (left: 1 11)\n"
                ],
                "new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n13 * 11 = 143 (left: 143)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n13 - 11 = 2 (left: 2)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n11 + 13 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n11 * 13 = 143 (left: 143)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n8 / 3 = 2 (left: 2)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\nInput: 4 4 6 3\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\nPossible next steps:\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n4 + 4 = 8 (left: 6 8 3)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n4 / 4 = 1 (left: 1 6 3)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n4 * 4 = 16 (left: 16 6 3)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n4 - 4 = 0 (left: 0 6 3)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n6 + 3 = 9 (left: 4 4 9)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n6 / 3 = 2 (left: 4 2 3)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n6 * 3 = 18 (left: 4 4 18)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n6 - 3 = 3 (left: 4 3 3)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 6 = 9 (left: 4 4 9)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 / 3 = 1 (left: 4 1 3)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 6 = 18 (left: 4 4 18)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 - 6 = -3 (left: 4 6 -3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n5 * 8 = 40 (left: 40 11)\n40 + 11 = 51 (left: 11 51)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n5 * 8 = 40 (left: 40 11)\n40 - 11 = 29 (left: 11 29)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n5 * 8 = 40 (left: 40 11)\n40 * 11 = 440 (left: 11 440)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n5 * 8 = 40 (left: 40 11)\n40 / 11 = 3.64 (left: 3.64 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n11 - 3 = 8 (left: 8)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n11 / 3 = 3 (left: 3)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 11)\n11 / 6 = 1 (left: 1 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 + 8 = 16 (left: 16 11)\n16 + 11 = 27 (left: 27)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 + 8 = 16 (left: 16 11)\n16 - 11 = 5 (left: 5)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 + 8 = 16 (left: 16 11)\n16 * 11 = 176 (left: 176)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 + 8 = 16 (left: 16 11)\n16 / 11 = 1.45 (left: 1.45)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 / 8 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 / 8 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 / 8 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n8 / 8 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n11 + 13 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 8 8 11",
                "ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n11 + 13 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n"
                ],
                "new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\nAnswer: (8 - 3) + (5 + 8) = 24\n",
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n11 + 13 = 24 (left: 24)\nAnswer: 11 + (13 + 5) = 24\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 + 8) * 8 = 24\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 + 1 = 12 (left: 11 12)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 - 1 = 10 (left: 10 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 * 1 = 11 (left: 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 / 1 = 11 (left: 11)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\nInput: 14 4 6 2\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\nPossible next steps:\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n14 + 4 = 18 (left: 6 18 2)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n14 - 4 = 10 (left: 10 4 6)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n14 / 4 = 3.5 (left: 3.5 4 6)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n14 - 6 = 8 (left: 4 8 2)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n14 / 6 = 2.33 (left: 2.33 6 2)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n14 - 2 = 12 (left: 4 6 12)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n4 * 6 = 24 (left: 14 24 2)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n4 + 6 = 10 (left: 10 14 2)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n6 + 2 = 8 (left: 4 8 14)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 + 11 = 14 (left: 14)\n6 / 2 = 3 (left: 3 4 14)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\nInput: 3 3\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\nPossible next steps:\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n3 * 3 = 9 (left: 9)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n3 + 3 = 6 (left: 6)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n3 / 3 = 1 (left: 1)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n3 - 3 = 0 (left: 0)\n",
                    "8 - 3 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n17 is the final result.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\nAnswer: (8 - 3) + (5 + 8) = 24\n",
                    "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n11 + 13 = 24 (left: 24)\nAnswer: 11 + (13 + 5) = 24\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 + 8) * 8 = 24\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 + 1 = 12 (left: 11 12)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 - 1 = 10 (left: 10 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 * 1 = 11 (left: 11)\n",
                    "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 / 1 = 11 (left: 11)\n"
                ]
            }
        ],
        "idx": 867,
        "ys": [
            "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n13 + 11 = 24 (left: 24)\nAnswer: (8 - 3) + (5 + 8) = 24\n",
            "8 - 3 = 5 (left: 5 8 11)\n5 + 8 = 13 (left: 13 11)\n11 + 13 = 24 (left: 24)\nAnswer: 11 + (13 + 5) = 24\n",
            "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 + 8) * 8 = 24\n",
            "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 + 1 = 12 (left: 11 12)\n",
            "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 - 1 = 10 (left: 10 11)\n",
            "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 * 1 = 11 (left: 11)\n",
            "3 + 8 = 11 (left: 8 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n11 / 1 = 11 (left: 11)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 56909,
            "prompt_tokens": 184695,
            "cost": 0.39086049999999994
        },
        "time_spent": 24.472495079040527
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 4 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 * 3 = 6 (left: 4 6 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n",
                    "10 - 2 = 8 (left: 2 3 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 * 3 = 6 (left: 4 6 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n",
                    "10 - 2 = 8 (left: 2 3 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 4 10",
                "ys": [
                    "2 * 3 = 6 (left: 4 6 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n",
                    "10 - 2 = 8 (left: 2 3 8)\n"
                ],
                "new_ys": [
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 / 4 = 1.5 (left: 1.5 10)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 + 4 = 14 (left: 6 14)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 * 6 = 24 (left: 10 24)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 - 4 = 6 (left: 6 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n3 * 2 = 6 (left: 6 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 2 8)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n10 / 2 = 5 (left: 5 10)\n",
                    "10 - 2 = 8 (left: 2 3 8)\n2 + 3 = 5 (left: 5 8)\n",
                    "10 - 2 = 8 (left: 2 3 8)\n3 * 2 = 6 (left: 6 8)\n",
                    "10 - 2 = 8 (left: 2 3 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "10 - 2 = 8 (left: 2 3 8)\n8 / 2 = 4 (left: 4 8)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 + 4 = 14 (left: 6 14)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 * 6 = 24 (left: 10 24)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 - 4 = 6 (left: 6 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n3 * 2 = 6 (left: 6 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 4 10",
                "ys": [
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 + 4 = 14 (left: 6 14)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 * 6 = 24 (left: 10 24)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 - 4 = 6 (left: 6 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n3 * 2 = 6 (left: 6 10)\n"
                ],
                "new_ys": [
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 * 10 = 100 (left: 100)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 / 10 = 1 (left: 1)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 - 10 = 0 (left: 0)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 + 4 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 + 4 = 14 (left: 6 14)\n14 - 6 = 8 (left: 8)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 + 4 = 14 (left: 6 14)\n14 / 6 = 2 (left: 2)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 + 4 = 14 (left: 6 14)\n6 * 14 = 84 (left: 84)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 * 6 = 24 (left: 10 24)\n2 * 12 = 24 (left: 10 24)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n10 + 2 = 12 (left: 2 12)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n10 / 2 = 5 (left: 2 5)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n10 - 2 = 8 (left: 8)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 - 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 - 4 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 - 4 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 - 4 = 6 (left: 6 10)\n10 / 6 = 1.66667 (left: 1.66667 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n10 - 5 = 5 (left: 5)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n10 / 5 = 2 (left: 2)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\nInput: 3 6 4 12\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\nPossible next steps:\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n3 + 6 = 9 (left: 9 4 12)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n6 / 3 = 2 (left: 2 4 12)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n4 + 3 = 7 (left: 7 6 12)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n3 * 6 = 18 (left: 18 4 12)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n6 - 3 = 3 (left: 3 4 12)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n12 - 4 = 8 (left: 3 6 8)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n3 * 4 = 12 (left: 12 6 8)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n6 / 3 = 2 (left: 12 2 8)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n4 + 6 = 10 (left: 10 4 12)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n6 - 4 = 2 (left: 3 2 12)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n12 / 3 = 4 (left: 3 4 4)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n12 - 6 = 6 (left: 3 6 6)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n6 / 3 = 2 (left: 3 6 2)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n12 - 3 = 9 (left: 9 6 4)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n4 + 6 = 10 (left: 10 9 4)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n6 / 3 = 2 (left: 10 9 2)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n12 / 4 = 3 (left: 3 9 3)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n12 / 6 = 2 (left: 3 9 2)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n4 + 6 = 10 (left: 3 9 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n6 - 4 = 2 (left: 3 2 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n12 / 3 = 4 (left: 4 2 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n12 - 6 = 6 (left: 6 2 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n6 / 3 = 2 (left: 6 2 2)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n12 / 4 = 3 (left: 3 2 3)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n12 - 3 = 9 (left: 9 2 3)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n3 * 6 = 18 (left: 18 2 3)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n3 * 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n3 * 2 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 10)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n3 * 2 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n3 * 2 = 6 (left: 6 10)\n10 / 6 = 1.67 (left: 1.67 10)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 + 4 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 - 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n3 * 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 4 10",
                "ys": [
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 + 4 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 - 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n3 * 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n"
                ],
                "new_ys": [
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nInput: 3 3 3 3\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nPossible next steps:\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nInput: 5 5\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nPossible next steps:\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n5 + 5 = 10 (left: 5 10)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n5 * 5 = 25 (left: 5 25)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n5 / 5 = 1 (left: 1 5)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n5 - 5 = 0 (left: 0 5)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 + 4 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\nInput: 3 3 3 3\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 + 4 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\nPossible next steps:\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 + 4 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 + 4 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 + 4 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 + 4 = 14 (left: 6 14)\n6 + 14 = 20 (left: 20)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\nInput: 5 6 6 7\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\nPossible next steps:\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n5 + 6 = 11 (left: 6 7 11)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n6 * 7 = 42 (left: 5 6 42)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n6 + 6 = 12 (left: 5 7 12)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n6 / 6 = 1 (left: 1 6 7)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n7 - 5 = 2 (left: 2 6 6)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n6 - 5 = 1 (left: 1 6 7)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n7 - 6 = 1 (left: 1 6 6)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n5 * 6 = 30 (left: 6 6 30)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\nInput: 4 4 4 4\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\nPossible next steps:\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n4 * 4 = 16 (left: 4 4 16)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n4 + 4 = 8 (left: 4 4 8)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n4 / 4 = 1 (left: 1 4 4)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n4 - 4 = 0 (left: 0 4 4)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n\n2 + 10 = 12 (left: 10 12)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n\n10 - 2 = 8 (left: 8 10)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n\n2 * 10 = 20 (left: 10 20)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n6 - 4 = 2 (left: 2 10)\n\n10 / 2 = 5 (left: 5 10)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n10 - 4 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n8 + 8 = 16 (left: 16)\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\nInput: 15\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\nPossible next steps:\n",
                    "4 - 2 = 2 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)\n5 + 10 = 15 (left: 15)\nNot enough numbers to form an equation.\n",
                    "4 - 2 = 2 (left: 2 3 10)\n3 * 2 = 6 (left: 6 10)\n6 + 10 = 16 (left: 16)\n16 is the final result.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nInput: 3 3 3 3\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nPossible next steps:\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nInput: 5 5\n"
                ]
            }
        ],
        "idx": 868,
        "ys": [
            "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nInput: 3 3 3 3\n",
            "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nPossible next steps:\n",
            "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 + 3 = 6 (left: 3 3 6)\n",
            "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 * 3 = 9 (left: 3 3 9)\n",
            "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 / 3 = 1 (left: 1 3 3)\n",
            "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\n3 - 3 = 0 (left: 0 3 3)\n",
            "2 * 3 = 6 (left: 4 6 10)\n4 + 6 = 10 (left: 10 10)\n10 + 10 = 20 (left: 20)\nInput: 5 5\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 58547,
            "prompt_tokens": 188815,
            "cost": 0.40031649999999996
        },
        "time_spent": 32.537132024765015
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 6 8 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 8 8 12)\n",
                    "6 / 6 = 1 (left: 1 8 8)\n",
                    "8 + 6 = 14 (left: 6 8 14)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n",
                    "6 - 6 = 0 (left: 0 8 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n",
                    "8 / 6 = 1 (left: 6 1 8)\n",
                    "8 * 6 = 48 (left: 6 8 48)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n",
                    "6 / 6 = 1 (left: 1 8 8)\n",
                    "8 + 6 = 14 (left: 6 8 14)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n",
                    "6 - 6 = 0 (left: 0 8 8)\n",
                    "8 / 6 = 1 (left: 6 1 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 6 8 8",
                "ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n",
                    "6 / 6 = 1 (left: 1 8 8)\n",
                    "8 + 6 = 14 (left: 6 8 14)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n",
                    "6 - 6 = 0 (left: 0 8 8)\n",
                    "8 / 6 = 1 (left: 6 1 8)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 * 8 = 64 (left: 64 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n",
                    "6 / 6 = 1 (left: 1 8 8)\n1 + 8 = 9 (left: 8 9)\n",
                    "6 / 6 = 1 (left: 1 8 8)\n8 / 1 = 8 (left: 8 8)\n",
                    "6 / 6 = 1 (left: 1 8 8)\n1 * 8 = 8 (left: 8 8)\n",
                    "6 / 6 = 1 (left: 1 8 8)\n8 - 1 = 7 (left: 7 8)\n",
                    "8 + 6 = 14 (left: 6 8 14)\n6 + 8 = 14 (left: 14)\n",
                    "8 + 6 = 14 (left: 6 8 14)\n6 * 8 = 48 (left: 48)\n",
                    "8 + 6 = 14 (left: 6 8 14)\n8 - 6 = 2 (left: 2 8)\n",
                    "8 + 6 = 14 (left: 6 8 14)\n14 - 8 = 6 (left: 6 8)\n",
                    "8 + 6 = 14 (left: 6 8 14)\n14 / 6 = 2 (left: 2 8)\n",
                    "8 + 6 = 14 (left: 6 8 14)\n14 / 8 = 1.75 (left: 1.75 8)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n8 + 8 = 16 (left: 16 36)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n8 * 8 = 64 (left: 64 36)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n8 / 8 = 1 (left: 1 36)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n8 - 8 = 0 (left: 0 36)\n",
                    "6 * 6 = 36 (left: 8 8 36)\nInput: 3 5 7 17\n",
                    "6 * 6 = 36 (left: 8 8 36)\nPossible next steps:\n",
                    "6 * 6 = 36 (left: 8 8 36)\n3 + 5 = 8 (left: 7 8 17)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n3 * 5 = 15 (left: 15 7 17)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n3 - 5 = -2 (left: -2 7 17)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n7 + 3 = 10 (left: 10 5 17)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n7 * 3 = 21 (left: 21 5 17)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n7 - 3 = 4 (left: 4 5 17)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n17 - 7 = 10 (left: 3 5 10)\n",
                    "6 * 6 = 36 (left: 8 8 36)\n17 - 3 = 14 (left: 5 7 14)\n",
                    "6 - 6 = 0 (left: 0 8 8)\n0 + 8 = 8 (left: 8 8)\n",
                    "6 - 6 = 0 (left: 0 8 8)\n8 - 0 = 8 (left: 8 8)\n",
                    "6 - 6 = 0 (left: 0 8 8)\n0 * 8 = 0 (left: 8 8)\n",
                    "6 - 6 = 0 (left: 0 8 8)\n8 / 0 is undefined\n",
                    "6 - 6 = 0 (left: 0 8 8)\n8 / 8 = 1 (left: 1 8)\n",
                    "6 - 6 = 0 (left: 0 8 8)\n8 - 8 = 0 (left: 0 8)\n",
                    "8 / 6 = 1 (left: 6 1 8)\n6 + 1 = 7 (left: 7 8)\n",
                    "8 / 6 = 1 (left: 6 1 8)\n6 * 1 = 6 (left: 6 8)\n",
                    "8 / 6 = 1 (left: 6 1 8)\n6 / 1 = 6 (left: 6 8)\n",
                    "8 / 6 = 1 (left: 6 1 8)\n6 - 1 = 5 (left: 5 8)\n",
                    "8 / 6 = 1 (left: 6 1 8)\n8 + 1 = 9 (left: 6 9)\n",
                    "8 / 6 = 1 (left: 6 1 8)\n8 * 1 = 8 (left: 8)\n",
                    "8 / 6 = 1 (left: 6 1 8)\n8 / 1 = 8 (left: 8)\n",
                    "8 / 6 = 1 (left: 6 1 8)\n8 - 1 = 7 (left: 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 6 8 8",
                "ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 - 8 = 0 (left: 0)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 * 8 = 64 (left: 64)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 / 8 = 1 (left: 1)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n12 / 8 = 1 (left: 1 12)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n8 - 6 = 2 (left: 2)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n8 / 6 = 1 (left: 1)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 / 2 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 - 12 = 4 (left: 4)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 / 12 = 1 (left: 1)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 * 12 = 192 (left: 192)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n12 - 16 = -4 (left: -4)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n12 / 16 = 0 (left: 0)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\nInput: 3 5 5 3\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\nPossible next steps:\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n3 + 5 = 8 (left: 5 8 3)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n5 / 3 = 1 (left: 1 5 3)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n3 + 5 = 8 (left: 5 3 8)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n3 * 5 = 15 (left: 5 15 3)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n5 - 3 = 2 (left: 2 5 3)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n5 - 3 = 2 (left: 2 5 3)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n5 / 3 = 1 (left: 1 5 3)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n5 - 3 = 2 (left: 2 5 3)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 / 1 = 12 (left: 1 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 + 1 = 13 (left: 1 13)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n0 + 12 = 12 (left: 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n12 - 0 = 12 (left: 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n12 / 0 = Undefined (left: 0 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n12 * 0 = 0 (left: 0)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\nInput: 3 3 3 3\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\nPossible next steps:\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 - 3 = 0 (left: 0 3 3 3)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 6 8 8",
                "ys": [
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n3 * 3 = 9 (left: 9 6 3)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n16 is the goal!\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\nThere are no possible next steps for the input 20.\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\nInput: 3 6 6 9\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\nPossible next steps:\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n3 + 6 = 9 (left: 6 9 9)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n6 / 3 = 2 (left: 2 6 9)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n9 - 6 = 3 (left: 3 6 9)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n9 - 3 = 6 (left: 6 6 9)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n6 / 3 = 2 (left: 2 6 9)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n9 - 6 = 3 (left: 3 6 9)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\nInput: 2 5 6 7\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\nPossible next steps:\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n2 + 5 = 7 (left: 6 7 7)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n5 + 6 = 11 (left: 2 7 11)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n6 + 7 = 13 (left: 2 5 13)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n2 * 5 = 10 (left: 6 7 10)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n5 * 6 = 30 (left: 2 7 30)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n6 * 7 = 42 (left: 2 5 42)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n2 + 6 = 8 (left: 5 7 8)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n5 + 7 = 12 (left: 2 6 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n6 + 2 = 8 (left: 5 7 8)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n7 - 5 = 2 (left: 2 6 7)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n6 - 2 = 4 (left: 4 5 7)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n7 - 2 = 5 (left: 5 5 7)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n7 / 2 = 3 (left: 3 5 7)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n6 / 2 = 3 (left: 3 5 7)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n7 - 6 = 1 (left: 1 5 7)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n6 / 5 = 1 (left: 1 5 7)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n16 + 12 = 28 (left: 28)\n7 - 5 = 2 (left: 2 5 7)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\nPossible next steps:\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\nInput: 1 5 5 5\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\nPossible next steps:\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n1 + 5 = 6 (left: 5 5 6)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n5 * 1 = 5 (left: 5 5 5)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n5 - 1 = 4 (left: 4 5 5)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n5 / 1 = 5 (left: 5 5 5)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\nInput: 3 3 6 6\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\nPossible next steps:\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n3 * 3 = 9 (left: 6 6 9)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n3 + 6 = 9 (left: 3 6 9)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n6 - 3 = 3 (left: 3 6 6)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n6 / 3 = 2 (left: 2 3 6)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n3 + 6 = 9 (left: 3 6 9)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n6 - 3 = 3 (left: 3 6 6)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)\n6 / 3 = 2 (left: 2 3 6)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n3 * 3 = 9 (left: 9 6 3)\n",
                    "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n16 is the goal!\n",
                    "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\nThere are no possible next steps for the input 20.\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\nInput: 3 6 6 9\n",
                    "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 869,
        "ys": [
            "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n3 + 3 = 6 (left: 3 6 3)\n",
            "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n3 * 3 = 9 (left: 9 6 3)\n",
            "6 + 6 = 12 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n3 + 3 = 6 (left: 3 3 6 3)\n6 - 3 = 3 (left: 3 3 3)\n",
            "8 - 6 = 2 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n16 is the goal!\n",
            "8 - 6 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\nThere are no possible next steps for the input 20.\n",
            "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\nInput: 3 6 6 9\n",
            "8 - 6 = 2 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 60783,
            "prompt_tokens": 193863,
            "cost": 0.4123605
        },
        "time_spent": 43.19893789291382
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 9 9 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 9 = 13 (left: 9 9 10)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n",
                    "9 + 4 = 13 (left: 9 10 13)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n",
                    "9 / 4 = 2.25 (left: 2.25 9 10)\n",
                    "10 - 9 = 1 (left: 1 9 9)\n",
                    "10 / 4 = 2.5 (left: 2.5 9 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    100,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 5 9 10)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n",
                    "9 + 4 = 13 (left: 9 10 13)\n",
                    "10 - 9 = 1 (left: 1 9 9)\n",
                    "9 / 4 = 2.25 (left: 2.25 9 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 9 9 10",
                "ys": [
                    "9 - 4 = 5 (left: 5 9 10)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n",
                    "9 + 4 = 13 (left: 9 10 13)\n",
                    "10 - 9 = 1 (left: 1 9 9)\n",
                    "9 / 4 = 2.25 (left: 2.25 9 10)\n"
                ],
                "new_ys": [
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 9 10 14)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19 10)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 * 9 = 45 (left: 45 10 10)\n",
                    "9 - 4 = 5 (left: 5 9 10)\n5 + 10 = 15 (left: 9 15 10)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 / 3 = 3 (left: 3 9 9)\n",
                    "10 - 4 = 6 (left: 6 9 9)\n9 * 6 = 54 (left: 9 9 54)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 * 9 = 81 (left: 10 81)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 - 9 = 0 (left: 0 10)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n9 + 10 = 19 (left: 19 36)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n9 * 10 = 90 (left: 90 36)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n10 - 9 = 1 (left: 1 36)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 / 9 = 4 (left: 10 4)\n",
                    "9 + 4 = 13 (left: 9 10 13)\n9 + 10 = 19 (left: 13 19)\n",
                    "9 + 4 = 13 (left: 9 10 13)\n10 - 9 = 1 (left: 1 13)\n",
                    "9 + 4 = 13 (left: 9 10 13)\n10 / 9 = 1 (left: 1 13)\n",
                    "9 + 4 = 13 (left: 9 10 13)\n9 * 10 = 90 (left: 13 90)\n",
                    "9 + 4 = 13 (left: 9 10 13)\nInput: 3 3 8 8\n",
                    "9 + 4 = 13 (left: 9 10 13)\nPossible next steps:\n",
                    "9 + 4 = 13 (left: 9 10 13)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "9 + 4 = 13 (left: 9 10 13)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "9 + 4 = 13 (left: 9 10 13)\n3 * 3 = 9 (left: 8 8 9)\n",
                    "9 + 4 = 13 (left: 9 10 13)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "9 + 4 = 13 (left: 9 10 13)\n8 * 3 = 24 (left: 8 24)\n",
                    "9 + 4 = 13 (left: 9 10 13)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "9 + 4 = 13 (left: 9 10 13)\n3 + 8 = 11 (left: 8 11 8)\n",
                    "9 + 4 = 13 (left: 9 10 13)\n3 - 8 = -5 (left: -5 8 8)\n",
                    "10 - 9 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 9 10)\n",
                    "10 - 9 = 1 (left: 1 9 9)\n9 - 1 = 8 (left: 8 9 9)\n",
                    "10 - 9 = 1 (left: 1 9 9)\n1 * 9 = 9 (left: 9 9 9)\n",
                    "9 / 4 = 2.25 (left: 2.25 9 10)\n2.25 + 9 = 11.25 (left: 10 11.25)\n",
                    "9 / 4 = 2.25 (left: 2.25 9 10)\n9 / 2.25 = 4 (left: 4 10)\n",
                    "9 / 4 = 2.25 (left: 2.25 9 10)\n10 - 2.25 = 7.75 (left: 7.75 10)\n",
                    "9 / 4 = 2.25 (left: 2.25 9 10)\n2.25 * 9 = 20.25 (left: 10 20.25)\n",
                    "9 / 4 = 2.25 (left: 2.25 9 10)\nInput: 3 3 7 8\n",
                    "9 / 4 = 2.25 (left: 2.25 9 10)\nPossible next steps:\n",
                    "9 / 4 = 2.25 (left: 2.25 9 10)\n3 + 3 = 6 (left: 6 7 8)\n",
                    "9 / 4 = 2.25 (left: 2.25 9 10)\n3 * 3 = 9 (left: 7 8 9)\n",
                    "9 / 4 = 2.25 (left: 2.25 9 10)\n7 - 3 = 4 (left: 4 8 9)\n",
                    "9 / 4 = 2.25 (left: 2.25 9 10)\n8 - 3 = 5 (left: 5 7 9)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 - 9 = 0 (left: 0 10)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n9 + 10 = 19 (left: 19 36)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n10 - 9 = 1 (left: 1 36)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 / 9 = 4 (left: 10 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 9 9 10",
                "ys": [
                    "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 - 9 = 0 (left: 0 10)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n9 + 10 = 19 (left: 19 36)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n10 - 9 = 1 (left: 1 36)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 / 9 = 4 (left: 10 4)\n"
                ],
                "new_ys": [
                    "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n18 - 10 = 8 (left: 8)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n10 * 18 = 180 (left: 180)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n18 / 10 = 1.8 (left: 1.8)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 - 9 = 0 (left: 0 10)\n0 + 10 = 10 (left: 10)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 - 9 = 0 (left: 0 10)\n10 - 0 = 10 (left: 0)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 - 9 = 0 (left: 0 10)\n10 / 0 = undefined (left: 0 10)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n9 + 10 = 19 (left: 19 36)\n19 + 36 = 55 (left: 55)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n9 + 10 = 19 (left: 19 36)\n36 - 19 = 17 (left: 17 36)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n9 + 10 = 19 (left: 19 36)\n19 - 36 = -17 (left: -17 36)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n9 + 10 = 19 (left: 19 36)\n36 / 19 = 1.89 (left: 1.89 36)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n9 + 10 = 19 (left: 19 36)\n19 / 36 = 0.53 (left: 0.53 36)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n9 + 10 = 19 (left: 19 36)\n19 * 36 = 684 (left: 684)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n10 - 9 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n10 - 9 = 1 (left: 1 36)\n36 / 1 = 36 (left: 1 36)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\nInput: 10 27\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\nPossible next steps:\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n10 + 27 = 37 (left: 37)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n10 * 27 = 270 (left: 270)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n27 - 10 = 17 (left: 17)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n27 / 10 = 2.7 (left: 2.7)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 / 9 = 4 (left: 10 4)\n10 + 4 = 14 (left: 14)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 / 9 = 4 (left: 10 4)\n10 - 4 = 6 (left: 6)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 / 9 = 4 (left: 10 4)\n10 * 4 = 40 (left: 40)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 / 9 = 4 (left: 10 4)\n10 / 4 = 2.5 (left: 2.5)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 - 9 = 0 (left: 0 10)\n0 + 10 = 10 (left: 10)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n10 - 9 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n10 + 27 = 37 (left: 37)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 9 9 10",
                "ys": [
                    "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 - 9 = 0 (left: 0 10)\n0 + 10 = 10 (left: 10)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n10 - 9 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n10 + 27 = 37 (left: 37)\n"
                ],
                "new_ys": [
                    "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 + 1 = 29 (left: 1 28)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 / 2 = 14 (left: 14 28)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 * 2 = 56 (left: 28 56)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 - 1 = 27 (left: 1 27)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 - 9 = 0 (left: 0 10)\n0 + 10 = 10 (left: 10)\nSorry, the input numbers are not enough to play the 24 puzzle. Please provide at least 4 numbers.\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 + 0 = 10 (left: 0 10)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n10 is the final output.\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nInput: 3 3 3 3\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nPossible next steps:\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n10 - 9 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\nInput: 4 6 6 8\n",
                    "9 * 4 = 36 (left: 9 10 36)\n10 - 9 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\nPossible next steps:\n",
                    "9 * 4 = 36 (left: 9 10 36)\n10 - 9 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\n6 + 6 = 12 (left: 4 8 12)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n10 - 9 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\n4 * 6 = 24 (left: 8 6 24)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n10 - 9 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\n6 / 4 = 1.5 (left: 1.5 6 8)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n10 - 9 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\n6 - 4 = 2 (left: 2 6 8)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n10 - 9 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\n8 - 6 = 2 (left: 4 2 8)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n10 - 9 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\n8 / 6 = 1.33 (left: 4 1.33 6)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n10 - 9 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\n6 * 6 = 36 (left: 4 8 36)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n10 + 27 = 37 (left: 37)\nInput: 3 4 6 7\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n10 + 27 = 37 (left: 37)\nPossible next steps:\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n10 + 27 = 37 (left: 37)\n3 + 4 = 7 (left: 6 7)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n10 + 27 = 37 (left: 37)\n3 * 4 = 12 (left: 6 12)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n10 + 27 = 37 (left: 37)\n6 + 4 = 10 (left: 7 10)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n10 + 27 = 37 (left: 37)\n6 - 3 = 3 (left: 3 7)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n10 + 27 = 37 (left: 37)\n7 - 3 = 4 (left: 4 7)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n10 + 27 = 37 (left: 37)\n7 - 4 = 3 (left: 3 7)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n10 + 27 = 37 (left: 37)\n3 * 6 = 18 (left: 4 18)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n10 + 27 = 37 (left: 37)\n7 - 4 = 3 (left: 3 7)\n",
                    "9 * 4 = 36 (left: 9 10 36)\n36 - 9 = 27 (left: 10 27)\n10 + 27 = 37 (left: 37)\n7 - 3 = 4 (left: 4 7)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 + 1 = 29 (left: 1 28)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 / 2 = 14 (left: 14 28)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 * 2 = 56 (left: 28 56)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 - 1 = 27 (left: 1 27)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 - 9 = 0 (left: 0 10)\n0 + 10 = 10 (left: 10)\nSorry, the input numbers are not enough to play the 24 puzzle. Please provide at least 4 numbers.\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 + 0 = 10 (left: 0 10)\n",
                    "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n10 is the final output.\n"
                ]
            }
        ],
        "idx": 870,
        "ys": [
            "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 + 1 = 29 (left: 1 28)\n",
            "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 / 2 = 14 (left: 14 28)\n",
            "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 * 2 = 56 (left: 28 56)\n",
            "4 + 9 = 13 (left: 9 9 10)\n9 + 9 = 18 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 - 1 = 27 (left: 1 27)\n",
            "4 + 9 = 13 (left: 9 9 10)\n9 - 9 = 0 (left: 0 10)\n0 + 10 = 10 (left: 10)\nSorry, the input numbers are not enough to play the 24 puzzle. Please provide at least 4 numbers.\n",
            "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 + 0 = 10 (left: 0 10)\n",
            "4 + 9 = 13 (left: 9 9 10)\n9 / 9 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n10 is the final output.\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 62493,
            "prompt_tokens": 198907,
            "cost": 0.4233465
        },
        "time_spent": 32.73636794090271
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 7 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 7 9)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 7 9)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 7 9",
                "ys": [
                    "3 + 3 = 6 (left: 6 7 9)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 * 9 = 63 (left: 6 63)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 - 6 = 1 (left: 1 9)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n1 + 7 = 8 (left: 8 9)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n7 - 1 = 6 (left: 6 9)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n1 * 7 = 7 (left: 7 9)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n7 / 1 = 7 (left: 7 9)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n7 + 9 = 16 (left: 1 16)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n9 - 1 = 8 (left: 7 8)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 7 9)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n6 + 3 = 9 (left: 7 9)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n3 * 6 = 18 (left: 7 18)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n6 * 3 = 18 (left: 7 18)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n6 / 3 = 2 (left: 2 7)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n3 / 6 = 0.5 (left: 0.5 7)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n6 - 3 = 3 (left: 3 7)\n",
                    "9 - 3 = 6 (left: 3 6 7)\n3 - 6 = -3 (left: -3 7)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n3 + 4 = 7 (left: 7 9)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n4 * 3 = 12 (left: 12 9)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n4 + 3 = 7 (left: 7 9)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n7 + 9 = 16 (left: 9 9 16)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n9 - 7 = 2 (left: 2 9 9)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n7 * 9 = 63 (left: 9 9 63)\n",
                    "3 * 3 = 9 (left: 7 9 9)\n9 / 7 = 1 (left: 1 9 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 * 9 = 63 (left: 6 63)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 - 6 = 1 (left: 1 9)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n1 + 7 = 8 (left: 8 9)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n7 - 1 = 6 (left: 6 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 7 9",
                "ys": [
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 * 9 = 63 (left: 6 63)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 - 6 = 1 (left: 1 9)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n1 + 7 = 8 (left: 8 9)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n7 - 1 = 6 (left: 6 9)\n"
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n13 / 9 = 1 (left: 1 13)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n13 * 9 = 117 (left: 13 117)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\nInput: 3 3 7 7\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n3 + 3 = 6 (left: 6 7 7)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n7 / 3 = 2 (left: 2 7 7)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n7 * 3 = 21 (left: 3 7 21)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 * 9 = 63 (left: 6 63)\n6 * 63 = 378 (left: 378)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 * 9 = 63 (left: 6 63)\n63 / 6 = 10 (left: 10 63)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 * 9 = 63 (left: 6 63)\n63 - 6 = 57 (left: 57 6)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n7 - 3 = 4 (left: 4)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 * 7 = 21 (left: 21)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n7 / 3 = 2 (left: 2)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 - 6 = 1 (left: 1 9)\n1 + 9 = 10 (left: 9 10)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n7 - 6 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8 9)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n1 + 7 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n1 + 7 = 8 (left: 8 9)\n9 - 8 = 1 (left: 1)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n1 + 7 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n1 + 7 = 8 (left: 8 9)\n8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n7 - 1 = 6 (left: 6 9)\n3 * 6 = 18 (left: 9 18)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n7 - 1 = 6 (left: 6 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n7 - 1 = 6 (left: 6 9)\n9 - 6 = 3 (left: 3 9)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n7 - 1 = 6 (left: 6 9)\n6 * 9 = 54 (left: 9 54)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 * 7 = 21 (left: 21)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n1 + 7 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 7 9",
                "ys": [
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 * 7 = 21 (left: 21)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n1 + 7 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n"
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (7 - 3) * 9 = 24\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\nNo possible next steps.\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n2 + 2 = 4 (left: 4)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n2 * 2 = 4 (left: 4)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n2 - 2 = 0 (left: 0)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n2 / 2 = 1 (left: 1)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\nInput: 3 3 24 24\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n3 + 3 = 6 (left: 6 24 24)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n3 * 3 = 9 (left: 9 24 24)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n24 - 3 = 21 (left: 3 21 24)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n24 / 3 = 8 (left: 3 8 24)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n24 + 3 = 27 (left: 3 24 27)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n3 * 24 = 72 (left: 3 24 72)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n24 - 3 = 21 (left: 3 21 24)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\n24 / 3 = 8 (left: 3 8 24)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 * 7 = 21 (left: 21)\nInput: 3 3 3 3\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 * 7 = 21 (left: 21)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 * 7 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 * 7 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 / 3 = 1 (left: 1 7 9)\n1 + 7 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n17 can't be used to form a 24.\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\nNo possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (7 - 3) * 9 = 24\n",
                    "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\nNo possible next steps.\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n2 + 2 = 4 (left: 4)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n2 * 2 = 4 (left: 4)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n2 - 2 = 0 (left: 0)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n2 / 2 = 1 (left: 1)\n",
                    "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\nInput: 3 3 24 24\n"
                ]
            }
        ],
        "idx": 871,
        "ys": [
            "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (7 - 3) * 9 = 24\n",
            "7 - 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\nNo possible next steps.\n",
            "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n2 + 2 = 4 (left: 4)\n",
            "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n2 * 2 = 4 (left: 4)\n",
            "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n2 - 2 = 0 (left: 0)\n",
            "3 + 3 = 6 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n9 + 13 = 22 (left: 22)\n2 / 2 = 1 (left: 1)\n",
            "3 + 3 = 6 (left: 6 7 9)\n9 - 6 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)\nInput: 3 3 24 24\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 63748,
            "prompt_tokens": 203834,
            "cost": 0.433247
        },
        "time_spent": 26.395713806152344
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 7 9 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n",
                    "9 + 1 = 10 (left: 7 10 10)\n",
                    "1 * 7 = 7 (left: 7 9 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n",
                    "9 + 1 = 10 (left: 7 10 10)\n",
                    "1 * 7 = 7 (left: 7 9 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 7 9 10",
                "ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n",
                    "9 + 1 = 10 (left: 7 10 10)\n",
                    "1 * 7 = 7 (left: 7 9 10)\n"
                ],
                "new_ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 * 9 = 72 (left: 10 72)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 - 10 = -1 (left: 8 -1)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 * 10 = 90 (left: 8 90)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 * 9 = 54 (left: 54 10)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n9 - 6 = 3 (left: 3 10)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n9 / 6 = 1.5 (left: 1.5 10)\n",
                    "7 - 1 = 6 (left: 6 9 10)\nInput: 4 4 5 8\n",
                    "7 - 1 = 6 (left: 6 9 10)\nPossible next steps:\n",
                    "7 - 1 = 6 (left: 6 9 10)\n4 + 4 = 8 (left: 5 8 8)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n4 * 5 = 20 (left: 20 8)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n5 - 4 = 1 (left: 1 4 8)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n5 / 4 = 1.25 (left: 1.25 4 8)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n8 - 4 = 4 (left: 4 5 8)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n8 / 4 = 2 (left: 2 5 8)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n5 + 4 = 9 (left: 4 9 8)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n5 * 4 = 20 (left: 20 8)\n",
                    "9 + 1 = 10 (left: 7 10 10)\n7 / 10 = 0.7 (left: 0.7 10 10)\n",
                    "9 + 1 = 10 (left: 7 10 10)\n7 + 10 = 17 (left: 10 10 17)\n",
                    "9 + 1 = 10 (left: 7 10 10)\n7 * 10 = 70 (left: 10 10 70)\n",
                    "9 + 1 = 10 (left: 7 10 10)\n10 - 7 = 3 (left: 3 10 10)\n",
                    "1 * 7 = 7 (left: 7 9 10)\n7 + 9 = 16 (left: 10 16)\n",
                    "1 * 7 = 7 (left: 7 9 10)\n9 + 10 = 19 (left: 7 19)\n",
                    "1 * 7 = 7 (left: 7 9 10)\n7 * 9 = 63 (left: 10 63)\n",
                    "1 * 7 = 7 (left: 7 9 10)\n9 * 10 = 90 (left: 7 90)\n",
                    "1 * 7 = 7 (left: 7 9 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "1 * 7 = 7 (left: 7 9 10)\n10 - 9 = 1 (left: 1 10)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 * 10 = 90 (left: 8 90)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n9 - 6 = 3 (left: 3 10)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n4 * 5 = 20 (left: 20 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 7 9 10",
                "ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 * 10 = 90 (left: 8 90)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n9 - 6 = 3 (left: 3 10)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n4 * 5 = 20 (left: 20 8)\n"
                ],
                "new_ys": [
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 - 10 = 7 (left: 7 17)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 * 17 = 170 (left: 170)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n17 / 10 = 1.7 (left: 1.7 17)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\nInput: 3 5 7 8\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\nPossible next steps:\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n3 + 5 = 8 (left: 7 8 8)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n5 / 3 = 1.67 (left: 1.67 7 8)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n7 + 3 = 10 (left: 8 10 8)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n3 * 5 = 15 (left: 7 8 15)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n7 - 3 = 4 (left: 4 7 8)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n8 - 7 = 1 (left: 1 7 8)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n8 / 3 = 2.67 (left: 2.67 7 8)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n7 - 5 = 2 (left: 2 7 8)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n10 - (-1) = 11 (left: 10 11)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n-1 + 10 = 9 (left: 9 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n10 -  (-1) = 11 (left: 10 11)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 - 9 = -1 (left: -1 10)\n-1 * 10 = -10 (left: -10 10)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n19 - 8 = 11 (left: 11)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 * 10 = 90 (left: 8 90)\n8 + 90 = 98 (left: 98)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 * 10 = 90 (left: 8 90)\n8 * 90 = 720 (left: 720)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 * 10 = 90 (left: 8 90)\n90 / 8 = 11 (left: 11)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 * 10 = 90 (left: 8 90)\n90 - 8 = 82 (left: 82)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n10 + 15 = 25 (left: 25)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n10 * 15 = 150 (left: 150)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n15 / 10 = 1.5 (left: 1.5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\nInput: 3 3 3 3\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\nPossible next steps:\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\nInput: 1 5 5 5\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\nPossible next steps:\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n1 + 5 = 6 (left: 6 5 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 * 5 = 25 (left: 1 25 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 / 5 = 1 (left: 1 1 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 - 1 = 4 (left: 1 5 4 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n9 - 6 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n9 - 6 = 3 (left: 3 10)\n10 - 3 = 7 (left: 7)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n9 - 6 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n9 - 6 = 3 (left: 3 10)\n10 / 3 = 3.33 (left: 3 10)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n4 * 5 = 20 (left: 20 8)\n20 + 8 = 28 (left: 8 28)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n4 * 5 = 20 (left: 20 8)\n20 - 8 = 12 (left: 12 8)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n4 * 5 = 20 (left: 20 8)\n20 * 8 = 160 (left: 8 160)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n4 * 5 = 20 (left: 20 8)\n20 / 8 = 2.5 (left: 2.5 8)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    100,
                    100,
                    100,
                    100,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n1 + 5 = 6 (left: 6 5 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 * 5 = 25 (left: 1 25 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 / 5 = 1 (left: 1 1 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 - 1 = 4 (left: 1 5 4 5)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 7 9 10",
                "ys": [
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n1 + 5 = 6 (left: 6 5 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 * 5 = 25 (left: 1 25 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 / 5 = 1 (left: 1 1 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 - 1 = 4 (left: 1 5 4 5)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n"
                ],
                "new_ys": [
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n3 + 3 = 6 (left: 3 3 6 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n3 + 3 = 6 (left: 3 3 6 3)\n3 * 3 = 9 (left: 3 6 9)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n3 + 3 = 6 (left: 3 3 6 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n1 + 5 = 6 (left: 6 5 5 5)\n6 * 5 = 30 (left: 5 5 30)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n1 + 5 = 6 (left: 6 5 5 5)\n6 + 5 = 11 (left: 5 5 11)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n1 + 5 = 6 (left: 6 5 5 5)\n6 - 5 = 1 (left: 1 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n1 + 5 = 6 (left: 6 5 5 5)\n5 + 5 = 10 (left: 5 10 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n1 + 5 = 6 (left: 6 5 5 5)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n1 + 5 = 6 (left: 6 5 5 5)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 * 5 = 25 (left: 1 25 5 5)\n1 + 25 = 26 (left: 5 5 26)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 * 5 = 25 (left: 1 25 5 5)\n25 / 5 = 5 (left: 1 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 / 5 = 1 (left: 1 1 5 5)\n1 + 1 = 2 (left: 2 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 / 5 = 1 (left: 1 1 5 5)\n5 - 1 = 4 (left: 1 4 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 / 5 = 1 (left: 1 1 5 5)\n5 - 1 = 4 (left: 1 5 4)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 / 5 = 1 (left: 1 1 5 5)\n1 * 1 = 1 (left: 1 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 - 1 = 4 (left: 1 5 4 5)\n1 + 5 = 6 (left: 4 5 6)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 - 1 = 4 (left: 1 5 4 5)\n5 / 1 = 5 (left: 4 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 - 1 = 4 (left: 1 5 4 5)\n5 + 1 = 6 (left: 4 5 6)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 - 1 = 4 (left: 1 5 4 5)\n1 * 5 = 5 (left: 4 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 - 1 = 4 (left: 1 5 4 5)\n5 - 1 = 4 (left: 4 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 - 1 = 4 (left: 1 5 4 5)\n5 - 4 = 1 (left: 1 4 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 - 1 = 4 (left: 1 5 4 5)\n5 / 4 = 1 (left: 1 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n5 - 1 = 4 (left: 1 5 4 5)\n1 * 5 = 5 (left: 4 5 5)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n8 + 9 = 17 (left: 10 17)\n10 + 17 = 27 (left: 27)\n27 is the final answer.\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\nInput: 3 3 3 3\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\nPossible next steps:\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "1 + 7 = 8 (left: 8 9 10)\n9 + 10 = 19 (left: 8 19)\n8 + 19 = 27 (left: 27)\n3 - 3 = 0 (left: 0 3 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n3 + 3 = 6 (left: 3 3 6 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n3 + 3 = 6 (left: 3 3 6 3)\n3 * 3 = 9 (left: 3 6 9)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n3 + 3 = 6 (left: 3 3 6 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n1 + 5 = 6 (left: 6 5 5 5)\n6 * 5 = 30 (left: 5 5 30)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n1 + 5 = 6 (left: 6 5 5 5)\n6 + 5 = 11 (left: 5 5 11)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n1 + 5 = 6 (left: 6 5 5 5)\n6 - 5 = 1 (left: 1 5 5)\n",
                    "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n1 + 5 = 6 (left: 6 5 5 5)\n5 + 5 = 10 (left: 5 10 5)\n"
                ]
            }
        ],
        "idx": 872,
        "ys": [
            "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n3 + 3 = 6 (left: 3 3 6 3)\n6 - 3 = 3 (left: 3 3 3)\n",
            "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n3 + 3 = 6 (left: 3 3 6 3)\n3 * 3 = 9 (left: 3 6 9)\n",
            "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n3 + 3 = 6 (left: 3 3 6 3)\n6 / 3 = 2 (left: 2 3 3)\n",
            "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n1 + 5 = 6 (left: 6 5 5 5)\n6 * 5 = 30 (left: 5 5 30)\n",
            "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n1 + 5 = 6 (left: 6 5 5 5)\n6 + 5 = 11 (left: 5 5 11)\n",
            "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n1 + 5 = 6 (left: 6 5 5 5)\n6 - 5 = 1 (left: 1 5 5)\n",
            "7 - 1 = 6 (left: 6 9 10)\n6 + 9 = 15 (left: 10 15)\n1 + 5 = 6 (left: 6 5 5 5)\n5 + 5 = 10 (left: 5 10 5)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 65483,
            "prompt_tokens": 208213,
            "cost": 0.4432855
        },
        "time_spent": 634.8904929161072
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 2 12 13)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n",
                    "9 - 3 = 6 (left: 2 6 13)\n",
                    "13 - 9 = 4 (left: 2 4 13)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 9 = 12 (left: 2 12 13)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n",
                    "9 - 3 = 6 (left: 2 6 13)\n",
                    "13 - 9 = 4 (left: 2 4 13)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 9 13",
                "ys": [
                    "3 + 9 = 12 (left: 2 12 13)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n",
                    "9 - 3 = 6 (left: 2 6 13)\n",
                    "13 - 9 = 4 (left: 2 4 13)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n"
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 2 12 13)\n2 + 12 = 14 (left: 14 13)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 2 11)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n13 - 12 = 1 (left: 2 1)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n2 + 13 = 15 (left: 15 27)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n13 - 2 = 11 (left: 11 27)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n13 * 2 = 26 (left: 26 27)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n27 - 13 = 14 (left: 2 14)\n",
                    "9 - 3 = 6 (left: 2 6 13)\n2 + 6 = 8 (left: 8 13)\n",
                    "9 - 3 = 6 (left: 2 6 13)\n6 * 2 = 12 (left: 12 13)\n",
                    "9 - 3 = 6 (left: 2 6 13)\n13 - 2 = 11 (left: 11 6)\n",
                    "13 - 9 = 4 (left: 2 4 13)\n2 + 4 = 6 (left: 6 13)\n",
                    "13 - 9 = 4 (left: 2 4 13)\n4 * 2 = 8 (left: 8 13)\n",
                    "13 - 9 = 4 (left: 2 4 13)\n13 - 2 = 11 (left: 11 4)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n2 + 9 = 11 (left: 10 11)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n9 - 2 = 7 (left: 7 10)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n2 * 9 = 18 (left: 10 18)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n9 / 2 = 4.5 (left: 4.5 10)\n",
                    "13 - 3 = 10 (left: 2 9 10)\nInput: 3 5 6 7\n",
                    "13 - 3 = 10 (left: 2 9 10)\nPossible next steps:\n",
                    "13 - 3 = 10 (left: 2 9 10)\n3 + 5 = 8 (left: 6 7 8)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n5 * 3 = 15 (left: 6 7 15)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n7 - 5 = 2 (left: 2 6 7)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n7 - 3 = 4 (left: 4 6 7)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n3 * 5 = 15 (left: 6 7 15)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n7 - 6 = 1 (left: 1 6 7)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n7 - 2 = 5 (left: 5 6 7)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n3 + 6 = 9 (left: 5 7 9)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n6 * 7 = 42 (left: 5 42)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n7 - 5 = 2 (left: 2 5 7)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n7 - 3 = 4 (left: 4 5 7)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n3 * 6 = 18 (left: 5 7 18)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n7 - 6 = 1 (left: 1 5 7)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n7 - 2 = 5 (left: 5 5 7)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n3 + 7 = 10 (left: 6 10)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n7 - 5 = 2 (left: 2 6 7)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n7 - 3 = 4 (left: 4 6 7)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n3 * 7 = 21 (left: 6 7 21)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n7 - 6 = 1 (left: 1 6 7)\n",
                    "13 - 3 = 10 (left: 2 9 10)\n7 - 2 = 5 (left: 5 6 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 9 = 12 (left: 2 12 13)\n2 + 12 = 14 (left: 14 13)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 2 11)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n2 + 13 = 15 (left: 15 27)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n13 - 2 = 11 (left: 11 27)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 9 13",
                "ys": [
                    "3 + 9 = 12 (left: 2 12 13)\n2 + 12 = 14 (left: 14 13)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 2 11)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n2 + 13 = 15 (left: 15 27)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n13 - 2 = 11 (left: 11 27)\n"
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 2 12 13)\n2 + 12 = 14 (left: 14 13)\n14 + 13 = 27 (left: 27)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 + 12 = 14 (left: 14 13)\n14 - 13 = 1 (left: 1)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 + 12 = 14 (left: 14 13)\n14 * 13 = 182 (left: 182)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 + 12 = 14 (left: 14 13)\n14 / 13 = 1 (left: 1)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n13 - 10 = 3 (left: 3 13)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 * 13 = 130 (left: 130)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n13 / 10 = 1.3 (left: 1.3 13)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 2 11)\n11 - 2 = 9 (left: 2 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n13 - 2 = 11 (left: 2 11)\n11 / 2 = 5 (left: 2 5)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 + 13 = 37 (left: 37)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 * 13 = 312 (left: 312)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 / 13 = 1.84 (left: 1.84)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n13 - 6 = 7 (left: 7 13)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n13 / 6 = 2 (left: 2 13)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n13 * 6 = 78 (left: 6 78)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\nInput: 3 5 7 9\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\nPossible next steps:\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 + 5 = 8 (left: 7 8 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 / 5 = 0 (left: 0 5 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 * 5 = 15 (left: 7 9 15)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n5 + 7 = 12 (left: 3 12 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n5 / 7 = 0 (left: 3 0 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n5 * 7 = 35 (left: 3 35 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n5 - 7 = -2 (left: 3 -2 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n7 + 9 = 16 (left: 3 16)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n7 / 9 = 0 (left: 3 0 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n7 * 9 = 63 (left: 3 63)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n7 - 9 = -2 (left: 3 -2 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n9 + 3 = 12 (left: 5 7 12)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n9 / 3 = 3 (left: 5 3 7)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n9 * 3 = 27 (left: 5 7 27)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n9 - 3 = 6 (left: 6 5 7)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n2 + 13 = 15 (left: 15 27)\n15 + 27 = 42 (left: 42)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n2 + 13 = 15 (left: 15 27)\n27 - 15 = 12 (left: 12 27)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n2 + 13 = 15 (left: 15 27)\n27 / 15 = 1.8 (left: 1.8 27)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n2 + 13 = 15 (left: 15 27)\n27 * 15 = 405 (left: 405)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n2 + 13 = 15 (left: 15 27)\nInput: 4 4 2 2\n",
                    "3 * 9 = 27 (left: 2 13 27)\n2 + 13 = 15 (left: 15 27)\nPossible next steps:\n",
                    "3 * 9 = 27 (left: 2 13 27)\n2 + 13 = 15 (left: 15 27)\n4 + 4 = 8 (left: 8 2 2)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n2 + 13 = 15 (left: 15 27)\n4 / 4 = 1 (left: 1 4 2)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n2 + 13 = 15 (left: 15 27)\n4 * 4 = 16 (left: 16 2 2)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n2 + 13 = 15 (left: 15 27)\n4 - 2 = 2 (left: 2 4 2)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n2 + 13 = 15 (left: 15 27)\n4 / 2 = 2 (left: 4 2 2)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n2 + 13 = 15 (left: 15 27)\n2 * 2 = 4 (left: 4 4 2)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n13 - 2 = 11 (left: 11 27)\n11 + 27 = 38 (left: 38)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n13 - 2 = 11 (left: 11 27)\n27 - 11 = 16 (left: 16 27)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n13 - 2 = 11 (left: 11 27)\n27 / 11 = 2 (left: 2 27)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n13 - 2 = 11 (left: 11 27)\n11 - 27 = -16 (left: -16 11)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n13 - 2 = 11 (left: 11 27)\n11 * 27 = 297 (left: 297)\n",
                    "3 * 9 = 27 (left: 2 13 27)\n13 - 2 = 11 (left: 11 27)\n27 + 11 = 38 (left: 11 38)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 + 12 = 14 (left: 14 13)\n14 + 13 = 27 (left: 27)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 + 13 = 37 (left: 37)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 / 5 = 0 (left: 0 5 7 9)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 9 13",
                "ys": [
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 + 12 = 14 (left: 14 13)\n14 + 13 = 27 (left: 27)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 + 13 = 37 (left: 37)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 / 5 = 0 (left: 0 5 7 9)\n"
                ],
                "new_ys": [
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n-2 + 5 = 3 (left: 3 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n5 + 7 = 12 (left: -2 12 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n7 + 9 = 16 (left: -2 5 16)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n-2 * 5 = -10 (left: -10 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n5 * 7 = 35 (left: -2 35 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n7 * 9 = 63 (left: -2 5 63)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n-2 - 5 = -7 (left: -7 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n5 - 7 = -2 (left: -2 -2 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n7 - 9 = -2 (left: -2 5 -2)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n-2 / 5 = 0.4 (left: 0.4 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n5 / 7 = 0.71 (left: -2 0.71 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n7 / 9 = 0.78 (left: -2 5 0.78)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n-2 + 7 = 5 (left: 5 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n5 * 9 = 45 (left: -2 45 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n-2 * 7 = -14 (left: -14 5 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n-2 / 7 = -0.29 (left: -0.29 5 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n-2 - 7 = -9 (left: -9 5 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n-2 / 9 = -0.22 (left: -0.22 5 7)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n-2 * 9 = -18 (left: -18 5 7)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 + 12 = 14 (left: 14 13)\n14 + 13 = 27 (left: 27)\n27 + 1 = 28 (left: 1 28)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 + 12 = 14 (left: 14 13)\n14 + 13 = 27 (left: 27)\n27 - 1 = 26 (left: 1 26)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 + 12 = 14 (left: 14 13)\n14 + 13 = 27 (left: 27)\n27 * 1 = 27 (left: 1 27)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 + 12 = 14 (left: 14 13)\n14 + 13 = 27 (left: 27)\n27 / 1 = 27 (left: 1 27)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\nInput: 3 2 7 9\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\nPossible next steps:\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 + 2 = 5 (left: 5 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 * 2 = 6 (left: 6 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 - 2 = 1 (left: 1 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 / 2 = 1 (left: 1 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 + 7 = 10 (left: 2 7 10)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 * 7 = 21 (left: 2 9 21)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 - 7 = -4 (left: -4 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 / 7 = 0.4286 (left: 0.4286 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 + 9 = 12 (left: 2 7 12)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 * 9 = 27 (left: 2 7 27)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 - 9 = -6 (left: -6 3 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n3 / 9 = 0.3333 (left: 0.3333 3 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n2 + 7 = 9 (left: 3 9 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n2 * 7 = 14 (left: 3 9 14)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n2 - 7 = -5 (left: -5 3 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n2 / 7 = 0.2857 (left: 0.2857 3 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n2 + 9 = 11 (left: 3 7 11)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n2 * 9 = 18 (left: 3 7 18)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n2 - 9 = -7 (left: -7 3 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n2 / 9 = 0.2222 (left: 0.2222 3 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n7 + 9 = 16 (left: 3 7 16)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n7 * 9 = 63 (left: 3 9 63)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n7 - 9 = -2 (left: -2 3 7)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 - 2 = 10 (left: 10 13)\n10 + 13 = 23 (left: 23)\n7 / 9 = 0.7778 (left: 0.7778 3 7)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 + 13 = 37 (left: 37)\nInput: 3 6 9 12\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 + 13 = 37 (left: 37)\nPossible next steps:\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 + 13 = 37 (left: 37)\n3 + 6 = 9 (left: 9 9 12)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 + 13 = 37 (left: 37)\n6 + 9 = 15 (left: 3 15 12)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 + 13 = 37 (left: 37)\n3 * 6 = 18 (left: 18 9 12)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 + 13 = 37 (left: 37)\n6 * 9 = 54 (left: 3 54 12)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 + 13 = 37 (left: 37)\n3 + 9 = 12 (left: 6 12 12)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 + 13 = 37 (left: 37)\n9 + 12 = 21 (left: 3 6 21)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 + 13 = 37 (left: 37)\n3 * 9 = 27 (left: 27 6 12)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 + 13 = 37 (left: 37)\n9 * 12 = 108 (left: 3 108 12)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\nInput: 3 3 8 12\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n3 + 3 = 6 (left: 6 8 12)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n3 * 3 = 9 (left: 9 8 12)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n3 - 3 = 0 (left: 0 3 8)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n3 + 8 = 11 (left: 3 11 12)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n3 * 8 = 24 (left: 3 12 24)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n3 + 12 = 15 (left: 3 8 15)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n3 * 12 = 36 (left: 3 8 36)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n8 + 3 = 11 (left: 3 11 12)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n8 * 3 = 24 (left: 3 12 24)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n8 - 3 = 5 (left: 3 5 12)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n8 + 12 = 20 (left: 3 8 20)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n8 * 12 = 96 (left: 3 8 96)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n12 + 3 = 15 (left: 3 8 15)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n12 - 3 = 9 (left: 3 8 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n12 / 3 = 4 (left: 4 8 12)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n12 + 8 = 20 (left: 3 12 20)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n12 * 8 = 96 (left: 3 12 96)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\nInput: 1 2 3 4\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n1 * 2 = 2 (left: 2 3 4)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n1 / 2 = 0 (left: 0 3 4)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n1 + 3 = 4 (left: 2 3 4)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n1 * 3 = 3 (left: 3 3 4)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n1 / 3 = 0 (left: 0 3 4)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n1 + 4 = 5 (left: 2 3 5)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n1 * 4 = 4 (left: 3 3 4)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n1 / 4 = 0 (left: 0 3 4)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n2 + 3 = 5 (left: 3 4 5)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n2 * 3 = 6 (left: 3 4 6)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n2 / 3 = 0 (left: 0 3 4)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n2 + 4 = 6 (left: 3 4 6)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n2 * 4 = 8 (left: 3 4 8)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n2 / 4 = 0 (left: 0 2 3)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n3 + 4 = 7 (left: 3 4 7)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n3 * 4 = 12 (left: 3 4 12)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n3 / 4 = 0 (left: 0 3 4)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\nInput: 3 3 7 7\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\nPossible next steps:\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 + 3 = 6 (left: 6 7 7)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 * 3 = 9 (left: 7 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n7 * 3 = 21 (left: 3 7 21)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n7 + 3 = 10 (left: 7 10 7)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n7 / 3 = 2 (left: 2 7 7)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 / 5 = 0 (left: 0 5 7 9)\n0 + 5 = 5 (left: 5 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 / 5 = 0 (left: 0 5 7 9)\n0 * 5 = 0 (left: 5 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 / 5 = 0 (left: 0 5 7 9)\n0 / 5 = 0 (left: 0 5 7)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 / 5 = 0 (left: 0 5 7 9)\n7 - 5 = 2 (left: 0 2 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 / 5 = 0 (left: 0 5 7 9)\n9 - 7 = 2 (left: 0 5 2)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 / 5 = 0 (left: 0 5 7 9)\n9 - 5 = 4 (left: 0 4 7)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n-2 + 5 = 3 (left: 3 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n5 + 7 = 12 (left: -2 12 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n7 + 9 = 16 (left: -2 5 16)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n-2 * 5 = -10 (left: -10 7 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n5 * 7 = 35 (left: -2 35 9)\n",
                    "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n7 * 9 = 63 (left: -2 5 63)\n"
                ]
            }
        ],
        "idx": 873,
        "ys": [
            "3 + 9 = 12 (left: 2 12 13)\n2 * 12 = 24 (left: 24 13)\n24 - 13 = 11 (left: 11)\n\n",
            "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n-2 + 5 = 3 (left: 3 7 9)\n",
            "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n5 + 7 = 12 (left: -2 12 9)\n",
            "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n7 + 9 = 16 (left: -2 5 16)\n",
            "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n-2 * 5 = -10 (left: -10 7 9)\n",
            "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n5 * 7 = 35 (left: -2 35 9)\n",
            "3 + 9 = 12 (left: 2 12 13)\n12 / 2 = 6 (left: 6 13)\n3 - 5 = -2 (left: -2 5 7 9)\n7 * 9 = 63 (left: -2 5 63)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 68924,
            "prompt_tokens": 212805,
            "cost": 0.45705550000000006
        },
        "time_spent": 68.0921540260315
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 3 5",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 3 5",
                "ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 / 3 = 1 (left: 1 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\nInput: 1 4 3 6\n",
                    "3 + 3 = 6 (left: 3 5 6)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 5 6)\n1 + 4 = 5 (left: 3 5 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n4 - 1 = 3 (left: 3 3 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n1 * 4 = 4 (left: 3 4 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n4 / 1 = 4 (left: 3 4 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 - 1 = 2 (left: 2 4 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n1 * 3 = 3 (left: 3 4 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 / 1 = 3 (left: 3 4 6)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n3 + 5 = 8 (left: 1 8)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n3 * 5 = 15 (left: 1 15)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n5 - 3 = 2 (left: 1 2)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n3 / 5 = 0 (left: 1 0)\n",
                    "3 / 3 = 1 (left: 1 3 5)\nInput: 4 4 2 6\n",
                    "3 / 3 = 1 (left: 1 3 5)\nPossible next steps:\n",
                    "3 / 3 = 1 (left: 1 3 5)\n4 + 4 = 8 (left: 2 6 8)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n4 / 2 = 2 (left: 2 4 6)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n6 + 2 = 8 (left: 4 4 8)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n4 * 2 = 8 (left: 4 6 8)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n6 - 2 = 4 (left: 4 4 4)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n4 / 4 = 1 (left: 1 4 6)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n6 - 4 = 2 (left: 2 4 6)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 / 3 = 1 (left: 1 8)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 - 3 = 0 (left: 0 8)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 / 3 = 2 (left: 2 8)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n3 * 5 = 15 (left: 1 15)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 3 5",
                "ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n3 * 5 = 15 (left: 1 15)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n8 - 6 = 2 (left: 2)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 * 8 = 48 (left: 48)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n8 / 6 = 1.33 (left: 1.33)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n2 + 6 = 8 (left: 8)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n6 - 2 = 4 (left: 4)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n6 / 2 = 3 (left: 3)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n15 - 6 = 9 (left: 9 15)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 * 15 = 90 (left: 90)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n15 / 6 = 2.5 (left: 2.5 15)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\nInput: 3 1 4 6\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n3 + 1 = 4 (left: 4 4 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n4 * 6 = 24 (left: 24 4)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 - 3 = 3 (left: 3 4 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 / 3 = 2 (left: 2 4 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n4 + 6 = 10 (left: 3 10 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n3 * 1 = 3 (left: 3 4 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n1 + 4 = 5 (left: 3 5 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n4 * 6 = 24 (left: 3 24 6)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n3 * 5 = 15 (left: 1 15)\n1 + 15 = 16 (left: 16)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n3 * 5 = 15 (left: 1 15)\n15 - 1 = 14 (left: 1 14)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 - 8 = -2 (left: -2)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 / 8 = 0.75 (left: 0.75)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n8 - 9 = -1 (left: -1)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n8 * 9 = 72 (left: 72)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n3 + 5 = 8 (left: 8)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n5 - 3 = 2 (left: 2)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n3 * 5 = 15 (left: 15)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n5 / 3 = 1.67 (left: 1.67)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\nInput: 4 2 5 1\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\nPossible next steps:\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n4 + 2 = 6 (left: 5 6 1)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n2 * 5 = 10 (left: 4 10 1)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n5 / 2 = 2.5 (left: 4 2.5 1)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n1 + 4 = 5 (left: 5 2 5)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n5 - 2 = 3 (left: 4 3 1)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n4 * 2 = 8 (left: 8 5 1)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n2 + 5 = 7 (left: 4 7 1)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n5 - 1 = 4 (left: 4 2 4)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n4 / 2 = 2 (left: 2 2 5)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n1 * 5 = 5 (left: 4 2 5)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n3 * 5 = 15 (left: 1 15)\n1 + 15 = 16 (left: 16)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n3 * 5 = 15 (left: 15)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 3 5",
                "ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n3 * 5 = 15 (left: 1 15)\n1 + 15 = 16 (left: 16)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n3 * 5 = 15 (left: 15)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\nInput: 3 3 7 7\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n3 + 7 = 10 (left: 3 10 7)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n7 / 3 = 2 (left: 2 3 7)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n7 + 3 = 10 (left: 3 7 10)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n3 * 7 = 21 (left: 3 21 7)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n7 - 3 = 4 (left: 3 7 4)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n7 / 3 = 2 (left: 2 3 7)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n2 + 8 = 10 (left: 8 10)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n8 / 2 = 4 (left: 4 8)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 - 2 = 10 (left: 8 10)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n2 * 8 = 16 (left: 8 16)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n8 - 2 = 6 (left: 6 8)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n5 - 3 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 / 2 = 6 (left: 6 6)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\nInput: 3 5 7 9\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\n3 + 5 = 8 (left: 7 8 9)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\n5 - 3 = 2 (left: 2 7 9)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\n9 - 3 = 6 (left: 5 6 7)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\n7 - 5 = 2 (left: 2 7 9)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\n7 + 5 = 12 (left: 9 12)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\n9 / 3 = 3 (left: 5 7 3)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\nInput: 10 15 20 25\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\n10 + 15 = 25 (left: 20 25)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\n15 + 20 = 35 (left: 10 35)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\n20 - 10 = 10 (left: 15 25)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\n25 - 15 = 10 (left: 10 20)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\n25 / 5 = 5 (left: 10 15 20)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 * 5 = 15 (left: 6 15)\n6 + 15 = 21 (left: 21)\n10 * 2 = 20 (left: 15 20 25)\n",
                    "3 / 3 = 1 (left: 1 3 5)\n3 * 5 = 15 (left: 1 15)\n1 + 15 = 16 (left: 16)\nInput: 16\n",
                    "3 / 3 = 1 (left: 1 3 5)\n3 * 5 = 15 (left: 1 15)\n1 + 15 = 16 (left: 16)\nPossible next steps:\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\nInput: 14 6 3 9\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\nPossible next steps:\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 - 6 = 8 (left: 8 3 9)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 / 6 = 2 (left: 2 3 9)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 - 3 = 11 (left: 6 11 9)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 + 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 / 3 = 4 (left: 4 6 9)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n3 * 3 = 9 (left: 8 9)\n8 + 9 = 17 (left: 17)\n17 is the final result.\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n3 * 5 = 15 (left: 15)\nInput: 3 3 8 8\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n3 * 5 = 15 (left: 15)\nPossible next steps:\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n3 * 5 = 15 (left: 15)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n3 * 5 = 15 (left: 15)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n3 * 5 = 15 (left: 15)\n8 / 3 = 2 (left: 2 3 8)\n",
                    "5 + 3 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n3 * 5 = 15 (left: 15)\n8 + 3 = 11 (left: 3 8 11)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\nInput: 3 3 7 7\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n3 + 7 = 10 (left: 3 10 7)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n7 / 3 = 2 (left: 2 3 7)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n7 + 3 = 10 (left: 3 7 10)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n3 * 7 = 21 (left: 3 21 7)\n",
                    "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n7 - 3 = 4 (left: 3 4 7)\n"
                ]
            }
        ],
        "idx": 874,
        "ys": [
            "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\nInput: 3 3 7 7\n",
            "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\nPossible next steps:\n",
            "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n3 + 7 = 10 (left: 3 10 7)\n",
            "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n7 / 3 = 2 (left: 2 3 7)\n",
            "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n7 + 3 = 10 (left: 3 7 10)\n",
            "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n3 * 7 = 21 (left: 3 21 7)\n",
            "3 + 3 = 6 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n6 + 8 = 14 (left: 14)\n7 - 3 = 4 (left: 3 4 7)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 70828,
            "prompt_tokens": 216923,
            "cost": 0.4670405
        },
        "time_spent": 40.69710087776184
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n",
                    "12 - 9 = 3 (left: 3 6 12)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "12 - 9 = 3 (left: 3 6 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 9 12",
                "ys": [
                    "12 - 9 = 3 (left: 3 6 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n"
                ],
                "new_ys": [
                    "12 - 9 = 3 (left: 3 6 12)\n3 * 6 = 18 (left: 6 12 18)\n",
                    "12 - 9 = 3 (left: 3 6 12)\n6 * 12 = 72 (left: 3 18 72)\n",
                    "12 - 9 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6 12)\n",
                    "12 - 9 = 3 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 / 11 = 0.8181818181818182 (left: 0.8181818181818182 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 * 11 = 99 (left: 12 99)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 + 12 = 23 (left: 9 23)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 12 = -1 (left: -1 11)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 / 12 = 0.9166666666666666 (left: 0.9166666666666666 11)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 * 12 = 132 (left: 9 132)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 * 30 = 270 (left: 12 270)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n30 - 9 = 21 (left: 21 12)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n30 / 9 = 3 (left: 3 12)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n12 + 9 = 21 (left: 21 12)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n12 - 9 = 3 (left: 3 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 12 24)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 12 24)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 + 4 = 10 (left: 10 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n6 / 4 = 1 (left: 1 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 - 4 = 8 (left: 8 12)\n",
                    "9 - 5 = 4 (left: 4 6 12)\n12 / 4 = 3 (left: 3 12)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 + 12 = 23 (left: 9 23)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 12 = -1 (left: -1 11)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 * 12 = 132 (left: 9 132)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 * 30 = 270 (left: 12 270)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 9 12",
                "ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 + 12 = 23 (left: 9 23)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 12 = -1 (left: -1 11)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 * 12 = 132 (left: 9 132)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 * 30 = 270 (left: 12 270)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 - (-2) = 14 (left: 12 14)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 / (-2) = -6 (left: -6 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n-2 * 12 = -24 (left: -24)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 - (-2) = 14 (left: 12 14)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 / (-2) = -6 (left: -6 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 + 12 = 23 (left: 9 23)\n9 * 23 = 207 (left: 207)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 + 12 = 23 (left: 9 23)\n23 - 9 = 14 (left: 14)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 12 = -1 (left: -1 11)\n11 - -1 = 12 (left: 11 12)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 12 = -1 (left: -1 11)\n11 + -1 = 10 (left: 10 11)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 12 = -1 (left: -1 11)\n11 / -1 = -11 (left: -11 11)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 - 12 = -1 (left: -1 11)\n11 * -1 = -11 (left: -11 11)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 * 12 = 132 (left: 9 132)\n9 * 2 = 18 (left: 18 132)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 * 12 = 132 (left: 9 132)\n9 * 2 = 18 (left: 18 132)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 * 12 = 132 (left: 9 132)\n9 * 2 = 18 (left: 18 132)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 * 12 = 132 (left: 9 132)\n9 * 2 = 18 (left: 18 132)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 * 12 = 132 (left: 9 132)\n9 * 2 = 18 (left: 18 132)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 * 12 = 132 (left: 9 132)\n9 * 2 = 18 (left: 18 132)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 * 12 = 132 (left: 9 132)\n9 * 2 = 18 (left: 18 132)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 * 12 = 132 (left: 9 132)\n9 * 2 = 18 (left: 18 132)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n12 + 39 = 51 (left: 51)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n39 - 12 = 27 (left: 27)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n12 * 39 = 468 (left: 468)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n39 / 12 = 3 (left: 3)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 * 30 = 270 (left: 12 270)\n12 * 2 = 24 (left: 24 270)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 * 30 = 270 (left: 12 270)\n270 / 12 = 22 (left: 12 22)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 + 12 = 23 (left: 9 23)\n23 - 9 = 14 (left: 14)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n39 - 12 = 27 (left: 27)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 - (-2) = 14 (left: 12 14)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 / (-2) = -6 (left: -6 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 6 9 12",
                "ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 + 12 = 23 (left: 9 23)\n23 - 9 = 14 (left: 14)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n39 - 12 = 27 (left: 27)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 - (-2) = 14 (left: 12 14)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 / (-2) = -6 (left: -6 12)\n"
                ],
                "new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\nInput: 32\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 + 12 = 23 (left: 9 23)\n23 - 9 = 14 (left: 14)\n14 is the final result.\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n39 - 12 = 27 (left: 27)\n27 / 2 = 13.5 (left: 13.5)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n39 - 12 = 27 (left: 27)\n27 - 2 = 25 (left: 25)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n39 - 12 = 27 (left: 27)\n27 - 7 = 20 (left: 20)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n39 - 12 = 27 (left: 27)\n27 / 3 = 9 (left: 9)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n39 - 12 = 27 (left: 27)\n27 + 2 = 29 (left: 29)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n39 - 12 = 27 (left: 27)\n27 * 2 = 54 (left: 54)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n8 + 20 = 28 (left: 8 28)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n20 - 8 = 12 (left: 12 8)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n8 * 20 = 160 (left: 160)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n20 / 8 = 2.5 (left: 2.5 8)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n2 * 240 = 480 (left: 240 480)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n240 / 2 = 120 (left: 120 240)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 * 20 = 240 (left: 240)\n240 + 2 = 242 (left: 2 240 242)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 - (-2) = 14 (left: 12 14)\n12 + 14 = 26 (left: 26)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 - (-2) = 14 (left: 12 14)\n12 - 14 = -2 (left: -2)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 - (-2) = 14 (left: 12 14)\n12 * 14 = 168 (left: 168)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 - (-2) = 14 (left: 12 14)\n12 / 14 = 0.8571428571428571 (left: 0.8571428571428571)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 / (-2) = -6 (left: -6 12)\n12 - (-6) = 18 (left: 18)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 / (-2) = -6 (left: -6 12)\n12 / (-6) = -2 (left: -2)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 / (-2) = -6 (left: -6 12)\n12 + (-6) = 6 (left: 6)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 / (-2) = -6 (left: -6 12)\n12 * (-6) = -72 (left: -72)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 / (-2) = -6 (left: -6 12)\n-6 + 12 = 6 (left: 6)\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 - 11 = -2 (left: -2 12)\n12 / (-2) = -6 (left: -6 12)\n-6 * 12 = -72 (left: -72)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\nInput: 32\n",
                    "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\nPossible next steps:\n",
                    "5 + 6 = 11 (left: 9 11 12)\n11 + 12 = 23 (left: 9 23)\n23 - 9 = 14 (left: 14)\n14 is the final result.\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n39 - 12 = 27 (left: 27)\n27 / 2 = 13.5 (left: 13.5)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n39 - 12 = 27 (left: 27)\n27 - 2 = 25 (left: 25)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n39 - 12 = 27 (left: 27)\n27 - 7 = 20 (left: 20)\n",
                    "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n39 - 12 = 27 (left: 27)\n27 / 3 = 9 (left: 9)\n"
                ]
            }
        ],
        "idx": 875,
        "ys": [
            "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\nInput: 32\n",
            "5 + 6 = 11 (left: 9 11 12)\n9 + 11 = 20 (left: 12 20)\n12 + 20 = 32 (left: 32)\nPossible next steps:\n",
            "5 + 6 = 11 (left: 9 11 12)\n11 + 12 = 23 (left: 9 23)\n23 - 9 = 14 (left: 14)\n14 is the final result.\n",
            "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n39 - 12 = 27 (left: 27)\n27 / 2 = 13.5 (left: 13.5)\n",
            "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n39 - 12 = 27 (left: 27)\n27 - 2 = 25 (left: 25)\n",
            "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n39 - 12 = 27 (left: 27)\n27 - 7 = 20 (left: 20)\n",
            "5 * 6 = 30 (left: 9 30 12)\n9 + 30 = 39 (left: 12 39)\n39 - 12 = 27 (left: 27)\n27 / 3 = 9 (left: 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 72070,
            "prompt_tokens": 221278,
            "cost": 0.476057
        },
        "time_spent": 25.988495111465454
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 9 10 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 9 = 15 (left: 10 11 15)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n",
                    "9 * 6 = 54 (left: 10 11 54)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "9 + 10 = 19 (left: 6 11 19)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n",
                    "9 * 6 = 54 (left: 10 11 54)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 9 10 11",
                "ys": [
                    "9 + 10 = 19 (left: 6 11 19)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n",
                    "9 * 6 = 54 (left: 10 11 54)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n"
                ],
                "new_ys": [
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 + 6 = 17 (left: 6 17)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 * 11 = 66 (left: 11 66)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 * 6 = 66 (left: 6 66)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 / 6 = 1 (left: 1 11)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 - 11 = -5 (left: -5 11)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 / 11 = 0.5454545454545454 (left: 0.5454545454545454 11)\n",
                    "9 + 10 = 19 (left: 6 11 19)\nInput: 3 5 7 9\n",
                    "9 + 10 = 19 (left: 6 11 19)\nPossible next steps:\n",
                    "9 + 10 = 19 (left: 6 11 19)\n3 + 5 = 8 (left: 7 8 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n5 * 7 = 35 (left: 3 35 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n7 + 5 = 12 (left: 3 12 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n9 - 7 = 2 (left: 3 5 2)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n9 - 5 = 4 (left: 3 4 7)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n9 - 3 = 6 (left: 5 6 7)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 * 9 = 45 (left: 10 45)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 9 10)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 5 10)\n",
                    "11 - 6 = 5 (left: 5 9 10)\nInput: 3 3 6 7\n",
                    "11 - 6 = 5 (left: 5 9 10)\nPossible next steps:\n",
                    "11 - 6 = 5 (left: 5 9 10)\n3 + 3 = 6 (left: 6 6 7)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n3 * 3 = 9 (left: 6 7 9)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n7 - 3 = 4 (left: 4 6 7)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n7 - 6 = 1 (left: 1 3 7)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n7 / 3 = 2.33 (left: 2.33 3 6)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n3 / 3 = 1 (left: 1 6 7)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n6 * 3 = 18 (left: 7 18)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n6 / 3 = 2 (left: 2 6 7)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n10 + 11 = 21 (left: 15 21)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n11 + 15 = 26 (left: 10 26)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n10 * 11 = 110 (left: 15 110)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n11 - 10 = 1 (left: 1 15)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n15 - 10 = 5 (left: 5 11)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n10 / 11 = 0.91 (left: 0.91 11)\n",
                    "6 + 9 = 15 (left: 10 11 15)\nInput: 3 3 8 8\n",
                    "6 + 9 = 15 (left: 10 11 15)\nPossible next steps:\n",
                    "6 + 9 = 15 (left: 10 11 15)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n3 * 3 = 9 (left: 8 9 8)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n3 / 3 = 1 (left: 1 8 8)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n3 * 8 = 24 (left: 8 8 24)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n3 / 8 = 0.38 (left: 0.38 8 8)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "6 + 9 = 15 (left: 10 11 15)\n8 / 3 = 2.67 (left: 2.67 8 8)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n10 + 11 = 21 (left: 21 54)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n11 * 10 = 110 (left: 110 54)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n11 + 10 = 21 (left: 21 54)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n11 - 10 = 1 (left: 1 11 54)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n54 - 10 = 44 (left: 11 44)\n",
                    "6 * 9 = 54 (left: 10 11 54)\n54 / 10 = 5 (left: 5 11 54)\n",
                    "9 * 6 = 54 (left: 10 11 54)\n10 + 11 = 21 (left: 21 54)\n",
                    "9 * 6 = 54 (left: 10 11 54)\n11 * 10 = 110 (left: 54 110)\n",
                    "9 * 6 = 54 (left: 10 11 54)\n11 + 10 = 21 (left: 21 54)\n",
                    "9 * 6 = 54 (left: 10 11 54)\n11 - 10 = 1 (left: 1 11 54)\n",
                    "9 * 6 = 54 (left: 10 11 54)\n10 * 11 = 110 (left: 110 54)\n",
                    "9 * 6 = 54 (left: 10 11 54)\n11 - 1 = 10 (left: 10 11 54)\n",
                    "9 * 6 = 54 (left: 10 11 54)\n11 / 10 = 1.1 (left: 1.1 11 54)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n1 + 11 = 12 (left: 12 9)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n11 - 1 = 10 (left: 10 9)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n1 * 11 = 11 (left: 11 9)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n11 / 1 = 11 (left: 11 9)\n",
                    "10 / 6 = 1 (left: 1 11 9)\nInput: 4 5 8 6\n",
                    "10 / 6 = 1 (left: 1 11 9)\nPossible next steps:\n",
                    "10 / 6 = 1 (left: 1 11 9)\n4 + 5 = 9 (left: 8 6 9)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n5 - 4 = 1 (left: 1 8 6)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n4 * 5 = 20 (left: 20 8 6)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n5 / 4 = 1 (left: 1 8 6)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n6 + 4 = 10 (left: 8 10 6)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n4 / 5 = 0.8 (left: 0.8 8 6)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n8 - 4 = 4 (left: 4 6 8)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n4 - 5 = -1 (left: -1 8 6)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n5 * 8 = 40 (left: 40 6)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n8 / 4 = 2 (left: 2 6 8)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n8 - 5 = 3 (left: 3 6 8)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n5 + 4 = 9 (left: 8 9 6)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n6 - 4 = 2 (left: 2 8 6)\n",
                    "10 / 6 = 1 (left: 1 11 9)\n4 + 5 = 9 (left: 8 6 9)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 + 6 = 17 (left: 6 17)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 * 6 = 66 (left: 6 66)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 / 6 = 1 (left: 1 11)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 - 11 = -5 (left: -5 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 9 10 11",
                "ys": [
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 + 6 = 17 (left: 6 17)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 * 6 = 66 (left: 6 66)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 / 6 = 1 (left: 1 11)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 - 11 = -5 (left: -5 11)\n"
                ],
                "new_ys": [
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 * 10 = 140 (left: 140)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n17 - 11 = 6 (left: 6 17)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n11 - 17 = -6 (left: -6 11)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n17 / 11 = 1 (left: 1 17)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n11 / 17 = 0.65 (left: 0.65 11)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n11 * 17 = 187 (left: 187)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\nInput: 3 5 7 9\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\nPossible next steps:\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n3 + 5 = 8 (left: 7 8 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n3 / 5 = 0.6 (left: 0.6 5 7 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n3 * 5 = 15 (left: 7 9 15)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n5 - 3 = 2 (left: 2 7 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 - 7 = 2 (left: 2 3 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n7 - 5 = 2 (left: 2 3 7)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 - 5 = 4 (left: 4 7 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n3 * 7 = 21 (left: 5 9 21)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n7 / 3 = 2.33 (left: 2.33 5 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n7 + 5 = 12 (left: 9 12)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 + 3 = 12 (left: 5 12)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 / 3 = 3 (left: 3 5 7 12)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 + 6 = 17 (left: 6 17)\n6 + 17 = 23 (left: 17 23)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 + 6 = 17 (left: 6 17)\n17 - 6 = 11 (left: 6 11)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 + 6 = 17 (left: 6 17)\n17 / 6 = 2.83 (left: 6 2.83)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 + 6 = 17 (left: 6 17)\n6 - 17 = -11 (left: -11 6)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 + 6 = 17 (left: 6 17)\n6 / 17 = 0.35 (left: 6 0.35)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 + 6 = 17 (left: 6 17)\n6 * 17 = 102 (left: 17 102)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 * 6 = 66 (left: 6 66)\n6 * 66 = 396 (left: 396)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 * 6 = 66 (left: 6 66)\n66 / 6 = 11 (left: 11 66)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n11 / 5 = 2.2 (left: 2.2 11)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n11 * 5 = 55 (left: 55)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\nInput: 3 3 8 9\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\nPossible next steps:\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n3 + 3 = 6 (left: 6 8 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n3 * 3 = 9 (left: 8 9 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n3 + 8 = 11 (left: 9 11 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n3 + 9 = 12 (left: 8 9 12)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n3 * 8 = 24 (left: 24 9 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n3 * 9 = 27 (left: 8 9 27)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n8 + 3 = 11 (left: 11 9 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n8 * 3 = 24 (left: 24 9 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n8 + 9 = 17 (left: 3 17 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n8 - 3 = 5 (left: 5 9 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n8 / 3 = 2.67 (left: 2.67 9 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n9 + 3 = 12 (left: 8 12 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n9 * 3 = 27 (left: 8 9 27)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n9 - 3 = 6 (left: 6 9 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n9 / 3 = 3 (left: 3 9 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 / 6 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 / 6 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 / 6 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 - 11 = -5 (left: -5 11)\n11 - -5 = 16 (left: 11 16)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 - 11 = -5 (left: -5 11)\n11 + -5 = 6 (left: 6 11)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 - 11 = -5 (left: -5 11)\n-5 + 11 = 6 (left: 6 11)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 / 3 = 3 (left: 3 5 7 12)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 / 6 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 9 10 11",
                "ys": [
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 / 3 = 3 (left: 3 5 7 12)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 / 6 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (11 - 6) + (5 + 9) = 24\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (11 - 6) + (5 + 9) = 24\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 / 3 = 3 (left: 3 5 7 12)\n3 + 5 = 8 (left: 7 8 12)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 / 3 = 3 (left: 3 5 7 12)\n5 + 7 = 12 (left: 3 12 12)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 / 3 = 3 (left: 3 5 7 12)\n3 * 5 = 15 (left: 7 15 12)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 / 3 = 3 (left: 3 5 7 12)\n7 - 3 = 4 (left: 4 5 12)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 / 3 = 3 (left: 3 5 7 12)\n12 - 5 = 7 (left: 3 7 12)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n2 + 8 = 10 (left: 10)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n8 - 2 = 6 (left: 6)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n28 / 2 = 14 (left: 14)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n11 + 17 = 28 (left: 28)\n28 - 2 = 26 (left: 26)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\nInput: 16\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\nPossible next steps:\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 / 6 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\nNo possible next steps.\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\nInput: 3 3 3 3\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\nPossible next steps:\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n3 - 3 = 0 (left: 0 3 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (11 - 6) + (5 + 9) = 24\n",
                    "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (11 - 6) + (5 + 9) = 24\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 / 3 = 3 (left: 3 5 7 12)\n3 + 5 = 8 (left: 7 8 12)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 / 3 = 3 (left: 3 5 7 12)\n5 + 7 = 12 (left: 3 12 12)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 / 3 = 3 (left: 3 5 7 12)\n3 * 5 = 15 (left: 7 15 12)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 / 3 = 3 (left: 3 5 7 12)\n7 - 3 = 4 (left: 4 5 12)\n",
                    "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 / 3 = 3 (left: 3 5 7 12)\n12 - 5 = 7 (left: 3 7 12)\n"
                ]
            }
        ],
        "idx": 876,
        "ys": [
            "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (11 - 6) + (5 + 9) = 24\n",
            "11 - 6 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (11 - 6) + (5 + 9) = 24\n",
            "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 / 3 = 3 (left: 3 5 7 12)\n3 + 5 = 8 (left: 7 8 12)\n",
            "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 / 3 = 3 (left: 3 5 7 12)\n5 + 7 = 12 (left: 3 12 12)\n",
            "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 / 3 = 3 (left: 3 5 7 12)\n3 * 5 = 15 (left: 7 15 12)\n",
            "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 / 3 = 3 (left: 3 5 7 12)\n7 - 3 = 4 (left: 4 5 12)\n",
            "9 + 10 = 19 (left: 6 11 19)\n6 + 11 = 17 (left: 11 17)\n9 / 3 = 3 (left: 3 5 7 12)\n12 - 5 = 7 (left: 3 7 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 74601,
            "prompt_tokens": 226789,
            "cost": 0.4893855
        },
        "time_spent": 45.06759309768677
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 5 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 5 6 11)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 5 6 11)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 5 11",
                "ys": [
                    "2 + 4 = 6 (left: 5 6 11)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 / 5 = 1.2 (left: 1.2 11)\n",
                    "2 + 4 = 6 (left: 5 6 11)\nInput: 3 3 3 3\n",
                    "2 + 4 = 6 (left: 5 6 11)\nPossible next steps:\n",
                    "2 + 4 = 6 (left: 5 6 11)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 + 2 = 7 (left: 7 11)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n2 + 4 = 6 (left: 6 6)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 8 6)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n6 - 4 = 2 (left: 2 6)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n6 / 2 = 3 (left: 3 6)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n2 + 9 = 11 (left: 11)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n2 * 9 = 18 (left: 11 18)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n9 / 2 = 4.5 (left: 4.5 11)\n",
                    "5 + 4 = 9 (left: 2 9 11)\nInput: 3 5 7 8\n",
                    "5 + 4 = 9 (left: 2 9 11)\nPossible next steps:\n",
                    "5 + 4 = 9 (left: 2 9 11)\n3 + 5 = 8 (left: 7 8 8)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n5 * 3 = 15 (left: 7 8 15)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n8 - 3 = 5 (left: 5 7 8)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n7 - 3 = 4 (left: 4 7 8)\n",
                    "5 + 4 = 9 (left: 2 9 11)\n8 / 3 = 2.67 (left: 2.67 7 8)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 + 2 = 7 (left: 7 11)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n2 + 4 = 6 (left: 6 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 5 11",
                "ys": [
                    "2 + 4 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 + 2 = 7 (left: 7 11)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n2 + 4 = 6 (left: 6 6)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 / 6 = 1 (left: 1 6)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n11 * 6 = 66 (left: 66)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 / 1 = 11 (left: 1 11)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n11 + 30 = 41 (left: 41)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n11 * 30 = 330 (left: 330)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 / 11 = 2 (left: 2)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\nInput: 3 5 7 9\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\nPossible next steps:\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n3 + 5 = 8 (left: 7 8 9)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n3 * 5 = 15 (left: 7 9 15)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n5 - 3 = 2 (left: 2 7 9)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n5 / 3 = 1 (left: 1 7 9)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n9 - 7 = 2 (left: 2 2 9)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n9 / 3 = 3 (left: 3 7 9)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n7 + 9 = 16 (left: 3 16)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n7 * 9 = 63 (left: 3 63)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n9 - 7 = 2 (left: 2 7)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n9 / 3 = 3 (left: 2 3 7)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 + 2 = 7 (left: 7 11)\n7 + 11 = 18 (left: 11 18)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 + 2 = 7 (left: 7 11)\n7 - 11 = -4 (left: -4 11)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 + 2 = 7 (left: 7 11)\n7 * 11 = 77 (left: 11 77)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 + 2 = 7 (left: 7 11)\n7 / 11 = 0.6364 (left: 0.6364 11)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n11 - 10 = 1 (left: 1 11)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n11 / 10 = 1.1 (left: 1.1 10)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n10 * 11 = 110 (left: 110)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\nInput: 5 5 1 8\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\nPossible next steps:\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n5 + 5 = 10 (left: 1 8 10)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n5 / 5 = 1 (left: 1 1 8)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n5 + 1 = 6 (left: 6 5 8)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n5 * 5 = 25 (left: 1 8 25)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n5 - 1 = 4 (left: 4 5 8)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n5 - 5 = 0 (left: 0 5 8)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n5 + 8 = 13 (left: 1 5 13)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n5 / 1 = 5 (left: 5 5 8)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n5 * 1 = 5 (left: 5 5 8)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n1 + 8 = 9 (left: 5 9)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n1 * 8 = 8 (left: 5 8)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n8 - 5 = 3 (left: 3 5)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n8 / 1 = 8 (left: 8 1)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n8 - 1 = 7 (left: 7 8)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\nInput: 3 3 3 8\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\nPossible next steps:\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n3 + 3 = 6 (left: 3 8 6)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n3 / 3 = 1 (left: 1 3 8)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n3 + 3 = 6 (left: 3 8 6)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n3 * 3 = 9 (left: 3 8 9)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n3 - 3 = 0 (left: 0 3 8)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n3 + 8 = 11 (left: 3 11)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n3 / 8 = 0.375 (left: 0.375 3 8)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n3 * 8 = 24 (left: 3 24)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n8 - 3 = 5 (left: 3 5)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 3 8)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n8 * 3 = 24 (left: 3 24)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n8 - 3 = 5 (left: 5 3)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 3 8)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n8 * 3 = 24 (left: 3 24)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 9 11)\n11 / 9 = 1 (left: 1 11)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 9 11)\n9 * 11 = 99 (left: 99)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 9 11)\nInput: 4 5 6 7\n",
                    "4 / 2 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 9 11)\nPossible next steps:\n",
                    "4 / 2 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 9 11)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 9 11)\n5 - 4 = 1 (left: 1 6 7)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 9 11)\n6 * 7 = 42 (left: 4 42)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 9 11)\n7 - 4 = 3 (left: 3 6 7)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 9 11)\n7 - 6 = 1 (left: 4 5 1)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n2 + 4 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n2 + 4 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n2 + 4 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)\n",
                    "11 - 5 = 6 (left: 2 4 6)\n2 + 4 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 5 11",
                "ys": [
                    "2 + 4 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n17 is the final result.\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\nInput: 3 3 3 3\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\nPossible next steps:\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\nNo possible next steps.\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\nInput: 3 3 3 3\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\nPossible next steps:\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\nInput: 3 3 3 3\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\nPossible next steps:\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 * 5 = 30 (left: 11 30)\n30 - 11 = 19 (left: 19)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "4 / 2 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\nThere are no possible next steps.\n",
                    "4 / 2 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nThere are no possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n17 is the final result.\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\nInput: 3 3 3 3\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\nPossible next steps:\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n3 * 3 = 9 (left: 3 3 9)\n"
                ]
            }
        ],
        "idx": 877,
        "ys": [
            "2 + 4 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n6 + 11 = 17 (left: 17)\n17 is the final result.\n",
            "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\nInput: 3 3 3 3\n",
            "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\nPossible next steps:\n",
            "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n3 + 3 = 6 (left: 3 3 6)\n",
            "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n3 - 3 = 0 (left: 0 3 3)\n",
            "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n3 / 3 = 1 (left: 1 3 3)\n",
            "2 + 4 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n3 * 3 = 9 (left: 3 3 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 76550,
            "prompt_tokens": 231138,
            "cost": 0.499807
        },
        "time_spent": 35.18915414810181
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 5 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 3 5 10)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n"
                ],
                "values": [
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 2 = 3 (left: 3 5 10)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 5 10",
                "ys": [
                    "1 + 2 = 3 (left: 3 5 10)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n"
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 * 5 = 15 (left: 15 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 - 3 = 7 (left: 7 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 / 3 = 3 (left: 3 10)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n1 + 10 = 11 (left: 10 11)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n10 / 1 = 10 (left: 10 10)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n10 + 1 = 11 (left: 10 11)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n1 * 10 = 10 (left: 10 10)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n10 - 1 = 9 (left: 9 10)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n10 - 1 = 9 (left: 9 10)\n",
                    "2 * 5 = 10 (left: 1 10 10)\nInput: 5 5 5 5\n",
                    "2 * 5 = 10 (left: 1 10 10)\nPossible next steps:\n",
                    "2 * 5 = 10 (left: 1 10 10)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n5 / 5 = 1 (left: 1 5 5 5)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n5 * 5 = 25 (left: 5 5 25 5)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 * 5 = 15 (left: 15 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 - 3 = 7 (left: 7 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 / 3 = 3 (left: 3 10)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n1 + 10 = 11 (left: 10 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 5 10",
                "ys": [
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 * 5 = 15 (left: 15 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 - 3 = 7 (left: 7 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 / 3 = 3 (left: 3 10)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n1 + 10 = 11 (left: 10 11)\n"
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n10 - 8 = 2 (left: 2 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n8 * 10 = 80 (left: 80)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n10 / 8 = 1.25 (left: 1.25 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\nInput: 3 3 3 3\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\nPossible next steps:\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n3 + 3 = 6 (left: 6 3 3)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n10 - 2 = 8 (left: 8)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n10 / 2 = 5 (left: 5)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 * 5 = 15 (left: 15 10)\n15 + 10 = 25 (left: 10 25)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 * 5 = 15 (left: 15 10)\n15 - 10 = 5 (left: 5 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 * 5 = 15 (left: 15 10)\n15 / 10 = 1.5 (left: 1.5 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n3 * 5 = 15 (left: 15 10)\n15 * 10 = 150 (left: 10 150)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 - 3 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 - 3 = 7 (left: 7 10)\n7 * 10 = 70 (left: 70)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 - 3 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 - 3 = 7 (left: 7 10)\n10 / 7 = 1.43 (left: 1.43)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 / 3 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 / 3 = 3 (left: 3 10)\n10 - 3 = 7 (left: 7)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 / 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 / 3 = 3 (left: 3 10)\n10 / 3 = 3 (left: 3)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n1 + 10 = 11 (left: 10 11)\n10 + 11 = 21 (left: 21)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n1 + 10 = 11 (left: 10 11)\n11 - 10 = 1 (left: 1 11)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n1 + 10 = 11 (left: 10 11)\n10 * 11 = 110 (left: 110)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n1 + 10 = 11 (left: 10 11)\n11 / 10 = 1.1 (left: 1.1 11)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n1 + 10 = 11 (left: 10 11)\nInput: 5 5 5 5\n",
                    "2 * 5 = 10 (left: 1 10 10)\n1 + 10 = 11 (left: 10 11)\nPossible next steps:\n",
                    "2 * 5 = 10 (left: 1 10 10)\n1 + 10 = 11 (left: 10 11)\n5 + 5 = 10 (left: 5 10 5 5)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n1 + 10 = 11 (left: 10 11)\n5 / 5 = 1 (left: 1 5 5 5)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n1 + 10 = 11 (left: 10 11)\n5 - 5 = 0 (left: 0 5 5 5)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n1 + 10 = 11 (left: 10 11)\n5 * 5 = 25 (left: 5 5 25 5)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n1 + 10 = 11 (left: 10 11)\n5 + 5 = 10 (left: 5 5 5 10)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n1 + 10 = 11 (left: 10 11)\n5 / 5 = 1 (left: 5 5 1 5)\n",
                    "2 * 5 = 10 (left: 1 10 10)\n1 + 10 = 11 (left: 10 11)\n5 - 5 = 0 (left: 5 5 0 5)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 - 3 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 2 5 10",
                "ys": [
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 - 3 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\n"
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 is the final result.\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\nInput: 4 6 6 8\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\nPossible next steps:\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n6 + 6 = 12 (left: 4 8 12)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n6 * 4 = 24 (left: 8 6 24)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n8 - 4 = 4 (left: 4 6 8)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n6 / 4 = 1.5 (left: 1.5 6 8)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n6 * 6 = 36 (left: 4 8 36)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n6 - 4 = 2 (left: 2 6 8)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n6 / 6 = 1 (left: 1 6 8)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n8 - 6 = 2 (left: 4 2 8)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\nThere are no possible next steps for the input 20.\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nInput: 5 5 7 7\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\nPossible next steps:\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n5 + 5 = 10 (left: 7 10 7)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n7 - 5 = 2 (left: 2 5 7)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n7 - 5 = 2 (left: 5 5 2)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n7 + 5 = 12 (left: 5 7 12)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n5 * 7 = 35 (left: 5 7 35)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n7 / 5 = 1 (left: 1 5 7)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n7 * 5 = 35 (left: 5 7 35)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n7 + 5 = 12 (left: 7 7 12)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 / 2 = 5 (left: 5)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 - 2 = 8 (left: 8)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 + 2 = 12 (left: 12)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 * 2 = 20 (left: 20)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 / 3 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\nNo possible next steps.\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 - 3 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\nInput: 17\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 - 3 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\nPossible next steps:\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 - 3 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\n17 - 1 = 16 (left: 1 16)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n10 - 3 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\n17 / 1 = 17 (left: 1 17)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 is the final result.\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\nInput: 4 6 6 8\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\nPossible next steps:\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n6 + 6 = 12 (left: 4 8 12)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n6 * 4 = 24 (left: 8 6 24)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n8 - 4 = 4 (left: 4 6 8)\n",
                    "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n6 / 4 = 1.5 (left: 1.5 6 8)\n"
                ]
            }
        ],
        "idx": 878,
        "ys": [
            "1 + 2 = 3 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 is the final result.\n",
            "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\nInput: 4 6 6 8\n",
            "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\nPossible next steps:\n",
            "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n6 + 6 = 12 (left: 4 8 12)\n",
            "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n6 * 4 = 24 (left: 8 6 24)\n",
            "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n8 - 4 = 4 (left: 4 6 8)\n",
            "1 + 2 = 3 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 + 10 = 12 (left: 12)\n6 / 4 = 1.5 (left: 1.5 6 8)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 77951,
            "prompt_tokens": 235025,
            "cost": 0.5084394999999999
        },
        "time_spent": 28.92167592048645
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 2 5",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 2 5",
                "ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 / 2 = 2 (left: 2 5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 + 2 = 3 (left: 3 5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n2 + 5 = 7 (left: 1 7)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 * 2 = 2 (left: 2 5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n5 - 2 = 3 (left: 1 3)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n2 * 5 = 10 (left: 1 10)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n5 / 2 = 2 (left: 1 2)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 - 2 = 1 (left: 1 2 2)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n2 + 2 = 4 (left: 4 2 3)\n",
                    "5 - 2 = 3 (left: 2 2 3)\n3 * 2 = 6 (left: 2 6 3)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 / 2 = 2 (left: 2 5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 + 2 = 3 (left: 3 5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 * 2 = 2 (left: 2 5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n2 * 5 = 10 (left: 1 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 2 5",
                "ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 / 2 = 2 (left: 2 5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 + 2 = 3 (left: 3 5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 * 2 = 2 (left: 2 5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n2 * 5 = 10 (left: 1 10)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n6 / 5 = 1.2 (left: 1.2)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n6 - 5 = 1 (left: 1)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 / 2 = 2 (left: 2 5)\n2 + 5 = 7 (left: 7)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 / 2 = 2 (left: 2 5)\n5 - 2 = 3 (left: 3)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 / 2 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 / 2 = 2 (left: 2 5)\n5 / 2 = 2.5 (left: 2.5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n3 + 4 = 7 (left: 7)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n4 / 3 = 1.33 (left: 1.33)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n4 - 3 = 1 (left: 1)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n8 - 5 = 3 (left: 3)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n8 / 5 = 1.6 (left: 1.6)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 + 2 = 3 (left: 3 5)\n3 + 5 = 8 (left: 5 8)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 + 2 = 3 (left: 3 5)\n5 - 3 = 2 (left: 2 5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 + 2 = 3 (left: 3 5)\n3 * 5 = 15 (left: 5 15)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 + 2 = 3 (left: 3 5)\n5 / 3 = 1 (left: 1 5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 * 2 = 2 (left: 2 5)\n2 + 5 = 7 (left: 7)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 * 2 = 2 (left: 2 5)\n5 - 2 = 3 (left: 3)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 * 2 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 * 2 = 2 (left: 2 5)\n5 / 2 = 2.5 (left: 2.5)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n2 * 5 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n2 * 5 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n2 * 5 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n2 * 5 = 10 (left: 1 10)\n1 + 10 = 11 (left: 11)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 / 2 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 * 2 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 2 5",
                "ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 / 2 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 * 2 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nInput: 4 5 5 6\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n4 + 5 = 9 (left: 5 6 9)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n5 * 6 = 30 (left: 4 30 5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n6 - 5 = 1 (left: 4 5 1)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n5 - 4 = 1 (left: 1 5 6)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n6 * 5 = 30 (left: 4 30 5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n6 / 5 = 1 (left: 4 1 5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n5 + 4 = 9 (left: 5 9 6)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n6 - 4 = 2 (left: 5 2 6)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nInput: 10 5 5 5\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n10 / 5 = 2 (left: 2 5 5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n5 + 5 = 10 (left: 10 5 5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n5 * 5 = 25 (left: 10 25 5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n5 - 5 = 0 (left: 10 0 5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n5 + 5 = 10 (left: 10 10 5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\nInput: 1 3 5 7\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n1 + 3 = 4 (left: 4 5 7)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n3 + 5 = 8 (left: 1 8 7)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n5 + 7 = 12 (left: 1 3 12)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n1 * 3 = 3 (left: 3 5 7)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n3 * 5 = 15 (left: 1 15 7)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n5 * 7 = 35 (left: 1 3 35)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n3 - 1 = 2 (left: 2 5 7)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n5 - 3 = 2 (left: 1 2 7)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n7 - 5 = 2 (left: 1 3 2)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n7 / 1 = 7 (left: 3 5 7)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n7 / 5 = 1 (left: 1 3 7)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 * 6 = 30 (left: 30)\n7 - 1 = 6 (left: 3 5 6)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n4 / 2 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n10 is the final number.\n",
                    "2 + 2 = 4 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)\nNo possible next steps.\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\nInput: 13\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 + 8 = 13 (left: 13)\nInvalid input. Please provide four integers.\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\nInput: 3 3 3 3\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\nInput: 5 10 15 20\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n5 * 10 = 50 (left: 15 20 50)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n15 + 10 = 25 (left: 5 25 20)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n10 - 5 = 5 (left: 5 15 20)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n20 / 5 = 4 (left: 4 15 20)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 * 4 = 8 (left: 5 8)\n5 * 8 = 40 (left: 40)\n20 - 10 = 10 (left: 5 10 15)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 * 2 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n10 + 10 = 20 (left: 10 20)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 * 2 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n10 * 10 = 100 (left: 10 100)\n",
                    "2 / 2 = 1 (left: 1 2 5)\n1 * 2 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)\n10 / 10 = 1 (left: 1 10)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nInput: 4 5 5 6\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nPossible next steps:\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n4 + 5 = 9 (left: 5 6 9)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n5 * 6 = 30 (left: 4 30 5)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n6 - 5 = 1 (left: 4 5 1)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n5 - 4 = 1 (left: 1 5 6)\n",
                    "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n6 * 5 = 30 (left: 4 30 5)\n"
                ]
            }
        ],
        "idx": 879,
        "ys": [
            "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nInput: 4 5 5 6\n",
            "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\nPossible next steps:\n",
            "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n4 + 5 = 9 (left: 5 6 9)\n",
            "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n5 * 6 = 30 (left: 4 30 5)\n",
            "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n6 - 5 = 1 (left: 4 5 1)\n",
            "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n5 - 4 = 1 (left: 1 5 6)\n",
            "2 + 2 = 4 (left: 2 4 5)\n2 + 4 = 6 (left: 5 6)\n5 + 6 = 11 (left: 11)\n6 * 5 = 30 (left: 4 30 5)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 79321,
            "prompt_tokens": 239143,
            "cost": 0.5173565
        },
        "time_spent": 28.338304042816162
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 12 13 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 12 = 18 (left: 13 18 13)\n",
                    "6 / 12 = 0.5 (left: 0.5 12 13)\n",
                    "13 + 6 = 19 (left: 12 13 19)\n",
                    "6 * 12 = 72 (left: 13 13 72)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n",
                    "13 / 6 = 2.16667 (left: 12 13 2.16667)\n",
                    "13 - 6 = 7 (left: 7 13 13)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "6 + 12 = 18 (left: 13 18 13)\n",
                    "13 + 6 = 19 (left: 12 13 19)\n",
                    "6 * 12 = 72 (left: 13 13 72)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n",
                    "13 - 6 = 7 (left: 7 13 13)\n",
                    "6 / 12 = 0.5 (left: 0.5 12 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 12 13 13",
                "ys": [
                    "6 + 12 = 18 (left: 13 18 13)\n",
                    "13 + 6 = 19 (left: 12 13 19)\n",
                    "6 * 12 = 72 (left: 13 13 72)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n",
                    "13 - 6 = 7 (left: 7 13 13)\n",
                    "6 / 12 = 0.5 (left: 0.5 12 13)\n"
                ],
                "new_ys": [
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n18 - 13 = 5 (left: 5 13)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 / 18 = 0.72 (left: 13 0.72)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n18 / 13 = 1.38 (left: 13 1.38)\n",
                    "13 + 6 = 19 (left: 12 13 19)\n12 + 13 = 25 (left: 19 25)\n",
                    "13 + 6 = 19 (left: 12 13 19)\n13 - 12 = 1 (left: 1 13 19)\n",
                    "13 + 6 = 19 (left: 12 13 19)\n13 + 12 = 25 (left: 12 19 25)\n",
                    "13 + 6 = 19 (left: 12 13 19)\n13 / 12 = 1 (left: 1 13 19)\n",
                    "6 * 12 = 72 (left: 13 13 72)\n13 + 13 = 26 (left: 26 72)\n",
                    "6 * 12 = 72 (left: 13 13 72)\n13 / 13 = 1 (left: 1 13 72)\n",
                    "6 * 12 = 72 (left: 13 13 72)\n13 * 13 = 169 (left: 13 72 169)\n",
                    "6 * 12 = 72 (left: 13 13 72)\n13 - 13 = 0 (left: 0 13 72)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n6 + 12 = 18 (left: 13 18)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 12)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n6 * 12 = 72 (left: 13 72)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 / 6 = 2 (left: 2 12)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n",
                    "12 - 6 = 6 (left: 6 12 13)\nInput: 4 6 9 11\n",
                    "12 - 6 = 6 (left: 6 12 13)\nPossible next steps:\n",
                    "12 - 6 = 6 (left: 6 12 13)\n4 + 6 = 10 (left: 9 10 11)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n6 / 4 = 1 (left: 1 9 11)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n11 - 9 = 2 (left: 2 9 11)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n11 - 4 = 7 (left: 7 9 11)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n7 + 12 = 19 (left: 19 13)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n7 - 12 = -5 (left: -5 13)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n7 * 12 = 84 (left: 84 13)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n12 - 7 = 5 (left: 5 13)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n12 / 7 = 1 (left: 1 13)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n7 / 12 = 0.58 (left: 0.58 13)\n",
                    "13 - 6 = 7 (left: 7 12 13)\nInput: 3 3 8 8\n",
                    "13 - 6 = 7 (left: 7 12 13)\nPossible next steps:\n",
                    "13 - 6 = 7 (left: 7 12 13)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n3 / 3 = 1 (left: 1 8 8)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n8 + 3 = 11 (left: 3 8 11)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n3 * 3 = 9 (left: 8 9 8)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n8 / 3 = 2.67 (left: 2.67 8 8)\n",
                    "13 - 6 = 7 (left: 7 12 13)\n8 * 3 = 24 (left: 8 24 8)\n",
                    "13 - 6 = 7 (left: 7 13 13)\n7 + 13 = 20 (left: 13 20)\n",
                    "13 - 6 = 7 (left: 7 13 13)\n13 - 7 = 6 (left: 6 13)\n",
                    "13 - 6 = 7 (left: 7 13 13)\n13 / 7 = 1 (left: 1 13)\n",
                    "13 - 6 = 7 (left: 7 13 13)\n13 + 7 = 20 (left: 13 20)\n",
                    "13 - 6 = 7 (left: 7 13 13)\n7 / 13 = 0.54 (left: 0.54 13)\n",
                    "13 - 6 = 7 (left: 7 13 13)\n13 - 7 = 6 (left: 6 13)\n",
                    "6 / 12 = 0.5 (left: 0.5 12 13)\n0.5 * 12 = 6 (left: 6 13)\n",
                    "6 / 12 = 0.5 (left: 0.5 12 13)\n0.5 + 12 = 12.5 (left: 12.5 13)\n",
                    "6 / 12 = 0.5 (left: 0.5 12 13)\n12 - 0.5 = 11.5 (left: 11.5 13)\n",
                    "6 / 12 = 0.5 (left: 0.5 12 13)\n12 /  0.5 = 24 (left: 13 24)\n",
                    "6 / 12 = 0.5 (left: 0.5 12 13)\n12 * 13 = 156 (left: 0.5 156)\n",
                    "6 / 12 = 0.5 (left: 0.5 12 13)\n0.5 + 13 = 13.5 (left: 12 13.5)\n",
                    "6 / 12 = 0.5 (left: 0.5 12 13)\n0.5 * 13 = 6.5 (left: 6.5 13)\n",
                    "6 / 12 = 0.5 (left: 0.5 12 13)\n13 - 0.5 = 12.5 (left: 12 12.5)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 - 6 = 6 (left: 6 12 13)\n12 / 6 = 2 (left: 2 12)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n18 - 13 = 5 (left: 5 13)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n6 + 12 = 18 (left: 13 18)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 12)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 12 13 13",
                "ys": [
                    "12 - 6 = 6 (left: 6 12 13)\n12 / 6 = 2 (left: 2 12)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n18 - 13 = 5 (left: 5 13)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n6 + 12 = 18 (left: 13 18)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 12)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n"
                ],
                "new_ys": [
                    "12 - 6 = 6 (left: 6 12 13)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n13 + 31 = 44 (left: 44)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n31 - 13 = 18 (left: 18)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n13 * 31 = 403 (left: 403)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n31 / 13 = 2 (left: 2 31)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n18 - 13 = 5 (left: 5 13)\n5 + 13 = 18 (left: 18)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n18 - 13 = 5 (left: 5 13)\n13 - 5 = 8 (left: 8)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n18 - 13 = 5 (left: 5 13)\n5 * 13 = 65 (left: 65)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n18 - 13 = 5 (left: 5 13)\n13 / 5 = 2.6 (left: 2.6)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n6 + 12 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n6 + 12 = 18 (left: 13 18)\n18 - 13 = 5 (left: 5 18)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n6 + 12 = 18 (left: 13 18)\n18 / 13 = 1.3846153846 (left: 1.3846153846 13)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n6 + 12 = 18 (left: 13 18)\n18 * 13 = 234 (left: 234)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n6 + 12 = 18 (left: 13 18)\n13 - 18 = -5 (left: -5 13)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n6 + 12 = 18 (left: 13 18)\n13 / 18 = 0.7222222222 (left: 0.7222222222 18)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n13 - 6 = 7 (left: 7 13)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n13 / 6 = 2 (left: 2 13)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n13 * 6 = 78 (left: 6 78)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 12)\n7 + 12 = 19 (left: 19)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 12)\n12 - 7 = 5 (left: 5 12)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 12)\n12 / 7 = 1.71 (left: 1.71 12)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n7 + 13 = 20 (left: 20)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n13 - 7 = 6 (left: 6 13)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n13 /  7 = 1 (left: 1 13)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n13 - 7 = 6 (left: 6 13)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 - 6 = 6 (left: 6 12 13)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n31 - 13 = 18 (left: 18)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n18 - 13 = 5 (left: 5 13)\n5 + 13 = 18 (left: 18)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n6 + 12 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 12)\n7 + 12 = 19 (left: 19)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n7 + 13 = 20 (left: 20)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 12 13 13",
                "ys": [
                    "12 - 6 = 6 (left: 6 12 13)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n31 - 13 = 18 (left: 18)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n18 - 13 = 5 (left: 5 13)\n5 + 13 = 18 (left: 18)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n6 + 12 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 12)\n7 + 12 = 19 (left: 19)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n7 + 13 = 20 (left: 20)\n"
                ],
                "new_ys": [
                    "12 - 6 = 6 (left: 6 12 13)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 6) * (12 - 6) = 24\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n31 - 13 = 18 (left: 18)\nInput: 3 3 3 8\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n31 - 13 = 18 (left: 18)\nPossible next steps:\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n31 - 13 = 18 (left: 18)\n3 + 3 = 6 (left: 3 6 8)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n31 - 13 = 18 (left: 18)\n3 * 3 = 9 (left: 3 9 8)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n31 - 13 = 18 (left: 18)\n3 / 3 = 1 (left: 1 3 8)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n31 - 13 = 18 (left: 18)\n3 - 3 = 0 (left: 0 3 8)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n31 - 13 = 18 (left: 18)\n8 - 3 = 5 (left: 3 3 5)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n31 - 13 = 18 (left: 18)\n8 / 3 = 2 (left: 2 3 8)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n31 - 13 = 18 (left: 18)\n8 + 3 = 11 (left: 3 3 11)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n13 + 18 = 31 (left: 13 31)\n31 - 13 = 18 (left: 18)\n3 * 8 = 24 (left: 3 3 24)\n",
                    "6 + 12 = 18 (left: 13 18 13)\n18 - 13 = 5 (left: 5 13)\n5 + 13 = 18 (left: 18)\n18 is the final result.\n",
                    "12 - 6 = 6 (left: 6 12 13)\n6 + 12 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\nInput: 3 6 12 24\n",
                    "12 - 6 = 6 (left: 6 12 13)\n6 + 12 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\nPossible next steps:\n",
                    "12 - 6 = 6 (left: 6 12 13)\n6 + 12 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n3 * 6 = 18 (left: 12 18 24)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n6 + 12 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n12 + 6 = 18 (left: 3 18 24)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n6 + 12 = 18 (left: 13 18)\n13 + 18 = 31 (left: 31)\n6 * 4 = 24 (left: 3 12 24)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\nInput: 3 3 3 3\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\nPossible next steps:\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 * 3 = 9 (left: 3 3 3 9)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 * 3 = 9 (left: 3 3 3 9)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\nInput: 4 4 4 4\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\nPossible next steps:\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n4 + 4 = 8 (left: 4 4 4 8)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n4 / 4 = 1 (left: 1 4 4 4)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n4 * 4 = 16 (left: 4 4 4 16)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n4 - 4 = 0 (left: 0 4 4 4)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 12)\n7 + 12 = 19 (left: 19)\n19 is the last number in the sequence.\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n7 + 13 = 20 (left: 20)\nInput: 4 5 6 7\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n7 + 13 = 20 (left: 20)\nPossible next steps:\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n7 + 13 = 20 (left: 20)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n7 + 13 = 20 (left: 20)\n5 + 6 = 11 (left: 4 7 11)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n7 + 13 = 20 (left: 20)\n6 + 7 = 13 (left: 4 5 13)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n7 + 13 = 20 (left: 20)\n4 * 5 = 20 (left: 6 7 20)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n7 + 13 = 20 (left: 20)\n5 * 6 = 30 (left: 4 7 30)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n7 + 13 = 20 (left: 20)\n6 * 7 = 42 (left: 4 5 42)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n7 + 13 = 20 (left: 20)\n7 - 4 = 3 (left: 3 5 6)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n13 - 6 = 7 (left: 7 13)\n7 + 13 = 20 (left: 20)\n6 - 4 = 2 (left: 2 5 7)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 + 3 = 6 (left: 3 3 6 3)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n4 + 4 = 8 (left: 4 4 4 8)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 * 3 = 9 (left: 3 3 3 9)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n4 / 4 = 1 (left: 1 4 4 4)\n"
                ]
            }
        ],
        "idx": 880,
        "ys": [
            "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 + 3 = 6 (left: 3 3 3 6)\n",
            "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 + 3 = 6 (left: 3 3 6 3)\n",
            "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n4 + 4 = 8 (left: 4 4 4 8)\n",
            "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 / 3 = 1 (left: 1 3 3 3)\n",
            "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 * 3 = 9 (left: 3 3 3 9)\n",
            "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n3 - 3 = 0 (left: 0 3 3 3)\n",
            "12 - 6 = 6 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n4 / 4 = 1 (left: 1 4 4 4)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 81418,
            "prompt_tokens": 244534,
            "cost": 0.529637
        },
        "time_spent": 42.09038019180298
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n",
                    "3 * 3 = 9 (left: 9 3 10)\n",
                    "6 / 3 = 2 (left: 3 2 10)\n",
                    "10 - 3 = 7 (left: 3 6 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n",
                    "3 * 3 = 9 (left: 9 3 10)\n",
                    "6 / 3 = 2 (left: 3 2 10)\n",
                    "10 - 3 = 7 (left: 3 6 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 6 10",
                "ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n",
                    "3 * 3 = 9 (left: 9 3 10)\n",
                    "6 / 3 = 2 (left: 3 2 10)\n",
                    "10 - 3 = 7 (left: 3 6 7)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 * 6 = 60 (left: 6 60)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 / 6 = 1 (left: 1 10)\n",
                    "3 * 3 = 9 (left: 9 3 10)\n9 + 3 = 12 (left: 10 12)\n",
                    "3 * 3 = 9 (left: 9 3 10)\n9 / 3 = 3 (left: 3 10)\n",
                    "3 * 3 = 9 (left: 9 3 10)\n10 - 3 = 7 (left: 7 10)\n",
                    "6 / 3 = 2 (left: 3 2 10)\n3 + 2 = 5 (left: 5 10)\n",
                    "6 / 3 = 2 (left: 3 2 10)\n3 * 2 = 6 (left: 6 10)\n",
                    "6 / 3 = 2 (left: 3 2 10)\n3 / 2 = 1.5 (left: 1.5 10)\n",
                    "6 / 3 = 2 (left: 3 2 10)\n2 + 10 = 12 (left: 3 12)\n",
                    "6 / 3 = 2 (left: 3 2 10)\n3 - 2 = 1 (left: 1 10)\n",
                    "6 / 3 = 2 (left: 3 2 10)\n10 - 3 = 7 (left: 2 7)\n",
                    "6 / 3 = 2 (left: 3 2 10)\n10 / 2 = 5 (left: 3 5)\n",
                    "10 - 3 = 7 (left: 3 6 7)\n3 + 6 = 9 (left: 7 9)\n",
                    "10 - 3 = 7 (left: 3 6 7)\n6 - 3 = 3 (left: 3 7)\n",
                    "10 - 3 = 7 (left: 3 6 7)\n3 * 6 = 18 (left: 7 18)\n",
                    "10 - 3 = 7 (left: 3 6 7)\n6 / 3 = 2 (left: 2 7)\n",
                    "10 - 3 = 7 (left: 3 6 7)\n7 + 3 = 10 (left: 6 10)\n",
                    "10 - 3 = 7 (left: 3 6 7)\n7 - 3 = 4 (left: 4 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 * 6 = 60 (left: 6 60)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 / 6 = 1 (left: 1 10)\n",
                    "3 * 3 = 9 (left: 9 3 10)\n9 + 3 = 12 (left: 10 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 6 10",
                "ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 * 6 = 60 (left: 6 60)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 / 6 = 1 (left: 1 10)\n",
                    "3 * 3 = 9 (left: 9 3 10)\n9 + 3 = 12 (left: 10 12)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n12 - 10 = 2 (left: 2 12)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 * 12 = 120 (left: 120)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n12 / 10 = 1.2 (left: 1.2 12)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\nInput: 4 6 2 3\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n4 + 6 = 10 (left: 10 2 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n6 / 2 = 3 (left: 4 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n3 * 2 = 6 (left: 4 6 6)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n6 - 2 = 4 (left: 4 4 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n4 + 2 = 6 (left: 6 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n4 / 2 = 2 (left: 4 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n3 + 2 = 5 (left: 4 6 5)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n6 - 3 = 3 (left: 4 2 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n4 * 3 = 12 (left: 12 2 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n3 - 2 = 1 (left: 4 6 1)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n2 * 3 = 6 (left: 4 6 6)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n6 / 3 = 2 (left: 4 6 2)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n10 * 2 = 20 (left: 20 36)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n10 + 36 = 46 (left: 46)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n36 / 10 = 3.6 (left: 3.6 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n10 - 36 = -26 (left: -26)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n6 + 16 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n6 * 16 = 96 (left: 96)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 / 6 = 2 (left: 2)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\nInput: 3 3 7 9\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n3 + 3 = 6 (left: 6 7 9)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n3 * 3 = 9 (left: 9 7 9)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n7 - 3 = 4 (left: 4 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n7 + 3 = 10 (left: 3 10 9)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n9 - 3 = 6 (left: 6 7 9)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n9 / 3 = 3 (left: 3 7 9)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 * 6 = 60 (left: 6 60)\n6 * 10 = 60 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 * 6 = 60 (left: 6 60)\n6 / 10 = 0.6 (left: 0.6)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 * 6 = 60 (left: 6 60)\nInput: 3 3 8 8\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 * 6 = 60 (left: 6 60)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 * 6 = 60 (left: 6 60)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 * 6 = 60 (left: 6 60)\n3 * 3 = 9 (left: 8 8 9)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 * 6 = 60 (left: 6 60)\n8 - 3 = 5 (left: 3 8 8)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 * 6 = 60 (left: 6 60)\n8 / 3 = 2.67 (left: 2.67 8 8)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 * 6 = 60 (left: 6 60)\n3 * 8 = 24 (left: 8 8 24)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 * 6 = 60 (left: 6 60)\n8 / 8 = 1 (left: 3 1 8)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 / 6 = 1 (left: 1 10)\n1 - 10 = -9 (left: -9)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 / 6 = 1 (left: 1 10)\n1 / 10 = 0.1 (left: 0.1)\n",
                    "3 * 3 = 9 (left: 9 3 10)\n9 + 3 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "3 * 3 = 9 (left: 9 3 10)\n9 + 3 = 12 (left: 10 12)\n10 - 12 = -2 (left: -2)\n",
                    "3 * 3 = 9 (left: 9 3 10)\n9 + 3 = 12 (left: 10 12)\n10 * 12 = 120 (left: 120)\n",
                    "3 * 3 = 9 (left: 9 3 10)\n9 + 3 = 12 (left: 10 12)\n10 / 12 = 0.83 (left: 0.83)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n10 - 36 = -26 (left: -26)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n6 + 16 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 6 10",
                "ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n10 - 36 = -26 (left: -26)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n6 + 16 = 22 (left: 22)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n2 + 2 = 4 (left: 4)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n2 * 2 = 4 (left: 4)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n2 - 2 = 0 (left: 0)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n2 / 2 = 1 (left: 1)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\nInput: 3 6 8 9\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n3 + 6 = 9 (left: 8 9)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n3 * 6 = 18 (left: 8 18)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n3 + 8 = 11 (left: 9 11)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n3 * 8 = 24 (left: 9 24)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n3 + 9 = 12 (left: 8 12)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n3 * 9 = 27 (left: 8 27)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n6 + 8 = 14 (left: 9 14)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n6 * 8 = 48 (left: 9 48)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n6 + 9 = 15 (left: 8 15)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n6 * 9 = 54 (left: 8 54)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n8 + 9 = 17 (left: 6 17)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n8 * 9 = 72 (left: 6 72)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n3 + 6 = 9 (left: 9)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n3 * 6 = 18 (left: 18)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n3 + 8 = 11 (left: 11)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n3 * 8 = 24 (left: 24)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n3 + 9 = 12 (left: 12)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n3 * 9 = 27 (left: 27)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n6 + 8 = 14 (left: 14)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n6 * 8 = 48 (left: 48)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n6 + 9 = 15 (left: 15)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n6 * 9 = 54 (left: 54)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n8 + 9 = 17 (left: 17)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n8 * 9 = 72 (left: 72)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 * 6 = 36 (left: 10 36)\n10 - 36 = -26 (left: -26)\nThere are no possible next steps.\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n2 + 8 = 10 (left: 8 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n8 - 2 = 6 (left: 6 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 * 1 = 10 (left: 1 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\nInput: 3 3 3 3\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n3 - 3 = 0 (left: 3 0 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n3 - 3 = 0 (left: 3 3 0)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n3 + 7 = 10 (left: 7)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n5 * 2 = 10 (left: 2)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n20 / 2 = 10 (left: 2)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n8 + 2 = 10 (left: 2)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\nInput: 1 3 4 6\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n1 + 3 = 4 (left: 4 6)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n3 * 4 = 12 (left: 1 6)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n6 - 1 = 5 (left: 3 4)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n4 + 6 = 10 (left: 1 3 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n3 * 4 = 12 (left: 1 6 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n6 / 3 = 2 (left: 1 2 4)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n6 - 3 = 3 (left: 1 3 4)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)\n6 - 1 = 5 (left: 3 4 5)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n6 + 16 = 22 (left: 22)\nThere are no possible next steps.\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\nInput: 7 2 4 3\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n7 + 2 = 9 (left: 4 3 9)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n7 - 2 = 5 (left: 4 3 5)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n7 * 2 = 14 (left: 4 3 14)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n7 / 2 = 3.5 (left: 4 3 3.5)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n7 + 4 = 11 (left: 2 3 11)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n7 - 4 = 3 (left: 2 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n7 * 4 = 28 (left: 2 3 28)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n7 / 4 = 1.75 (left: 2 3 1.75)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n7 + 3 = 10 (left: 2 4 10)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n7 - 3 = 4 (left: 2 4 4)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n7 * 3 = 21 (left: 2 4 21)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n7 / 3 = 2.3333333333333335 (left: 2 4 2.3333333333333335)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n2 + 4 = 6 (left: 3 3 6)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n2 - 4 = -2 (left: 3 3 -2)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n2 * 4 = 8 (left: 3 3 8)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n2 / 4 = 0.5 (left: 3 3 0.5)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n3 + 2 = 5 (left: 4 3 5)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n3 - 2 = 1 (left: 4 3 1)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n3 * 2 = 6 (left: 4 3 6)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n3 / 2 = 1.5 (left: 4 3 1.5)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n2 + 2 = 4 (left: 4)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n2 * 2 = 4 (left: 4)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n2 - 2 = 0 (left: 0)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n2 / 2 = 1 (left: 1)\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\nInput: 3 6 8 9\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n3 + 6 = 9 (left: 8 9)\n"
                ]
            }
        ],
        "idx": 881,
        "ys": [
            "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n2 + 2 = 4 (left: 4)\n",
            "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n2 * 2 = 4 (left: 4)\n",
            "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n2 - 2 = 0 (left: 0)\n",
            "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n2 / 2 = 1 (left: 1)\n",
            "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\nInput: 3 6 8 9\n",
            "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\nPossible next steps:\n",
            "3 + 3 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n3 + 6 = 9 (left: 8 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 83838,
            "prompt_tokens": 248883,
            "cost": 0.5410005
        },
        "time_spent": 43.173989057540894
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n",
                    "8 - 3 = 5 (left: 4 5 11)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n",
                    "11 - 8 = 3 (left: 3 4 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n",
                    "8 - 3 = 5 (left: 4 5 11)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n",
                    "11 - 8 = 3 (left: 3 4 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 8 11",
                "ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n",
                    "8 - 3 = 5 (left: 4 5 11)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n",
                    "11 - 8 = 3 (left: 3 4 11)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 * 8 = 56 (left: 11 56)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n",
                    "3 * 4 = 12 (left: 8 12 11)\nInput: 8 12 11\n",
                    "3 * 4 = 12 (left: 8 12 11)\nPossible next steps:\n",
                    "3 * 4 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n12 - 8 = 4 (left: 4 11)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n12 + 11 = 23 (left: 8 23)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n8 * 12 = 96 (left: 11 96)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n12 / 8 = 1.5 (left: 1.5 11)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n12 - 11 = 1 (left: 1 12)\n",
                    "8 - 3 = 5 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "8 - 3 = 5 (left: 4 5 11)\n5 - 4 = 1 (left: 1 11)\n",
                    "8 - 3 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 20 11)\n",
                    "8 - 3 = 5 (left: 4 5 11)\n5 / 4 = 1.25 (left: 1.25 11)\n",
                    "8 - 3 = 5 (left: 4 5 11)\n11 - 4 = 7 (left: 7 11)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n3 + 7 = 10 (left: 8 10)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n7 - 3 = 4 (left: 4 8)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n3 * 7 = 21 (left: 8 21)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n7 / 3 = 2 (left: 2 8)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n7 + 3 = 10 (left: 8 10)\n",
                    "11 - 4 = 7 (left: 3 7 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "11 - 8 = 3 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "11 - 8 = 3 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n",
                    "11 - 8 = 3 (left: 3 4 11)\n11 - 3 = 8 (left: 8 4)\n",
                    "11 - 8 = 3 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    0,
                    50,
                    100,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n12 - 8 = 4 (left: 4 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 8 11",
                "ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n12 - 8 = 4 (left: 4 11)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n8 / 3 = 2 (left: 2 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n15 - 11 = 4 (left: 4 15)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n15 / 11 = 1.36 (left: 1.36 15)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 - 15 = -4 (left: -4 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n15 * 11 = 165 (left: 165)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 / 15 = 0.73 (left: 0.73 11)  \n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n11 / 1 = 11 (left: 1 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n11 - 1 = 10 (left: 1 10)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 + 8 = 12 (left: 8 12)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n8 - 4 = 4 (left: 4 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n4 * 8 = 32 (left: 8 32)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n8 / 4 = 2 (left: 2 8)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n11 + 20 = 31 (left: 31)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n20 - 11 = 9 (left: 9 20)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n11 * 20 = 220 (left: 220)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n8 + 12 = 20 (left: 11 20)\n20 / 11 = 1.82 (left: 1.82 20)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n12 - 8 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n12 - 8 = 4 (left: 4 11)\n11 - 4 = 7 (left: 7 11)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n12 - 8 = 4 (left: 4 11)\n11 / 4 = 2.75 (left: 2.75 11)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n12 - 8 = 4 (left: 4 11)\n4 * 11 = 44 (left: 44)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n12 - 8 = 4 (left: 4 11)\nInput: 3 5 6\n",
                    "3 * 4 = 12 (left: 8 12 11)\n12 - 8 = 4 (left: 4 11)\nPossible next steps:\n",
                    "3 * 4 = 12 (left: 8 12 11)\n12 - 8 = 4 (left: 4 11)\n3 + 5 = 8 (left: 6 8)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n12 - 8 = 4 (left: 4 11)\n5 + 6 = 11 (left: 3 11)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n12 - 8 = 4 (left: 4 11)\n5 * 6 = 30 (left: 3 30)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n12 - 8 = 4 (left: 4 11)\n3 * 5 = 15 (left: 6 15)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n12 - 8 = 4 (left: 4 11)\n6 - 3 = 3 (left: 3 5)\n",
                    "3 * 4 = 12 (left: 8 12 11)\n12 - 8 = 4 (left: 4 11)\n6 / 3 = 2 (left: 2 5)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 8 11",
                "ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNo possible next steps.\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\nInput: 26\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n26 / 1 = 26 (left: 1)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n26 - 1 = 25 (left: 1)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n26 * 1 = 26 (left: 1)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\nInput: 4 5 6 7\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n7 - 5 = 2 (left: 2 4 6)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n6 - 4 = 2 (left: 2 5 7)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n6 / 4 = 1 (left: 1 5 7)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n5 + 7 = 12 (left: 4 6 12)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n7 / 5 = 1 (left: 1 4 6)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n6 * 5 = 30 (left: 4 7 30)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n7 - 4 = 3 (left: 3 5 6)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\nInput: 1 2 3 4\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n1 + 2 = 3 (left: 3 3 4)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n4 - 2 = 2 (left: 1 2 3)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 is the target number, no possible next steps.\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\nThere are no possible next steps.\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n12 / 2 = 6 (left: 6)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n12 - 2 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n12 / 12 = 1 (left: 1)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n12 - 12 = 0 (left: 0)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nInput: 11\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 / 7 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n11 + 1 = 12 (left: 1 12)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNo possible next steps.\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\nInput: 26\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\nPossible next steps:\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n26 / 1 = 26 (left: 1)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n26 - 1 = 25 (left: 1)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n26 * 1 = 26 (left: 1)\n",
                    "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\nInput: 4 5 6 7\n"
                ]
            }
        ],
        "idx": 882,
        "ys": [
            "3 + 4 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)\nNo possible next steps.\n",
            "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\nInput: 26\n",
            "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\nPossible next steps:\n",
            "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n26 / 1 = 26 (left: 1)\n",
            "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n26 - 1 = 25 (left: 1)\n",
            "3 + 4 = 7 (left: 7 8 11)\n7 + 8 = 15 (left: 11 15)\n11 + 15 = 26 (left: 26)\n26 * 1 = 26 (left: 1)\n",
            "3 + 4 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\nInput: 4 5 6 7\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 85197,
            "prompt_tokens": 253463,
            "cost": 0.5505885
        },
        "time_spent": 30.30724310874939
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 4 6 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 4 = 8 (left: 6 8 13)\n",
                    "4 / 4 = 1 (left: 1 6 13)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 4 7 13)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n",
                    "4 / 4 = 1 (left: 1 6 13)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 4 6 13",
                "ys": [
                    "13 - 6 = 7 (left: 4 7 13)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n",
                    "4 / 4 = 1 (left: 1 6 13)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n"
                ],
                "new_ys": [
                    "13 - 6 = 7 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 13 28)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 / 4 = 1 (left: 1 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 9 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 14 13)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n8 - 6 = 2 (left: 2 8 13)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 * 8 = 48 (left: 48 13)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n8 / 6 = 1.33 (left: 1.33 8 13)\n",
                    "4 + 4 = 8 (left: 6 8 13)\nInput: 3 3 3 3\n",
                    "4 + 4 = 8 (left: 6 8 13)\nPossible next steps:\n",
                    "4 + 4 = 8 (left: 6 8 13)\n3 + 3 = 6 (left: 6 3 3)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "4 / 4 = 1 (left: 1 6 13)\n1 + 6 = 7 (left: 7 13)\n",
                    "4 / 4 = 1 (left: 1 6 13)\n6 * 1 = 6 (left: 6 13)\n",
                    "4 / 4 = 1 (left: 1 6 13)\n13 - 1 = 12 (left: 6 12)\n",
                    "4 / 4 = 1 (left: 1 6 13)\n13 - 6 = 7 (left: 1 7)\n",
                    "4 / 4 = 1 (left: 1 6 13)\n13 / 1 = 13 (left: 13)\n",
                    "4 / 4 = 1 (left: 1 6 13)\n13 / 6 = 2 (left: 2 13)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n6 - 4 = 2 (left: 2 9)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n9 - 6 = 3 (left: 3 6)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n4 * 6 = 24 (left: 9 24)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n6 / 4 = 1.5 (left: 1.5 9)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n9 / 6 = 1.5 (left: 1.5 6)\n",
                    "13 - 4 = 9 (left: 4 6 9)\n9 - 4 = 5 (left: 5 6)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 13 28)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 / 4 = 1 (left: 1 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 9 13)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 14 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 4 6 13",
                "ys": [
                    "13 - 6 = 7 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 13 28)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 / 4 = 1 (left: 1 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 9 13)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 14 13)\n"
                ],
                "new_ys": [
                    "13 - 6 = 7 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 11 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 + 11 = 24 (left: 11 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n13 / 3 = 4 (left: 4 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n13 - 3 = 10 (left: 10 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 13 28)\n13 + 28 = 41 (left: 41)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 13 28)\n28 - 13 = 15 (left: 15)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 / 4 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 / 4 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 / 4 = 1 (left: 1 13)\n13 / 1 = 13 (left: 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 / 4 = 1 (left: 1 13)\n1 * 13 = 13 (left: 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 9 13)\n6 + 3 = 9 (left: 3 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 9 13)\n9 * 2 = 18 (left: 13 18)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 9 13)\n13 + 9 = 22 (left: 9 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 9 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 9 13)\n13 / 9 = 1 (left: 1 13)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 9 13)\n9 - 3 = 6 (left: 6 13)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 14 13)\n14 + 13 = 27 (left: 27)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 14 13)\n14 / 13 = 1 (left: 1 14)\n",
                    "4 + 4 = 8 (left: 6 8 13)\n6 + 8 = 14 (left: 14 13)\n14 - 13 = 1 (left: 1 14)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    0,
                    100,
                    0,
                    100,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 13 28)\n28 - 13 = 15 (left: 15)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 / 4 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 4 6 13",
                "ys": [
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 13 28)\n28 - 13 = 15 (left: 15)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 / 4 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n"
                ],
                "new_ys": [
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (6 * (13 - 7)) = 24\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n4 + 6 = 10 (left: 10)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n6 - 4 = 2 (left: 2 6)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n4 * 6 = 24 (left: 24)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n6 / 4 = 1.5 (left: 1.5 6)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\nInput: 1 2 3 4\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\nPossible next steps:\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n1 + 2 = 3 (left: 3 3 4)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n1 * 2 = 2 (left: 2 3 4)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n2 + 3 = 5 (left: 1 5 4)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n2 * 3 = 6 (left: 1 4 6)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n3 + 4 = 7 (left: 1 2 7)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n3 * 4 = 12 (left: 1 2 12)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n4 + 1 = 5 (left: 2 3 5)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n4 * 1 = 4 (left: 2 3 4)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 * 1 = 10 (left: 1 10)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n10 / 1 = 10 (left: 1 10)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\nInput: 4 6 7 8\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\nPossible next steps:\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n4 + 6 = 10 (left: 7 8 10)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n7 - 4 = 3 (left: 3 6 8)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n8 - 6 = 2 (left: 2 4 7)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n6 + 8 = 14 (left: 4 7 14)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n8 / 4 = 2 (left: 2 6 7)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n7 - 4 = 3 (left: 3 6 8)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n4 * 6 = 24 (left: 7 8 24)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n8 - 6 = 2 (left: 2 4 7)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\nThere are no possible next steps.\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 13 28)\n28 - 13 = 15 (left: 15)\nInput: 3 3 4 4\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 13 28)\n28 - 13 = 15 (left: 15)\nPossible next steps:\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 13 28)\n28 - 13 = 15 (left: 15)\n3 + 3 = 6 (left: 4 4 6)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 13 28)\n28 - 13 = 15 (left: 15)\n4 * 3 = 12 (left: 4 6 12)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 13 28)\n28 - 13 = 15 (left: 15)\n3 * 4 = 12 (left: 4 12 12)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 13 28)\n28 - 13 = 15 (left: 15)\n4 - 3 = 1 (left: 1 3 4)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 13 28)\n28 - 13 = 15 (left: 15)\n4 / 3 = 1 (left: 1 1 4)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 13 28)\n28 - 13 = 15 (left: 15)\n3 / 4 = 0.75 (left: 0.75 3 4)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 13 28)\n28 - 13 = 15 (left: 15)\n3 - 4 = -1 (left: -1 3 4)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 13 28)\n28 - 13 = 15 (left: 15)\n4 / 4 = 1 (left: 1 3 4)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n7 / 4 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n14 is the last number, no possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (6 * (13 - 7)) = 24\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n4 + 6 = 10 (left: 10)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n6 - 4 = 2 (left: 2 6)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n4 * 6 = 24 (left: 24)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n6 / 4 = 1.5 (left: 1.5 6)\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\nInput: 1 2 3 4\n",
                    "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\nPossible next steps:\n"
                ]
            }
        ],
        "idx": 883,
        "ys": [
            "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (6 * (13 - 7)) = 24\n",
            "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n4 + 6 = 10 (left: 10)\n",
            "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n6 - 4 = 2 (left: 2 6)\n",
            "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n4 * 6 = 24 (left: 24)\n",
            "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\n6 / 4 = 1.5 (left: 1.5 6)\n",
            "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\nInput: 1 2 3 4\n",
            "13 - 6 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n\nPossible next steps:\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 86642,
            "prompt_tokens": 258161,
            "cost": 0.5605255
        },
        "time_spent": 30.089924812316895
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 6 7 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 6 = 10 (left: 10 7 10)\n",
                    "6 + 4 = 10 (left: 10 7 10)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n",
                    "7 + 3 = 10 (left: 4 10 10)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n",
                    "6 * 4 = 24 (left: 24 7 10)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n",
                    "10 - 4 = 6 (left: 6 7 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "7 + 3 = 10 (left: 4 10 10)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n",
                    "6 + 4 = 10 (left: 10 7 10)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n",
                    "6 * 4 = 24 (left: 24 7 10)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 6 7 10",
                "ys": [
                    "7 + 3 = 10 (left: 4 10 10)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n",
                    "6 + 4 = 10 (left: 10 7 10)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n",
                    "6 * 4 = 24 (left: 24 7 10)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n"
                ],
                "new_ys": [
                    "7 + 3 = 10 (left: 4 10 10)\n4 + 10 = 14 (left: 10 10 14)\n",
                    "7 + 3 = 10 (left: 4 10 10)\n10 / 4 = 2.5 (left: 2.5 10 10)\n",
                    "7 + 3 = 10 (left: 4 10 10)\n10 - 4 = 6 (left: 6 10 10)\n",
                    "7 + 3 = 10 (left: 4 10 10)\n10 - 4 = 6 (left: 4 6 10)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 / 7 = 1.43 (left: 1.43 10)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 + 7 = 17 (left: 17 10)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n7 - 10 = -3 (left: -3 10)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 * 7 = 70 (left: 70 10)\n",
                    "6 + 4 = 10 (left: 10 7 10)\n10 + 7 = 17 (left: 10 17)\n",
                    "6 + 4 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "6 + 4 = 10 (left: 10 7 10)\n10 * 7 = 70 (left: 10 70)\n",
                    "6 + 4 = 10 (left: 10 7 10)\n10 / 7 = 1.43 (left: 1.43 10)\n",
                    "6 + 4 = 10 (left: 10 7 10)\n7 + 10 = 17 (left: 10 17)\n",
                    "6 + 4 = 10 (left: 10 7 10)\n7 - 10 = -3 (left: -3 10)\n",
                    "6 + 4 = 10 (left: 10 7 10)\n7 * 10 = 70 (left: 10 70)\n",
                    "6 + 4 = 10 (left: 10 7 10)\n7 / 10 = 0.7 (left: 0.7 10)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n7 + 4 = 11 (left: 11 10)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n10 - 4 = 6 (left: 7 6)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n7 / 4 = 1 (left: 1 10)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n4 * 7 = 28 (left: 28 10)\n",
                    "7 + 3 = 10 (left: 4 7 10)\nInput: 3 3 8 8\n",
                    "7 + 3 = 10 (left: 4 7 10)\nPossible next steps:\n",
                    "7 + 3 = 10 (left: 4 7 10)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 / 3 = 2 (left: 2 3 8 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n3 * 3 = 9 (left: 8 8 9)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 9)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 / 3 = 2 (left: 2 5 8 9)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n3 + 3 = 6 (left: 6 8 8 9)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n24 + 7 = 31 (left: 10 31)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n24 - 7 = 17 (left: 10 17)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n24 / 7 = 3 (left: 3 10)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n24 * 7 = 168 (left: 10 168)\n",
                    "4 * 6 = 24 (left: 24 7 10)\nInput: 3 5 6 8\n",
                    "4 * 6 = 24 (left: 24 7 10)\nPossible next steps:\n",
                    "4 * 6 = 24 (left: 24 7 10)\n3 + 5 = 8 (left: 6 8)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n3 * 5 = 15 (left: 6 15)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n3 - 5 = -2 (left: -2 6)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n3 / 5 = 0.6 (left: 0.6 6)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n5 + 6 = 11 (left: 3 8)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n5 * 6 = 30 (left: 3 30)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n5 - 6 = -1 (left: -1 8)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n5 / 6 = 0.8333333333333334 (left: 0.8333333333333334 8)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n6 + 8 = 14 (left: 3 14)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n6 * 8 = 48 (left: 3 48)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n6 - 8 = -2 (left: -2 8)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n6 / 8 = 0.75 (left: 0.75 8)\n",
                    "6 * 4 = 24 (left: 24 7 10)\n24 + 7 = 31 (left: 10 31)\n",
                    "6 * 4 = 24 (left: 24 7 10)\n24 / 7 = 3 (left: 3 10)\n",
                    "6 * 4 = 24 (left: 24 7 10)\n24 * 7 = 168 (left: 10 168)\n",
                    "6 * 4 = 24 (left: 24 7 10)\n24 - 7 = 17 (left: 10 17)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n6 + 7 = 13 (left: 13 14)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n7 - 6 = 1 (left: 1 14)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n6 * 7 = 42 (left: 42 14)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n7 / 6 = 1 (left: 1 14)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n6 - 7 = -1 (left: -1 14)\n",
                    "10 + 4 = 14 (left: 6 7 14)\n7 + 6 = 13 (left: 13 14)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    100,
                    50,
                    0,
                    100,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 9)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 / 3 = 2 (left: 2 5 8 9)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n3 + 3 = 6 (left: 6 8 8 9)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n5 + 6 = 11 (left: 3 8)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 + 7 = 17 (left: 17 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 6 7 10",
                "ys": [
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 9)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 / 3 = 2 (left: 2 5 8 9)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n3 + 3 = 6 (left: 6 8 8 9)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n5 + 6 = 11 (left: 3 8)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 + 7 = 17 (left: 17 10)\n"
                ],
                "new_ys": [
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n3 + 5 = 8 (left: 8 8 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n3 * 5 = 15 (left: 8 15 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 + 8 = 13 (left: 3 8 13)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 * 3 = 15 (left: 8 8 15)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n8 - 5 = 3 (left: 3 8 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n8 / 5 = 1.6 (left: 3 8 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 9)\n3 + 5 = 8 (left: 8 8 9)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 9)\n3 * 5 = 15 (left: 8 15 9)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 9)\n5 + 8 = 13 (left: 3 13 9)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 9)\n5 * 3 = 15 (left: 8 15 9)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 9)\n9 - 3 = 6 (left: 6 8 9)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 9)\n9 / 3 = 3 (left: 3 8 9)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 9)\n8 - 3 = 5 (left: 5 8 9)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 9)\n9 - 5 = 4 (left: 3 4 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 / 3 = 2 (left: 2 5 8 9)\n2 + 5 = 7 (left: 7 8 9)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 / 3 = 2 (left: 2 5 8 9)\n5 * 2 = 10 (left: 10 8 9)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 / 3 = 2 (left: 2 5 8 9)\n9 - 2 = 7 (left: 7 8 9)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n3 + 3 = 6 (left: 6 8 8 9)\n6 / 8 = 0.75 (left: 0.75 8 9)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n3 + 3 = 6 (left: 6 8 8 9)\n8 - 6 = 2 (left: 2 8 9)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n5 + 6 = 11 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n5 + 6 = 11 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n5 + 6 = 11 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n",
                    "4 * 6 = 24 (left: 24 7 10)\n5 + 6 = 11 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n10 - 3 = 7 (left: 7)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n10 / 3 = 3 (left: 3)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 + 7 = 17 (left: 17 10)\n17 + 10 = 27 (left: 27)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 + 7 = 17 (left: 17 10)\n17 - 10 = 7 (left: 7)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 + 7 = 17 (left: 17 10)\n17 * 10 = 170 (left: 170)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 + 7 = 17 (left: 17 10)\n17 / 10 = 1.7 (left: 1.7)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 + 7 = 17 (left: 17 10)\n17 + 10 = 27 (left: 27)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n3 + 5 = 8 (left: 8 8 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n3 * 5 = 15 (left: 8 15 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 + 8 = 13 (left: 3 8 13)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 * 3 = 15 (left: 8 8 15)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 6 7 10",
                "ys": [
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 + 7 = 17 (left: 17 10)\n17 + 10 = 27 (left: 27)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n3 + 5 = 8 (left: 8 8 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n3 * 5 = 15 (left: 8 15 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 + 8 = 13 (left: 3 8 13)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 * 3 = 15 (left: 8 8 15)\n"
                ],
                "new_ys": [
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n13 is the final answer.\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\nInput: 3 3 4 6\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\nPossible next steps:\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n3 + 3 = 6 (left: 4 6 6)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n3 * 4 = 12 (left: 6 6 12)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 - 3 = 3 (left: 3 4 6)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 / 3 = 2 (left: 2 3 6)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n4 * 6 = 24 (left: 3 6 24)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n4 + 6 = 10 (left: 3 10 6)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n3 * 6 = 18 (left: 4 18 6)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 + 3 = 9 (left: 4 6 9)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 + 7 = 17 (left: 17 10)\n17 + 10 = 27 (left: 27)\n27 + 27 = 54 (left: 54)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 + 7 = 17 (left: 17 10)\n17 + 10 = 27 (left: 27)\n27 - 27 = 0 (left: 0)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 + 7 = 17 (left: 17 10)\n17 + 10 = 27 (left: 27)\n27 / 27 = 1 (left: 1)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 + 7 = 17 (left: 17 10)\n17 + 10 = 27 (left: 27)\n27 * 27 = 729 (left: 729)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n3 + 5 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n3 + 5 = 8 (left: 8 8 8)\n8 * 8 = 64 (left: 64)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n3 + 5 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n3 + 5 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n3 * 5 = 15 (left: 8 15 8)\n8 + 15 = 23 (left: 8 23)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n3 * 5 = 15 (left: 8 15 8)\n15 - 8 = 7 (left: 7 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n3 * 5 = 15 (left: 8 15 8)\n8 * 15 = 120 (left: 8 120)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n3 * 5 = 15 (left: 8 15 8)\n15 / 8 = 1.88 (left: 1.88 8)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 + 8 = 13 (left: 3 8 13)\n3 + 8 = 11 (left: 8 11 13)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 + 8 = 13 (left: 3 8 13)\n8 - 3 = 5 (left: 5 8 13)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 + 8 = 13 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10 13)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 * 3 = 15 (left: 8 8 15)\n8 + 8 = 16 (left: 16 15)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 * 3 = 15 (left: 8 8 15)\n8 * 8 = 64 (left: 64 15)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 * 3 = 15 (left: 8 8 15)\n8 / 8 = 1 (left: 1 15)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 * 3 = 15 (left: 8 8 15)\n8 - 8 = 0 (left: 0 15)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 * 3 = 15 (left: 8 8 15)\nInput: 3 3 3 3\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 * 3 = 15 (left: 8 8 15)\nPossible next steps:\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 * 3 = 15 (left: 8 8 15)\n3 + 3 = 6 (left: 6 3 3 3)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 * 3 = 15 (left: 8 8 15)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 * 3 = 15 (left: 8 8 15)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 * 3 = 15 (left: 8 8 15)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "7 + 3 = 10 (left: 4 7 10)\n8 - 3 = 5 (left: 3 5 8 8)\n5 * 3 = 15 (left: 8 8 15)\n\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n13 is the final answer.\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\nInput: 3 3 4 6\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\nPossible next steps:\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n3 + 3 = 6 (left: 4 6 6)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n3 * 4 = 12 (left: 6 6 12)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 - 3 = 3 (left: 3 4 6)\n",
                    "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 / 3 = 2 (left: 2 3 6)\n"
                ]
            }
        ],
        "idx": 884,
        "ys": [
            "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 + 10 = 13 (left: 13)\n13 is the final answer.\n",
            "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\nInput: 3 3 4 6\n",
            "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\nPossible next steps:\n",
            "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n3 + 3 = 6 (left: 4 6 6)\n",
            "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n3 * 4 = 12 (left: 6 6 12)\n",
            "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 - 3 = 3 (left: 3 4 6)\n",
            "4 + 6 = 10 (left: 10 7 10)\n10 - 7 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n6 / 3 = 2 (left: 2 3 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 88750,
            "prompt_tokens": 263235,
            "cost": 0.5723525
        },
        "time_spent": 43.1450457572937
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 11 11 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 11 = 17 (left: 11 11 17)\n",
                    "11 - 6 = 5 (left: 5 11 11)\n",
                    "11 / 6 = 1 (left: 1 11 11)\n",
                    "6 * 11 = 66 (left: 11 11 66)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 11 = 17 (left: 11 11 17)\n",
                    "11 - 6 = 5 (left: 5 11 11)\n",
                    "11 / 6 = 1 (left: 1 11 11)\n",
                    "6 * 11 = 66 (left: 11 11 66)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 11 11 12",
                "ys": [
                    "6 + 11 = 17 (left: 11 11 17)\n",
                    "11 - 6 = 5 (left: 5 11 11)\n",
                    "11 / 6 = 1 (left: 1 11 11)\n",
                    "6 * 11 = 66 (left: 11 11 66)\n"
                ],
                "new_ys": [
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 * 11 = 121 (left: 17 121)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 * 11 = 187 (left: 11 187)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 - 11 = 6 (left: 6 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 / 11 = 1.545 (left: 1.545 17)\n",
                    "11 - 6 = 5 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n",
                    "11 - 6 = 5 (left: 5 11 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "11 - 6 = 5 (left: 5 11 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "11 - 6 = 5 (left: 5 11 11)\n11 / 5 = 2 (left: 2 11)\n",
                    "11 - 6 = 5 (left: 5 11 11)\n11 + 5 = 16 (left: 11 16)\n",
                    "11 - 6 = 5 (left: 5 11 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "11 / 6 = 1 (left: 1 11 11)\n1 + 11 = 12 (left: 11 12)\n",
                    "11 / 6 = 1 (left: 1 11 11)\n11 - 1 = 10 (left: 10 11)\n",
                    "11 / 6 = 1 (left: 1 11 11)\n11 / 1 = 11 (left: 11 11)\n",
                    "6 * 11 = 66 (left: 11 11 66)\n11 + 11 = 22 (left: 22 66)\n",
                    "6 * 11 = 66 (left: 11 11 66)\n11 * 11 = 121 (left: 66 121)\n",
                    "6 * 11 = 66 (left: 11 11 66)\n11 / 11 = 1 (left: 1 66)\n",
                    "6 * 11 = 66 (left: 11 11 66)\n11 - 11 = 0 (left: 0 66)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 * 11 = 187 (left: 11 187)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 - 11 = 6 (left: 6 17)\n",
                    "11 - 6 = 5 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 11 11 12",
                "ys": [
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 * 11 = 187 (left: 11 187)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 - 11 = 6 (left: 6 17)\n",
                    "11 - 6 = 5 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n"
                ],
                "new_ys": [
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n22 - 17 = 5 (left: 5)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 * 22 = 374 (left: 374)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n22 / 17 = 1.29 (left: 1.29)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\nInput: 2 3 5 7\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\nPossible next steps:\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n2 + 3 = 5 (left: 5 5 7)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n3 + 5 = 8 (left: 2 8 7)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n5 - 2 = 3 (left: 3 3 7)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n7 - 5 = 2 (left: 2 3 7)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n7 - 3 = 4 (left: 2 4 7)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n7 / 2 = 3.5 (left: 3.5 3 7)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n7 / 3 = 2.33 (left: 2 3 7)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n7 - 2 = 5 (left: 3 5 7)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n0 + 17 = 17 (left: 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n17 - 0 = 17 (left: 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n17 / 0 = Infinity (left: 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n17 * 0 = 0 (left: 0)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 17)\n17 - 1 = 16 (left: 1 16)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 17)\n17 / 1 = 17 (left: 1 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 17)\n1 * 17 = 17 (left: 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n11 + 28 = 39 (left: 39)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n28 - 11 = 17 (left: 17 28)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n28 / 11 = 2 (left: 2 28)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n11 * 28 = 308 (left: 308)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\nInput: 5 5 5 1\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\nPossible next steps:\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n5 + 5 = 10 (left: 5 10 1)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n5 * 5 = 25 (left: 25 5 1)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n5 / 5 = 1 (left: 1 5 1)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n5 - 1 = 4 (left: 4 5 5)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n5 + 1 = 6 (left: 5 6 5)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n5 / 1 = 5 (left: 5 5 5)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 * 11 = 187 (left: 11 187)\nInput: 11 187\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 * 11 = 187 (left: 11 187)\nPossible next steps:\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 * 11 = 187 (left: 11 187)\n11 * 2 = 22 (left: 22 187)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 * 11 = 187 (left: 11 187)\n11 + 2 = 13 (left: 13 187)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 * 11 = 187 (left: 11 187)\n11 / 2 = 5.5 (left: 5.5 187)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 * 11 = 187 (left: 11 187)\n11 - 2 = 9 (left: 9 187)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 - 11 = 6 (left: 6 17)\n6 + 17 = 23 (left: 23)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 - 11 = 6 (left: 6 17)\n17 - 6 = 11 (left: 11)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 - 11 = 6 (left: 6 17)\n6 * 17 = 102 (left: 102)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 - 11 = 6 (left: 6 17)\n17 / 6 = 2.83 (left: 2.83)\n",
                    "11 - 6 = 5 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n",
                    "11 - 6 = 5 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n16 - 11 = 5 (left: 5 16)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n0 + 17 = 17 (left: 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n17 - 0 = 17 (left: 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 17)\n1 * 17 = 17 (left: 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n11 + 28 = 39 (left: 39)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 - 11 = 6 (left: 6 17)\n6 + 17 = 23 (left: 23)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 11 11 12",
                "ys": [
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n0 + 17 = 17 (left: 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n17 - 0 = 17 (left: 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 17)\n1 * 17 = 17 (left: 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n11 + 28 = 39 (left: 39)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 - 11 = 6 (left: 6 17)\n6 + 17 = 23 (left: 23)\n"
                ],
                "new_ys": [
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\nInput: 10 3 4 5\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\nPossible next steps:\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n10 + 3 = 13 (left: 4 5 13)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n3 + 5 = 8 (left: 4 8 10)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n10 + 5 = 15 (left: 3 4 15)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n10 * 3 = 30 (left: 4 5 30)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n5 * 3 = 15 (left: 4 10 15)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n10 - 3 = 7 (left: 4 5 7)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n10 / 3 = 3 (left: 3 4 5)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n5 + 3 = 8 (left: 4 8 10)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n0 + 17 = 17 (left: 17)\nInput: 17\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n0 + 17 = 17 (left: 17)\nPossible next steps:\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n17 - 0 = 17 (left: 17)\nInput: 3 3 3 3\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n17 - 0 = 17 (left: 17)\nPossible next steps:\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n17 - 0 = 17 (left: 17)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n17 - 0 = 17 (left: 17)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n17 - 0 = 17 (left: 17)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n17 - 0 = 17 (left: 17)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n17 - 0 = 17 (left: 17)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n17 - 0 = 17 (left: 17)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n17 - 0 = 17 (left: 17)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n17 - 0 = 17 (left: 17)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n\n0 + 17 = 17 (left: 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n\n17 - 0 = 17 (left: 17)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 - 11 = 0 (left: 0 17)\n\n17 / 0 = undefined\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 17)\n1 * 17 = 17 (left: 17)\nInput: 3 3 7 8\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 17)\n1 * 17 = 17 (left: 17)\nPossible next steps:\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 17)\n1 * 17 = 17 (left: 17)\n3 + 3 = 6 (left: 6 7 8)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 17)\n1 * 17 = 17 (left: 17)\n3 * 3 = 9 (left: 7 8 9)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 17)\n1 * 17 = 17 (left: 17)\n7 - 3 = 4 (left: 4 7 8)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 17)\n1 * 17 = 17 (left: 17)\n8 - 3 = 5 (left: 3 5 7)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 17)\n1 * 17 = 17 (left: 17)\n3 + 7 = 10 (left: 8 10 8)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 17)\n1 * 17 = 17 (left: 17)\n3 * 7 = 21 (left: 8 21 8)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 17)\n1 * 17 = 17 (left: 17)\n7 / 3 = 2 (left: 2 8 8)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 / 11 = 1 (left: 1 17)\n1 * 17 = 17 (left: 17)\n7 - 3 = 4 (left: 3 4 8)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n11 + 28 = 39 (left: 39)\nInput: 1 3 5 7\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n11 + 28 = 39 (left: 39)\nPossible next steps:\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n11 + 28 = 39 (left: 39)\n1 + 3 = 4 (left: 4 5 7)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n11 + 28 = 39 (left: 39)\n3 / 1 = 3 (left: 3 5 7)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n11 + 28 = 39 (left: 39)\n7 - 5 = 2 (left: 1 3 2)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 + 11 = 28 (left: 11 28)\n11 + 28 = 39 (left: 39)\n5 - 3 = 2 (left: 1 2 7)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 - 11 = 6 (left: 6 17)\n6 + 17 = 23 (left: 23)\nInput: 23\n",
                    "6 + 11 = 17 (left: 11 11 17)\n17 - 11 = 6 (left: 6 17)\n6 + 17 = 23 (left: 23)\nPossible next steps:\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\nInput: 10 3 4 5\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\nPossible next steps:\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n10 + 3 = 13 (left: 4 5 13)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n3 + 5 = 8 (left: 4 8 10)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n10 + 5 = 15 (left: 3 4 15)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n10 * 3 = 30 (left: 4 5 30)\n",
                    "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n5 * 3 = 15 (left: 4 10 15)\n"
                ]
            }
        ],
        "idx": 885,
        "ys": [
            "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\nInput: 10 3 4 5\n",
            "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\nPossible next steps:\n",
            "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n10 + 3 = 13 (left: 4 5 13)\n",
            "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n3 + 5 = 8 (left: 4 8 10)\n",
            "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n10 + 5 = 15 (left: 3 4 15)\n",
            "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n10 * 3 = 30 (left: 4 5 30)\n",
            "6 + 11 = 17 (left: 11 11 17)\n11 + 11 = 22 (left: 17 22)\n17 + 22 = 39 (left: 39)\n5 * 3 = 15 (left: 4 10 15)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 90362,
            "prompt_tokens": 267586,
            "cost": 0.582103
        },
        "time_spent": 31.834274768829346
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 6 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 6 = 9 (left: 9 9 11)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 6 = 9 (left: 9 9 11)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 6 9 11",
                "ys": [
                    "3 + 6 = 9 (left: 9 9 11)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n"
                ],
                "new_ys": [
                    "3 + 6 = 9 (left: 9 9 11)\n9 + 9 = 18 (left: 11 18)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 - 9 = 0 (left: 0 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 - 9 = 2 (left: 2 9)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 * 9 = 81 (left: 11 81)\n",
                    "3 + 6 = 9 (left: 9 9 11)\nInput: 3 5 6 7\n",
                    "3 + 6 = 9 (left: 9 9 11)\nPossible next steps:\n",
                    "3 + 6 = 9 (left: 9 9 11)\n3 + 5 = 8 (left: 6 7 8)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n3 / 5 = 0.6 (left: 0.6 6 7)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n7 - 3 = 4 (left: 4 6 7)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n5 - 3 = 2 (left: 2 6 7)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n7 - 5 = 2 (left: 2 6 7)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n3 * 5 = 15 (left: 6 7 15)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n3 - 5 = -2 (left: -2 6 7)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n7 / 3 = 2.333 (left: 2.333 6 7)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n6 - 3 = 3 (left: 3 6 7)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 11)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n2 * 9 = 18 (left: 11 18)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 / 2 = 4 (left: 4 11)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n11 / 2 = 5 (left: 5 11)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n8 + 9 = 17 (left: 11 17)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n8 * 9 = 72 (left: 11 72)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n9 / 8 = 1 (left: 1 11)\n",
                    "11 - 3 = 8 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "3 + 6 = 9 (left: 9 9 11)\n9 + 9 = 18 (left: 11 18)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 - 9 = 0 (left: 0 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 - 9 = 2 (left: 2 9)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 11)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 6 9 11",
                "ys": [
                    "3 + 6 = 9 (left: 9 9 11)\n9 + 9 = 18 (left: 11 18)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 - 9 = 0 (left: 0 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 - 9 = 2 (left: 2 9)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 11)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n"
                ],
                "new_ys": [
                    "3 + 6 = 9 (left: 9 9 11)\n9 + 9 = 18 (left: 11 18)\n11 + 18 = 29 (left: 29)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 + 9 = 18 (left: 11 18)\n18 - 11 = 7 (left: 7 18)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 + 9 = 18 (left: 11 18)\n11 * 18 = 198 (left: 198)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 + 9 = 18 (left: 11 18)\n18 / 11 = 1.64 (left: 1.64 18)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 + 9 = 18 (left: 11 18)\n11 - 18 = -7 (left: -7 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 + 9 = 18 (left: 11 18)\n18 - 11 = 7 (left: 7 18)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n9 + 20 = 29 (left: 29)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n20 - 9 = 11 (left: 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n9 * 20 = 180 (left: 180)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n20 / 9 = 2.22 (left: 2.22)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\nInput: 4 5 7 8\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\nPossible next steps:\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n4 + 5 = 9 (left: 7 8 9)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n5 - 4 = 1 (left: 1 7 8)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n7 + 8 = 15 (left: 15)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n8 - 7 = 1 (left: 1 8)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n4 * 5 = 20 (left: 7 8 20)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n5 / 4 = 1.25 (left: 1.25 7 8)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n7 - 4 = 3 (left: 3 8)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n8 - 5 = 3 (left: 3 7)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 - 9 = 0 (left: 0 11)\n11 - 0 = 11 (left: 0 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 - 9 = 0 (left: 0 11)\n11 / 0 is undefined\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 - 9 = 0 (left: 0 11)\n11 * 0 = 0 (left: 0 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 - 9 = 2 (left: 2 9)\n9 - 2 = 7 (left: 2 7)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 - 9 = 2 (left: 2 9)\n9 / 2 = 4.5 (left: 2 4.5)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 - 9 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 - 9 = 2 (left: 2 9)\n9 - 2 = 7 (left: 7)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 - 9 = 2 (left: 2 9)\n9 / 2 = 4.5 (left: 4.5)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 11)\nThere are no possible next steps.\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n11 - 7 = 4 (left: 4 11)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n11 / 7 = 1.57 (left: 1.57 11)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n11 * 7 = 77 (left: 77)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\nInput: 3 4 2 5\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\nPossible next steps:\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n3 + 4 = 7 (left: 7 2 5)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n3 - 4 = -1 (left: -1 2 5)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n3 * 4 = 12 (left: 12 2 5)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n3 / 4 = 0.75 (left: 0.75 2 5)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n4 + 2 = 6 (left: 3 6 5)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n4 - 2 = 2 (left: 3 2 5)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n4 * 2 = 8 (left: 3 8 5)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n4 / 2 = 2 (left: 3 2 5)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n4 + 5 = 9 (left: 3 2 9)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n4 - 5 = -1 (left: 3 -1 5)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n4 * 5 = 20 (left: 3 20 5)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n4 / 5 = 0.8 (left: 3 0.8 5)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n2 + 5 = 7 (left: 3 4 7)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n2 - 5 = -3 (left: 3 4 -3)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n2 * 5 = 10 (left: 3 4 10)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n2 / 5 = 0.4 (left: 3 4 0.4)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n5 + 3 = 8 (left: 3 4 8)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n5 - 3 = 2 (left: 2 4 8)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n5 * 3 = 15 (left: 3 4 15)\n",
                    "6 / 3 = 2 (left: 2 9 11)\n9 - 2 = 7 (left: 7 11)\n5 / 3 = 1.67 (left: 3 4 1.67)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 6 = 9 (left: 9 9 11)\n9 + 9 = 18 (left: 11 18)\n11 + 18 = 29 (left: 29)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n9 + 20 = 29 (left: 29)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n20 - 9 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 6 9 11",
                "ys": [
                    "3 + 6 = 9 (left: 9 9 11)\n9 + 9 = 18 (left: 11 18)\n11 + 18 = 29 (left: 29)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n9 + 20 = 29 (left: 29)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n20 - 9 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "3 + 6 = 9 (left: 9 9 11)\n9 + 9 = 18 (left: 11 18)\n11 + 18 = 29 (left: 29)\nThere are no possible next steps.\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 is the target number, no possible next steps.\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n5 + 5 = 10 (left: 5)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n5 * 2 = 10 (left: 2)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 / 5 = 2 (left: 5)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 - 5 = 5 (left: 5)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\nInput: 11\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n11 + 1 = 12 (left: 1 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n11 - 1 = 10 (left: 1 10)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n11 / 1 = 11 (left: 1 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n11 * 1 = 11 (left: 1 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\nInput: 11\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\nPossible next steps:\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n11 + 1 = 12 (left: 1 12)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n11 - 1 = 10 (left: 1 10)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n11 * 1 = 11 (left: 1 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n11 / 1 = 11 (left: 1 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n9 + 20 = 29 (left: 29)\n2 + 9 = 11 (left: 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n9 + 20 = 29 (left: 29)\n9 - 2 = 7 (left: 7)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n9 + 20 = 29 (left: 29)\nInput: 4 5 6 7\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n9 + 20 = 29 (left: 29)\nPossible next steps:\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n9 + 20 = 29 (left: 29)\n4 + 5 = 9 (left: 6 7 9)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n9 + 20 = 29 (left: 29)\n5 + 6 = 11 (left: 4 7 11)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n9 + 20 = 29 (left: 29)\n6 + 7 = 13 (left: 4 5 13)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n9 + 20 = 29 (left: 29)\n4 * 5 = 20 (left: 6 7 20)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n9 + 20 = 29 (left: 29)\n5 * 6 = 30 (left: 4 7 30)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n9 + 20 = 29 (left: 29)\n6 * 7 = 42 (left: 4 5 42)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n9 + 20 = 29 (left: 29)\n4 / 5 = 0.8 (left: 0.8 5 6 7)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n9 + 20 = 29 (left: 29)\n5 / 6 = 0.8333333333333334 (left: 4 0.8333333333333334 6 7)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n11 + 9 = 20 (left: 9 20)\n20 - 9 = 11 (left: 11)\nThere are no possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 6 = 9 (left: 9 9 11)\n9 + 9 = 18 (left: 11 18)\n11 + 18 = 29 (left: 29)\nThere are no possible next steps.\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 is the target number, no possible next steps.\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n5 + 5 = 10 (left: 5)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n5 * 2 = 10 (left: 2)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 / 5 = 2 (left: 5)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 - 5 = 5 (left: 5)\n",
                    "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\nInput: 11\n"
                ]
            }
        ],
        "idx": 886,
        "ys": [
            "3 + 6 = 9 (left: 9 9 11)\n9 + 9 = 18 (left: 11 18)\n11 + 18 = 29 (left: 29)\nThere are no possible next steps.\n",
            "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)\n12 is the target number, no possible next steps.\n",
            "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n5 + 5 = 10 (left: 5)\n",
            "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n5 * 2 = 10 (left: 2)\n",
            "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 / 5 = 2 (left: 5)\n",
            "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 - 5 = 5 (left: 5)\n",
            "3 + 6 = 9 (left: 9 9 11)\n9 / 9 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\nInput: 11\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 92151,
            "prompt_tokens": 271702,
            "cost": 0.591855
        },
        "time_spent": 35.08994913101196
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 7 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 7 = 12 (left: 9 12 13)\n",
                    "5 * 7 = 35 (left: 9 13 35)\n",
                    "9 + 5 = 14 (left: 7 14 13)\n",
                    "9 - 5 = 4 (left: 4 9 13)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n",
                    "13 / 5 = 2 (left: 2 7 9)\n",
                    "13 - 7 = 6 (left: 6 7 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    100,
                    100,
                    50,
                    50
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 4 7 13)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n",
                    "5 * 7 = 35 (left: 9 13 35)\n",
                    "9 + 5 = 14 (left: 7 14 13)\n",
                    "9 - 5 = 4 (left: 4 9 13)\n",
                    "13 / 5 = 2 (left: 2 7 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 7 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 4 7 13)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n",
                    "5 * 7 = 35 (left: 9 13 35)\n",
                    "9 + 5 = 14 (left: 7 14 13)\n",
                    "9 - 5 = 4 (left: 4 9 13)\n",
                    "13 / 5 = 2 (left: 2 7 9)\n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 * 7 = 28 (left: 28 13)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 / 4 = 1 (left: 1 13)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 * 8 = 56 (left: 9 56)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n8 / 7 = 1.14 (left: 1.14 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 - 7 = 2 (left: 2 9)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n9 + 12 = 21 (left: 13 21)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n9 * 12 = 108 (left: 13 108)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n12 - 9 = 3 (left: 3 12 13)\n",
                    "5 + 7 = 12 (left: 9 12 13)\n13 - 9 = 4 (left: 4 12 13)\n",
                    "5 * 7 = 35 (left: 9 13 35)\n9 + 13 = 22 (left: 22 35)\n",
                    "5 * 7 = 35 (left: 9 13 35)\n13 + 9 = 22 (left: 22 35)\n",
                    "5 * 7 = 35 (left: 9 13 35)\n9 * 13 = 117 (left: 117 35)\n",
                    "5 * 7 = 35 (left: 9 13 35)\n13 * 9 = 117 (left: 117 35)\n",
                    "5 * 7 = 35 (left: 9 13 35)\n13 + 35 = 48 (left: 9 48)\n",
                    "5 * 7 = 35 (left: 9 13 35)\n35 - 13 = 22 (left: 9 22)\n",
                    "5 * 7 = 35 (left: 9 13 35)\n35 / 13 = 2 (left: 2 35)\n",
                    "5 * 7 = 35 (left: 9 13 35)\n35 - 13 = 22 (left: 9 22)\n",
                    "9 + 5 = 14 (left: 7 14 13)\n7 + 14 = 21 (left: 13 21)\n",
                    "9 + 5 = 14 (left: 7 14 13)\n7 * 14 = 98 (left: 13 98)\n",
                    "9 + 5 = 14 (left: 7 14 13)\n14 - 7 = 7 (left: 7 13)\n",
                    "9 + 5 = 14 (left: 7 14 13)\n14 / 7 = 2 (left: 2 13)\n",
                    "9 + 5 = 14 (left: 7 14 13)\n14 + 7 = 21 (left: 13 21)\n",
                    "9 + 5 = 14 (left: 7 14 13)\n14 - 13 = 1 (left: 1 14)\n",
                    "9 + 5 = 14 (left: 7 14 13)\n14 / 7 = 2 (left: 2 14)\n",
                    "9 + 5 = 14 (left: 7 14 13)\nInput: 3 6 1 18\n",
                    "9 + 5 = 14 (left: 7 14 13)\nPossible next steps:\n",
                    "9 + 5 = 14 (left: 7 14 13)\n3 + 6 = 9 (left: 1 9 18)\n",
                    "9 + 5 = 14 (left: 7 14 13)\n3 * 6 = 18 (left: 1 18 18)\n",
                    "9 + 5 = 14 (left: 7 14 13)\n6 / 3 = 2 (left: 1 2 18)\n",
                    "9 + 5 = 14 (left: 7 14 13)\n18 - 6 = 12 (left: 1 12 18)\n",
                    "9 + 5 = 14 (left: 7 14 13)\n3 - 1 = 2 (left: 2 6 18)\n",
                    "9 + 5 = 14 (left: 7 14 13)\n18 - 1 = 17 (left: 3 6 17)\n",
                    "9 + 5 = 14 (left: 7 14 13)\n18 / 3 = 6 (left: 1 6 18)\n",
                    "9 + 5 = 14 (left: 7 14 13)\n6 - 3 = 3 (left: 1 3 18)\n",
                    "9 - 5 = 4 (left: 4 9 13)\n4 + 9 = 13 (left: 9 13)\n",
                    "9 - 5 = 4 (left: 4 9 13)\n9 - 4 = 5 (left: 5 9)\n",
                    "9 - 5 = 4 (left: 4 9 13)\n13 - 4 = 9 (left: 9 9)\n",
                    "9 - 5 = 4 (left: 4 9 13)\n9 / 4 = 2 (left: 2 9)\n",
                    "9 - 5 = 4 (left: 4 9 13)\n9 + 4 = 13 (left: 4 13)\n",
                    "9 - 5 = 4 (left: 4 9 13)\n4 * 9 = 36 (left: 36)\n",
                    "9 - 5 = 4 (left: 4 9 13)\n13 - 9 = 4 (left: 4 9)\n",
                    "9 - 5 = 4 (left: 4 9 13)\n13 / 4 = 3 (left: 3 9)\n",
                    "13 / 5 = 2 (left: 2 7 9)\n7 + 2 = 9 (left: 2 9)\n",
                    "13 / 5 = 2 (left: 2 7 9)\n9 - 2 = 7 (left: 7 9)\n",
                    "13 / 5 = 2 (left: 2 7 9)\n2 * 7 = 14 (left: 9 14)\n",
                    "13 / 5 = 2 (left: 2 7 9)\n7 / 2 = 3 (left: 3 7)\n",
                    "13 / 5 = 2 (left: 2 7 9)\nInput: 3 3 6 7\n",
                    "13 / 5 = 2 (left: 2 7 9)\nPossible next steps:\n",
                    "13 / 5 = 2 (left: 2 7 9)\n3 + 3 = 6 (left: 6 6 7)\n",
                    "13 / 5 = 2 (left: 2 7 9)\n3 + 6 = 9 (left: 3 9 7)\n",
                    "13 / 5 = 2 (left: 2 7 9)\n6 * 3 = 18 (left: 7 18)\n",
                    "13 / 5 = 2 (left: 2 7 9)\n7 - 3 = 4 (left: 4 6 7)\n",
                    "13 / 5 = 2 (left: 2 7 9)\n3 * 3 = 9 (left: 6 9 7)\n",
                    "13 / 5 = 2 (left: 2 7 9)\n7 - 6 = 1 (left: 3 6 1)\n",
                    "13 / 5 = 2 (left: 2 7 9)\n6 - 3 = 3 (left: 3 3 7)\n",
                    "13 / 5 = 2 (left: 2 7 9)\n7 / 3 = 2 (left: 2 3 7)\n",
                    "13 / 5 = 2 (left: 2 7 9)\n7 - 3 = 4 (left: 3 4 7)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    100,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 * 7 = 28 (left: 28 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 7 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 * 7 = 28 (left: 28 13)\n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: )\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 - 13 = -2 (left: 13)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 11 = 2 (left: 11)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 * 13 = 143 (left: )\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0.846 (left: 13)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 / 11 = 1.182 (left: 11)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 - 15 = -6 (left: -6 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 / 15 = 0 (left: 0 15)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2 8)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n8 * 16 = 128 (left: 128)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\nInput: 3 3 8 9\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\nPossible next steps:\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n3 + 3 = 6 (left: 6 8 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n3 * 3 = 9 (left: 8 9 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n3 + 8 = 11 (left: 11 3 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n3 / 3 = 1 (left: 1 8 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n3 - 1 = 2 (left: 2 8 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n3 * 8 = 24 (left: 24 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n3 + 9 = 12 (left: 8 12 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n3 - 3 = 0 (left: 0 8 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n3 / 3 = 1 (left: 1 8 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n8 + 9 = 17 (left: 3 17 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n8 - 3 = 5 (left: 5 3 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n8 / 3 = 2 (left: 2 3 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n9 - 3 = 6 (left: 6 3 9)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n9 / 3 = 3 (left: 3 3 9)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n13 / 3 = 4 (left: 4 13)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n13 - 3 = 10 (left: 3 10)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n\n",
                    "13 - 9 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)\n4 + 9 = 13 (left: 9 13)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)\n9 - 4 = 5 (left: 5 9)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n13 - 6 = 7 (left: 7 13)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n13 / 6 = 2 (left: 2 13)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n6 * 13 = 78 (left: 78)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\nInput: 4 4 7 9\n",
                    "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\nPossible next steps:\n",
                    "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n4 + 4 = 8 (left: 8 7 9)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n7 - 4 = 3 (left: 3 4 9)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n9 - 4 = 5 (left: 4 5 7)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n13 - 7 = 6 (left: 6 13)\n4 * 4 = 16 (left: 16 7 9)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 * 7 = 28 (left: 28 13)\n28 + 13 = 41 (left: 41)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 * 7 = 28 (left: 28 13)\n28 - 13 = 15 (left: 15)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 * 7 = 28 (left: 28 13)\n28 / 13 = 2 (left: 2)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 * 7 = 28 (left: 28 13)\n28 * 13 = 364 (left: 364)\n"
                ],
                "values": [
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 - 13 = -2 (left: 13)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 11 = 2 (left: 11)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 7 9 13",
                "ys": [
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 - 13 = -2 (left: 13)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 11 = 2 (left: 11)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n"
                ],
                "new_ys": [
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (7 + (13 - 5)) = 24\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: (13 - 5) + ((7 + 8) + 9) = 24\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (13 - 5) + (9 + 7) = 24\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 - 13 = -2 (left: 13)\n13 is the only number.\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 11 = 2 (left: 11)\n11 is the final result, no more steps possible.\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n16 + 16 = 32 (left: 32)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n16 * 16 = 256 (left: 256)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n16 / 16 = 1 (left: 1)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n16 - 16 = 0 (left: 0)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n2 * 39 = 78 (left: 39 78)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 * 13 = 39 (left: 39)\n39 * 1 = 39 (left: 39 39)\n"
                ],
                "values": [
                    1000,
                    0,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (7 + (13 - 5)) = 24\n",
                    "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (13 - 5) + (9 + 7) = 24\n",
                    "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: (13 - 5) + ((7 + 8) + 9) = 24\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 - 13 = -2 (left: 13)\n13 is the only number.\n",
                    "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 11 = 2 (left: 11)\n11 is the final result, no more steps possible.\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n16 + 16 = 32 (left: 32)\n",
                    "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n16 * 16 = 256 (left: 256)\n"
                ]
            }
        ],
        "idx": 887,
        "ys": [
            "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (7 + (13 - 5)) = 24\n",
            "13 - 5 = 8 (left: 7 8 9)\n9 + 7 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: (13 - 5) + (9 + 7) = 24\n",
            "13 - 5 = 8 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: (13 - 5) + ((7 + 8) + 9) = 24\n",
            "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 - 13 = -2 (left: 13)\n13 is the only number.\n",
            "13 - 9 = 4 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n13 - 11 = 2 (left: 11)\n11 is the final result, no more steps possible.\n",
            "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n16 + 16 = 32 (left: 32)\n",
            "13 - 9 = 4 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)\n3 + 13 = 16 (left: 16)\n16 * 16 = 256 (left: 256)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 94159,
            "prompt_tokens": 277785,
            "cost": 0.6049955
        },
        "time_spent": 36.228049993515015
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n",
                    "4 * 2 = 8 (left: 8 12 12)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n",
                    "2 * 4 = 8 (left: 8 12 12)\n",
                    "4 / 2 = 2 (left: 2 12 12)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n",
                    "12 - 4 = 8 (left: 8 8 12)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n",
                    "4 * 2 = 8 (left: 8 12 12)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n",
                    "2 * 4 = 8 (left: 8 12 12)\n",
                    "4 / 2 = 2 (left: 2 12 12)\n",
                    "12 - 4 = 8 (left: 8 8 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 12 12",
                "ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n",
                    "4 * 2 = 8 (left: 8 12 12)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n",
                    "2 * 4 = 8 (left: 8 12 12)\n",
                    "4 / 2 = 2 (left: 2 12 12)\n",
                    "12 - 4 = 8 (left: 8 8 12)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 * 6 = 72 (left: 12 72)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)\n",
                    "4 * 2 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "4 * 2 = 8 (left: 8 12 12)\n12 / 8 = 1 (left: 1 12)\n",
                    "4 * 2 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n4 + 12 = 16 (left: 14 16)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n4 * 12 = 48 (left: 14 48)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n12 - 4 = 8 (left: 8 14)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n12 / 4 = 3 (left: 3 14)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 10 14)\n",
                    "2 * 4 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "2 * 4 = 8 (left: 8 12 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "2 * 4 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "2 * 4 = 8 (left: 8 12 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "2 * 4 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "4 / 2 = 2 (left: 2 12 12)\n2 * 12 = 24 (left: 12 12 24)\n",
                    "4 / 2 = 2 (left: 2 12 12)\n12 + 2 = 14 (left: 14 12 12)\n",
                    "4 / 2 = 2 (left: 2 12 12)\n12 / 2 = 6 (left: 6 12 12)\n",
                    "4 / 2 = 2 (left: 2 12 12)\n12 - 2 = 10 (left: 10 12 12)\n",
                    "12 - 4 = 8 (left: 8 8 12)\n8 + 8 = 16 (left: 16 12)\n",
                    "12 - 4 = 8 (left: 8 8 12)\n8 / 8 = 1 (left: 1 12)\n",
                    "12 - 4 = 8 (left: 8 8 12)\n8 * 8 = 64 (left: 64 12)\n",
                    "12 - 4 = 8 (left: 8 8 12)\n8 - 8 = 0 (left: 0 12)\n"
                ],
                "values": [
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 10 14)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n12 - 2 = 10 (left: 10 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 12 12",
                "ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 10 14)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n12 - 2 = 10 (left: 10 12)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 10 14)\n10 * 14 = 140 (left: 140)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 10 14)\n14 * 10 = 140 (left: 140)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 / 12 = 1.5 (left: 1.5 18)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 - 1.5 = 16.5 (left: 12 16.5)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 / 2 = 3 (left: 3 12)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n20 - 12 = 8 (left: 8 20)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n20 / 12 = 1.67 (left: 1.67 20)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\nInput: 3 3 3 3\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\nPossible next steps:\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 * 3 = 9 (left: 3 3 3 9)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n10 - 2 = 8 (left: 8 12)\n\n",
                    "12 - 2 = 10 (left: 2 10 12)\n12 - 2 = 10 (left: 10 12)\n10 + 12 = 22 (left: 22)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n12 - 2 = 10 (left: 10 12)\n10 * 12 = 120 (left: 120)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n12 - 2 = 10 (left: 10 12)\n12 - 10 = 2 (left: 2)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    50,
                    50,
                    100,
                    100,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    100,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 12 12",
                "ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 10 14)\n14 + 10 = 24 (left: 24)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n"
                ],
                "new_ys": [
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (4 + 12) = 24\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (2 + 4) * (12 / 6) = 24\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (12 + 2) + (4 - 12) = 24\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (12 + 2) + (14 - 4) = 24\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 3 3 6)\n3 + 3 = 6 (left: 3 6 6)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 3 3 6)\n3 / 3 = 1 (left: 1 3 6)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 3 3 6)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 3 3 6)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)\n14 is the last number, no more steps possible.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 + 2 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (12 + 2) + (14 - 4) = 24\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (4 + 12) = 24\n",
                    "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (2 + 4) * (12 / 6) = 24\n",
                    "12 + 2 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (12 + 2) + (4 - 12) = 24\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 3)\n"
                ]
            }
        ],
        "idx": 888,
        "ys": [
            "12 + 2 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 10 14)\n14 + 10 = 24 (left: 24)\nAnswer: (12 + 2) + (14 - 4) = 24\n",
            "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (4 + 12) = 24\n",
            "2 + 4 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (2 + 4) * (12 / 6) = 24\n",
            "12 + 2 = 14 (left: 4 12 14)\n14 - 4 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (12 + 2) + (4 - 12) = 24\n",
            "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
            "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
            "12 - 2 = 10 (left: 2 10 12)\n2 * 10 = 20 (left: 12 20)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 95519,
            "prompt_tokens": 284227,
            "cost": 0.6173784999999999
        },
        "time_spent": 28.753084897994995
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 9 11 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 9 = 13 (left: 11 12 13)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n",
                    "9 + 11 = 20 (left: 4 12 20)\n",
                    "9 * 4 = 36 (left: 11 12 36)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "12 - 9 = 3 (left: 3 9 11)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n",
                    "9 + 11 = 20 (left: 4 12 20)\n",
                    "9 * 4 = 36 (left: 11 12 36)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 9 11 12",
                "ys": [
                    "12 - 9 = 3 (left: 3 9 11)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n",
                    "9 + 11 = 20 (left: 4 12 20)\n",
                    "9 * 4 = 36 (left: 11 12 36)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n"
                ],
                "new_ys": [
                    "12 - 9 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n11 + 12 = 23 (left: 13 23)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n12 - 11 = 1 (left: 1 12 13)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n11 * 12 = 132 (left: 13 132)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n12 / 11 = 1.09 (left: 1.09 12 13)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n11 + 12 = 23 (left: 23 36)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n11 * 12 = 132 (left: 36 132)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n12 - 11 = 1 (left: 1 12 36)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n12 / 11 = 1 (left: 1 12 36)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n11 - 12 = -1 (left: -1 11 36)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n12 + 11 = 23 (left: 23 36)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n11 * 36 = 396 (left: 12 396)\n",
                    "4 * 9 = 36 (left: 11 12 36)\n12 - 36 = -24 (left: -24 12 36)\n",
                    "9 + 11 = 20 (left: 4 12 20)\n4 + 12 = 16 (left: 16 20)\n",
                    "9 + 11 = 20 (left: 4 12 20)\n12 - 4 = 8 (left: 8 12 20)\n",
                    "9 + 11 = 20 (left: 4 12 20)\n20 - 4 = 16 (left: 12 16 20)\n",
                    "9 + 11 = 20 (left: 4 12 20)\n4 * 12 = 48 (left: 20 48)\n",
                    "9 + 11 = 20 (left: 4 12 20)\n12 + 4 = 16 (left: 16 20)\n",
                    "9 + 11 = 20 (left: 4 12 20)\n20 / 4 = 5 (left: 5 12 20)\n",
                    "9 * 4 = 36 (left: 11 12 36)\n11 + 12 = 23 (left: 23 36)\n",
                    "9 * 4 = 36 (left: 11 12 36)\n11 * 12 = 132 (left: 36 132)\n",
                    "9 * 4 = 36 (left: 11 12 36)\n12 * 11 = 132 (left: 36 132)\n",
                    "9 * 4 = 36 (left: 11 12 36)\n12 + 11 = 23 (left: 23 36)\n",
                    "9 * 4 = 36 (left: 11 12 36)\n12 - 11 = 1 (left: 1 12 36)\n",
                    "9 * 4 = 36 (left: 11 12 36)\n12 / 11 = 1 (left: 1 12 36)\n",
                    "9 * 4 = 36 (left: 11 12 36)\n36 - 11 = 25 (left: 12 25 36)\n",
                    "9 * 4 = 36 (left: 11 12 36)\n36 / 12 = 3 (left: 3 12 36)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n7 + 9 = 16 (left: 16 12)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n7 * 9 = 63 (left: 63 12)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 / 7 = 1 (left: 1 12)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n8 - 9 = -1 (left: -1 11)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n8 + 9 = 17 (left: 17 11)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n8 * 9 = 72 (left: 72 11)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n9 + 8 = 17 (left: 17 11)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n9 * 8 = 72 (left: 72 11)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n11 - 8 = 3 (left: 3 11)\n",
                    "12 - 4 = 8 (left: 8 9 11)\n11 + 8 = 19 (left: 19 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    100,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n11 + 12 = 23 (left: 13 23)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 9 11 12",
                "ys": [
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n11 + 12 = 23 (left: 13 23)\n"
                ],
                "new_ys": [
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 + 2 = 14 (left: 2 14)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 - 12 = -1 (left: -1)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 * 12 = 132 (left: 132)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 / 12 = 0.92 (left: 0.92)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n11 / 6 = 1 (left: 1 11)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n11 * 6 = 66 (left: 66)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\nInput: 3 5 6 8\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\nPossible next steps:\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n3 + 5 = 8 (left: 6 8 8)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n5 - 3 = 2 (left: 2 6 8)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 8 = 14 (left: 3 14 8)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n8 - 6 = 2 (left: 3 5 2)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n3 * 5 = 15 (left: 15 6 8)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n5 / 3 = 1 (left: 1 6 8)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 * 8 = 48 (left: 3 5 48)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n8 / 6 = 1 (left: 3 5 1)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n8 + 11 = 19 (left: 19)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n11 - 8 = 3 (left: 3 8)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n8 * 11 = 88 (left: 88)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n8 / 11 = 0.7272727272727273 (left: 0.7272727272727273 8)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\nInput: 6 6 6 6\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\nPossible next steps:\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n6 / 6 = 1 (left: 1 6 6 6)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n6 + 6 = 12 (left: 6 12 6)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n6 * 6 = 36 (left: 6 6 36)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n6 - 6 = 0 (left: 0 6 6)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n6 - 6 = 0 (left: 0 6 6)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n6 * 6 = 36 (left: 6 6 36)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n6 / 6 = 1 (left: 1 6 6)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n6 + 6 = 12 (left: 6 12 6)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 + 27 = 38 (left: 38)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n27 - 11 = 16 (left: 16 27)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 * 27 = 297 (left: 297)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n27 / 11 = 2 (left: 2 27)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\nInput: 3 5 5 13\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\nPossible next steps:\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n3 + 5 = 8 (left: 8 5 13)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n5 * 5 = 25 (left: 3 25 13)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n13 + 3 = 16 (left: 5 5 16)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n3 * 5 = 15 (left: 15 5 13)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n5 - 3 = 2 (left: 2 5 13)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n13 - 5 = 8 (left: 3 5 8)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n13 / 5 = 2 (left: 3 2 13)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n3 / 5 = 0.6 (left: 0.6 5 13)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n3 + 11 = 14 (left: 11 14)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n11 - 3 = 8 (left: 8 11)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n11 / 3 = 3.67 (left: 3.67 11)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n11 * 3 = 33 (left: 3 33)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 / 3 = 3 (left: 3 11)\n\n",
                    "4 + 9 = 13 (left: 11 12 13)\n11 + 12 = 23 (left: 13 23)\n13 + 23 = 36 (left: 36)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n11 + 12 = 23 (left: 13 23)\n23 - 13 = 10 (left: 10)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n11 + 12 = 23 (left: 13 23)\n13 * 23 = 299 (left: 299)\n",
                    "4 + 9 = 13 (left: 11 12 13)\n11 + 12 = 23 (left: 13 23)\n23 / 13 = 1.76923076923 (left: 1.76923076923)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n8 + 11 = 19 (left: 19)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n6 / 6 = 1 (left: 1 6 6 6)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 + 27 = 38 (left: 38)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 9 11 12",
                "ys": [
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n8 + 11 = 19 (left: 19)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n6 / 6 = 1 (left: 1 6 6 6)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 + 27 = 38 (left: 38)\n"
                ],
                "new_ys": [
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (11 - 4) * (9 - 7) * 12 = 24\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (11 - 4) * (9 - 7) * 12 = 24\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nNo possible next steps.\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\nInput: 3 3 8 8\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\nPossible next steps:\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n3 * 8 = 24 (left: 3 8 24)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n3 - 8 = -5 (left: -5 3 8)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n8 / 3 = 2 (left: 3 2 8)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n8 * 3 = 24 (left: 3 8 24)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n8 - 8 = 0 (left: 3 8 0)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n3 + 8 = 11 (left: 3 8 11)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n8 + 11 = 19 (left: 19)\n2 + 8 = 10 (left: 8 10 19)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n8 + 11 = 19 (left: 19)\n8 - 2 = 6 (left: 6 8 19)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n8 + 11 = 19 (left: 19)\n19 / 2 = 9 (left: 9 8 19)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n8 + 11 = 19 (left: 19)\n19 - 8 = 11 (left: 8 11 19)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n6 / 6 = 1 (left: 1 6 6 6)\n1 + 6 = 7 (left: 6 6 7)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n6 / 6 = 1 (left: 1 6 6 6)\n6 / 1 = 6 (left: 6 6 6)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n6 / 6 = 1 (left: 1 6 6 6)\n6 * 1 = 6 (left: 6 6 6)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n6 / 6 = 1 (left: 1 6 6 6)\n6 - 1 = 5 (left: 5 6 6)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n6 / 6 = 1 (left: 1 6 6 6)\n6 - 1 = 5 (left: 5 6 6)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n11 - 3 = 8 (left: 8 11)\n6 / 6 = 1 (left: 1 6 6 6)\n6 / 1 = 6 (left: 6 6 6)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n11 + 27 = 38 (left: 38)\nThere are no possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (11 - 4) * (9 - 7) * 12 = 24\n",
                    "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (11 - 4) * (9 - 7) * 12 = 24\n",
                    "12 - 9 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nNo possible next steps.\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\nInput: 3 3 8 8\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\nPossible next steps:\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n3 * 8 = 24 (left: 3 8 24)\n"
                ]
            }
        ],
        "idx": 889,
        "ys": [
            "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (11 - 4) * (9 - 7) * 12 = 24\n",
            "11 - 4 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (11 - 4) * (9 - 7) * 12 = 24\n",
            "12 - 9 = 3 (left: 3 9 11)\n3 + 9 = 12 (left: 11 12)\n11 + 12 = 23 (left: 23)\nNo possible next steps.\n",
            "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\nInput: 3 3 8 8\n",
            "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\nPossible next steps:\n",
            "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n3 + 3 = 6 (left: 6 8 8)\n",
            "12 - 9 = 3 (left: 3 9 11)\n9 - 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n3 * 8 = 24 (left: 3 8 24)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 97582,
            "prompt_tokens": 289969,
            "cost": 0.6301175
        },
        "time_spent": 42.36223316192627
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 8 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 + 8 = 15 (left: 9 13 15)\n",
                    "8 - 7 = 1 (left: 1 9 13)\n",
                    "9 + 7 = 16 (left: 8 13 16)\n",
                    "7 * 8 = 56 (left: 9 13 56)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n",
                    "13 - 8 = 5 (left: 7 9 5)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n",
                    "13 / 7 = 1 (left: 1 8 9)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "7 + 8 = 15 (left: 9 13 15)\n",
                    "8 - 7 = 1 (left: 1 9 13)\n",
                    "9 + 7 = 16 (left: 8 13 16)\n",
                    "7 * 8 = 56 (left: 9 13 56)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n",
                    "13 - 8 = 5 (left: 7 9 5)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 8 9 13",
                "ys": [
                    "7 + 8 = 15 (left: 9 13 15)\n",
                    "8 - 7 = 1 (left: 1 9 13)\n",
                    "9 + 7 = 16 (left: 8 13 16)\n",
                    "7 * 8 = 56 (left: 9 13 56)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n",
                    "13 - 8 = 5 (left: 7 9 5)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n"
                ],
                "new_ys": [
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 * 13 = 117 (left: 15 117)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 * 15 = 195 (left: 9 195)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 / 9 = 1 (left: 1 13)\n",
                    "7 + 8 = 15 (left: 9 13 15)\nInput: 1 5 6 9\n",
                    "7 + 8 = 15 (left: 9 13 15)\nPossible next steps:\n",
                    "7 + 8 = 15 (left: 9 13 15)\n1 + 5 = 6 (left: 6 6 9)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n5 + 6 = 11 (left: 1 11 9)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n1 * 5 = 5 (left: 5 6 9)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n5 * 6 = 30 (left: 1 30 9)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n5 - 1 = 4 (left: 4 6 9)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n6 - 1 = 5 (left: 5 6 9)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n6 / 1 = 6 (left: 6 6 9)\n",
                    "8 - 7 = 1 (left: 1 9 13)\n1 + 9 = 10 (left: 10 13)\n",
                    "8 - 7 = 1 (left: 1 9 13)\n9 + 1 = 10 (left: 10 13)\n",
                    "8 - 7 = 1 (left: 1 9 13)\n1 * 9 = 9 (left: 9 13)\n",
                    "8 - 7 = 1 (left: 1 9 13)\n9 * 1 = 9 (left: 9 13)\n",
                    "8 - 7 = 1 (left: 1 9 13)\n9 + 4 = 13 (left: 1 13)\n",
                    "8 - 7 = 1 (left: 1 9 13)\n9 - 4 = 5 (left: 1 5)\n",
                    "8 - 7 = 1 (left: 1 9 13)\n9 / 3 = 3 (left: 1 3)\n",
                    "9 + 7 = 16 (left: 8 13 16)\n8 + 13 = 21 (left: 21 16)\n",
                    "9 + 7 = 16 (left: 8 13 16)\n8 - 13 = -5 (left: -5 16)\n",
                    "9 + 7 = 16 (left: 8 13 16)\n8 * 13 = 104 (left: 104 16)\n",
                    "9 + 7 = 16 (left: 8 13 16)\n13 - 8 = 5 (left: 5 16)\n",
                    "7 * 8 = 56 (left: 9 13 56)\n9 + 13 = 22 (left: 22 56)\n",
                    "7 * 8 = 56 (left: 9 13 56)\n13 + 9 = 22 (left: 22 56)\n",
                    "7 * 8 = 56 (left: 9 13 56)\n9 * 13 = 117 (left: 117 56)\n",
                    "7 * 8 = 56 (left: 9 13 56)\n13 * 9 = 117 (left: 117 56)\n",
                    "7 * 8 = 56 (left: 9 13 56)\n13 - 9 = 4 (left: 4 13 56)\n",
                    "7 * 8 = 56 (left: 9 13 56)\n9 - 13 = -4 (left: -4 13 56)\n",
                    "7 * 8 = 56 (left: 9 13 56)\n13 / 9 = 1 (left: 1 13 56)\n",
                    "7 * 8 = 56 (left: 9 13 56)\n9 / 13 = 0.6923076923076923 (left: 0.6923076923076923 13 56)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n2 + 8 = 10 (left: 10 13)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n8 / 2 = 4 (left: 4 13)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n13 - 2 = 11 (left: 8 11)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n13 - 8 = 5 (left: 2 5)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n8 + 2 = 10 (left: 10 13)\n",
                    "9 - 7 = 2 (left: 2 8 13)\n2 * 8 = 16 (left: 16 13)\n",
                    "13 - 8 = 5 (left: 7 9 5)\n7 + 9 = 16 (left: 5 16)\n",
                    "13 - 8 = 5 (left: 7 9 5)\n7 - 9 = -2 (left: -2 5)\n",
                    "13 - 8 = 5 (left: 7 9 5)\n7 * 9 = 63 (left: 5 63)\n",
                    "13 - 8 = 5 (left: 7 9 5)\n7 / 9 = 0.7777777777777778 (left: 0.778 5)\n",
                    "13 - 8 = 5 (left: 7 9 5)\n9 + 5 = 14 (left: 7 14)\n",
                    "13 - 8 = 5 (left: 7 9 5)\n9 - 5 = 4 (left: 4 7)\n",
                    "13 - 8 = 5 (left: 7 9 5)\n9 * 5 = 45 (left: 7 45)\n",
                    "13 - 8 = 5 (left: 7 9 5)\n9 / 5 = 1.8 (left: 1.8 7)\n",
                    "13 - 8 = 5 (left: 7 9 5)\n5 + 7 = 12 (left: 12)\n",
                    "13 - 8 = 5 (left: 7 9 5)\n5 - 7 = -2 (left: -2)\n",
                    "13 - 8 = 5 (left: 7 9 5)\n5 * 7 = 35 (left: 35)\n",
                    "13 - 8 = 5 (left: 7 9 5)\n5 / 7 = 0.7142857142857143 (left: 0.714 7)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n6 + 8 = 14 (left: 9 14)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n8 - 6 = 2 (left: 2 9)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 * 15 = 195 (left: 9 195)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 / 9 = 1 (left: 1 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "7 8 9 13",
                "ys": [
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 * 15 = 195 (left: 9 195)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 / 9 = 1 (left: 1 13)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8 11)\n",
                    "13 - 7 = 6 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n15 + 22 = 37 (left: 37)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n15 - 22 = -7 (left: -7)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n15 * 22 = 330 (left: 330)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n15 / 22 = 0.68 (left: 0.68)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n28 - 9 = 19 (left: 19)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 * 28 = 252 (left: 252)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n28 / 9 = 3 (left: 3)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\nInput: 5 3 2 4\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\nPossible next steps:\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n5 + 3 = 8 (left: 8 2 4)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n5 * 3 = 15 (left: 15 2 4)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n5 / 3 = 1.67 (left: 1.67 2 4)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n5 - 3 = 2 (left: 2 2 4)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n3 + 2 = 5 (left: 5 5 4)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n3 * 2 = 6 (left: 5 6 4)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n3 / 2 = 1.5 (left: 5 1.5 4)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n3 - 2 = 1 (left: 5 1 4)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n2 + 4 = 6 (left: 5 3 6)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n2 * 4 = 8 (left: 5 3 8)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n2 / 4 = 0.5 (left: 5 3 0.5)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n2 - 4 = -2 (left: 5 3 -2)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n4 + 5 = 9 (left: 3 9)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n4 * 5 = 20 (left: 20)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n4 / 5 = 0.8 (left: 0.8)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n4 - 5 = -1 (left: -1)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 * 15 = 195 (left: 9 195)\n9 * 2 = 18 (left: 18 195)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 * 15 = 195 (left: 9 195)\n9 + 2 = 11 (left: 11 195)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 * 15 = 195 (left: 9 195)\n9 / 2 = 4.5 (left: 4.5 195)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 * 15 = 195 (left: 9 195)\n195 - 9 = 186 (left: 9 186)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n4 + 15 = 19 (left: 19)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n15 - 4 = 11 (left: 11)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n4 * 15 = 60 (left: 60)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n15 / 4 = 3.75 (left: 3.75)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n6 * 13 = 78 (left: 78)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n13 - 6 = 7 (left: 7)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n13 / 6 = 2.166... (left: 2.166...)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 / 9 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 / 9 = 1 (left: 1 13)\n13 - 1 = 12 (left: 1 12)\n"
                ],
                "values": [
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0
                ],
                "select_new_ys": [
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n15 + 22 = 37 (left: 37)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n28 - 9 = 19 (left: 19)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n4 * 5 = 20 (left: 20)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n4 + 15 = 19 (left: 19)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n15 - 4 = 11 (left: 11)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n"
                ]
            },
            {
                "step": 3,
                "x": "7 8 9 13",
                "ys": [
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n15 + 22 = 37 (left: 37)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n28 - 9 = 19 (left: 19)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n4 * 5 = 20 (left: 20)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n4 + 15 = 19 (left: 19)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n15 - 4 = 11 (left: 11)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\n"
                ],
                "new_ys": [
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n15 + 22 = 37 (left: 37)\nNo possible next steps.\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\nInput: 3 6 8 11\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\nPossible next steps:\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n3 + 6 = 9 (left: 8 9 11)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n6 / 3 = 2 (left: 2 8 11)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n11 - 3 = 8 (left: 6 8 8)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n3 * 8 = 24 (left: 6 11 24)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n8 - 6 = 2 (left: 2 8 11)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n11 - 6 = 5 (left: 3 5 8)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n11 - 8 = 3 (left: 3 6 8)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n11 / 3 = 3 (left: 3 8 11)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n28 - 9 = 19 (left: 19)\nInput: 2 3 6 7\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n28 - 9 = 19 (left: 19)\nPossible next steps:\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n28 - 9 = 19 (left: 19)\n2 * 3 = 6 (left: 6 6 7)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n28 - 9 = 19 (left: 19)\n6 + 3 = 9 (left: 2 9 7)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n28 - 9 = 19 (left: 19)\n7 - 2 = 5 (left: 5 6 7)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n28 - 9 = 19 (left: 19)\n7 - 3 = 4 (left: 2 6 4)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n28 - 9 = 19 (left: 19)\n6 - 3 = 3 (left: 2 3 7)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n28 - 9 = 19 (left: 19)\n7 - 6 = 1 (left: 1 3 6)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n28 - 9 = 19 (left: 19)\n3 + 6 = 9 (left: 2 9 7)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n28 - 9 = 19 (left: 19)\nInput: 11\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n28 - 9 = 19 (left: 19)\nPossible next steps:\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n4 * 5 = 20 (left: 20)\nInput: 3 3 7 8\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n4 * 5 = 20 (left: 20)\nPossible next steps:\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n4 * 5 = 20 (left: 20)\n3 + 3 = 6 (left: 6 7 8)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n4 * 5 = 20 (left: 20)\n3 * 3 = 9 (left: 7 8 9)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n4 * 5 = 20 (left: 20)\n7 + 3 = 10 (left: 8 9 10)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n4 * 5 = 20 (left: 20)\n3 - 3 = 0 (left: 0 7 8)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n4 * 5 = 20 (left: 20)\n7 - 3 = 4 (left: 4 8 8)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n4 * 5 = 20 (left: 20)\n8 - 3 = 5 (left: 5 7 8)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n4 * 5 = 20 (left: 20)\n3 / 3 = 1 (left: 1 7 8)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n4 * 5 = 20 (left: 20)\n7 / 3 = 2 (left: 2 7 8)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n4 + 15 = 19 (left: 19)\nThere are no possible next steps.\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n15 - 4 = 11 (left: 11)\nInput: 11\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 - 9 = 4 (left: 4 15)\n15 - 4 = 11 (left: 11)\nPossible next steps:\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\nInput: 19\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\nPossible next steps:\n",
                    "7 + 8 = 15 (left: 9 13 15)\n15 - 9 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)\nNo possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n15 + 22 = 37 (left: 37)\nNo possible next steps.\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\nInput: 3 6 8 11\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\nPossible next steps:\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n3 + 6 = 9 (left: 8 9 11)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n6 / 3 = 2 (left: 2 8 11)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n11 - 3 = 8 (left: 6 8 8)\n",
                    "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n3 * 8 = 24 (left: 6 11 24)\n"
                ]
            }
        ],
        "idx": 890,
        "ys": [
            "7 + 8 = 15 (left: 9 13 15)\n9 + 13 = 22 (left: 15 22)\n15 + 22 = 37 (left: 37)\nNo possible next steps.\n",
            "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\nInput: 3 6 8 11\n",
            "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\nPossible next steps:\n",
            "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n3 + 6 = 9 (left: 8 9 11)\n",
            "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n6 / 3 = 2 (left: 2 8 11)\n",
            "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n11 - 3 = 8 (left: 6 8 8)\n",
            "7 + 8 = 15 (left: 9 13 15)\n13 + 15 = 28 (left: 9 28)\n9 + 28 = 37 (left: 37)\n3 * 8 = 24 (left: 6 11 24)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 99707,
            "prompt_tokens": 295011,
            "cost": 0.6419305
        },
        "time_spent": 41.85994005203247
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 6 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 6 = 8 (left: 8 12 12)\n",
                    "6 * 2 = 12 (left: 12 12 12)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n"
                ],
                "values": [
                    50,
                    50,
                    100
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 6 12 12)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n",
                    "6 * 2 = 12 (left: 12 12 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 6 12 12",
                "ys": [
                    "12 / 2 = 6 (left: 6 12 12)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n",
                    "6 * 2 = 12 (left: 12 12 12)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 * 6 = 72 (left: 12 72)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 / 8 = 1.5 (left: 1.5 12)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 * 8 = 96 (left: 12 96)\n",
                    "2 + 6 = 8 (left: 8 12 12)\nInput: 6 6 6 6\n",
                    "2 + 6 = 8 (left: 8 12 12)\nPossible next steps:\n",
                    "2 + 6 = 8 (left: 8 12 12)\n6 + 6 = 12 (left: 6 12 6)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n6 / 6 = 1 (left: 1 6 6)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n6 * 6 = 36 (left: 6 6 36)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n6 - 6 = 0 (left: 0 6 6)\n",
                    "2 + 6 = 8 (left: 8 12 12)\nInput: 3 5 7 9\n",
                    "2 + 6 = 8 (left: 8 12 12)\nPossible next steps:\n",
                    "2 + 6 = 8 (left: 8 12 12)\n3 + 5 = 8 (left: 7 8 9)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n5 + 7 = 12 (left: 3 12 9)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n7 + 9 = 16 (left: 3 5 16)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n3 * 5 = 15 (left: 7 15 9)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n5 * 7 = 35 (left: 3 35 9)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n7 * 9 = 63 (left: 3 5 63)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n3 + 7 = 10 (left: 10 5 9)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n5 + 9 = 14 (left: 3 14 9)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n3 * 7 = 21 (left: 5 21 9)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n7 * 9 = 63 (left: 3 5 63)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n3 + 9 = 12 (left: 5 7 12)\n",
                    "6 * 2 = 12 (left: 12 12 12)\n12 + 12 = 24 (left: 12 12 24)\n",
                    "6 * 2 = 12 (left: 12 12 12)\n12 * 12 = 144 (left: 12 24 144)\n",
                    "6 * 2 = 12 (left: 12 12 12)\n12 / 12 = 1 (left: 1 12 12)\n",
                    "6 * 2 = 12 (left: 12 12 12)\nInput: 3 3 7 7\n",
                    "6 * 2 = 12 (left: 12 12 12)\nPossible next steps:\n",
                    "6 * 2 = 12 (left: 12 12 12)\n3 + 7 = 10 (left: 3 10 7)\n",
                    "6 * 2 = 12 (left: 12 12 12)\n3 * 7 = 21 (left: 3 21 7)\n",
                    "6 * 2 = 12 (left: 12 12 12)\n7 - 3 = 4 (left: 3 4 7)\n",
                    "6 * 2 = 12 (left: 12 12 12)\n7 / 3 = 2 (left: 2 3 7)\n"
                ],
                "values": [
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 * 6 = 72 (left: 12 72)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 / 8 = 1.5 (left: 1.5 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 6 12 12",
                "ys": [
                    "12 / 2 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 * 6 = 72 (left: 12 72)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 / 8 = 1.5 (left: 1.5 12)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 / 12 = 1.5 (left: 1.5 18)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n18 * 12 = 216 (left: 216)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\nInput: 3 3 3 3\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\nPossible next steps:\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 * 3 = 9 (left: 3 9 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 + 12 = 18 (left: 18)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 + 20 = 32 (left: 20 32)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 - 20 = -8 (left: -8 20)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n12 * 20 = 240 (left: 20 240)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n8 + 12 = 20 (left: 12 20)\n20 / 12 = 1.67 (left: 1.67 20)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n4 * 3 = 12 (left: 3 12)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n4 / 4 = 1 (left: 1 12)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 * 6 = 72 (left: 12 72)\n12 * 6 = 72 (left: 6)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 * 6 = 72 (left: 12 72)\n72 / 12 = 6 (left: 6)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 * 6 = 72 (left: 12 72)\nInput: 3 3 3 9\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 * 6 = 72 (left: 12 72)\nPossible next steps:\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 * 6 = 72 (left: 12 72)\n3 * 3 = 9 (left: 3 9)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 * 6 = 72 (left: 12 72)\n9 - 3 = 6 (left: 3 6)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 * 6 = 72 (left: 12 72)\n3 + 3 = 6 (left: 6 9)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 * 6 = 72 (left: 12 72)\n9 / 3 = 3 (left: 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 * 6 = 72 (left: 12 72)\n3 * 3 = 9 (left: 3 9)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 / 8 = 1.5 (left: 1.5 12)\n1.5 * 12 = 18 (left: 18)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 / 8 = 1.5 (left: 1.5 12)\n12 / 1.5 = 8 (left: 8)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 / 8 = 1.5 (left: 1.5 12)\n12 - 1.5 = 10.5 (left: 10.5)\n",
                    "2 + 6 = 8 (left: 8 12 12)\n12 / 8 = 1.5 (left: 1.5 12)\n12 + 1.5 = 13.5 (left: 13.5)\n"
                ],
                "values": [
                    100,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 * 3 = 9 (left: 3 9 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 6 12 12",
                "ys": [
                    "12 / 2 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 * 3 = 9 (left: 3 9 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 2) * (12 / 6) = 24\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nInput: 3 3 3 3\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nPossible next steps:\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 / 3 = 1 (left: 1 3 9)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 * 3 = 9 (left: 3 9 9)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\n3 - 3 = 0 (left: 0 3 9)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 * 3 = 9 (left: 3 9 3 3)\n3 + 9 = 12 (left: 3 12 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 * 3 = 9 (left: 3 9 3 3)\n9 / 3 = 3 (left: 3 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 * 3 = 9 (left: 3 9 3 3)\n3 * 3 = 9 (left: 3 9 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 * 3 = 9 (left: 3 9 3 3)\n9 - 3 = 6 (left: 3 3 6)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 * 3 = 9 (left: 3 9 3 3)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 * 3 = 9 (left: 3 9 3 3)\n9 - 3 = 6 (left: 3 6 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 * 3 = 9 (left: 3 9 3 3)\n9 / 3 = 3 (left: 3 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 / 3 = 1 (left: 1 3 3 3)\n1 + 3 = 4 (left: 3 3 4)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 / 3 = 1 (left: 1 3 3 3)\n3 / 1 = 3 (left: 3 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 / 3 = 1 (left: 1 3 3 3)\n3 * 1 = 3 (left: 3 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 / 3 = 1 (left: 1 3 3 3)\n3 - 1 = 2 (left: 2 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 - 3 = 0 (left: 0 3 3 3)\n3 + 3 = 6 (left: 0 6 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 - 3 = 0 (left: 0 3 3 3)\n3 / 3 = 1 (left: 0 1 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 - 3 = 0 (left: 0 3 3 3)\n3 * 3 = 9 (left: 0 3 9)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 - 3 = 0 (left: 0 3 3 3)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 - 3 = 0 (left: 0 3 3 3)\nInput: 10 5 5 2\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 - 3 = 0 (left: 0 3 3 3)\nPossible next steps:\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 - 3 = 0 (left: 0 3 3 3)\n5 + 5 = 10 (left: 10 10 2)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 - 3 = 0 (left: 0 3 3 3)\n5 * 2 = 10 (left: 10 5 10)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 - 3 = 0 (left: 0 3 3 3)\n5 / 5 = 1 (left: 10 1 2)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 - 3 = 0 (left: 0 3 3 3)\n5 - 2 = 3 (left: 10 5 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n12 + 1 = 13 (left: 1 13)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n12 - 1 = 11 (left: 1 11)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n12 * 1 = 12 (left: 1 12)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 2 = 12 (left: 12)\n12 / 1 = 12 (left: 1 12)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 2) * (12 / 6) = 24\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n"
                ]
            }
        ],
        "idx": 891,
        "ys": [
            "12 / 2 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 2) * (12 / 6) = 24\n",
            "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
            "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 3)\n",
            "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
            "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
            "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 3)\n",
            "12 / 2 = 6 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 101453,
            "prompt_tokens": 299502,
            "cost": 0.652159
        },
        "time_spent": 34.475987911224365
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 5 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 5 6 7)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n",
                    "6 + 5 = 11 (left: 4 11 6)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n",
                    "5 + 4 = 9 (left: 6 9 6)\n",
                    "5 * 4 = 20 (left: 6 20 6)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 - 5 = 1 (left: 1 4 6)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n",
                    "6 + 5 = 11 (left: 4 11 6)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n",
                    "5 + 4 = 9 (left: 6 9 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 5 6",
                "ys": [
                    "6 - 5 = 1 (left: 1 4 6)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n",
                    "6 + 5 = 11 (left: 4 11 6)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n",
                    "5 + 4 = 9 (left: 6 9 6)\n"
                ],
                "new_ys": [
                    "6 - 5 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n6 * 4 = 24 (left: 1 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n6 / 4 = 1.5 (left: 1.5 6)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n6 - 4 = 2 (left: 1 2 6)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n",
                    "6 - 5 = 1 (left: 1 4 6)\nInput: 3 3 8 8\n",
                    "6 - 5 = 1 (left: 1 4 6)\nPossible next steps:\n",
                    "6 - 5 = 1 (left: 1 4 6)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n3 * 8 = 24 (left: 3 24 8)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n3 * 3 = 9 (left: 8 9 8)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n3 / 3 = 1 (left: 1 8 8)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n3 + 8 = 11 (left: 11 8 8)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n3 * 8 = 24 (left: 3 8 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n3 * 3 = 9 (left: 8 9 8)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n3 / 3 = 1 (left: 1 8 8)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 + 6 = 11 (left: 7 11)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n5 * 6 = 30 (left: 30 7)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n6 - 5 = 1 (left: 1 7)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n7 - 5 = 2 (left: 2 6)\n",
                    "3 + 4 = 7 (left: 5 6 7)\n7 / 5 = 1.4 (left: 1.4 6)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n6 - 5 = 1 (left: 1 12)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n5 * 6 = 30 (left: 30 12)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n6 / 5 = 1.2 (left: 1.2 12)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n12 + 5 = 17 (left: 5 17)\n",
                    "3 * 4 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 7 12)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n5 + 1 = 6 (left: 6 6)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n5 * 1 = 5 (left: 5 6)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n5 / 1 = 5 (left: 5 6)\n",
                    "4 - 3 = 1 (left: 1 5 6)\nInput: 3 3 3 3\n",
                    "4 - 3 = 1 (left: 1 5 6)\nPossible next steps:\n",
                    "4 - 3 = 1 (left: 1 5 6)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n\n",
                    "6 + 5 = 11 (left: 4 11 6)\n4 + 11 = 15 (left: 6 15)\n",
                    "6 + 5 = 11 (left: 4 11 6)\n11 - 4 = 7 (left: 7 6)\n",
                    "6 + 5 = 11 (left: 4 11 6)\n11 / 4 = 2.75 (left: 2.75 6)\n",
                    "6 + 5 = 11 (left: 4 11 6)\n4 * 11 = 44 (left: 6 44)\n",
                    "6 + 5 = 11 (left: 4 11 6)\nInput: 5 2 1 8\n",
                    "6 + 5 = 11 (left: 4 11 6)\nPossible next steps:\n",
                    "6 + 5 = 11 (left: 4 11 6)\n5 + 2 = 7 (left: 1 7 8)\n",
                    "6 + 5 = 11 (left: 4 11 6)\n5 - 2 = 3 (left: 3 1 8)\n",
                    "6 + 5 = 11 (left: 4 11 6)\n5 / 2 = 2.5 (left: 2.5 1 8)\n",
                    "6 + 5 = 11 (left: 4 11 6)\n5 * 2 = 10 (left: 1 8 10)\n",
                    "6 + 5 = 11 (left: 4 11 6)\n8 - 1 = 7 (left: 5 7 8)\n",
                    "6 + 5 = 11 (left: 4 11 6)\n8 / 1 = 8 (left: 5 8 8)\n",
                    "6 + 5 = 11 (left: 4 11 6)\n8 - 2 = 6 (left: 5 6 8)\n",
                    "6 + 5 = 11 (left: 4 11 6)\n8 / 2 = 4 (left: 5 4 8)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n5 * 24 = 120 (left: 6 120)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 - 5 = 19 (left: 6 19)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 5 = 4.8 (left: 4.8 6)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n5 - 24 = -19 (left: -19 6)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n5 / 24 = 0.20833333333333334 (left: 0.20833333333333334 6)\n",
                    "5 + 4 = 9 (left: 6 9 6)\n6 + 9 = 15 (left: 6 15)\n",
                    "5 + 4 = 9 (left: 6 9 6)\n9 - 6 = 3 (left: 3 6)\n",
                    "5 + 4 = 9 (left: 6 9 6)\n6 * 9 = 54 (left: 6 54)\n",
                    "5 + 4 = 9 (left: 6 9 6)\n6 / 9 = 0.67 (left: 0.67 6)\n",
                    "5 + 4 = 9 (left: 6 9 6)\n9 / 6 = 1.5 (left: 1.5 6)\n"
                ],
                "values": [
                    50,
                    100,
                    100,
                    0,
                    0,
                    50,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    100,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n6 * 4 = 24 (left: 1 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 5 6",
                "ys": [
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n6 * 4 = 24 (left: 1 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n"
                ],
                "new_ys": [
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\nInput: 3 3 8 8\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\nPossible next steps:\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n3 * 3 = 9 (left: 8 8 9)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n8 - 3 = 5 (left: 5 8 8)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n3 * 8 = 24 (left: 8 8 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n8 / 3 = 2 (left: 2 8 8)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n6 * 4 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n6 * 4 = 24 (left: 1 24)\n24 / 1 = 24 (left: 1 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5 6)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2 6)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\nInput: 3 3 3 3\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\nPossible next steps:\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n\n",
                    "6 - 5 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)\n5 + 6 = 11 (left: 11)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)\n5 * 6 = 30 (left: 30)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)\n6 - 5 = 1 (left: 1)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)\n6 / 5 = 1.2 (left: 1.2)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n10 + 1 = 11 (left: 11)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    50,
                    0,
                    100,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n6 * 4 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 3 3)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 5 6",
                "ys": [
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n6 * 4 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 - 3 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 3 3)\n"
                ],
                "new_ys": [
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: 1 * (3 * (6 - 5)) = 24\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: 4 * (6 - 5) * 3 = 24\n",
                    "6 - 5 = 1 (left: 1 4 6)\n6 * 4 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (6 * 4) * (6 - 5) = 24\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (6 - (4 / 1)) = 24\n",
                    "4 - 3 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 - 3) * (5 - 1) * 6 = 24\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 6 * (4 + 5) = 24\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 3 2 3)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 3 2 3)\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 3 9)\n"
                ],
                "values": [
                    0,
                    0,
                    1000,
                    0,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 - 5 = 1 (left: 1 4 6)\n6 * 4 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (6 * 4) * (6 - 5) = 24\n",
                    "4 - 3 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 - 3) * (5 - 1) * 6 = 24\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: 1 * (3 * (6 - 5)) = 24\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: 4 * (6 - 5) * 3 = 24\n",
                    "6 - 5 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (6 - (4 / 1)) = 24\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 6 * (4 + 5) = 24\n",
                    "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n"
                ]
            }
        ],
        "idx": 892,
        "ys": [
            "6 - 5 = 1 (left: 1 4 6)\n6 * 4 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (6 * 4) * (6 - 5) = 24\n",
            "4 - 3 = 1 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 - 3) * (5 - 1) * 6 = 24\n",
            "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: 1 * (3 * (6 - 5)) = 24\n",
            "6 - 5 = 1 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)\nAnswer: 4 * (6 - 5) * 3 = 24\n",
            "6 - 5 = 1 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (6 - (4 / 1)) = 24\n",
            "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 6 * (4 + 5) = 24\n",
            "6 * 4 = 24 (left: 5 24 6)\n24 / 6 = 4 (left: 4 6)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 9 3)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 103389,
            "prompt_tokens": 306632,
            "cost": 0.666726
        },
        "time_spent": 36.325474977493286
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 10 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 10 = 16 (left: 12 16 12)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n",
                    "12 + 6 = 18 (left: 10 12 18)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n",
                    "10 - 6 = 4 (left: 4 10 12)\n",
                    "12 - 6 = 6 (left: 6 10 12)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    50,
                    50,
                    50,
                    100,
                    100
                ],
                "select_new_ys": [
                    "10 / 6 = 1 (left: 12 1 12)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n",
                    "6 + 10 = 16 (left: 12 16 12)\n",
                    "12 + 6 = 18 (left: 10 12 18)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n",
                    "10 - 6 = 4 (left: 4 10 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 10 12 12",
                "ys": [
                    "10 / 6 = 1 (left: 12 1 12)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n",
                    "6 + 10 = 16 (left: 12 16 12)\n",
                    "12 + 6 = 18 (left: 10 12 18)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n",
                    "10 - 6 = 4 (left: 4 10 12)\n"
                ],
                "new_ys": [
                    "10 / 6 = 1 (left: 12 1 12)\n12 + 1 = 13 (left: 13 12)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 - 1 = 11 (left: 11 12)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 * 1 = 12 (left: 12 12)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n10 + 2 = 12 (left: 12 12)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n10 * 2 = 20 (left: 20 12)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n10 / 2 = 5 (left: 5 12)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n12 - 2 = 10 (left: 10 12)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n12 + 2 = 14 (left: 12 14)\n",
                    "12 / 6 = 2 (left: 10 2 12)\nInput: 4 6 2 8\n",
                    "12 / 6 = 2 (left: 10 2 12)\nPossible next steps:\n",
                    "12 / 6 = 2 (left: 10 2 12)\n4 + 6 = 10 (left: 10 2 8)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n4 * 6 = 24 (left: 24 2 8)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n6 / 2 = 3 (left: 4 3 8)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n8 / 2 = 4 (left: 4 6 4)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n6 + 2 = 8 (left: 4 8 8)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n6 * 2 = 12 (left: 4 12 8)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n8 - 2 = 6 (left: 4 6 8)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n8 / 4 = 2 (left: 4 2 8)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n8 * 2 = 16 (left: 4 16 8)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n6 - 2 = 4 (left: 4 4 8)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n8 + 2 = 10 (left: 4 6 10)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n8 * 2 = 16 (left: 4 16 10)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n8 / 2 = 4 (left: 4 8 10)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n6 * 2 = 12 (left: 4 12 10)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 * 2 = 20 (left: 2 20)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n12 - 2 = 10 (left: 2 10)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n12 / 2 = 6 (left: 6 12)\n",
                    "6 + 10 = 16 (left: 12 16 12)\n12 + 16 = 28 (left: 12 28)\n",
                    "6 + 10 = 16 (left: 12 16 12)\n12 * 16 = 192 (left: 192 12)\n",
                    "6 + 10 = 16 (left: 12 16 12)\n16 - 12 = 4 (left: 12 4)\n",
                    "6 + 10 = 16 (left: 12 16 12)\n16 / 12 = 1 (left: 1 12)\n",
                    "6 + 10 = 16 (left: 12 16 12)\n12 - 16 = -4 (left: 12 -4)\n",
                    "12 + 6 = 18 (left: 10 12 18)\n10 + 12 = 22 (left: 18 22)\n",
                    "12 + 6 = 18 (left: 10 12 18)\n10 * 12 = 120 (left: 18 120)\n",
                    "12 + 6 = 18 (left: 10 12 18)\n12 - 10 = 2 (left: 2 18)\n",
                    "12 + 6 = 18 (left: 10 12 18)\n18 - 10 = 8 (left: 8 18)\n",
                    "12 + 6 = 18 (left: 10 12 18)\n18 / 10 = 1 (left: 1 18)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n12 + 12 = 24 (left: 24 60)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n12 * 12 = 144 (left: 60 144)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n12 / 12 = 1 (left: 1 12 60)\n",
                    "6 * 10 = 60 (left: 12 12 60)\n60 - 12 = 48 (left: 12 48 60)\n",
                    "10 - 6 = 4 (left: 4 10 12)\n4 + 10 = 14 (left: 12 14)\n",
                    "10 - 6 = 4 (left: 4 10 12)\n4 * 10 = 40 (left: 12 40)\n",
                    "10 - 6 = 4 (left: 4 10 12)\n10 - 4 = 6 (left: 6 12)\n",
                    "10 - 6 = 4 (left: 4 10 12)\n12 + 4 = 16 (left: 10 16)\n",
                    "10 - 6 = 4 (left: 4 10 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "10 - 6 = 4 (left: 4 10 12)\n10 + 4 = 14 (left: 12 14)\n"
                ],
                "values": [
                    50,
                    100,
                    50,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    100,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 * 1 = 12 (left: 12 12)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n10 + 2 = 12 (left: 12 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 + 1 = 13 (left: 13 12)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 - 1 = 11 (left: 11 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 10 12 12",
                "ys": [
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 * 1 = 12 (left: 12 12)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n10 + 2 = 12 (left: 12 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 + 1 = 13 (left: 13 12)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 - 1 = 11 (left: 11 12)\n"
                ],
                "new_ys": [
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1 12)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0 12)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 * 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 * 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1 12)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 * 1 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0 12)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n10 + 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n10 + 2 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n10 + 2 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 * 12 = 144 (left: 12 144)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1 12)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n4 + 2 = 6 (left: 6)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n2 * 2 = 4 (left: 4)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 + 1 = 13 (left: 13 12)\n13 - 12 = 1 (left: 1 12)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 + 1 = 13 (left: 13 12)\n13 / 12 = 1 (left: 1 13)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 + 1 = 13 (left: 13 12)\n13 + 12 = 25 (left: 12 25)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 + 1 = 13 (left: 13 12)\n13 * 12 = 156 (left: 12 156)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 - 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 - 1 = 11 (left: 11 12)\n11 - 12 = -1 (left: -1)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 - 1 = 11 (left: 11 12)\n11 * 12 = 132 (left: 132)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 - 1 = 11 (left: 11 12)\n11 / 12 = 0.92 (left: 0.92)\n"
                ],
                "values": [
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n10 + 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 - 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 10 12 12",
                "ys": [
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 / 6 = 2 (left: 10 2 12)\n10 + 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 - 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n"
                ],
                "new_ys": [
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: 12 + 12 = 24\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: 12 + (12 + 12) = 24\n",
                    "12 / 6 = 2 (left: 10 2 12)\n10 + 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (10 + 2) + (12 + 12) = 24\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 + (12 - 10)) + 12 = 24\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 3 3 3 3\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\nPossible next steps:\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 - 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n23 + 1 = 24 (left: 1)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 - 1 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n23 - 1 = 22 (left: 1)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\nInput: 144\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\nPossible next steps:\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 2 = 72 (left: 72)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 3 = 48 (left: 48)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 4 = 36 (left: 36)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 6 = 24 (left: 24)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 8 = 18 (left: 18)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 9 = 16 (left: 16)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 12 = 12 (left: 12)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 16 = 9 (left: 9)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 18 = 8 (left: 8)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 24 = 6 (left: 6)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 36 = 4 (left: 4)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 48 = 3 (left: 3)\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 72 = 2 (left: 2)\n"
                ],
                "values": [
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: 12 + 12 = 24\n",
                    "10 / 6 = 1 (left: 12 1 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: 12 + (12 + 12) = 24\n",
                    "12 / 6 = 2 (left: 10 2 12)\n10 + 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (10 + 2) + (12 + 12) = 24\n",
                    "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 + (12 - 10)) + 12 = 24\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 3 3 3 3\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\nPossible next steps:\n",
                    "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 + 3 = 6 (left: 3 3 6)\n"
                ]
            }
        ],
        "idx": 893,
        "ys": [
            "10 / 6 = 1 (left: 12 1 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: 12 + 12 = 24\n",
            "10 / 6 = 1 (left: 12 1 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: 12 + (12 + 12) = 24\n",
            "12 / 6 = 2 (left: 10 2 12)\n10 + 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (10 + 2) + (12 + 12) = 24\n",
            "12 - 10 = 2 (left: 2 10 12)\n2 + 10 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 + (12 - 10)) + 12 = 24\n",
            "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\nInput: 3 3 3 3\n",
            "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\nPossible next steps:\n",
            "12 - 10 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n3 + 3 = 6 (left: 3 3 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 105051,
            "prompt_tokens": 313062,
            "cost": 0.679695
        },
        "time_spent": 34.813050985336304
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 5 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n",
                    "5 + 5 = 10 (left: 10 10 9)\n",
                    "5 * 5 = 25 (left: 9 25 5)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n",
                    "5 + 5 = 10 (left: 10 10 9)\n",
                    "5 * 5 = 25 (left: 9 25 5)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 5 5 9",
                "ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n",
                    "5 + 5 = 10 (left: 10 10 9)\n",
                    "5 * 5 = 25 (left: 9 25 5)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n"
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 / 5 = 2 (left: 2 9)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 * 10 = 50 (left: 9 50)\n",
                    "5 + 5 = 10 (left: 5 10 9)\nInput: 1 3 4 6\n",
                    "5 + 5 = 10 (left: 5 10 9)\nPossible next steps:\n",
                    "5 + 5 = 10 (left: 5 10 9)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n3 + 4 = 7 (left: 1 7 6)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n1 * 3 = 3 (left: 3 4 6)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n6 - 1 = 5 (left: 3 4 5)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n4 + 1 = 5 (left: 5 4 6)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n4 / 1 = 4 (left: 4 4 6)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n6 - 4 = 2 (left: 1 2 4)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n6 / 3 = 2 (left: 1 2 4)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n10 - 9 = 1 (left: 1 5)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 * 5 = 45 (left: 10 45)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 / 5 = 1 (left: 1 9)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n10 + 5 = 15 (left: 9 15)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n10 / 5 = 2 (left: 2 9)\n",
                    "5 + 5 = 10 (left: 9 10 5)\nInput: 4 4 6 7\n",
                    "5 + 5 = 10 (left: 9 10 5)\nPossible next steps:\n",
                    "5 + 5 = 10 (left: 9 10 5)\n4 + 4 = 8 (left: 6 7 8)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n6 + 4 = 10 (left: 7 8 10)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n7 * 4 = 28 (left: 6 28)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n7 - 4 = 3 (left: 3 6 7)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n4 * 6 = 24 (left: 7 24)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n7 - 6 = 1 (left: 1 4 24)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n5 * 25 = 125 (left: 9 125)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n25 / 5 = 5 (left: 5 9)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n25 - 5 = 20 (left: 9 20)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n25 + 5 = 30 (left: 9 30)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n9 * 5 = 45 (left: 25 45)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n25 - 9 = 16 (left: 5 16)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n25 / 9 = 2.78 (left: 2.78 9)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n25 + 9 = 34 (left: 34)\n",
                    "5 + 5 = 10 (left: 10 10 9)\n10 + 10 = 20 (left: 9 20)\n",
                    "5 + 5 = 10 (left: 10 10 9)\n10 / 10 = 1 (left: 1 9)\n",
                    "5 + 5 = 10 (left: 10 10 9)\n10 - 9 = 1 (left: 1 10)\n",
                    "5 + 5 = 10 (left: 10 10 9)\n9 + 10 = 19 (left: 10 19)\n",
                    "5 * 5 = 25 (left: 9 25 5)\n9 + 25 = 34 (left: 5 34)\n",
                    "5 * 5 = 25 (left: 9 25 5)\n25 - 9 = 16 (left: 16 5)\n",
                    "5 * 5 = 25 (left: 9 25 5)\n9 * 25 = 225 (left: 5 225)\n",
                    "5 * 5 = 25 (left: 9 25 5)\n25 / 9 = 2.78 (left: 2.78 5)\n",
                    "5 * 5 = 25 (left: 9 25 5)\nInput: 3 3 6 4\n",
                    "5 * 5 = 25 (left: 9 25 5)\nPossible next steps:\n",
                    "5 * 5 = 25 (left: 9 25 5)\n3 + 3 = 6 (left: 6 6 4)\n",
                    "5 * 5 = 25 (left: 9 25 5)\n3 * 3 = 9 (left: 9 6 4)\n",
                    "5 * 5 = 25 (left: 9 25 5)\n6 + 4 = 10 (left: 3 10 4)\n",
                    "5 * 5 = 25 (left: 9 25 5)\n4 * 3 = 12 (left: 3 6 12)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 * 10 = 50 (left: 9 50)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 / 5 = 2 (left: 2 9)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 + 5 = 15 (left: 9 15)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 / 5 = 2 (left: 2 9)\n",
                    "5 + 5 = 10 (left: 5 10 9)\nInput: 3 3 6 7\n",
                    "5 + 5 = 10 (left: 5 10 9)\nPossible next steps:\n",
                    "5 + 5 = 10 (left: 5 10 9)\n3 + 3 = 6 (left: 6 6 7)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n3 * 3 = 9 (left: 6 7 9)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n7 - 6 = 1 (left: 1 6 9)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n7 + 3 = 10 (left: 6 9 10)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n7 - 3 = 4 (left: 4 6 9)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n7 / 3 = 2 (left: 2 6 9)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n5 * 5 = 25 (left: 25 9)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n25 - 5 = 20 (left: 20 9)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n9 - 5 = 4 (left: 5 4)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n5 + 5 = 10 (left: 10 9)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n25 / 5 = 5 (left: 5 9)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n25 - 9 = 16 (left: 5 16)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n25 + 5 = 30 (left: 5 9 30)\n",
                    "5 * 5 = 25 (left: 5 25 9)\n25 / 9 = 2.78 (left: 5 2.78)\n"
                ],
                "values": [
                    100,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    50,
                    50,
                    100,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n10 + 5 = 15 (left: 9 15)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 + 5 = 15 (left: 9 15)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 / 5 = 2 (left: 2 9)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 * 5 = 45 (left: 10 45)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 5 5 9",
                "ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n10 + 5 = 15 (left: 9 15)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 + 5 = 15 (left: 9 15)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 / 5 = 2 (left: 2 9)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 * 5 = 45 (left: 10 45)\n"
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 * 9 = 135 (left: 135)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 / 5 = 3 (left: 3 19)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n5 * 19 = 95 (left: 95)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\nInput: 1 3 4 6\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\nPossible next steps:\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n3 + 1 = 4 (left: 4 4 6)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n6 - 4 = 2 (left: 1 2 4)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n4 / 1 = 4 (left: 4 4 6)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n1 * 3 = 3 (left: 3 4 6)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n3 * 1 = 3 (left: 3 4 6)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n6 - 3 = 3 (left: 1 3 4)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n6 / 3 = 2 (left: 1 2 4)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n10 + 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n10 + 5 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n10 + 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n10 + 5 = 15 (left: 9 15)\n15 / 9 = 1 (left: 1 15)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 + 5 = 15 (left: 9 15)\n9 + 15 = 24 (left: )\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 + 5 = 15 (left: 9 15)\n15 + 9 = 24 (left: )\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 + 5 = 15 (left: 9 15)\n15 - 9 = 6 (left: )\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 + 5 = 15 (left: 9 15)\n15 / 9 = 1.67 (left: )\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n9 - 5 = 4 (left: 4 9)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n5 * 9 = 45 (left: 45)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n9 / 5 = 1 (left: 1 9)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 / 5 = 2 (left: 2 9)\n2 + 9 = 11 (left: 9 11)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 / 5 = 2 (left: 2 9)\n9 / 2 = 4.5 (left: 2 4.5)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 / 5 = 2 (left: 2 9)\n2 * 9 = 18 (left: 9 18)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 / 5 = 2 (left: 2 9)\n9 - 2 = 7 (left: 2 7)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 * 5 = 45 (left: 10 45)\n10 * 2 = 20 (left: 20 45)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 * 5 = 45 (left: 10 45)\n10 + 2 = 12 (left: 12 45)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 * 5 = 45 (left: 10 45)\n10 - 2 = 8 (left: 8 45)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 * 5 = 45 (left: 10 45)\n10 / 2 = 5 (left: 5 45)\n"
                ],
                "values": [
                    100,
                    100,
                    0,
                    0,
                    100,
                    100,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 * 9 = 135 (left: 135)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 5 5 9",
                "ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 * 9 = 135 (left: 135)\n"
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((5 + 5) + 5) + 9 = 24\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((5 + 5) + 5) + 9 = 24\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\nAnswer: ((5 + 5) + 5) + 9 = 24\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (5 + 5) + (9 + 10) = 24\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n2 + 12 = 14 (left: 2 12)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 - 2 = 12 (left: 2 12)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n2 * 7 = 14 (left: 2 7)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 / 2 = 7 (left: 7)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n2 + 12 = 14 (left: 2 12)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 - 2 = 12 (left: 2 12)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n1 + 14 = 15 (left: 14 15)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n14 - 1 = 13 (left: 13 14)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n14 / 1 = 14 (left: 14 14)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n10 - 5 = 5 (left: 5 9)\n5 + 9 = 14 (left: 14)\n14 * 1 = 14 (left: 14 14)\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 * 9 = 135 (left: 135)\nSorry, the input numbers are not enough to proceed with the 24 puzzle.\n"
                ],
                "values": [
                    1000,
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((5 + 5) + 5) + 9 = 24\n",
                    "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((5 + 5) + 5) + 9 = 24\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\nAnswer: ((5 + 5) + 5) + 9 = 24\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (5 + 5) + (9 + 10) = 24\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n2 + 12 = 14 (left: 2 12)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 - 2 = 12 (left: 2 12)\n",
                    "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n2 * 7 = 14 (left: 2 7)\n"
                ]
            }
        ],
        "idx": 894,
        "ys": [
            "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((5 + 5) + 5) + 9 = 24\n",
            "5 + 5 = 10 (left: 5 10 9)\n5 + 10 = 15 (left: 9 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((5 + 5) + 5) + 9 = 24\n",
            "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\nAnswer: ((5 + 5) + 5) + 9 = 24\n",
            "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 + 5 = 24 (left: 24)\nAnswer: (5 + 5) + (9 + 10) = 24\n",
            "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n2 + 12 = 14 (left: 2 12)\n",
            "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n14 - 2 = 12 (left: 2 12)\n",
            "5 + 5 = 10 (left: 9 10 5)\n9 + 10 = 19 (left: 5 19)\n19 - 5 = 14 (left: 14)\n2 * 7 = 14 (left: 2 7)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 107057,
            "prompt_tokens": 319492,
            "cost": 0.6933520000000001
        },
        "time_spent": 42.33420491218567
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 5 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 6 10 11)\n",
                    "5 + 6 = 11 (left: 5 11 11)\n",
                    "5 * 5 = 25 (left: 6 11 25)\n",
                    "6 - 5 = 1 (left: 1 5 11)\n",
                    "11 - 5 = 6 (left: 5 6 11)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 6 10 11)\n",
                    "5 + 6 = 11 (left: 5 11 11)\n",
                    "5 * 5 = 25 (left: 6 11 25)\n",
                    "6 - 5 = 1 (left: 1 5 11)\n",
                    "11 - 5 = 6 (left: 5 6 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 5 6 11",
                "ys": [
                    "5 + 5 = 10 (left: 6 10 11)\n",
                    "5 + 6 = 11 (left: 5 11 11)\n",
                    "5 * 5 = 25 (left: 6 11 25)\n",
                    "6 - 5 = 1 (left: 1 5 11)\n",
                    "11 - 5 = 6 (left: 5 6 11)\n"
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 * 10 = 60 (left: 11 60)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 * 6 = 60 (left: 11 60)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 / 11 = 0 (left: 0 11)\n",
                    "5 + 6 = 11 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n",
                    "5 + 6 = 11 (left: 5 11 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "5 + 6 = 11 (left: 5 11 11)\n11 / 5 = 2.2 (left: 2.2 11)\n",
                    "5 + 6 = 11 (left: 5 11 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "5 + 6 = 11 (left: 5 11 11)\n11 / 5 = 2.2 (left: 2.2 11)\n",
                    "5 * 5 = 25 (left: 6 11 25)\n6 + 11 = 17 (left: 17 25)\n",
                    "5 * 5 = 25 (left: 6 11 25)\n11 * 6 = 66 (left: 66 25)\n",
                    "5 * 5 = 25 (left: 6 11 25)\n11 - 6 = 5 (left: 5 11 25)\n",
                    "5 * 5 = 25 (left: 6 11 25)\n25 - 11 = 14 (left: 6 14 25)\n",
                    "6 - 5 = 1 (left: 1 5 11)\n1 + 5 = 6 (left: 6 11)\n",
                    "6 - 5 = 1 (left: 1 5 11)\n5 * 1 = 5 (left: 5 11)\n",
                    "6 - 5 = 1 (left: 1 5 11)\n11 - 1 = 10 (left: 10 5)\n",
                    "6 - 5 = 1 (left: 1 5 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "11 - 5 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 6 11)\n",
                    "11 - 5 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n",
                    "11 - 5 = 6 (left: 5 6 11)\n11 - 5 = 6 (left: 5 6)\n",
                    "11 - 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n",
                    "11 - 5 = 6 (left: 5 6 11)\n5 * 6 = 30 (left: 30 11)\n",
                    "11 - 5 = 6 (left: 5 6 11)\n6 / 5 = 1 (left: 1 11)\n",
                    "11 - 5 = 6 (left: 5 6 11)\n11 - 6 = 5 (left: 5 6)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 / 11 = 0 (left: 0 11)\n",
                    "5 + 6 = 11 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 5 6 11",
                "ys": [
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 / 11 = 0 (left: 0 11)\n",
                    "5 + 6 = 11 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n"
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n16 - 11 = 5 (left: 5 16)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n16 / 11 = 1.45 (left: 1.45 16)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n11 - 16 = -5 (left: -5 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n11 * 16 = 176 (left: 176)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n11 - 16 = -5 (left: -5)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n11 * 16 = 176 (left: 176)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n11 / 16 = 0.6875 (left: 0.6875)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n11 - 4 = 7 (left: 7)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n11 / 4 = 2.75 (left: 2.75)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n11 * 4 = 44 (left: 44)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n11 - 5 = 6 (left: 6 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n11 / 5 = 2.2 (left: 2.2 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n11 * 5 = 55 (left: 55)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\nInput: 1 3 4 6\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\nPossible next steps:\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n1 + 3 = 4 (left: 4 4 6)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n3 + 1 = 4 (left: 4 4 6)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n6 - 4 = 2 (left: 1 2 4)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n4 / 1 = 4 (left: 4 4 6)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n6 - 3 = 3 (left: 1 3 6)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n6 / 3 = 2 (left: 1 2 6)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n6 - 1 = 5 (left: 3 4 5)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n6 - 4 = 2 (left: 1 2 6)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 / 11 = 0 (left: 0 11)\n0 + 11 = 11 (left: 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 / 11 = 0 (left: 0 11)\n11 - 0 = 11 (left: 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 / 11 = 0 (left: 0 11)\n11 / 0 = undefined (left: 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n6 / 11 = 0 (left: 0 11)\n11 * 0 = 0 (left: 11)\n",
                    "5 + 6 = 11 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n",
                    "5 + 6 = 11 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n16 - 11 = 5 (left: 5 16)\n",
                    "5 + 6 = 11 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n11 * 16 = 176 (left: 176)\n",
                    "5 + 6 = 11 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n16 / 11 = 1.45 (left: 1.45 16)\n",
                    "5 + 6 = 11 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n11 - 16 = -5 (left: -5 11)\n",
                    "5 + 6 = 11 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n16 + 11 = 27 (left: 27)\n",
                    "5 + 6 = 11 (left: 5 11 11)\n5 + 11 = 16 (left: 11 16)\n\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 5 6 11",
                "ys": [
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n"
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\nNo possible next steps.\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n27 + 1 = 28 (left: 1 28)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n27 - 1 = 26 (left: 1 26)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n27 * 1 = 27 (left: 1 27)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n27 / 1 = 27 (left: 1 27)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\nThere are no possible next steps.\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\nInput: 16\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\nPossible next steps:\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 + 16 = 32 (left: 32)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 / 16 = 1 (left: 1)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\n16 - 16 = 0 (left: 0)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\nInput: 3 3 3 3\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\nPossible next steps:\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\nInput: 5 5 5 5\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\nPossible next steps:\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n5 + 5 = 10 (left: 5 5 10)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n5 * 5 = 25 (left: 5 5 25)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n5 / 5 = 1 (left: 1 5 5)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n5 - 5 = 0 (left: 0 5 5)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\nThere are no possible next steps.\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\nInput: 11\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\nPossible next steps:\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 / 6 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\nNo possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\nNo possible next steps.\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n27 + 1 = 28 (left: 1 28)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n27 - 1 = 26 (left: 1 26)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n27 * 1 = 27 (left: 1 27)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n27 / 1 = 27 (left: 1 27)\n",
                    "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\nThere are no possible next steps.\n",
                    "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\nInput: 16\n"
                ]
            }
        ],
        "idx": 895,
        "ys": [
            "5 + 5 = 10 (left: 6 10 11)\n6 + 10 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\nNo possible next steps.\n",
            "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n27 + 1 = 28 (left: 1 28)\n",
            "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n27 - 1 = 26 (left: 1 26)\n",
            "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n27 * 1 = 27 (left: 1 27)\n",
            "5 + 5 = 10 (left: 6 10 11)\n10 + 6 = 16 (left: 11 16)\n11 + 16 = 27 (left: 27)\n27 / 1 = 27 (left: 1 27)\n",
            "5 + 5 = 10 (left: 6 10 11)\n10 - 6 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)\nThere are no possible next steps.\n",
            "5 + 5 = 10 (left: 6 10 11)\n11 - 6 = 5 (left: 5 11)\n5 + 11 = 16 (left: 16)\nInput: 16\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 108472,
            "prompt_tokens": 324072,
            "cost": 0.703052
        },
        "time_spent": 31.679269075393677
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 8 9 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 / 8 = 0.75 (left: 0.75 9 9)\n",
                    "6 - 8 = -2 (left: -2 9 9)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n",
                    "9 - 6 = 3 (left: 3 9 9)\n",
                    "9 / 6 = 1.5 (left: 1.5 9 9)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n"
                ],
                "values": [
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "6 - 8 = -2 (left: -2 9 9)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n",
                    "9 - 6 = 3 (left: 3 9 9)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n",
                    "6 / 8 = 0.75 (left: 0.75 9 9)\n",
                    "9 / 6 = 1.5 (left: 1.5 9 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 8 9 9",
                "ys": [
                    "6 - 8 = -2 (left: -2 9 9)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n",
                    "9 - 6 = 3 (left: 3 9 9)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n",
                    "6 / 8 = 0.75 (left: 0.75 9 9)\n",
                    "9 / 6 = 1.5 (left: 1.5 9 9)\n"
                ],
                "new_ys": [
                    "6 - 8 = -2 (left: -2 9 9)\n-2 * 9 = -18 (left: -18 9)\n",
                    "6 - 8 = -2 (left: -2 9 9)\n-2 + 9 = 7 (left: 7 9)\n",
                    "6 - 8 = -2 (left: -2 9 9)\n9 - (-2) = 11 (left: 9 11)\n",
                    "6 - 8 = -2 (left: -2 9 9)\n-2 - 9 = -11 (left: -11 9)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 / 9 = 1 (left: 1 9 48)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 + 9 = 18 (left: 18 9 48)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n9 * 9 = 81 (left: 81 9 48)\n",
                    "6 * 8 = 48 (left: 9 9 48)\n48 - 9 = 39 (left: 9 39 48)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 / 2 = 4 (left: 4 9)\n",
                    "9 - 6 = 3 (left: 3 9 9)\n3 + 9 = 12 (left: 9 9 12)\n",
                    "9 - 6 = 3 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9 9)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 - 1 = 8 (left: 8 9)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 / 1 = 9 (left: 9 9)\n",
                    "6 / 8 = 0.75 (left: 0.75 9 9)\n0.75 * 9 = 6.75 (left: 6.75 9)\n",
                    "6 / 8 = 0.75 (left: 0.75 9 9)\n9 - 0.75 = 8.25 (left: 8.25 9)\n",
                    "6 / 8 = 0.75 (left: 0.75 9 9)\n9 / 0.75 = 12 (left: 9 12)\n",
                    "6 / 8 = 0.75 (left: 0.75 9 9)\n9 + 0.75 = 9.75 (left: 9.75 9)\n",
                    "9 / 6 = 1.5 (left: 1.5 9 9)\n1.5 + 9 = 10.5 (left: 9 10.5)\n",
                    "9 / 6 = 1.5 (left: 1.5 9 9)\n9 / 1.5 = 6 (left: 6 9)\n",
                    "9 / 6 = 1.5 (left: 1.5 9 9)\n9 - 1.5 = 7.5 (left: 7.5 9)\n",
                    "9 / 6 = 1.5 (left: 1.5 9 9)\n1.5 * 9 = 13.5 (left: 9 13.5)\n",
                    "9 / 6 = 1.5 (left: 1.5 9 9)\n9 - 1.5 = 7.5 (left: 7.5 9)\n",
                    "9 / 6 = 1.5 (left: 1.5 9 9)\n9 / 1.5 = 6 (left: 6 9)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 / 2 = 4 (left: 4 9)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 - 1 = 8 (left: 8 9)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 / 1 = 9 (left: 9 9)\n",
                    "6 - 8 = -2 (left: -2 9 9)\n-2 * 9 = -18 (left: -18 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 8 9 9",
                "ys": [
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 / 2 = 4 (left: 4 9)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 - 1 = 8 (left: 8 9)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 / 1 = 9 (left: 9 9)\n",
                    "6 - 8 = -2 (left: -2 9 9)\n-2 * 9 = -18 (left: -18 9)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n11 / 9 = 1 (left: 1 11)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 * 11 = 99 (left: 99)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\nInput: 3 3 3 3\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\nPossible next steps:\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 * 3 = 9 (left: 9 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 - 9 = -2 (left: -2)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 / 9 = 0.7777777777777778 (left: 0.7777777777777778)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 / 2 = 4 (left: 4 9)\n4 + 9 = 13 (left: 9 13)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 / 2 = 4 (left: 4 9)\n9 - 4 = 5 (left: 5 9)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n9 - 10 = -1 (left: -1)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n9 * 10 = 90 (left: 90)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n9 / 10 = 0.9 (left: 0.9)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\nInput: 3 3 8 8\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\nPossible next steps:\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n3 + 3 = 6 (left: 6 8 8)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n3 / 3 = 1 (left: 1 8 8)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n8 / 3 = 2.67 (left: 2.67 8 8)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n3 * 3 = 9 (left: 8 9 8)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n8 + 3 = 11 (left: 3 8 11)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n8 / 3 = 2.67 (left: 3 8 2.67)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n8 - 3 = 5 (left: 3 5 8)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 - 1 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 - 1 = 8 (left: 8 9)\n8 - 9 = -1 (left: -1)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 - 1 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 - 1 = 8 (left: 8 9)\n8 / 9 = 0 (left: 0)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 / 1 = 9 (left: 9 9)\n9 + 9 = 18 (left: 18)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 / 1 = 9 (left: 9 9)\n9 / 9 = 1 (left: 1)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 / 1 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 / 1 = 9 (left: 9 9)\n9 - 9 = 0 (left: 0)\n",
                    "6 - 8 = -2 (left: -2 9 9)\n-2 * 9 = -18 (left: -18 9)\nInput: 4 6 6 9\n",
                    "6 - 8 = -2 (left: -2 9 9)\n-2 * 9 = -18 (left: -18 9)\nPossible next steps:\n",
                    "6 - 8 = -2 (left: -2 9 9)\n-2 * 9 = -18 (left: -18 9)\n4 * 6 = 24 (left: 6 6 24)\n",
                    "6 - 8 = -2 (left: -2 9 9)\n-2 * 9 = -18 (left: -18 9)\n6 / 4 = 1.5 (left: 1.5 6 9)\n",
                    "6 - 8 = -2 (left: -2 9 9)\n-2 * 9 = -18 (left: -18 9)\n9 - 6 = 3 (left: 3 6 6)\n",
                    "6 - 8 = -2 (left: -2 9 9)\n-2 * 9 = -18 (left: -18 9)\n6 + 4 = 10 (left: 6 9 10)\n",
                    "6 - 8 = -2 (left: -2 9 9)\n-2 * 9 = -18 (left: -18 9)\n6 * 4 = 24 (left: 6 9 24)\n",
                    "6 - 8 = -2 (left: -2 9 9)\n-2 * 9 = -18 (left: -18 9)\n9 - 4 = 5 (left: 5 6 9)\n",
                    "6 - 8 = -2 (left: -2 9 9)\n-2 * 9 = -18 (left: -18 9)\n9 - 6 = 3 (left: 3 6 9)\n",
                    "6 - 8 = -2 (left: -2 9 9)\n-2 * 9 = -18 (left: -18 9)\n6 / 4 = 1.5 (left: 1.5 6 9)\n"
                ],
                "values": [
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    100,
                    50,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 - 1 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 8 9 9",
                "ys": [
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 - 1 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\nInput: 3 3 3 3\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\nPossible next steps:\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 / 3 = 1 (left: 1 3 3 3)\n1 + 3 = 4 (left: 3 3 4)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 / 3 = 1 (left: 1 3 3 3)\n3 / 1 = 3 (left: 3 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 / 3 = 1 (left: 1 3 3 3)\n3 * 1 = 3 (left: 3 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 / 3 = 1 (left: 1 3 3 3)\n3 - 1 = 2 (left: 2 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 - 3 = 0 (left: 0 3 3 3)\n3 * 3 = 9 (left: 0 3 9)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 - 3 = 0 (left: 0 3 3 3)\n3 + 3 = 6 (left: 0 6 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 - 3 = 0 (left: 0 3 3 3)\n3 + 3 = 6 (left: 0 6 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 - 3 = 0 (left: 0 3 3 3)\n3 + 3 = 6 (left: 0 6 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 - 3 = 0 (left: 0 3 3 3)\n3 / 3 = 1 (left: 0 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 - 3 = 0 (left: 0 3 3 3)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\nInput: 16\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\nPossible next steps:\n",
                    "8 - 6 = 2 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 + 9 = 16 (left: 16)\n16 + 16 = 32 (left: 16 32)\n",
                    "9 - 8 = 1 (left: 1 9 9)\n1 + 9 = 10 (left: 9 10)\n9 + 10 = 19 (left: 19)\nThere are no possible next steps.\n",
                    "9 - 8 = 1 (left: 1 9 9)\n9 - 1 = 8 (left: 8 9)\n8 + 9 = 17 (left: 17)\nThere are no possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\nInput: 3 3 3 3\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\nPossible next steps:\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n3 * 3 = 9 (left: 3 3 9)\n"
                ]
            }
        ],
        "idx": 896,
        "ys": [
            "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
            "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 3 = 9 (left: 3 3 9)\n",
            "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
            "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\nInput: 3 3 3 3\n",
            "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\nPossible next steps:\n",
            "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n3 + 3 = 6 (left: 3 3 6)\n",
            "8 - 6 = 2 (left: 2 9 9)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n3 * 3 = 9 (left: 3 3 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 110097,
            "prompt_tokens": 329136,
            "cost": 0.713898
        },
        "time_spent": 33.45303201675415
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 6 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 6 13)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n",
                    "6 + 3 = 9 (left: 3 9 13)\n",
                    "3 / 3 = 1 (left: 1 3 13)\n",
                    "13 + 3 = 16 (left: 3 6 16)\n",
                    "3 - 3 = 0 (left: 0 3 13)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n",
                    "13 / 3 = 4 (left: 3 4 13)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    100,
                    50
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n",
                    "6 + 3 = 9 (left: 3 9 13)\n",
                    "3 / 3 = 1 (left: 1 3 13)\n",
                    "13 + 3 = 16 (left: 3 6 16)\n",
                    "3 - 3 = 0 (left: 0 3 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 6 13",
                "ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n",
                    "6 + 3 = 9 (left: 3 9 13)\n",
                    "3 / 3 = 1 (left: 1 3 13)\n",
                    "13 + 3 = 16 (left: 3 6 16)\n",
                    "3 - 3 = 0 (left: 0 3 13)\n"
                ],
                "new_ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 7 10)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 / 6 = 1 (left: 1 13)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 - 6 = 0 (left: 0 13)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n13 + 6 = 19 (left: 6 19)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n13 / 6 = 2 (left: 6 2)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n13 * 6 = 78 (left: 6 78)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n6 + 9 = 15 (left: 13 15)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n9 * 6 = 54 (left: 13 54)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n9 - 6 = 3 (left: 3 9 13)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 6 = 7 (left: 7 9)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 - 9 = 4 (left: 4 13)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n13 / 6 = 2.17 (left: 2.17 13)\n",
                    "3 * 3 = 9 (left: 6 9 13)\n6 / 9 = 0.67 (left: 0.67 9 13)\n",
                    "6 + 3 = 9 (left: 3 9 13)\n3 + 9 = 12 (left: 12 13)\n",
                    "6 + 3 = 9 (left: 3 9 13)\n3 * 9 = 27 (left: 27 13)\n",
                    "6 + 3 = 9 (left: 3 9 13)\n9 / 3 = 3 (left: 3 13)\n",
                    "6 + 3 = 9 (left: 3 9 13)\n13 - 3 = 10 (left: 10 13)\n",
                    "3 / 3 = 1 (left: 1 3 13)\n1 * 3 = 3 (left: 3 13)\n",
                    "3 / 3 = 1 (left: 1 3 13)\n3 + 1 = 4 (left: 4 13)\n",
                    "3 / 3 = 1 (left: 1 3 13)\n13 - 1 = 12 (left: 3 12)\n",
                    "13 + 3 = 16 (left: 3 6 16)\n3 + 6 = 9 (left: 9 16)\n",
                    "13 + 3 = 16 (left: 3 6 16)\n6 * 3 = 18 (left: 18 16)\n",
                    "13 + 3 = 16 (left: 3 6 16)\n6 / 3 = 2 (left: 2 16)\n",
                    "13 + 3 = 16 (left: 3 6 16)\n16 - 3 = 13 (left: 3 13)\n",
                    "13 + 3 = 16 (left: 3 6 16)\n16 / 3 = 5 (left: 5 16)\n",
                    "3 - 3 = 0 (left: 0 3 13)\n0 + 3 = 3 (left: 3 13)\n",
                    "3 - 3 = 0 (left: 0 3 13)\n3 * 13 = 39 (left: 0 39)\n",
                    "3 - 3 = 0 (left: 0 3 13)\n3 / 13 = 0.23 (left: 0 3 13)\n",
                    "3 - 3 = 0 (left: 0 3 13)\n3 - 0 = 3 (left: 3 13)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 7 10)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 / 6 = 1 (left: 1 13)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 - 6 = 0 (left: 0 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 6 13",
                "ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 7 10)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 / 6 = 1 (left: 1 13)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 - 6 = 0 (left: 0 13)\n"
                ],
                "new_ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n10 / 2 = 5 (left: 5)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\nInput: 3 3 3 3\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\nPossible next steps:\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 - 3 = 0 (left: 0 3 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 * 3 = 9 (left: 3 3 3 9)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 7 10)\n7 + 10 = 17 (left: 17)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n10 - 3 = 7 (left: 7 10)\n10 - 7 = 3 (left: 3 10)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n12 + 13 = 25 (left: 25)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n13 - 12 = 1 (left: 1 13)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n12 * 13 = 156 (left: 156)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n12 / 13 = 0.9230769230769231 (left: 0.9230769230769231 13)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 / 6 = 1 (left: 1 13)\n1 + 13 = 14 (left: 14)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 / 6 = 1 (left: 1 13)\n13 - 1 = 12 (left: 12)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 / 6 = 1 (left: 1 13)\n1 * 13 = 13 (left: 13)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 / 6 = 1 (left: 1 13)\n13 / 1 = 13 (left: 13)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n13 + 36 = 49 (left: 49)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n36 - 13 = 23 (left: 23)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n13 * 36 = 468 (left: 468)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n36 / 13 = 2 (left: 2 13)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\nInput: 5 5 1 3\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\nPossible next steps:\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n5 + 5 = 10 (left: 10 1 3)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n5 / 5 = 1 (left: 1 1 3)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n5 * 5 = 25 (left: 25 1 3)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n5 - 1 = 4 (left: 4 5 3)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n5 + 1 = 6 (left: 6 5 3)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n5 - 3 = 2 (left: 2 5 3)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n5 / 3 = 1.67 (left: 1.67 5 3)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n5 * 3 = 15 (left: 15 1 3)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n1 + 3 = 4 (left: 5 4 3)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n1 * 3 = 3 (left: 5 3 3)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 - 6 = 0 (left: 0 13)\n0 + 13 = 13 (left: 13)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 - 6 = 0 (left: 0 13)\n0 - 13 = -13 (left: -13)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 - 6 = 0 (left: 0 13)\n0 * 13 = 0 (left: 13)\n",
                    "3 + 3 = 6 (left: 6 6 13)\n6 - 6 = 0 (left: 0 13)\n0 / 13 = 0 (left: 13)\n"
                ],
                "values": [
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    100,
                    50,
                    50,
                    50,
                    100,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 - 3 = 0 (left: 0 3 3 3)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 6 13",
                "ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 6 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 3 3 6)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 * 3 = 9 (left: 3 3 9 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 / 3 = 1 (left: 1 3 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 - 3 = 0 (left: 0 3 3 3)\n"
                ],
                "new_ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 3 3 6)\n3 + 3 = 6 (left: 3 6 6)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 3 3 6)\n3 * 3 = 9 (left: 3 6 9)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 3 3 6)\n3 / 3 = 1 (left: 1 3 6)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 3 3 6)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nInput: 19\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nPossible next steps:\n",
                    "13 - 3 = 10 (left: 3 6 10)\n3 + 6 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)\nNo possible next steps.\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\nInput: 3 4 6 7\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\nPossible next steps:\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n3 + 4 = 7 (left: 6 7 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n3 * 4 = 12 (left: 6 7 12)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n4 + 6 = 10 (left: 3 7 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n6 - 3 = 3 (left: 3 4 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n6 / 3 = 2 (left: 2 4 7)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n7 + 3 = 10 (left: 4 6 10)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n7 - 3 = 4 (left: 4 4 6)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n7 / 3 = 2 (left: 2 4 6)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n7 * 3 = 21 (left: 4 6 21)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 * 3 = 9 (left: 3 3 9 3)\n3 + 3 = 6 (left: 3 6 9)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 * 3 = 9 (left: 3 3 9 3)\n3 * 3 = 9 (left: 3 9 9)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 * 3 = 9 (left: 3 3 9 3)\n9 - 3 = 6 (left: 3 3 6)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 / 3 = 1 (left: 1 3 3 3)\n1 + 3 = 4 (left: 3 3 4)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 / 3 = 1 (left: 1 3 3 3)\n3 / 1 = 3 (left: 3 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 / 3 = 1 (left: 1 3 3 3)\n3 * 1 = 3 (left: 3 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 / 3 = 1 (left: 1 3 3 3)\n3 - 1 = 2 (left: 2 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 / 3 = 1 (left: 1 3 3 3)\n3 - 1 = 2 (left: 2 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 / 3 = 1 (left: 1 3 3 3)\n3 - 1 = 2 (left: 2 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 / 3 = 1 (left: 1 3 3 3)\n3 + 1 = 4 (left: 3 3 4)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 / 3 = 1 (left: 1 3 3 3)\n3 / 1 = 3 (left: 3 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 - 3 = 0 (left: 0 3 3 3)\n0 + 3 = 3 (left: 3 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 - 3 = 0 (left: 0 3 3 3)\n3 + 0 = 3 (left: 3 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 - 3 = 0 (left: 0 3 3 3)\n3 * 0 = 0 (left: 3 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 - 3 = 0 (left: 0 3 3 3)\n3 / 3 = 1 (left: 0 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 - 3 = 0 (left: 0 3 3 3)\n3 - 0 = 3 (left: 3 3 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 3 3 6)\n3 + 3 = 6 (left: 3 6 6)\n",
                    "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 3 3 6)\n3 * 3 = 9 (left: 3 6 9)\n"
                ]
            }
        ],
        "idx": 897,
        "ys": [
            "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 + 6 = 9 (left: 3 3 9)\n",
            "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 / 3 = 1 (left: 1 3 3)\n",
            "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 6 3 3)\n3 * 6 = 18 (left: 3 3 18)\n",
            "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 / 3 = 2 (left: 2 3 3)\n",
            "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 6 3 3)\n6 - 3 = 3 (left: 3 3 3)\n",
            "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 3 3 6)\n3 + 3 = 6 (left: 3 6 6)\n",
            "13 - 3 = 10 (left: 3 6 10)\n6 / 3 = 2 (left: 2 10)\n3 + 3 = 6 (left: 3 3 3 6)\n3 * 3 = 9 (left: 3 6 9)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 111994,
            "prompt_tokens": 334208,
            "cost": 0.7253000000000001
        },
        "time_spent": 39.187395095825195
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 8 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n"
                ],
                "values": [
                    50,
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 8 9 11",
                "ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n"
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 * 9 = 99 (left: 14 99)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 - 9 = 2 (left: 2 11 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 / 9 = 1 (left: 1 11 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n14 - 9 = 5 (left: 5 11 14)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n9 + 2 = 11 (left: 2 11)\n",
                    "8 - 6 = 2 (left: 2 9 11)\nInput: 5 5 10 20\n",
                    "8 - 6 = 2 (left: 2 9 11)\nPossible next steps:\n",
                    "8 - 6 = 2 (left: 2 9 11)\n5 + 5 = 10 (left: 10 10 20)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n5 * 5 = 25 (left: 10 20 25)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n5 / 5 = 1 (left: 1 5 10 20)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n20 - 10 = 10 (left: 5 10 10)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n8 + 2 = 10 (left: 10 11)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 * 8 = 16 (left: 16 11)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n8 * 2 = 16 (left: 16 11)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n8 - 2 = 6 (left: 6 11)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n11 - 8 = 3 (left: 2 3)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n11 - 2 = 9 (left: 9 11)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n8 + 11 = 19 (left: 19 15)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n11 - 8 = 3 (left: 3 15)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n8 * 11 = 88 (left: 88 15)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n11 / 8 = 1.375 (left: 1.375 15)\n",
                    "9 + 6 = 15 (left: 8 11 15)\nInput: 3 6 8 9\n",
                    "9 + 6 = 15 (left: 8 11 15)\nPossible next steps:\n",
                    "9 + 6 = 15 (left: 8 11 15)\n3 + 6 = 9 (left: 9 8 9)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n6 - 3 = 3 (left: 8 3 9)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n3 * 6 = 18 (left: 18 8 9)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n6 / 3 = 2 (left: 2 8 9)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n9 - 3 = 6 (left: 6 8 9)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n9 / 3 = 3 (left: 3 8 9)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n9 + 3 = 12 (left: 8 12 9)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n3 - 8 = -5 (left: -5 8 9)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n3 * 8 = 24 (left: 24 9)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n8 - 9 = -1 (left: 3 -1 9)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 9)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n9 + 3 = 12 (left: 12 9)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n9 - 8 = 1 (left: 3 1 9)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n9 / 3 = 3 (left: 3 9)\n",
                    "9 + 6 = 15 (left: 8 11 15)\n9 * 3 = 27 (left: 27)\n"
                ],
                "values": [
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    50,
                    0,
                    50,
                    50
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 9 11)\n5 / 5 = 1 (left: 1 5 10 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n9 + 2 = 11 (left: 2 11)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n8 + 2 = 10 (left: 10 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 8 9 11",
                "ys": [
                    "8 - 6 = 2 (left: 2 9 11)\n5 / 5 = 1 (left: 1 5 10 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n9 + 2 = 11 (left: 2 11)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n8 + 2 = 10 (left: 10 11)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 9 11)\n5 / 5 = 1 (left: 1 5 10 20)\n1 + 5 = 6 (left: 6 10 20)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n5 / 5 = 1 (left: 1 5 10 20)\n5 * 10 = 50 (left: 1 50 20)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n5 / 5 = 1 (left: 1 5 10 20)\n10 * 1 = 10 (left: 10 10 20)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n5 / 5 = 1 (left: 1 5 10 20)\n10 + 1 = 11 (left: 11 10 20)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n5 / 5 = 1 (left: 1 5 10 20)\n20 - 10 = 10 (left: 1 10 20)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n5 / 5 = 1 (left: 1 5 10 20)\n20 / 10 = 2 (left: 1 5 2)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n5 / 5 = 1 (left: 1 5 10 20)\n20 - 1 = 19 (left: 5 10 19)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 - 20 = -6 (left: -6)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 * 20 = 280 (left: 280)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 / 20 = 0.7 (left: 0.7)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n20 - 14 = 6 (left: 6 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n20 / 14 = 1 (left: 1 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n14 - 20 = -6 (left: -6 14)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\nInput: 3 4 5 6\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n3 + 4 = 7 (left: 5 6 7)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n4 * 5 = 20 (left: 3 6 20)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n3 * 6 = 18 (left: 4 5 18)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n6 - 5 = 1 (left: 3 4 1)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n3 - 4 = -1 (left: -1 5 6)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n5 - 6 = -1 (left: 3 4 -1)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n3 / 4 = 0 (left: 0 5 6)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n3 * 4 = 12 (left: 5 6 12)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n11 / 9 = 1 (left: 1 11)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n9 - 11 = -2 (left: -2 11)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n9 + 2 = 11 (left: 2 11)\n2 + 11 = 13 (left: 13)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n9 + 2 = 11 (left: 2 11)\n11 - 2 = 9 (left: 9)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n9 + 2 = 11 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n9 + 2 = 11 (left: 2 11)\n11 / 2 = 5.5 (left: 5.5)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n11 - 10 = 1 (left: 1 11)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n11 / 10 = 1.1 (left: 1.1 11)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n10 - 11 = -1 (left: -1 11)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n8 + 2 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n8 + 2 = 10 (left: 10 11)\n11 - 10 = 1 (left: 1 11)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n8 + 2 = 10 (left: 10 11)\n10 * 11 = 110 (left: 110)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n8 + 2 = 10 (left: 10 11)\n11 / 10 = 1.1 (left: 1.1 11)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    50,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n9 + 2 = 11 (left: 2 11)\n2 + 11 = 13 (left: 13)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n9 + 2 = 11 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n8 + 2 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 8 9 11",
                "ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n9 + 2 = 11 (left: 2 11)\n2 + 11 = 13 (left: 13)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n9 + 2 = 11 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n8 + 2 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n"
                ],
                "new_ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nInput: 3 6 4\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n3 + 6 = 9 (left: 4 9)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n6 / 3 = 2 (left: 2 4)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n4 + 6 = 10 (left: 4 10)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n3 * 6 = 18 (left: 4 18)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n6 - 3 = 3 (left: 3 4)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n4 - 3 = 1 (left: 1 4)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n4 / 3 = 1.33 (left: 1.33 4)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nInput: 1 2 3\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n1 + 2 = 3 (left: 3)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n2 / 1 = 2 (left: 2)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n3 + 2 = 5 (left: 5)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n1 * 2 = 2 (left: 2)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n2 - 1 = 1 (left: 1)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n3 - 2 = 1 (left: 1)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n3 / 1 = 3 (left: 3)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n11 + 9 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n34 is the final result.\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\nInput: 3 6 6 9\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\nPossible next steps:\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n3 * 6 = 18 (left: 6 9 18)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n6 / 3 = 2 (left: 2 6 9)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n6 - 3 = 3 (left: 3 6 9)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n9 - 6 = 3 (left: 3 6 9)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n6 + 3 = 9 (left: 3 6 9)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n9 / 3 = 3 (left: 3 6 9)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n6 * 3 = 18 (left: 6 9 18)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n2 + 9 = 11 (left: 9 11)\n9 + 11 = 20 (left: 20)\n9 - 3 = 6 (left: 6 6 9)\n",
                    "8 - 6 = 2 (left: 2 9 11)\n9 + 2 = 11 (left: 2 11)\n2 + 11 = 13 (left: 13)\nInput: 13\n",
                    "8 - 6 = 2 (left: 2 9 11)\n9 + 2 = 11 (left: 2 11)\n2 + 11 = 13 (left: 13)\nPossible next steps:\n",
                    "8 - 6 = 2 (left: 2 9 11)\n9 + 2 = 11 (left: 2 11)\n2 + 11 = 13 (left: 13)\n13 can't be split into two numbers.\n",
                    "8 - 6 = 2 (left: 2 9 11)\n9 + 2 = 11 (left: 2 11)\n2 * 11 = 22 (left: 22)\nNo possible next steps.\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\nInput: 3 3 3 3\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\nPossible next steps:\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n3 + 3 = 6 (left: 3 3 6)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n3 - 3 = 0 (left: 0 3 3)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\nInput: 5 5 10 20\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\nPossible next steps:\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n5 + 5 = 10 (left: 10 10 20)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n5 * 5 = 25 (left: 10 20 25)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n2 + 8 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n5 + 10 = 15 (left: 5 15 20)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n8 + 2 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\nInput: 3 3 3 3\n",
                    "11 - 9 = 2 (left: 2 8 11)\n8 + 2 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\nPossible next steps:\n",
                    "11 - 9 = 2 (left: 2 8 11)\n8 + 2 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n3 * 3 = 9 (left: 3 3 9)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n8 + 2 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n3 + 3 = 6 (left: 3 6 3)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n8 + 2 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n3 / 3 = 1 (left: 1 3 3)\n",
                    "11 - 9 = 2 (left: 2 8 11)\n8 + 2 = 10 (left: 10 11)\n10 + 11 = 21 (left: 21)\n3 - 3 = 0 (left: 0 3 3)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nInput: 3 6 4\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nPossible next steps:\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n3 + 6 = 9 (left: 4 9)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n6 / 3 = 2 (left: 2 4)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n4 + 6 = 10 (left: 4 10)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n3 * 6 = 18 (left: 4 18)\n",
                    "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n6 - 3 = 3 (left: 3 4)\n"
                ]
            }
        ],
        "idx": 898,
        "ys": [
            "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nInput: 3 6 4\n",
            "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\nPossible next steps:\n",
            "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n3 + 6 = 9 (left: 4 9)\n",
            "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n6 / 3 = 2 (left: 2 4)\n",
            "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n4 + 6 = 10 (left: 4 10)\n",
            "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n3 * 6 = 18 (left: 4 18)\n",
            "6 + 8 = 14 (left: 9 11 14)\n9 + 11 = 20 (left: 14 20)\n14 + 20 = 34 (left: 34)\n6 - 3 = 3 (left: 3 4)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 113972,
            "prompt_tokens": 338561,
            "cost": 0.7357855
        },
        "time_spent": 37.75701713562012
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 3 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 * 3 = 3 (left: 3 3 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n"
                ],
                "values": [
                    50,
                    50,
                    50
                ],
                "select_new_ys": [
                    "1 * 3 = 3 (left: 3 3 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 3 11",
                "ys": [
                    "1 * 3 = 3 (left: 3 3 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n"
                ],
                "new_ys": [
                    "1 * 3 = 3 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 / 3 = 3 (left: 3 3)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 * 3 = 12 (left: 12 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 - 3 = 1 (left: 1 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n3 * 4 = 12 (left: 12 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n3 - 4 = -1 (left: -1 11)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n3 + 3 = 6 (left: 6 10)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n3 * 3 = 9 (left: 9 10)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n3 / 3 = 1 (left: 1 10)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n3 + 10 = 13 (left: 3 13)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n3 * 10 = 30 (left: 3 30)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n3 / 10 = 0.3 (left: 0.3 10)\n",
                    "11 - 1 = 10 (left: 3 3 10)\nInput: 5 5 10 20\n",
                    "11 - 1 = 10 (left: 3 3 10)\nPossible next steps:\n",
                    "11 - 1 = 10 (left: 3 3 10)\n5 + 5 = 10 (left: 10 10 20)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n5 * 5 = 25 (left: 10 20 25)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n5 / 5 = 1 (left: 1 10 20)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n5 + 10 = 15 (left: 15 10 20)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n5 * 10 = 50 (left: 20 15 50)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n5 / 10 = 0.5 (left: 0.5 10 20)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n10 + 5 = 15 (left: 15 15 20)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n10 * 5 = 50 (left: 15 20 50)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n10 / 5 = 2 (left: 2 10 20)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n10 + 20 = 30 (left: 5 30 20)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n10 * 20 = 200 (left: 5 200 20)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n10 / 20 = 0.5 (left: 0.5 10 20)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n20 + 5 = 25 (left: 10 25 20)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n20 * 5 = 100 (left: 10 100 20)\n",
                    "11 - 1 = 10 (left: 3 3 10)\n20 / 5 = 4 (left: 4 10 20)\n"
                ],
                "values": [
                    50,
                    50,
                    100,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 * 3 = 12 (left: 12 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 - 3 = 1 (left: 1 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n3 + 4 = 7 (left: 7 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 3 11",
                "ys": [
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 * 3 = 12 (left: 12 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 - 3 = 1 (left: 1 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n3 + 4 = 7 (left: 7 11)\n"
                ],
                "new_ys": [
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 + 3 = 11 (left: 11)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)\n11 - 6 = 5 (left: 5 11)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)\n11 / 6 = 1.83 (left: 1.83 11)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)\n11 * 6 = 66 (left: 66)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)\n11 - 9 = 2 (left: 2)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)\n11 / 9 = 1.2222 (left: 1.2222)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)\n9 - 11 = -2 (left: -2)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n11 - 7 = 4 (left: 4 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n11 / 7 = 1 (left: 1 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n7 - 11 = -4 (left: -4 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 * 3 = 12 (left: 12 11)\n12 + 11 = 23 (left: 23)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 * 3 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 * 3 = 12 (left: 12 11)\n12 * 11 = 132 (left: 132)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 * 3 = 12 (left: 12 11)\n12 / 11 = 1.09 (left: 1.09 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 - 3 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 - 3 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 - 3 = 1 (left: 1 11)\n11 + 1 = 12 (left: 12)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 - 3 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n3 + 4 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n3 + 4 = 7 (left: 7 11)\n11 - 7 = 4 (left: 4 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n3 + 4 = 7 (left: 7 11)\n11 / 7 = 1 (left: 1 11)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n3 + 4 = 7 (left: 7 11)\n7 - 11 = -4 (left: -4 11)\n"
                ],
                "values": [
                    100,
                    100,
                    50,
                    0,
                    100,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    0,
                    0,
                    0,
                    50,
                    50,
                    50,
                    50,
                    50,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 + 3 = 11 (left: 11)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 3 3 11",
                "ys": [
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 + 3 = 11 (left: 11)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n"
                ],
                "new_ys": [
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (11 - 3) = 24\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (1 * 3) * (11 - 3) = 24\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n\n3 + 8 = 11 (left: 8 11)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n\n8 - 3 = 5 (left: 5 8)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n\n3 * 8 = 24 (left: 8 24)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 + 3 = 11 (left: 11)\n11 is the end, no more possible next steps.\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\nInput: 17\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\nPossible next steps:\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\nThere are no possible next steps.\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\nInput: 4 6 8 9\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\nPossible next steps:\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n4 + 6 = 10 (left: 8 9 10)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n4 * 6 = 24 (left: 8 9 24)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n6 + 8 = 14 (left: 4 9 14)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n6 * 8 = 48 (left: 4 9 48)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n8 + 9 = 17 (left: 4 6 17)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n8 * 9 = 72 (left: 4 6 72)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n4 + 8 = 12 (left: 6 9 12)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n4 * 8 = 32 (left: 6 9 32)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n4 + 9 = 13 (left: 6 8 13)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n4 * 9 = 36 (left: 6 8 36)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n6 + 9 = 15 (left: 4 8 15)\n",
                    "3 + 1 = 4 (left: 4 3 11)\n4 + 3 = 7 (left: 7 11)\n7 + 11 = 18 (left: 18)\n6 * 9 = 54 (left: 4 8 54)\n"
                ],
                "values": [
                    1000,
                    1000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (11 - 3) = 24\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (1 * 3) * (11 - 3) = 24\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n\n3 + 8 = 11 (left: 8 11)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n\n8 - 3 = 5 (left: 5 8)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n\n3 * 8 = 24 (left: 8 24)\n",
                    "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 + 3 = 11 (left: 11)\n11 is the end, no more possible next steps.\n",
                    "1 * 3 = 3 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\nInput: 17\n"
                ]
            }
        ],
        "idx": 899,
        "ys": [
            "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (11 - 3) = 24\n",
            "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (1 * 3) * (11 - 3) = 24\n",
            "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n\n3 + 8 = 11 (left: 8 11)\n",
            "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n\n8 - 3 = 5 (left: 5 8)\n",
            "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n\n3 * 8 = 24 (left: 8 24)\n",
            "1 * 3 = 3 (left: 3 3 11)\n11 - 3 = 8 (left: 3 8)\n8 + 3 = 11 (left: 11)\n11 is the end, no more possible next steps.\n",
            "1 * 3 = 3 (left: 3 3 11)\n3 + 3 = 6 (left: 6 11)\n6 + 11 = 17 (left: 17)\nInput: 17\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 115266,
            "prompt_tokens": 343375,
            "cost": 0.7455944999999999
        },
        "time_spent": 28.35580587387085
    }
]